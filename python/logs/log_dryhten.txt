Analysis object initialized
{'dreyte': 4, 'dric': 1, 'drict': 3, 'dright': 12, 'drigt': 3, 'drih': 16, 'driht': 307, 'drihðt': 1, 'drihh': 6, 'drihht': 26, 'drihte': 44, 'drich': 1, 'dricht': 3, 'drichte': 3, 'drikte': 1, 'drist': 4, 'driste': 1, 'drith': 2, 'drithe': 1, 'dritht': 3, 'drithte': 1, 'dritt': 1, 'dritte': 1, 'driȝt': 5, 'driȝte': 10, 'driȝtte': 5, 'dryht': 4, 'dryhte': 5, 'e': 1, 'en': 27, 'in': 2}
Lexel initialized
[[{'lit': 'ey', 'ln': 2, 'index': 2}], [{'lit': 'ey', 'ln': 2, 'index': 2}]]
[[{'lit': 'ey', 'ln': 2, 'index': 2}], [{'lit': 'ey', 'ln': 2, 'index': 2}], [{'lit': 'ey', 'ln': 2, 'index': 2}, {'lit': 'ey', 'ln': 2, 'index': 2}]]
[[{'lit': 'gh', 'ln': 2, 'index': 3}]]
[[{'lit': 'hð', 'ln': 2, 'index': 3}]]
[[{'lit': 'hh', 'ln': 2, 'index': 3}]]
[[{'lit': 'hh', 'ln': 2, 'index': 3}]]
[[{'lit': 'ch', 'ln': 2, 'index': 3}]]
[[{'lit': 'ch', 'ln': 2, 'index': 3}]]
[[{'lit': 'ch', 'ln': 2, 'index': 3}]]
[[{'lit': 'th', 'ln': 2, 'index': 3}]]
[[{'lit': 'th', 'ln': 2, 'index': 3}]]
[[{'lit': 'th', 'ln': 2, 'index': 3}]]
[[{'lit': 'th', 'ln': 2, 'index': 3}]]
[[{'lit': 'tt', 'ln': 2, 'index': 3}]]
[[{'lit': 'tt', 'ln': 2, 'index': 3}]]
[[{'lit': 'tt', 'ln': 2, 'index': 4}]]
[[{'lit': 'yh', 'ln': 2, 'index': 2}]]
[[{'lit': 'yh', 'ln': 2, 'index': 2}]]
MIN pattern length=6
Pattern CCCC is invalid
Pattern CCVVCV is invalid
Pattern CCVC is invalid
Pattern CCCCV is invalid
Pattern CCVCC is invalid
Pattern CCVCCV is valid
Pattern CCCCCV is invalid
Pattern V is invalid
Pattern CC is invalid
Pattern CCVCCC is valid
Pattern CCCCCCV is invalid
Pattern CCCCC is invalid
Pattern CCVCCCV is valid
Pattern CCVCV is invalid
Pattern VC is invalid
Pattern CCCCCC is invalid
{'value': 11, 'patterns': ['CCVCCV']}
	[[{'lit': 'ey', 'ln': 2, 'index': 2}], [{'lit': 'ey', 'ln': 2, 'index': 2}]]
	[[{'lit': 'ey', 'ln': 2, 'index': 2}], [{'lit': 'ey', 'ln': 2, 'index': 2}], [{'lit': 'ey', 'ln': 2, 'index': 2}, {'lit': 'ey', 'ln': 2, 'index': 2}]]
	[[{'lit': 'gh', 'ln': 2, 'index': 3}]]
	[[{'lit': 'hð', 'ln': 2, 'index': 3}]]
	[[{'lit': 'hh', 'ln': 2, 'index': 3}]]
	[[{'lit': 'hh', 'ln': 2, 'index': 3}]]
	[[{'lit': 'ch', 'ln': 2, 'index': 3}]]
	[[{'lit': 'ch', 'ln': 2, 'index': 3}]]
	[[{'lit': 'ch', 'ln': 2, 'index': 3}]]
	[[{'lit': 'th', 'ln': 2, 'index': 3}]]
	[[{'lit': 'th', 'ln': 2, 'index': 3}]]
	[[{'lit': 'th', 'ln': 2, 'index': 3}]]
	[[{'lit': 'th', 'ln': 2, 'index': 3}]]
	[[{'lit': 'tt', 'ln': 2, 'index': 3}]]
	[[{'lit': 'tt', 'ln': 2, 'index': 3}]]
	[[{'lit': 'tt', 'ln': 2, 'index': 4}]]
	[[{'lit': 'yh', 'ln': 2, 'index': 2}]]
	[[{'lit': 'yh', 'ln': 2, 'index': 2}]]
	MIN pattern length=6
	Pattern CCCC is invalid
	Pattern CCVVCV is invalid
	Pattern CCVC is invalid
	Pattern CCCCV is invalid
	Pattern CCVCC is invalid
	Pattern CCVCCV is valid
	Pattern CCCCCV is invalid
	Pattern V is invalid
	Pattern CC is invalid
	Pattern CCVCCC is valid
	Pattern CCCCCCV is invalid
	Pattern CCCCC is invalid
	Pattern CCVCCCV is valid
	Pattern CCVCV is invalid
	Pattern VC is invalid
	Pattern CCCCCC is invalid
	Making the selection for pattern: CCVCCV
	Selection for pattern: CCVCCV completed
	Making a version for pattern: CCVCCV
			___CCVCCV : 0___
				ANALYSING: dreyte
				adding littera based on matching pattern
				ANALYSING: drihte
				adding littera based on matching pattern
				ANALYSING: drichte
				adding littera based on matching pattern
				ANALYSING: drikte
				adding littera based on matching pattern
				ANALYSING: driste
				adding littera based on matching pattern
				ANALYSING: drithe
				adding littera based on matching pattern
				ANALYSING: drithte
				adding littera based on matching pattern
				ANALYSING: dritte
				adding littera based on matching pattern
				ANALYSING: driȝte
				adding littera based on matching pattern
				ANALYSING: driȝtte
				adding littera based on matching pattern
				ANALYSING: dryhte
				adding littera based on matching pattern
				ANALYSING: dric
					resolving (2)
					> version: d/r/i/c
					TRYING: d
					> version: d/r/i/c
					TRYING: d
					RESULT:  ['d']
				ANALYSING: drict
					resolving (2)
					> version: d/r/i/c/t
					TRYING: d
					> version: d/r/i/c/t
					TRYING: d
					RESULT:  ['d']
				ANALYSING: dright
					resolving (4)
					> version: d/r/i/g/h/t
					TRYING: d
					> version: d/r/i/g/h/t
					TRYING: d
					> version: d/r/i/gh/t
					TRYING: d
					> version: d/r/i/gh/t
					TRYING: d
					RESULT:  ['d']
				ANALYSING: drigt
					resolving (2)
					> version: d/r/i/g/t
					TRYING: d
					> version: d/r/i/g/t
					TRYING: d
					RESULT:  ['d']
				ANALYSING: drih
					resolving (2)
					> version: d/r/i/h
					TRYING: d
					> version: d/r/i/h
					TRYING: d
					RESULT:  ['d']
				ANALYSING: driht
					resolving (2)
					> version: d/r/i/h/t
					TRYING: d
					> version: d/r/i/h/t
					TRYING: d
					RESULT:  ['d']
				ANALYSING: drihðt
					resolving (4)
					> version: d/r/i/h/ð/t
					TRYING: d
					> version: d/r/i/h/ð/t
					TRYING: d
					> version: d/r/i/hð/t
					TRYING: d
					> version: d/r/i/hð/t
					TRYING: d
					RESULT:  ['d']
				ANALYSING: drihh
					resolving (4)
					> version: d/r/i/h/h
					TRYING: d
					> version: d/r/i/h/h
					TRYING: d
					> version: d/r/i/hh
					TRYING: d
					> version: d/r/i/hh
					TRYING: d
					RESULT:  ['d']
				ANALYSING: drihht
					resolving (4)
					> version: d/r/i/h/h/t
					TRYING: d
					> version: d/r/i/h/h/t
					TRYING: d
					> version: d/r/i/hh/t
					TRYING: d
					> version: d/r/i/hh/t
					TRYING: d
					RESULT:  ['d']
				ANALYSING: drich
					resolving (4)
					> version: d/r/i/c/h
					TRYING: d
					> version: d/r/i/c/h
					TRYING: d
					> version: d/r/i/ch
					TRYING: d
					> version: d/r/i/ch
					TRYING: d
					RESULT:  ['d']
				ANALYSING: dricht
					resolving (4)
					> version: d/r/i/c/h/t
					TRYING: d
					> version: d/r/i/c/h/t
					TRYING: d
					> version: d/r/i/ch/t
					TRYING: d
					> version: d/r/i/ch/t
					TRYING: d
					RESULT:  ['d']
				ANALYSING: drist
					resolving (2)
					> version: d/r/i/s/t
					TRYING: d
					> version: d/r/i/s/t
					TRYING: d
					RESULT:  ['d']
				ANALYSING: drith
					resolving (4)
					> version: d/r/i/t/h
					TRYING: d
					> version: d/r/i/t/h
					TRYING: d
					> version: d/r/i/th
					TRYING: d
					> version: d/r/i/th
					TRYING: d
					RESULT:  ['d']
				ANALYSING: dritht
					resolving (4)
					> version: d/r/i/t/h/t
					TRYING: d
					> version: d/r/i/t/h/t
					TRYING: d
					> version: d/r/i/th/t
					TRYING: d
					> version: d/r/i/th/t
					TRYING: d
					RESULT:  ['d']
				ANALYSING: dritt
					resolving (4)
					> version: d/r/i/t/t
					TRYING: d
					> version: d/r/i/t/t
					TRYING: d
					> version: d/r/i/tt
					TRYING: d
					> version: d/r/i/tt
					TRYING: d
					RESULT:  ['d']
				ANALYSING: driȝt
					resolving (2)
					> version: d/r/i/ȝ/t
					TRYING: d
					> version: d/r/i/ȝ/t
					TRYING: d
					RESULT:  ['d']
				ANALYSING: dryht
					resolving (3)
					> version: d/r/y/h/t
					TRYING: d
					> version: d/r/y/h/t
					TRYING: d
					> version: d/r/yh/t
					TRYING: d
					RESULT:  ['d']
				ANALYSING: e
					resolving (1)
					> version: e
					TRYING: e
					RESULT:  ['_']
				adding dashed alternative: ['_', 'e']
				e(V)
_/e(AV)
				ANALYSING: en
					resolving (1)
					> version: e/n
					TRYING: e
					RESULT:  ['_']
				adding dashed alternative: ['_', 'e', 'n']
				e/n(VC)
_/e/n(AVC)
				ANALYSING: in
					resolving (2)
					> version: i/n
					TRYING: i
					> version: i/n
					TRYING: i
					RESULT:  ['i']
			___CCVCCV : 1___
				ANALYSING: dreyte
				adding littera based on matching pattern
				ANALYSING: drihte
				adding littera based on matching pattern
				ANALYSING: drichte
				adding littera based on matching pattern
				ANALYSING: drikte
				adding littera based on matching pattern
				ANALYSING: driste
				adding littera based on matching pattern
				ANALYSING: drithe
				adding littera based on matching pattern
				ANALYSING: drithte
				adding littera based on matching pattern
				ANALYSING: dritte
				adding littera based on matching pattern
				ANALYSING: driȝte
				adding littera based on matching pattern
				ANALYSING: driȝtte
				adding littera based on matching pattern
				ANALYSING: dryhte
				adding littera based on matching pattern
				ANALYSING: dric
					resolving (2)
					> version: d/r/i/c
					TRYING: r
					> version: d/r/i/c
					TRYING: r
					RESULT:  ['r']
				ANALYSING: drict
					resolving (2)
					> version: d/r/i/c/t
					TRYING: r
					> version: d/r/i/c/t
					TRYING: r
					RESULT:  ['r']
				ANALYSING: dright
					resolving (4)
					> version: d/r/i/g/h/t
					TRYING: r
					> version: d/r/i/g/h/t
					TRYING: r
					> version: d/r/i/gh/t
					TRYING: r
					> version: d/r/i/gh/t
					TRYING: r
					RESULT:  ['r']
				ANALYSING: drigt
					resolving (2)
					> version: d/r/i/g/t
					TRYING: r
					> version: d/r/i/g/t
					TRYING: r
					RESULT:  ['r']
				ANALYSING: drih
					resolving (2)
					> version: d/r/i/h
					TRYING: r
					> version: d/r/i/h
					TRYING: r
					RESULT:  ['r']
				ANALYSING: driht
					resolving (2)
					> version: d/r/i/h/t
					TRYING: r
					> version: d/r/i/h/t
					TRYING: r
					RESULT:  ['r']
				ANALYSING: drihðt
					resolving (4)
					> version: d/r/i/h/ð/t
					TRYING: r
					> version: d/r/i/h/ð/t
					TRYING: r
					> version: d/r/i/hð/t
					TRYING: r
					> version: d/r/i/hð/t
					TRYING: r
					RESULT:  ['r']
				ANALYSING: drihh
					resolving (4)
					> version: d/r/i/h/h
					TRYING: r
					> version: d/r/i/h/h
					TRYING: r
					> version: d/r/i/hh
					TRYING: r
					> version: d/r/i/hh
					TRYING: r
					RESULT:  ['r']
				ANALYSING: drihht
					resolving (4)
					> version: d/r/i/h/h/t
					TRYING: r
					> version: d/r/i/h/h/t
					TRYING: r
					> version: d/r/i/hh/t
					TRYING: r
					> version: d/r/i/hh/t
					TRYING: r
					RESULT:  ['r']
				ANALYSING: drich
					resolving (4)
					> version: d/r/i/c/h
					TRYING: r
					> version: d/r/i/c/h
					TRYING: r
					> version: d/r/i/ch
					TRYING: r
					> version: d/r/i/ch
					TRYING: r
					RESULT:  ['r']
				ANALYSING: dricht
					resolving (4)
					> version: d/r/i/c/h/t
					TRYING: r
					> version: d/r/i/c/h/t
					TRYING: r
					> version: d/r/i/ch/t
					TRYING: r
					> version: d/r/i/ch/t
					TRYING: r
					RESULT:  ['r']
				ANALYSING: drist
					resolving (2)
					> version: d/r/i/s/t
					TRYING: r
					> version: d/r/i/s/t
					TRYING: r
					RESULT:  ['r']
				ANALYSING: drith
					resolving (4)
					> version: d/r/i/t/h
					TRYING: r
					> version: d/r/i/t/h
					TRYING: r
					> version: d/r/i/th
					TRYING: r
					> version: d/r/i/th
					TRYING: r
					RESULT:  ['r']
				ANALYSING: dritht
					resolving (4)
					> version: d/r/i/t/h/t
					TRYING: r
					> version: d/r/i/t/h/t
					TRYING: r
					> version: d/r/i/th/t
					TRYING: r
					> version: d/r/i/th/t
					TRYING: r
					RESULT:  ['r']
				ANALYSING: dritt
					resolving (4)
					> version: d/r/i/t/t
					TRYING: r
					> version: d/r/i/t/t
					TRYING: r
					> version: d/r/i/tt
					TRYING: r
					> version: d/r/i/tt
					TRYING: r
					RESULT:  ['r']
				ANALYSING: driȝt
					resolving (2)
					> version: d/r/i/ȝ/t
					TRYING: r
					> version: d/r/i/ȝ/t
					TRYING: r
					RESULT:  ['r']
				ANALYSING: dryht
					resolving (3)
					> version: d/r/y/h/t
					TRYING: r
					> version: d/r/y/h/t
					TRYING: r
					> version: d/r/yh/t
					TRYING: r
					RESULT:  ['r']
				ANALYSING: e
					resolving (2)
					> version: e
					> version: _/e
					TRYING: e
					RESULT:  ['_']
				adding dashed alternative: ['e', '_']
				adding dashed alternative: ['_', '_', 'e']
				e(V)
_/e(AV)
e/_(VA)
_/_/e(AAV)
				ANALYSING: en
					resolving (2)
					> version: e/n
					TRYING: n
					> version: _/e/n
					TRYING: e
					RESULT:  ['n']
				ANALYSING: in
					resolving (2)
					> version: i/n
					TRYING: n
					> version: i/n
					TRYING: n
					RESULT:  ['n']
			___CCVCCV : 2___
				ANALYSING: dreyte
				adding littera based on matching pattern
				ANALYSING: drihte
				adding littera based on matching pattern
				ANALYSING: drichte
				adding littera based on matching pattern
				ANALYSING: drikte
				adding littera based on matching pattern
				ANALYSING: driste
				adding littera based on matching pattern
				ANALYSING: drithe
				adding littera based on matching pattern
				ANALYSING: drithte
				adding littera based on matching pattern
				ANALYSING: dritte
				adding littera based on matching pattern
				ANALYSING: driȝte
				adding littera based on matching pattern
				ANALYSING: driȝtte
				adding littera based on matching pattern
				ANALYSING: dryhte
				adding littera based on matching pattern
				ANALYSING: dric
					resolving (2)
					> version: d/r/i/c
					TRYING: i
					> version: d/r/i/c
					TRYING: i
					RESULT:  ['i']
				ANALYSING: drict
					resolving (2)
					> version: d/r/i/c/t
					TRYING: i
					> version: d/r/i/c/t
					TRYING: i
					RESULT:  ['i']
				ANALYSING: dright
					resolving (4)
					> version: d/r/i/g/h/t
					TRYING: i
					> version: d/r/i/g/h/t
					TRYING: i
					> version: d/r/i/gh/t
					TRYING: i
					> version: d/r/i/gh/t
					TRYING: i
					RESULT:  ['i']
				ANALYSING: drigt
					resolving (2)
					> version: d/r/i/g/t
					TRYING: i
					> version: d/r/i/g/t
					TRYING: i
					RESULT:  ['i']
				ANALYSING: drih
					resolving (2)
					> version: d/r/i/h
					TRYING: i
					> version: d/r/i/h
					TRYING: i
					RESULT:  ['i']
				ANALYSING: driht
					resolving (2)
					> version: d/r/i/h/t
					TRYING: i
					> version: d/r/i/h/t
					TRYING: i
					RESULT:  ['i']
				ANALYSING: drihðt
					resolving (4)
					> version: d/r/i/h/ð/t
					TRYING: i
					> version: d/r/i/h/ð/t
					TRYING: i
					> version: d/r/i/hð/t
					TRYING: i
					> version: d/r/i/hð/t
					TRYING: i
					RESULT:  ['i']
				ANALYSING: drihh
					resolving (4)
					> version: d/r/i/h/h
					TRYING: i
					> version: d/r/i/h/h
					TRYING: i
					> version: d/r/i/hh
					TRYING: i
					> version: d/r/i/hh
					TRYING: i
					RESULT:  ['i']
				ANALYSING: drihht
					resolving (4)
					> version: d/r/i/h/h/t
					TRYING: i
					> version: d/r/i/h/h/t
					TRYING: i
					> version: d/r/i/hh/t
					TRYING: i
					> version: d/r/i/hh/t
					TRYING: i
					RESULT:  ['i']
				ANALYSING: drich
					resolving (4)
					> version: d/r/i/c/h
					TRYING: i
					> version: d/r/i/c/h
					TRYING: i
					> version: d/r/i/ch
					TRYING: i
					> version: d/r/i/ch
					TRYING: i
					RESULT:  ['i']
				ANALYSING: dricht
					resolving (4)
					> version: d/r/i/c/h/t
					TRYING: i
					> version: d/r/i/c/h/t
					TRYING: i
					> version: d/r/i/ch/t
					TRYING: i
					> version: d/r/i/ch/t
					TRYING: i
					RESULT:  ['i']
				ANALYSING: drist
					resolving (2)
					> version: d/r/i/s/t
					TRYING: i
					> version: d/r/i/s/t
					TRYING: i
					RESULT:  ['i']
				ANALYSING: drith
					resolving (4)
					> version: d/r/i/t/h
					TRYING: i
					> version: d/r/i/t/h
					TRYING: i
					> version: d/r/i/th
					TRYING: i
					> version: d/r/i/th
					TRYING: i
					RESULT:  ['i']
				ANALYSING: dritht
					resolving (4)
					> version: d/r/i/t/h/t
					TRYING: i
					> version: d/r/i/t/h/t
					TRYING: i
					> version: d/r/i/th/t
					TRYING: i
					> version: d/r/i/th/t
					TRYING: i
					RESULT:  ['i']
				ANALYSING: dritt
					resolving (4)
					> version: d/r/i/t/t
					TRYING: i
					> version: d/r/i/t/t
					TRYING: i
					> version: d/r/i/tt
					TRYING: i
					> version: d/r/i/tt
					TRYING: i
					RESULT:  ['i']
				ANALYSING: driȝt
					resolving (2)
					> version: d/r/i/ȝ/t
					TRYING: i
					> version: d/r/i/ȝ/t
					TRYING: i
					RESULT:  ['i']
				ANALYSING: dryht
					resolving (3)
					> version: d/r/y/h/t
					TRYING: y
					> version: d/r/y/h/t
					TRYING: y
					> version: d/r/yh/t
					TRYING: yh
					RESULT:  ['y']
				ANALYSING: e
					resolving (4)
					> version: e
					> version: _/e
					> version: e/_
					> version: _/_/e
					TRYING: e
					RESULT:  ['e']
				ANALYSING: en
					resolving (2)
					> version: e/n
					> version: _/e/n
					TRYING: n
					RESULT:  ['_']
				adding dashed alternative: ['e', 'n', '_']
				adding dashed alternative: ['_', 'e', '_', 'n']
				e/n(VC)
_/e/n(AVC)
e/n/_(VCA)
_/e/_/n(AVAC)
				ANALYSING: in
					resolving (2)
					> version: i/n
					> version: i/n
					RESULT:  ['_']
				adding dashed alternative: ['i', 'n', '_']
				adding dashed alternative: ['i', 'n', '_']
				i/n(CC)
i/n(VC)
i/n/_(ACA)
i/n/_(ACA)
			___CCVCCV : 3___
				ANALYSING: dreyte
				adding littera based on matching pattern
				ANALYSING: drihte
				adding littera based on matching pattern
				ANALYSING: drichte
				adding littera based on matching pattern
				ANALYSING: drikte
				adding littera based on matching pattern
				ANALYSING: driste
				adding littera based on matching pattern
				ANALYSING: drithe
				adding littera based on matching pattern
				ANALYSING: drithte
				adding littera based on matching pattern
				ANALYSING: dritte
				adding littera based on matching pattern
				ANALYSING: driȝte
				adding littera based on matching pattern
				ANALYSING: driȝtte
				adding littera based on matching pattern
				ANALYSING: dryhte
				adding littera based on matching pattern
				ANALYSING: dric
					resolving (2)
					> version: d/r/i/c
					TRYING: c
					> version: d/r/i/c
					TRYING: c
					RESULT:  ['c']
				ANALYSING: drict
					resolving (2)
					> version: d/r/i/c/t
					TRYING: c
					> version: d/r/i/c/t
					TRYING: c
					RESULT:  ['c']
				ANALYSING: dright
					resolving (4)
					> version: d/r/i/g/h/t
					TRYING: g
					> version: d/r/i/g/h/t
					TRYING: g
					> version: d/r/i/gh/t
					TRYING: gh
					>>> MULTIPLE RESOLVE OPTIONS: {'g', 'gh'}
					> version: d/r/i/gh/t
					TRYING: gh
					>>> MULTIPLE RESOLVE OPTIONS: {'g', 'gh'}
					RESULT:  ['g', 'gh']
				ANALYSING: drigt
					resolving (2)
					> version: d/r/i/g/t
					TRYING: g
					> version: d/r/i/g/t
					TRYING: g
					RESULT:  ['g']
				ANALYSING: drih
					resolving (2)
					> version: d/r/i/h
					TRYING: h
					> version: d/r/i/h
					TRYING: h
					RESULT:  ['h']
				ANALYSING: driht
					resolving (2)
					> version: d/r/i/h/t
					TRYING: h
					> version: d/r/i/h/t
					TRYING: h
					RESULT:  ['h']
				ANALYSING: drihðt
					resolving (4)
					> version: d/r/i/h/ð/t
					TRYING: h
					> version: d/r/i/h/ð/t
					TRYING: h
					> version: d/r/i/hð/t
					TRYING: hð
					>>> MULTIPLE RESOLVE OPTIONS: {'hð', 'h'}
					> version: d/r/i/hð/t
					TRYING: hð
					>>> MULTIPLE RESOLVE OPTIONS: {'hð', 'h'}
					RESULT:  ['hð', 'h']
				ANALYSING: drihh
					resolving (4)
					> version: d/r/i/h/h
					TRYING: h
					> version: d/r/i/h/h
					TRYING: h
					> version: d/r/i/hh
					TRYING: hh
					>>> MULTIPLE RESOLVE OPTIONS: {'hh', 'h'}
					> version: d/r/i/hh
					TRYING: hh
					>>> MULTIPLE RESOLVE OPTIONS: {'hh', 'h'}
					RESULT:  ['hh', 'h']
				ANALYSING: drihht
					resolving (4)
					> version: d/r/i/h/h/t
					TRYING: h
					> version: d/r/i/h/h/t
					TRYING: h
					> version: d/r/i/hh/t
					TRYING: hh
					>>> MULTIPLE RESOLVE OPTIONS: {'hh', 'h'}
					> version: d/r/i/hh/t
					TRYING: hh
					>>> MULTIPLE RESOLVE OPTIONS: {'hh', 'h'}
					RESULT:  ['hh', 'h']
				ANALYSING: drich
					resolving (4)
					> version: d/r/i/c/h
					TRYING: c
					> version: d/r/i/c/h
					TRYING: c
					> version: d/r/i/ch
					TRYING: ch
					>>> MULTIPLE RESOLVE OPTIONS: {'ch', 'c'}
					> version: d/r/i/ch
					TRYING: ch
					>>> MULTIPLE RESOLVE OPTIONS: {'ch', 'c'}
					RESULT:  ['ch', 'c']
				ANALYSING: dricht
					resolving (4)
					> version: d/r/i/c/h/t
					TRYING: c
					> version: d/r/i/c/h/t
					TRYING: c
					> version: d/r/i/ch/t
					TRYING: ch
					>>> MULTIPLE RESOLVE OPTIONS: {'ch', 'c'}
					> version: d/r/i/ch/t
					TRYING: ch
					>>> MULTIPLE RESOLVE OPTIONS: {'ch', 'c'}
					RESULT:  ['ch', 'c']
				ANALYSING: drist
					resolving (2)
					> version: d/r/i/s/t
					TRYING: s
					> version: d/r/i/s/t
					TRYING: s
					RESULT:  ['s']
				ANALYSING: drith
					resolving (4)
					> version: d/r/i/t/h
					TRYING: t
					> version: d/r/i/t/h
					TRYING: t
					> version: d/r/i/th
					TRYING: th
					>>> MULTIPLE RESOLVE OPTIONS: {'t', 'th'}
					> version: d/r/i/th
					TRYING: th
					>>> MULTIPLE RESOLVE OPTIONS: {'t', 'th'}
					RESULT:  ['t', 'th']
				ANALYSING: dritht
					resolving (4)
					> version: d/r/i/t/h/t
					TRYING: t
					> version: d/r/i/t/h/t
					TRYING: t
					> version: d/r/i/th/t
					TRYING: th
					>>> MULTIPLE RESOLVE OPTIONS: {'t', 'th'}
					> version: d/r/i/th/t
					TRYING: th
					>>> MULTIPLE RESOLVE OPTIONS: {'t', 'th'}
					RESULT:  ['t', 'th']
				ANALYSING: dritt
					resolving (4)
					> version: d/r/i/t/t
					TRYING: t
					> version: d/r/i/t/t
					TRYING: t
					> version: d/r/i/tt
					TRYING: tt
					>>> MULTIPLE RESOLVE OPTIONS: {'tt', 't'}
					> version: d/r/i/tt
					TRYING: tt
					>>> MULTIPLE RESOLVE OPTIONS: {'tt', 't'}
					RESULT:  ['tt', 't']
				ANALYSING: driȝt
					resolving (2)
					> version: d/r/i/ȝ/t
					TRYING: ȝ
					> version: d/r/i/ȝ/t
					TRYING: ȝ
					RESULT:  ['ȝ']
				ANALYSING: dryht
					resolving (3)
					> version: d/r/y/h/t
					TRYING: h
					> version: d/r/y/h/t
					TRYING: h
					> version: d/r/yh/t
					TRYING: t
					>>> MULTIPLE RESOLVE OPTIONS: {'t', 'h'}
					RESULT:  ['t', 'h']
				ANALYSING: e
					resolving (4)
					> version: e
					> version: _/e
					> version: e/_
					> version: _/_/e
					RESULT:  ['_']
				adding dashed alternative: ['e', '_']
				adding dashed alternative: ['_', 'e', '_']
				adding dashed alternative: ['e', '_', '_']
				adding dashed alternative: ['_', '_', 'e', '_']
				e(V)
_/e(AV)
e/_(VA)
_/_/e(AAV)
e/_(VA)
_/e/_(AVA)
e/_/_(VAA)
_/_/e/_(AAVA)
				ANALYSING: en
					resolving (4)
					> version: e/n
					> version: _/e/n
					> version: e/n/_
					> version: _/e/_/n
					TRYING: n
					RESULT:  ['n']
				ANALYSING: in
					resolving (4)
					> version: i/n
					> version: i/n
					> version: i/n/_
					> version: i/n/_
					RESULT:  ['_']
				adding dashed alternative: ['i', 'n', '_']
				adding dashed alternative: ['i', 'n', '_']
				adding dashed alternative: ['i', 'n', '_', '_']
				adding dashed alternative: ['i', 'n', '_', '_']
				i/n(CC)
i/n(VC)
i/n/_(ACA)
i/n/_(ACA)
i/n/_(ACA)
i/n/_(ACA)
i/n/_/_(ACAA)
i/n/_/_(ACAA)
			___CCVCCV : 4___
				ANALYSING: dreyte
				adding littera based on matching pattern
				ANALYSING: drihte
				adding littera based on matching pattern
				ANALYSING: drichte
				adding littera based on matching pattern
				ANALYSING: drikte
				adding littera based on matching pattern
				ANALYSING: driste
				adding littera based on matching pattern
				ANALYSING: drithe
				adding littera based on matching pattern
				ANALYSING: drithte
				adding littera based on matching pattern
				ANALYSING: dritte
				adding littera based on matching pattern
				ANALYSING: driȝte
				adding littera based on matching pattern
				ANALYSING: driȝtte
				adding littera based on matching pattern
				ANALYSING: dryhte
				adding littera based on matching pattern
				ANALYSING: dric
					resolving (2)
					> version: d/r/i/c
					> version: d/r/i/c
					RESULT:  ['_']
				adding dashed alternative: ['d', 'r', 'i', 'c', '_']
				adding dashed alternative: ['d', 'r', 'i', 'c', '_']
				d/r/i/c(CCCC)
d/r/i/c(CCVC)
d/r/i/c/_(CCACA)
d/r/i/c/_(CCACA)
				ANALYSING: drict
					resolving (2)
					> version: d/r/i/c/t
					TRYING: t
					> version: d/r/i/c/t
					TRYING: t
					RESULT:  ['t']
				ANALYSING: dright
					resolving (4)
					> version: d/r/i/g/h/t
					TRYING: h
					> version: d/r/i/g/h/t
					TRYING: h
					> version: d/r/i/gh/t
					TRYING: t
					>>> MULTIPLE RESOLVE OPTIONS: {'t', 'h'}
					> version: d/r/i/gh/t
					TRYING: t
					>>> MULTIPLE RESOLVE OPTIONS: {'t', 'h'}
					RESULT:  ['t', 'h']
				ANALYSING: drigt
					resolving (2)
					> version: d/r/i/g/t
					TRYING: t
					> version: d/r/i/g/t
					TRYING: t
					RESULT:  ['t']
				ANALYSING: drih
					resolving (2)
					> version: d/r/i/h
					> version: d/r/i/h
					RESULT:  ['_']
				adding dashed alternative: ['d', 'r', 'i', 'h', '_']
				adding dashed alternative: ['d', 'r', 'i', 'h', '_']
				d/r/i/h(CCCC)
d/r/i/h(CCVC)
d/r/i/h/_(CCACA)
d/r/i/h/_(CCACA)
				ANALYSING: driht
					resolving (2)
					> version: d/r/i/h/t
					TRYING: t
					> version: d/r/i/h/t
					TRYING: t
					RESULT:  ['t']
				ANALYSING: drihðt
					resolving (4)
					> version: d/r/i/h/ð/t
					TRYING: ð
					> version: d/r/i/h/ð/t
					TRYING: ð
					> version: d/r/i/hð/t
					TRYING: t
					>>> MULTIPLE RESOLVE OPTIONS: {'t', 'ð'}
					> version: d/r/i/hð/t
					TRYING: t
					>>> MULTIPLE RESOLVE OPTIONS: {'t', 'ð'}
					RESULT:  ['t', 'ð']
				ANALYSING: drihh
					resolving (4)
					> version: d/r/i/h/h
					TRYING: h
					> version: d/r/i/h/h
					TRYING: h
					> version: d/r/i/hh
					> version: d/r/i/hh
					RESULT:  ['h']
				ANALYSING: drihht
					resolving (4)
					> version: d/r/i/h/h/t
					TRYING: h
					> version: d/r/i/h/h/t
					TRYING: h
					> version: d/r/i/hh/t
					TRYING: t
					>>> MULTIPLE RESOLVE OPTIONS: {'t', 'h'}
					> version: d/r/i/hh/t
					TRYING: t
					>>> MULTIPLE RESOLVE OPTIONS: {'t', 'h'}
					RESULT:  ['t', 'h']
				ANALYSING: drich
					resolving (4)
					> version: d/r/i/c/h
					TRYING: h
					> version: d/r/i/c/h
					TRYING: h
					> version: d/r/i/ch
					> version: d/r/i/ch
					RESULT:  ['h']
				ANALYSING: dricht
					resolving (4)
					> version: d/r/i/c/h/t
					TRYING: h
					> version: d/r/i/c/h/t
					TRYING: h
					> version: d/r/i/ch/t
					TRYING: t
					>>> MULTIPLE RESOLVE OPTIONS: {'t', 'h'}
					> version: d/r/i/ch/t
					TRYING: t
					>>> MULTIPLE RESOLVE OPTIONS: {'t', 'h'}
					RESULT:  ['t', 'h']
				ANALYSING: drist
					resolving (2)
					> version: d/r/i/s/t
					TRYING: t
					> version: d/r/i/s/t
					TRYING: t
					RESULT:  ['t']
				ANALYSING: drith
					resolving (4)
					> version: d/r/i/t/h
					TRYING: h
					> version: d/r/i/t/h
					TRYING: h
					> version: d/r/i/th
					> version: d/r/i/th
					RESULT:  ['h']
				ANALYSING: dritht
					resolving (4)
					> version: d/r/i/t/h/t
					TRYING: h
					> version: d/r/i/t/h/t
					TRYING: h
					> version: d/r/i/th/t
					TRYING: t
					>>> MULTIPLE RESOLVE OPTIONS: {'t', 'h'}
					> version: d/r/i/th/t
					TRYING: t
					>>> MULTIPLE RESOLVE OPTIONS: {'t', 'h'}
					RESULT:  ['t', 'h']
				ANALYSING: dritt
					resolving (4)
					> version: d/r/i/t/t
					TRYING: t
					> version: d/r/i/t/t
					TRYING: t
					> version: d/r/i/tt
					> version: d/r/i/tt
					RESULT:  ['t']
				ANALYSING: driȝt
					resolving (2)
					> version: d/r/i/ȝ/t
					TRYING: t
					> version: d/r/i/ȝ/t
					TRYING: t
					RESULT:  ['t']
				ANALYSING: dryht
					resolving (3)
					> version: d/r/y/h/t
					TRYING: t
					> version: d/r/y/h/t
					TRYING: t
					> version: d/r/yh/t
					RESULT:  ['t']
				ANALYSING: e
					resolving (8)
					> version: e
					> version: _/e
					> version: e/_
					> version: _/_/e
					> version: e/_
					> version: _/e/_
					> version: e/_/_
					> version: _/_/e/_
					RESULT:  ['_']
				adding dashed alternative: ['e', '_']
				adding dashed alternative: ['_', 'e', '_']
				adding dashed alternative: ['e', '_', '_']
				adding dashed alternative: ['_', '_', 'e', '_']
				adding dashed alternative: ['e', '_', '_']
				adding dashed alternative: ['_', 'e', '_', '_']
				adding dashed alternative: ['e', '_', '_', '_']
				adding dashed alternative: ['_', '_', 'e', '_', '_']
				e(V)
_/e(AV)
e/_(VA)
_/_/e(AAV)
e/_(VA)
_/e/_(AVA)
e/_/_(VAA)
_/_/e/_(AAVA)
e/_(VA)
_/e/_(AVA)
e/_/_(VAA)
_/_/e/_(AAVA)
e/_/_(VAA)
_/e/_/_(AVAA)
e/_/_/_(VAAA)
_/_/e/_/_(AAVAA)
				ANALYSING: en
					resolving (4)
					> version: e/n
					> version: _/e/n
					> version: e/n/_
					> version: _/e/_/n
					RESULT:  ['_']
				adding dashed alternative: ['e', 'n', '_']
				adding dashed alternative: ['_', 'e', 'n', '_']
				adding dashed alternative: ['e', 'n', '_', '_']
				adding dashed alternative: ['_', 'e', '_', 'n', '_']
				e/n(VC)
_/e/n(AVC)
e/n/_(VCA)
_/e/_/n(AVAC)
e/n/_(VCA)
_/e/n/_(AVCA)
e/n/_/_(VCAA)
_/e/_/n/_(AVACA)
				ANALYSING: in
					resolving (8)
					> version: i/n
					> version: i/n
					> version: i/n/_
					> version: i/n/_
					> version: i/n/_
					> version: i/n/_
					> version: i/n/_/_
					> version: i/n/_/_
					RESULT:  ['_']
				adding dashed alternative: ['i', 'n', '_']
				adding dashed alternative: ['i', 'n', '_']
				adding dashed alternative: ['i', 'n', '_', '_']
				adding dashed alternative: ['i', 'n', '_', '_']
				adding dashed alternative: ['i', 'n', '_', '_']
				adding dashed alternative: ['i', 'n', '_', '_']
				adding dashed alternative: ['i', 'n', '_', '_', '_']
				adding dashed alternative: ['i', 'n', '_', '_', '_']
				i/n(CC)
i/n(VC)
i/n/_(ACA)
i/n/_(ACA)
i/n/_(ACA)
i/n/_(ACA)
i/n/_/_(ACAA)
i/n/_/_(ACAA)
i/n/_(ACA)
i/n/_(ACA)
i/n/_/_(ACAA)
i/n/_/_(ACAA)
i/n/_/_(ACAA)
i/n/_/_(ACAA)
i/n/_/_/_(ACAAA)
i/n/_/_/_(ACAAA)
			___CCVCCV : 5___
				ANALYSING: dreyte
				adding littera based on matching pattern
				ANALYSING: drihte
				adding littera based on matching pattern
				ANALYSING: drichte
				adding littera based on matching pattern
				ANALYSING: drikte
				adding littera based on matching pattern
				ANALYSING: driste
				adding littera based on matching pattern
				ANALYSING: drithe
				adding littera based on matching pattern
				ANALYSING: drithte
				adding littera based on matching pattern
				ANALYSING: dritte
				adding littera based on matching pattern
				ANALYSING: driȝte
				adding littera based on matching pattern
				ANALYSING: driȝtte
				adding littera based on matching pattern
				ANALYSING: dryhte
				adding littera based on matching pattern
				ANALYSING: dric
					resolving (4)
					> version: d/r/i/c
					> version: d/r/i/c
					> version: d/r/i/c/_
					> version: d/r/i/c/_
					RESULT:  ['_']
				adding dashed alternative: ['d', 'r', 'i', 'c', '_']
				adding dashed alternative: ['d', 'r', 'i', 'c', '_']
				adding dashed alternative: ['d', 'r', 'i', 'c', '_', '_']
				adding dashed alternative: ['d', 'r', 'i', 'c', '_', '_']
				d/r/i/c(CCCC)
d/r/i/c(CCVC)
d/r/i/c/_(CCACA)
d/r/i/c/_(CCACA)
d/r/i/c/_(CCACA)
d/r/i/c/_(CCACA)
d/r/i/c/_/_(CCACAA)
d/r/i/c/_/_(CCACAA)
				version split: ['d', 'r', 'i', 'c']
				{'string': 'd/r/i/c', 'rgx': '((d))/((r))/((i))/((c))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'c']
				version split: ['d', 'r', 'i', 'c']
				{'string': 'd/r/i/c', 'rgx': '((d))/((r))/((i))/((c))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'c']
				version split: ['d', 'r', 'i', 'c', '_']
				{'string': 'd/r/i/c/_', 'rgx': '((d))/((r))/((i))/((c))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'c', '_']
				version split: ['d', 'r', 'i', 'c', '_']
				{'string': 'd/r/i/c/_', 'rgx': '((d))/((r))/((i))/((c))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'c', '_']
				version split: ['d', 'r', 'i', 'c', '_']
				{'string': 'd/r/i/c/_', 'rgx': '((d))/((r))/((i))/((c))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'c', '_']
				version split: ['d', 'r', 'i', 'c', '_']
				{'string': 'd/r/i/c/_', 'rgx': '((d))/((r))/((i))/((c))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'c', '_']
				version split: ['d', 'r', 'i', 'c', '_', '_']
				{'string': 'd/r/i/c/_/_', 'rgx': '((d))/((r))/((i))/((c))/((_))/((_))$'}
				version split: ['d', 'r', 'i', 'c', '_', '_']
				{'string': 'd/r/i/c/_/_', 'rgx': '((d))/((r))/((i))/((c))/((_))/((_))$'}
				ANALYSING: drict
					resolving (2)
					> version: d/r/i/c/t
					> version: d/r/i/c/t
					RESULT:  ['_']
				adding dashed alternative: ['d', 'r', 'i', 'c', 't', '_']
				adding dashed alternative: ['d', 'r', 'i', 'c', 't', '_']
				d/r/i/c/t(CCCCC)
d/r/i/c/t(CCVCC)
d/r/i/c/t/_(CCACCA)
d/r/i/c/t/_(CCACCA)
				version split: ['d', 'r', 'i', 'c', 't']
				{'string': 'd/r/i/c/t', 'rgx': '((d))/((r))/((i))/((c))/((t))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'c', 't']
				version split: ['d', 'r', 'i', 'c', 't']
				{'string': 'd/r/i/c/t', 'rgx': '((d))/((r))/((i))/((c))/((t))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'c', 't']
				version split: ['d', 'r', 'i', 'c', 't', '_']
				{'string': 'd/r/i/c/t/_', 'rgx': '((d))/((r))/((i))/((c))/((t))/((_))$'}
				version split: ['d', 'r', 'i', 'c', 't', '_']
				{'string': 'd/r/i/c/t/_', 'rgx': '((d))/((r))/((i))/((c))/((t))/((_))$'}
				ANALYSING: dright
					resolving (4)
					> version: d/r/i/g/h/t
					TRYING: t
					> version: d/r/i/g/h/t
					TRYING: t
					> version: d/r/i/gh/t
					> version: d/r/i/gh/t
					RESULT:  ['_']
				adding dashed alternative: ['d', 'r', 'i', 'g', 'h', '_', 't']
				adding dashed alternative: ['d', 'r', 'i', 'g', 'h', '_', 't']
				adding dashed alternative: ['d', 'r', 'i', 'gh', 't', '_']
				adding dashed alternative: ['d', 'r', 'i', 'gh', 't', '_']
				d/r/i/g/h/t(CCCCCC)
d/r/i/g/h/t(CCVCCC)
d/r/i/gh/t(CCCCC)
d/r/i/gh/t(CCVCC)
d/r/i/g/h/_/t(CCACCAC)
d/r/i/g/h/_/t(CCACCAC)
d/r/i/gh/t/_(CCACCA)
d/r/i/gh/t/_(CCACCA)
				version split: ['d', 'r', 'i', 'g', 'h', 't']
				{'string': 'd/r/i/g/h/t', 'rgx': '((d))/((r))/((i))/((g)|(gh))/((t)|(h))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'g', 'h', 't']
				version split: ['d', 'r', 'i', 'g', 'h', 't']
				{'string': 'd/r/i/g/h/t', 'rgx': '((d))/((r))/((i))/((g)|(gh))/((t)|(h))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'g', 'h', 't']
				version split: ['d', 'r', 'i', 'gh', 't']
				{'string': 'd/r/i/gh/t', 'rgx': '((d))/((r))/((i))/((g)|(gh))/((t)|(h))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'gh', 't']
				version split: ['d', 'r', 'i', 'gh', 't']
				{'string': 'd/r/i/gh/t', 'rgx': '((d))/((r))/((i))/((g)|(gh))/((t)|(h))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'gh', 't']
				version split: ['d', 'r', 'i', 'g', 'h', '_', 't']
				{'string': 'd/r/i/g/h/_/t', 'rgx': '((d))/((r))/((i))/((g)|(gh))/((t)|(h))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'g', 'h', '_', 't']
				version split: ['d', 'r', 'i', 'g', 'h', '_', 't']
				{'string': 'd/r/i/g/h/_/t', 'rgx': '((d))/((r))/((i))/((g)|(gh))/((t)|(h))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'g', 'h', '_', 't']
				version split: ['d', 'r', 'i', 'gh', 't', '_']
				{'string': 'd/r/i/gh/t/_', 'rgx': '((d))/((r))/((i))/((g)|(gh))/((t)|(h))/((_))$'}
				version split: ['d', 'r', 'i', 'gh', 't', '_']
				{'string': 'd/r/i/gh/t/_', 'rgx': '((d))/((r))/((i))/((g)|(gh))/((t)|(h))/((_))$'}
				ANALYSING: drigt
					resolving (2)
					> version: d/r/i/g/t
					> version: d/r/i/g/t
					RESULT:  ['_']
				adding dashed alternative: ['d', 'r', 'i', 'g', 't', '_']
				adding dashed alternative: ['d', 'r', 'i', 'g', 't', '_']
				d/r/i/g/t(CCCCC)
d/r/i/g/t(CCVCC)
d/r/i/g/t/_(CCACCA)
d/r/i/g/t/_(CCACCA)
				version split: ['d', 'r', 'i', 'g', 't']
				{'string': 'd/r/i/g/t', 'rgx': '((d))/((r))/((i))/((g))/((t))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'g', 't']
				version split: ['d', 'r', 'i', 'g', 't']
				{'string': 'd/r/i/g/t', 'rgx': '((d))/((r))/((i))/((g))/((t))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'g', 't']
				version split: ['d', 'r', 'i', 'g', 't', '_']
				{'string': 'd/r/i/g/t/_', 'rgx': '((d))/((r))/((i))/((g))/((t))/((_))$'}
				version split: ['d', 'r', 'i', 'g', 't', '_']
				{'string': 'd/r/i/g/t/_', 'rgx': '((d))/((r))/((i))/((g))/((t))/((_))$'}
				ANALYSING: drih
					resolving (4)
					> version: d/r/i/h
					> version: d/r/i/h
					> version: d/r/i/h/_
					> version: d/r/i/h/_
					RESULT:  ['_']
				adding dashed alternative: ['d', 'r', 'i', 'h', '_']
				adding dashed alternative: ['d', 'r', 'i', 'h', '_']
				adding dashed alternative: ['d', 'r', 'i', 'h', '_', '_']
				adding dashed alternative: ['d', 'r', 'i', 'h', '_', '_']
				d/r/i/h(CCCC)
d/r/i/h(CCVC)
d/r/i/h/_(CCACA)
d/r/i/h/_(CCACA)
d/r/i/h/_(CCACA)
d/r/i/h/_(CCACA)
d/r/i/h/_/_(CCACAA)
d/r/i/h/_/_(CCACAA)
				version split: ['d', 'r', 'i', 'h']
				{'string': 'd/r/i/h', 'rgx': '((d))/((r))/((i))/((h))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'h']
				version split: ['d', 'r', 'i', 'h']
				{'string': 'd/r/i/h', 'rgx': '((d))/((r))/((i))/((h))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'h']
				version split: ['d', 'r', 'i', 'h', '_']
				{'string': 'd/r/i/h/_', 'rgx': '((d))/((r))/((i))/((h))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'h', '_']
				version split: ['d', 'r', 'i', 'h', '_']
				{'string': 'd/r/i/h/_', 'rgx': '((d))/((r))/((i))/((h))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'h', '_']
				version split: ['d', 'r', 'i', 'h', '_']
				{'string': 'd/r/i/h/_', 'rgx': '((d))/((r))/((i))/((h))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'h', '_']
				version split: ['d', 'r', 'i', 'h', '_']
				{'string': 'd/r/i/h/_', 'rgx': '((d))/((r))/((i))/((h))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'h', '_']
				version split: ['d', 'r', 'i', 'h', '_', '_']
				{'string': 'd/r/i/h/_/_', 'rgx': '((d))/((r))/((i))/((h))/((_))/((_))$'}
				version split: ['d', 'r', 'i', 'h', '_', '_']
				{'string': 'd/r/i/h/_/_', 'rgx': '((d))/((r))/((i))/((h))/((_))/((_))$'}
				ANALYSING: driht
					resolving (2)
					> version: d/r/i/h/t
					> version: d/r/i/h/t
					RESULT:  ['_']
				adding dashed alternative: ['d', 'r', 'i', 'h', 't', '_']
				adding dashed alternative: ['d', 'r', 'i', 'h', 't', '_']
				d/r/i/h/t(CCCCC)
d/r/i/h/t(CCVCC)
d/r/i/h/t/_(CCACCA)
d/r/i/h/t/_(CCACCA)
				version split: ['d', 'r', 'i', 'h', 't']
				{'string': 'd/r/i/h/t', 'rgx': '((d))/((r))/((i))/((h))/((t))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'h', 't']
				version split: ['d', 'r', 'i', 'h', 't']
				{'string': 'd/r/i/h/t', 'rgx': '((d))/((r))/((i))/((h))/((t))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'h', 't']
				version split: ['d', 'r', 'i', 'h', 't', '_']
				{'string': 'd/r/i/h/t/_', 'rgx': '((d))/((r))/((i))/((h))/((t))/((_))$'}
				version split: ['d', 'r', 'i', 'h', 't', '_']
				{'string': 'd/r/i/h/t/_', 'rgx': '((d))/((r))/((i))/((h))/((t))/((_))$'}
				ANALYSING: drihðt
					resolving (4)
					> version: d/r/i/h/ð/t
					TRYING: t
					> version: d/r/i/h/ð/t
					TRYING: t
					> version: d/r/i/hð/t
					> version: d/r/i/hð/t
					RESULT:  ['_']
				adding dashed alternative: ['d', 'r', 'i', 'h', 'ð', '_', 't']
				adding dashed alternative: ['d', 'r', 'i', 'h', 'ð', '_', 't']
				adding dashed alternative: ['d', 'r', 'i', 'hð', 't', '_']
				adding dashed alternative: ['d', 'r', 'i', 'hð', 't', '_']
				d/r/i/h/ð/t(CCCCCC)
d/r/i/h/ð/t(CCVCCC)
d/r/i/hð/t(CCCCC)
d/r/i/hð/t(CCVCC)
d/r/i/h/ð/_/t(CCACCAC)
d/r/i/h/ð/_/t(CCACCAC)
d/r/i/hð/t/_(CCACCA)
d/r/i/hð/t/_(CCACCA)
				version split: ['d', 'r', 'i', 'h', 'ð', 't']
				{'string': 'd/r/i/h/ð/t', 'rgx': '((d))/((r))/((i))/((hð)|(h))/((t)|(ð))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'h', 'ð', 't']
				version split: ['d', 'r', 'i', 'h', 'ð', 't']
				{'string': 'd/r/i/h/ð/t', 'rgx': '((d))/((r))/((i))/((hð)|(h))/((t)|(ð))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'h', 'ð', 't']
				version split: ['d', 'r', 'i', 'hð', 't']
				{'string': 'd/r/i/hð/t', 'rgx': '((d))/((r))/((i))/((hð)|(h))/((t)|(ð))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'hð', 't']
				version split: ['d', 'r', 'i', 'hð', 't']
				{'string': 'd/r/i/hð/t', 'rgx': '((d))/((r))/((i))/((hð)|(h))/((t)|(ð))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'hð', 't']
				version split: ['d', 'r', 'i', 'h', 'ð', '_', 't']
				{'string': 'd/r/i/h/ð/_/t', 'rgx': '((d))/((r))/((i))/((hð)|(h))/((t)|(ð))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'h', 'ð', '_', 't']
				version split: ['d', 'r', 'i', 'h', 'ð', '_', 't']
				{'string': 'd/r/i/h/ð/_/t', 'rgx': '((d))/((r))/((i))/((hð)|(h))/((t)|(ð))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'h', 'ð', '_', 't']
				version split: ['d', 'r', 'i', 'hð', 't', '_']
				{'string': 'd/r/i/hð/t/_', 'rgx': '((d))/((r))/((i))/((hð)|(h))/((t)|(ð))/((_))$'}
				version split: ['d', 'r', 'i', 'hð', 't', '_']
				{'string': 'd/r/i/hð/t/_', 'rgx': '((d))/((r))/((i))/((hð)|(h))/((t)|(ð))/((_))$'}
				ANALYSING: drihh
					resolving (4)
					> version: d/r/i/h/h
					> version: d/r/i/h/h
					> version: d/r/i/hh
					> version: d/r/i/hh
					RESULT:  ['_']
				adding dashed alternative: ['d', 'r', 'i', 'h', 'h', '_']
				adding dashed alternative: ['d', 'r', 'i', 'h', 'h', '_']
				adding dashed alternative: ['d', 'r', 'i', 'hh', '_']
				adding dashed alternative: ['d', 'r', 'i', 'hh', '_']
				d/r/i/h/h(CCCCC)
d/r/i/h/h(CCVCC)
d/r/i/hh(CCCC)
d/r/i/hh(CCVC)
d/r/i/h/h/_(CCACCA)
d/r/i/h/h/_(CCACCA)
d/r/i/hh/_(CCACA)
d/r/i/hh/_(CCACA)
				version split: ['d', 'r', 'i', 'h', 'h']
				{'string': 'd/r/i/h/h', 'rgx': '((d))/((r))/((i))/((hh)|(h))/((h))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'h', 'h']
				version split: ['d', 'r', 'i', 'h', 'h']
				{'string': 'd/r/i/h/h', 'rgx': '((d))/((r))/((i))/((hh)|(h))/((h))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'h', 'h']
				version split: ['d', 'r', 'i', 'hh']
				{'string': 'd/r/i/hh', 'rgx': '((d))/((r))/((i))/((hh)|(h))/((h))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'hh']
				version split: ['d', 'r', 'i', 'hh']
				{'string': 'd/r/i/hh', 'rgx': '((d))/((r))/((i))/((hh)|(h))/((h))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'hh']
				version split: ['d', 'r', 'i', 'h', 'h', '_']
				{'string': 'd/r/i/h/h/_', 'rgx': '((d))/((r))/((i))/((hh)|(h))/((h))/((_))$'}
				version split: ['d', 'r', 'i', 'h', 'h', '_']
				{'string': 'd/r/i/h/h/_', 'rgx': '((d))/((r))/((i))/((hh)|(h))/((h))/((_))$'}
				version split: ['d', 'r', 'i', 'hh', '_']
				{'string': 'd/r/i/hh/_', 'rgx': '((d))/((r))/((i))/((hh)|(h))/((h))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'hh', '_']
				version split: ['d', 'r', 'i', 'hh', '_']
				{'string': 'd/r/i/hh/_', 'rgx': '((d))/((r))/((i))/((hh)|(h))/((h))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'hh', '_']
				ANALYSING: drihht
					resolving (4)
					> version: d/r/i/h/h/t
					TRYING: t
					> version: d/r/i/h/h/t
					TRYING: t
					> version: d/r/i/hh/t
					> version: d/r/i/hh/t
					RESULT:  ['_']
				adding dashed alternative: ['d', 'r', 'i', 'h', 'h', '_', 't']
				adding dashed alternative: ['d', 'r', 'i', 'h', 'h', '_', 't']
				adding dashed alternative: ['d', 'r', 'i', 'hh', 't', '_']
				adding dashed alternative: ['d', 'r', 'i', 'hh', 't', '_']
				d/r/i/h/h/t(CCCCCC)
d/r/i/h/h/t(CCVCCC)
d/r/i/hh/t(CCCCC)
d/r/i/hh/t(CCVCC)
d/r/i/h/h/_/t(CCACCAC)
d/r/i/h/h/_/t(CCACCAC)
d/r/i/hh/t/_(CCACCA)
d/r/i/hh/t/_(CCACCA)
				version split: ['d', 'r', 'i', 'h', 'h', 't']
				{'string': 'd/r/i/h/h/t', 'rgx': '((d))/((r))/((i))/((hh)|(h))/((t)|(h))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'h', 'h', 't']
				version split: ['d', 'r', 'i', 'h', 'h', 't']
				{'string': 'd/r/i/h/h/t', 'rgx': '((d))/((r))/((i))/((hh)|(h))/((t)|(h))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'h', 'h', 't']
				version split: ['d', 'r', 'i', 'hh', 't']
				{'string': 'd/r/i/hh/t', 'rgx': '((d))/((r))/((i))/((hh)|(h))/((t)|(h))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'hh', 't']
				version split: ['d', 'r', 'i', 'hh', 't']
				{'string': 'd/r/i/hh/t', 'rgx': '((d))/((r))/((i))/((hh)|(h))/((t)|(h))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'hh', 't']
				version split: ['d', 'r', 'i', 'h', 'h', '_', 't']
				{'string': 'd/r/i/h/h/_/t', 'rgx': '((d))/((r))/((i))/((hh)|(h))/((t)|(h))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'h', 'h', '_', 't']
				version split: ['d', 'r', 'i', 'h', 'h', '_', 't']
				{'string': 'd/r/i/h/h/_/t', 'rgx': '((d))/((r))/((i))/((hh)|(h))/((t)|(h))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'h', 'h', '_', 't']
				version split: ['d', 'r', 'i', 'hh', 't', '_']
				{'string': 'd/r/i/hh/t/_', 'rgx': '((d))/((r))/((i))/((hh)|(h))/((t)|(h))/((_))$'}
				version split: ['d', 'r', 'i', 'hh', 't', '_']
				{'string': 'd/r/i/hh/t/_', 'rgx': '((d))/((r))/((i))/((hh)|(h))/((t)|(h))/((_))$'}
				ANALYSING: drich
					resolving (4)
					> version: d/r/i/c/h
					> version: d/r/i/c/h
					> version: d/r/i/ch
					> version: d/r/i/ch
					RESULT:  ['_']
				adding dashed alternative: ['d', 'r', 'i', 'c', 'h', '_']
				adding dashed alternative: ['d', 'r', 'i', 'c', 'h', '_']
				adding dashed alternative: ['d', 'r', 'i', 'ch', '_']
				adding dashed alternative: ['d', 'r', 'i', 'ch', '_']
				d/r/i/c/h(CCCCC)
d/r/i/c/h(CCVCC)
d/r/i/ch(CCCC)
d/r/i/ch(CCVC)
d/r/i/c/h/_(CCACCA)
d/r/i/c/h/_(CCACCA)
d/r/i/ch/_(CCACA)
d/r/i/ch/_(CCACA)
				version split: ['d', 'r', 'i', 'c', 'h']
				{'string': 'd/r/i/c/h', 'rgx': '((d))/((r))/((i))/((ch)|(c))/((h))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'c', 'h']
				version split: ['d', 'r', 'i', 'c', 'h']
				{'string': 'd/r/i/c/h', 'rgx': '((d))/((r))/((i))/((ch)|(c))/((h))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'c', 'h']
				version split: ['d', 'r', 'i', 'ch']
				{'string': 'd/r/i/ch', 'rgx': '((d))/((r))/((i))/((ch)|(c))/((h))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'ch']
				version split: ['d', 'r', 'i', 'ch']
				{'string': 'd/r/i/ch', 'rgx': '((d))/((r))/((i))/((ch)|(c))/((h))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'ch']
				version split: ['d', 'r', 'i', 'c', 'h', '_']
				{'string': 'd/r/i/c/h/_', 'rgx': '((d))/((r))/((i))/((ch)|(c))/((h))/((_))$'}
				version split: ['d', 'r', 'i', 'c', 'h', '_']
				{'string': 'd/r/i/c/h/_', 'rgx': '((d))/((r))/((i))/((ch)|(c))/((h))/((_))$'}
				version split: ['d', 'r', 'i', 'ch', '_']
				{'string': 'd/r/i/ch/_', 'rgx': '((d))/((r))/((i))/((ch)|(c))/((h))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'ch', '_']
				version split: ['d', 'r', 'i', 'ch', '_']
				{'string': 'd/r/i/ch/_', 'rgx': '((d))/((r))/((i))/((ch)|(c))/((h))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'ch', '_']
				ANALYSING: dricht
					resolving (4)
					> version: d/r/i/c/h/t
					TRYING: t
					> version: d/r/i/c/h/t
					TRYING: t
					> version: d/r/i/ch/t
					> version: d/r/i/ch/t
					RESULT:  ['_']
				adding dashed alternative: ['d', 'r', 'i', 'c', 'h', '_', 't']
				adding dashed alternative: ['d', 'r', 'i', 'c', 'h', '_', 't']
				adding dashed alternative: ['d', 'r', 'i', 'ch', 't', '_']
				adding dashed alternative: ['d', 'r', 'i', 'ch', 't', '_']
				d/r/i/c/h/t(CCCCCC)
d/r/i/c/h/t(CCVCCC)
d/r/i/ch/t(CCCCC)
d/r/i/ch/t(CCVCC)
d/r/i/c/h/_/t(CCACCAC)
d/r/i/c/h/_/t(CCACCAC)
d/r/i/ch/t/_(CCACCA)
d/r/i/ch/t/_(CCACCA)
				version split: ['d', 'r', 'i', 'c', 'h', 't']
				{'string': 'd/r/i/c/h/t', 'rgx': '((d))/((r))/((i))/((ch)|(c))/((t)|(h))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'c', 'h', 't']
				version split: ['d', 'r', 'i', 'c', 'h', 't']
				{'string': 'd/r/i/c/h/t', 'rgx': '((d))/((r))/((i))/((ch)|(c))/((t)|(h))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'c', 'h', 't']
				version split: ['d', 'r', 'i', 'ch', 't']
				{'string': 'd/r/i/ch/t', 'rgx': '((d))/((r))/((i))/((ch)|(c))/((t)|(h))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'ch', 't']
				version split: ['d', 'r', 'i', 'ch', 't']
				{'string': 'd/r/i/ch/t', 'rgx': '((d))/((r))/((i))/((ch)|(c))/((t)|(h))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'ch', 't']
				version split: ['d', 'r', 'i', 'c', 'h', '_', 't']
				{'string': 'd/r/i/c/h/_/t', 'rgx': '((d))/((r))/((i))/((ch)|(c))/((t)|(h))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'c', 'h', '_', 't']
				version split: ['d', 'r', 'i', 'c', 'h', '_', 't']
				{'string': 'd/r/i/c/h/_/t', 'rgx': '((d))/((r))/((i))/((ch)|(c))/((t)|(h))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'c', 'h', '_', 't']
				version split: ['d', 'r', 'i', 'ch', 't', '_']
				{'string': 'd/r/i/ch/t/_', 'rgx': '((d))/((r))/((i))/((ch)|(c))/((t)|(h))/((_))$'}
				version split: ['d', 'r', 'i', 'ch', 't', '_']
				{'string': 'd/r/i/ch/t/_', 'rgx': '((d))/((r))/((i))/((ch)|(c))/((t)|(h))/((_))$'}
				ANALYSING: drist
					resolving (2)
					> version: d/r/i/s/t
					> version: d/r/i/s/t
					RESULT:  ['_']
				adding dashed alternative: ['d', 'r', 'i', 's', 't', '_']
				adding dashed alternative: ['d', 'r', 'i', 's', 't', '_']
				d/r/i/s/t(CCCCC)
d/r/i/s/t(CCVCC)
d/r/i/s/t/_(CCACCA)
d/r/i/s/t/_(CCACCA)
				version split: ['d', 'r', 'i', 's', 't']
				{'string': 'd/r/i/s/t', 'rgx': '((d))/((r))/((i))/((s))/((t))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 's', 't']
				version split: ['d', 'r', 'i', 's', 't']
				{'string': 'd/r/i/s/t', 'rgx': '((d))/((r))/((i))/((s))/((t))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 's', 't']
				version split: ['d', 'r', 'i', 's', 't', '_']
				{'string': 'd/r/i/s/t/_', 'rgx': '((d))/((r))/((i))/((s))/((t))/((_))$'}
				version split: ['d', 'r', 'i', 's', 't', '_']
				{'string': 'd/r/i/s/t/_', 'rgx': '((d))/((r))/((i))/((s))/((t))/((_))$'}
				ANALYSING: drith
					resolving (4)
					> version: d/r/i/t/h
					> version: d/r/i/t/h
					> version: d/r/i/th
					> version: d/r/i/th
					RESULT:  ['_']
				adding dashed alternative: ['d', 'r', 'i', 't', 'h', '_']
				adding dashed alternative: ['d', 'r', 'i', 't', 'h', '_']
				adding dashed alternative: ['d', 'r', 'i', 'th', '_']
				adding dashed alternative: ['d', 'r', 'i', 'th', '_']
				d/r/i/t/h(CCCCC)
d/r/i/t/h(CCVCC)
d/r/i/th(CCCC)
d/r/i/th(CCVC)
d/r/i/t/h/_(CCACCA)
d/r/i/t/h/_(CCACCA)
d/r/i/th/_(CCACA)
d/r/i/th/_(CCACA)
				version split: ['d', 'r', 'i', 't', 'h']
				{'string': 'd/r/i/t/h', 'rgx': '((d))/((r))/((i))/((t)|(th))/((h))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 't', 'h']
				version split: ['d', 'r', 'i', 't', 'h']
				{'string': 'd/r/i/t/h', 'rgx': '((d))/((r))/((i))/((t)|(th))/((h))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 't', 'h']
				version split: ['d', 'r', 'i', 'th']
				{'string': 'd/r/i/th', 'rgx': '((d))/((r))/((i))/((t)|(th))/((h))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'th']
				version split: ['d', 'r', 'i', 'th']
				{'string': 'd/r/i/th', 'rgx': '((d))/((r))/((i))/((t)|(th))/((h))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'th']
				version split: ['d', 'r', 'i', 't', 'h', '_']
				{'string': 'd/r/i/t/h/_', 'rgx': '((d))/((r))/((i))/((t)|(th))/((h))/((_))$'}
				version split: ['d', 'r', 'i', 't', 'h', '_']
				{'string': 'd/r/i/t/h/_', 'rgx': '((d))/((r))/((i))/((t)|(th))/((h))/((_))$'}
				version split: ['d', 'r', 'i', 'th', '_']
				{'string': 'd/r/i/th/_', 'rgx': '((d))/((r))/((i))/((t)|(th))/((h))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'th', '_']
				version split: ['d', 'r', 'i', 'th', '_']
				{'string': 'd/r/i/th/_', 'rgx': '((d))/((r))/((i))/((t)|(th))/((h))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'th', '_']
				ANALYSING: dritht
					resolving (4)
					> version: d/r/i/t/h/t
					TRYING: t
					> version: d/r/i/t/h/t
					TRYING: t
					> version: d/r/i/th/t
					> version: d/r/i/th/t
					RESULT:  ['_']
				adding dashed alternative: ['d', 'r', 'i', 't', 'h', '_', 't']
				adding dashed alternative: ['d', 'r', 'i', 't', 'h', '_', 't']
				adding dashed alternative: ['d', 'r', 'i', 'th', 't', '_']
				adding dashed alternative: ['d', 'r', 'i', 'th', 't', '_']
				d/r/i/t/h/t(CCCCCC)
d/r/i/t/h/t(CCVCCC)
d/r/i/th/t(CCCCC)
d/r/i/th/t(CCVCC)
d/r/i/t/h/_/t(CCACCAC)
d/r/i/t/h/_/t(CCACCAC)
d/r/i/th/t/_(CCACCA)
d/r/i/th/t/_(CCACCA)
				version split: ['d', 'r', 'i', 't', 'h', 't']
				{'string': 'd/r/i/t/h/t', 'rgx': '((d))/((r))/((i))/((t)|(th))/((t)|(h))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 't', 'h', 't']
				version split: ['d', 'r', 'i', 't', 'h', 't']
				{'string': 'd/r/i/t/h/t', 'rgx': '((d))/((r))/((i))/((t)|(th))/((t)|(h))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 't', 'h', 't']
				version split: ['d', 'r', 'i', 'th', 't']
				{'string': 'd/r/i/th/t', 'rgx': '((d))/((r))/((i))/((t)|(th))/((t)|(h))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'th', 't']
				version split: ['d', 'r', 'i', 'th', 't']
				{'string': 'd/r/i/th/t', 'rgx': '((d))/((r))/((i))/((t)|(th))/((t)|(h))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'th', 't']
				version split: ['d', 'r', 'i', 't', 'h', '_', 't']
				{'string': 'd/r/i/t/h/_/t', 'rgx': '((d))/((r))/((i))/((t)|(th))/((t)|(h))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 't', 'h', '_', 't']
				version split: ['d', 'r', 'i', 't', 'h', '_', 't']
				{'string': 'd/r/i/t/h/_/t', 'rgx': '((d))/((r))/((i))/((t)|(th))/((t)|(h))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 't', 'h', '_', 't']
				version split: ['d', 'r', 'i', 'th', 't', '_']
				{'string': 'd/r/i/th/t/_', 'rgx': '((d))/((r))/((i))/((t)|(th))/((t)|(h))/((_))$'}
				version split: ['d', 'r', 'i', 'th', 't', '_']
				{'string': 'd/r/i/th/t/_', 'rgx': '((d))/((r))/((i))/((t)|(th))/((t)|(h))/((_))$'}
				ANALYSING: dritt
					resolving (4)
					> version: d/r/i/t/t
					> version: d/r/i/t/t
					> version: d/r/i/tt
					> version: d/r/i/tt
					RESULT:  ['_']
				adding dashed alternative: ['d', 'r', 'i', 't', 't', '_']
				adding dashed alternative: ['d', 'r', 'i', 't', 't', '_']
				adding dashed alternative: ['d', 'r', 'i', 'tt', '_']
				adding dashed alternative: ['d', 'r', 'i', 'tt', '_']
				d/r/i/t/t(CCCCC)
d/r/i/t/t(CCVCC)
d/r/i/tt(CCCC)
d/r/i/tt(CCVC)
d/r/i/t/t/_(CCACCA)
d/r/i/t/t/_(CCACCA)
d/r/i/tt/_(CCACA)
d/r/i/tt/_(CCACA)
				version split: ['d', 'r', 'i', 't', 't']
				{'string': 'd/r/i/t/t', 'rgx': '((d))/((r))/((i))/((tt)|(t))/((t))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 't', 't']
				version split: ['d', 'r', 'i', 't', 't']
				{'string': 'd/r/i/t/t', 'rgx': '((d))/((r))/((i))/((tt)|(t))/((t))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 't', 't']
				version split: ['d', 'r', 'i', 'tt']
				{'string': 'd/r/i/tt', 'rgx': '((d))/((r))/((i))/((tt)|(t))/((t))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'tt']
				version split: ['d', 'r', 'i', 'tt']
				{'string': 'd/r/i/tt', 'rgx': '((d))/((r))/((i))/((tt)|(t))/((t))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'tt']
				version split: ['d', 'r', 'i', 't', 't', '_']
				{'string': 'd/r/i/t/t/_', 'rgx': '((d))/((r))/((i))/((tt)|(t))/((t))/((_))$'}
				version split: ['d', 'r', 'i', 't', 't', '_']
				{'string': 'd/r/i/t/t/_', 'rgx': '((d))/((r))/((i))/((tt)|(t))/((t))/((_))$'}
				version split: ['d', 'r', 'i', 'tt', '_']
				{'string': 'd/r/i/tt/_', 'rgx': '((d))/((r))/((i))/((tt)|(t))/((t))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'tt', '_']
				version split: ['d', 'r', 'i', 'tt', '_']
				{'string': 'd/r/i/tt/_', 'rgx': '((d))/((r))/((i))/((tt)|(t))/((t))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'tt', '_']
				ANALYSING: driȝt
					resolving (2)
					> version: d/r/i/ȝ/t
					> version: d/r/i/ȝ/t
					RESULT:  ['_']
				adding dashed alternative: ['d', 'r', 'i', 'ȝ', 't', '_']
				adding dashed alternative: ['d', 'r', 'i', 'ȝ', 't', '_']
				d/r/i/ȝ/t(CCCCC)
d/r/i/ȝ/t(CCVCC)
d/r/i/ȝ/t/_(CCACCA)
d/r/i/ȝ/t/_(CCACCA)
				version split: ['d', 'r', 'i', 'ȝ', 't']
				{'string': 'd/r/i/ȝ/t', 'rgx': '((d))/((r))/((i))/((ȝ))/((t))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'ȝ', 't']
				version split: ['d', 'r', 'i', 'ȝ', 't']
				{'string': 'd/r/i/ȝ/t', 'rgx': '((d))/((r))/((i))/((ȝ))/((t))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'ȝ', 't']
				version split: ['d', 'r', 'i', 'ȝ', 't', '_']
				{'string': 'd/r/i/ȝ/t/_', 'rgx': '((d))/((r))/((i))/((ȝ))/((t))/((_))$'}
				version split: ['d', 'r', 'i', 'ȝ', 't', '_']
				{'string': 'd/r/i/ȝ/t/_', 'rgx': '((d))/((r))/((i))/((ȝ))/((t))/((_))$'}
				ANALYSING: dryht
					resolving (3)
					> version: d/r/y/h/t
					> version: d/r/y/h/t
					> version: d/r/yh/t
					RESULT:  ['_']
				adding dashed alternative: ['d', 'r', 'y', 'h', 't', '_']
				adding dashed alternative: ['d', 'r', 'y', 'h', 't', '_']
				adding dashed alternative: ['d', 'r', 'yh', 't', '_']
				d/r/y/h/t(CCCCC)
d/r/y/h/t(CCVCC)
d/r/yh/t(CCCC)
d/r/y/h/t/_(CCACCA)
d/r/y/h/t/_(CCACCA)
d/r/yh/t/_(CCCCA)
				version split: ['d', 'r', 'y', 'h', 't']
				{'string': 'd/r/y/h/t', 'rgx': '((d))/((r))/((y))/((t)|(h))/((t))/((_))$'}
				_____REMOVING________['d', 'r', 'y', 'h', 't']
				version split: ['d', 'r', 'y', 'h', 't']
				{'string': 'd/r/y/h/t', 'rgx': '((d))/((r))/((y))/((t)|(h))/((t))/((_))$'}
				_____REMOVING________['d', 'r', 'y', 'h', 't']
				version split: ['d', 'r', 'yh', 't']
				{'string': 'd/r/yh/t', 'rgx': '((d))/((r))/((y))/((t)|(h))/((t))/((_))$'}
				_____REMOVING________['d', 'r', 'yh', 't']
				version split: ['d', 'r', 'y', 'h', 't', '_']
				{'string': 'd/r/y/h/t/_', 'rgx': '((d))/((r))/((y))/((t)|(h))/((t))/((_))$'}
				version split: ['d', 'r', 'y', 'h', 't', '_']
				{'string': 'd/r/y/h/t/_', 'rgx': '((d))/((r))/((y))/((t)|(h))/((t))/((_))$'}
				version split: ['d', 'r', 'yh', 't', '_']
				{'string': 'd/r/yh/t/_', 'rgx': '((d))/((r))/((y))/((t)|(h))/((t))/((_))$'}
				_____REMOVING________['d', 'r', 'yh', 't', '_']
				ANALYSING: e
					resolving (16)
					> version: e
					> version: _/e
					> version: e/_
					> version: _/_/e
					> version: e/_
					> version: _/e/_
					> version: e/_/_
					> version: _/_/e/_
					> version: e/_
					> version: _/e/_
					> version: e/_/_
					> version: _/_/e/_
					> version: e/_/_
					> version: _/e/_/_
					> version: e/_/_/_
					> version: _/_/e/_/_
					RESULT:  ['_']
				adding dashed alternative: ['e', '_']
				adding dashed alternative: ['_', 'e', '_']
				adding dashed alternative: ['e', '_', '_']
				adding dashed alternative: ['_', '_', 'e', '_']
				adding dashed alternative: ['e', '_', '_']
				adding dashed alternative: ['_', 'e', '_', '_']
				adding dashed alternative: ['e', '_', '_', '_']
				adding dashed alternative: ['_', '_', 'e', '_', '_']
				adding dashed alternative: ['e', '_', '_']
				adding dashed alternative: ['_', 'e', '_', '_']
				adding dashed alternative: ['e', '_', '_', '_']
				adding dashed alternative: ['_', '_', 'e', '_', '_']
				adding dashed alternative: ['e', '_', '_', '_']
				adding dashed alternative: ['_', 'e', '_', '_', '_']
				adding dashed alternative: ['e', '_', '_', '_', '_']
				adding dashed alternative: ['_', '_', 'e', '_', '_', '_']
				e(V)
_/e(AV)
e/_(VA)
_/_/e(AAV)
e/_(VA)
_/e/_(AVA)
e/_/_(VAA)
_/_/e/_(AAVA)
e/_(VA)
_/e/_(AVA)
e/_/_(VAA)
_/_/e/_(AAVA)
e/_/_(VAA)
_/e/_/_(AVAA)
e/_/_/_(VAAA)
_/_/e/_/_(AAVAA)
e/_(VA)
_/e/_(AVA)
e/_/_(VAA)
_/_/e/_(AAVA)
e/_/_(VAA)
_/e/_/_(AVAA)
e/_/_/_(VAAA)
_/_/e/_/_(AAVAA)
e/_/_(VAA)
_/e/_/_(AVAA)
e/_/_/_(VAAA)
_/_/e/_/_(AAVAA)
e/_/_/_(VAAA)
_/e/_/_/_(AVAAA)
e/_/_/_/_(VAAAA)
_/_/e/_/_/_(AAVAAA)
				version split: ['e']
				{'string': 'e', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))$'}
				_____REMOVING________['e']
				version split: ['_', 'e']
				{'string': '_/e', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'e']
				version split: ['e', '_']
				{'string': 'e/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))$'}
				_____REMOVING________['e', '_']
				version split: ['_', '_', 'e']
				{'string': '_/_/e', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'e']
				version split: ['e', '_']
				{'string': 'e/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))$'}
				_____REMOVING________['e', '_']
				version split: ['_', 'e', '_']
				{'string': '_/e/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'e', '_']
				version split: ['e', '_', '_']
				{'string': 'e/_/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))$'}
				_____REMOVING________['e', '_', '_']
				version split: ['_', '_', 'e', '_']
				{'string': '_/_/e/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'e', '_']
				version split: ['e', '_']
				{'string': 'e/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))$'}
				_____REMOVING________['e', '_']
				version split: ['_', 'e', '_']
				{'string': '_/e/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'e', '_']
				version split: ['e', '_', '_']
				{'string': 'e/_/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))$'}
				_____REMOVING________['e', '_', '_']
				version split: ['_', '_', 'e', '_']
				{'string': '_/_/e/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'e', '_']
				version split: ['e', '_', '_']
				{'string': 'e/_/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))$'}
				_____REMOVING________['e', '_', '_']
				version split: ['_', 'e', '_', '_']
				{'string': '_/e/_/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'e', '_', '_']
				version split: ['e', '_', '_', '_']
				{'string': 'e/_/_/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))$'}
				_____REMOVING________['e', '_', '_', '_']
				version split: ['_', '_', 'e', '_', '_']
				{'string': '_/_/e/_/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'e', '_', '_']
				version split: ['e', '_']
				{'string': 'e/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))$'}
				_____REMOVING________['e', '_']
				version split: ['_', 'e', '_']
				{'string': '_/e/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'e', '_']
				version split: ['e', '_', '_']
				{'string': 'e/_/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))$'}
				_____REMOVING________['e', '_', '_']
				version split: ['_', '_', 'e', '_']
				{'string': '_/_/e/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'e', '_']
				version split: ['e', '_', '_']
				{'string': 'e/_/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))$'}
				_____REMOVING________['e', '_', '_']
				version split: ['_', 'e', '_', '_']
				{'string': '_/e/_/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'e', '_', '_']
				version split: ['e', '_', '_', '_']
				{'string': 'e/_/_/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))$'}
				_____REMOVING________['e', '_', '_', '_']
				version split: ['_', '_', 'e', '_', '_']
				{'string': '_/_/e/_/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'e', '_', '_']
				version split: ['e', '_', '_']
				{'string': 'e/_/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))$'}
				_____REMOVING________['e', '_', '_']
				version split: ['_', 'e', '_', '_']
				{'string': '_/e/_/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'e', '_', '_']
				version split: ['e', '_', '_', '_']
				{'string': 'e/_/_/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))$'}
				_____REMOVING________['e', '_', '_', '_']
				version split: ['_', '_', 'e', '_', '_']
				{'string': '_/_/e/_/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'e', '_', '_']
				version split: ['e', '_', '_', '_']
				{'string': 'e/_/_/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))$'}
				_____REMOVING________['e', '_', '_', '_']
				version split: ['_', 'e', '_', '_', '_']
				{'string': '_/e/_/_/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'e', '_', '_', '_']
				version split: ['e', '_', '_', '_', '_']
				{'string': 'e/_/_/_/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))$'}
				_____REMOVING________['e', '_', '_', '_', '_']
				version split: ['_', '_', 'e', '_', '_', '_']
				{'string': '_/_/e/_/_/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))$'}
				ANALYSING: en
					resolving (8)
					> version: e/n
					> version: _/e/n
					> version: e/n/_
					> version: _/e/_/n
					> version: e/n/_
					> version: _/e/n/_
					> version: e/n/_/_
					> version: _/e/_/n/_
					RESULT:  ['_']
				adding dashed alternative: ['e', 'n', '_']
				adding dashed alternative: ['_', 'e', 'n', '_']
				adding dashed alternative: ['e', 'n', '_', '_']
				adding dashed alternative: ['_', 'e', '_', 'n', '_']
				adding dashed alternative: ['e', 'n', '_', '_']
				adding dashed alternative: ['_', 'e', 'n', '_', '_']
				adding dashed alternative: ['e', 'n', '_', '_', '_']
				adding dashed alternative: ['_', 'e', '_', 'n', '_', '_']
				e/n(VC)
_/e/n(AVC)
e/n/_(VCA)
_/e/_/n(AVAC)
e/n/_(VCA)
_/e/n/_(AVCA)
e/n/_/_(VCAA)
_/e/_/n/_(AVACA)
e/n/_(VCA)
_/e/n/_(AVCA)
e/n/_/_(VCAA)
_/e/_/n/_(AVACA)
e/n/_/_(VCAA)
_/e/n/_/_(AVCAA)
e/n/_/_/_(VCAAA)
_/e/_/n/_/_(AVACAA)
				version split: ['e', 'n']
				{'string': 'e/n', 'rgx': '((_))/((n))/((_))/((n))/((_))/((_))$'}
				_____REMOVING________['e', 'n']
				version split: ['_', 'e', 'n']
				{'string': '_/e/n', 'rgx': '((_))/((n))/((_))/((n))/((_))/((_))$'}
				_____REMOVING________['_', 'e', 'n']
				version split: ['e', 'n', '_']
				{'string': 'e/n/_', 'rgx': '((_))/((n))/((_))/((n))/((_))/((_))$'}
				_____REMOVING________['e', 'n', '_']
				version split: ['_', 'e', '_', 'n']
				{'string': '_/e/_/n', 'rgx': '((_))/((n))/((_))/((n))/((_))/((_))$'}
				_____REMOVING________['_', 'e', '_', 'n']
				version split: ['e', 'n', '_']
				{'string': 'e/n/_', 'rgx': '((_))/((n))/((_))/((n))/((_))/((_))$'}
				_____REMOVING________['e', 'n', '_']
				version split: ['_', 'e', 'n', '_']
				{'string': '_/e/n/_', 'rgx': '((_))/((n))/((_))/((n))/((_))/((_))$'}
				_____REMOVING________['_', 'e', 'n', '_']
				version split: ['e', 'n', '_', '_']
				{'string': 'e/n/_/_', 'rgx': '((_))/((n))/((_))/((n))/((_))/((_))$'}
				_____REMOVING________['e', 'n', '_', '_']
				version split: ['_', 'e', '_', 'n', '_']
				{'string': '_/e/_/n/_', 'rgx': '((_))/((n))/((_))/((n))/((_))/((_))$'}
				_____REMOVING________['_', 'e', '_', 'n', '_']
				version split: ['e', 'n', '_']
				{'string': 'e/n/_', 'rgx': '((_))/((n))/((_))/((n))/((_))/((_))$'}
				_____REMOVING________['e', 'n', '_']
				version split: ['_', 'e', 'n', '_']
				{'string': '_/e/n/_', 'rgx': '((_))/((n))/((_))/((n))/((_))/((_))$'}
				_____REMOVING________['_', 'e', 'n', '_']
				version split: ['e', 'n', '_', '_']
				{'string': 'e/n/_/_', 'rgx': '((_))/((n))/((_))/((n))/((_))/((_))$'}
				_____REMOVING________['e', 'n', '_', '_']
				version split: ['_', 'e', '_', 'n', '_']
				{'string': '_/e/_/n/_', 'rgx': '((_))/((n))/((_))/((n))/((_))/((_))$'}
				_____REMOVING________['_', 'e', '_', 'n', '_']
				version split: ['e', 'n', '_', '_']
				{'string': 'e/n/_/_', 'rgx': '((_))/((n))/((_))/((n))/((_))/((_))$'}
				_____REMOVING________['e', 'n', '_', '_']
				version split: ['_', 'e', 'n', '_', '_']
				{'string': '_/e/n/_/_', 'rgx': '((_))/((n))/((_))/((n))/((_))/((_))$'}
				_____REMOVING________['_', 'e', 'n', '_', '_']
				version split: ['e', 'n', '_', '_', '_']
				{'string': 'e/n/_/_/_', 'rgx': '((_))/((n))/((_))/((n))/((_))/((_))$'}
				_____REMOVING________['e', 'n', '_', '_', '_']
				version split: ['_', 'e', '_', 'n', '_', '_']
				{'string': '_/e/_/n/_/_', 'rgx': '((_))/((n))/((_))/((n))/((_))/((_))$'}
				_____REMOVING________['_', 'e', '_', 'n', '_', '_']
				ANALYSING: in
					resolving (16)
					> version: i/n
					> version: i/n
					> version: i/n/_
					> version: i/n/_
					> version: i/n/_
					> version: i/n/_
					> version: i/n/_/_
					> version: i/n/_/_
					> version: i/n/_
					> version: i/n/_
					> version: i/n/_/_
					> version: i/n/_/_
					> version: i/n/_/_
					> version: i/n/_/_
					> version: i/n/_/_/_
					> version: i/n/_/_/_
					RESULT:  ['_']
				adding dashed alternative: ['i', 'n', '_']
				adding dashed alternative: ['i', 'n', '_']
				adding dashed alternative: ['i', 'n', '_', '_']
				adding dashed alternative: ['i', 'n', '_', '_']
				adding dashed alternative: ['i', 'n', '_', '_']
				adding dashed alternative: ['i', 'n', '_', '_']
				adding dashed alternative: ['i', 'n', '_', '_', '_']
				adding dashed alternative: ['i', 'n', '_', '_', '_']
				adding dashed alternative: ['i', 'n', '_', '_']
				adding dashed alternative: ['i', 'n', '_', '_']
				adding dashed alternative: ['i', 'n', '_', '_', '_']
				adding dashed alternative: ['i', 'n', '_', '_', '_']
				adding dashed alternative: ['i', 'n', '_', '_', '_']
				adding dashed alternative: ['i', 'n', '_', '_', '_']
				adding dashed alternative: ['i', 'n', '_', '_', '_', '_']
				adding dashed alternative: ['i', 'n', '_', '_', '_', '_']
				i/n(CC)
i/n(VC)
i/n/_(ACA)
i/n/_(ACA)
i/n/_(ACA)
i/n/_(ACA)
i/n/_/_(ACAA)
i/n/_/_(ACAA)
i/n/_(ACA)
i/n/_(ACA)
i/n/_/_(ACAA)
i/n/_/_(ACAA)
i/n/_/_(ACAA)
i/n/_/_(ACAA)
i/n/_/_/_(ACAAA)
i/n/_/_/_(ACAAA)
i/n/_(ACA)
i/n/_(ACA)
i/n/_/_(ACAA)
i/n/_/_(ACAA)
i/n/_/_(ACAA)
i/n/_/_(ACAA)
i/n/_/_/_(ACAAA)
i/n/_/_/_(ACAAA)
i/n/_/_(ACAA)
i/n/_/_(ACAA)
i/n/_/_/_(ACAAA)
i/n/_/_/_(ACAAA)
i/n/_/_/_(ACAAA)
i/n/_/_/_(ACAAA)
i/n/_/_/_/_(ACAAAA)
i/n/_/_/_/_(ACAAAA)
				version split: ['i', 'n']
				{'string': 'i/n', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n']
				version split: ['i', 'n']
				{'string': 'i/n', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n']
				version split: ['i', 'n', '_']
				{'string': 'i/n/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n', '_']
				version split: ['i', 'n', '_']
				{'string': 'i/n/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n', '_']
				version split: ['i', 'n', '_']
				{'string': 'i/n/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n', '_']
				version split: ['i', 'n', '_']
				{'string': 'i/n/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n', '_']
				version split: ['i', 'n', '_', '_']
				{'string': 'i/n/_/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n', '_', '_']
				version split: ['i', 'n', '_', '_']
				{'string': 'i/n/_/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n', '_', '_']
				version split: ['i', 'n', '_']
				{'string': 'i/n/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n', '_']
				version split: ['i', 'n', '_']
				{'string': 'i/n/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n', '_']
				version split: ['i', 'n', '_', '_']
				{'string': 'i/n/_/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n', '_', '_']
				version split: ['i', 'n', '_', '_']
				{'string': 'i/n/_/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n', '_', '_']
				version split: ['i', 'n', '_', '_']
				{'string': 'i/n/_/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n', '_', '_']
				version split: ['i', 'n', '_', '_']
				{'string': 'i/n/_/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n', '_', '_']
				version split: ['i', 'n', '_', '_', '_']
				{'string': 'i/n/_/_/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n', '_', '_', '_']
				version split: ['i', 'n', '_', '_', '_']
				{'string': 'i/n/_/_/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n', '_', '_', '_']
				version split: ['i', 'n', '_']
				{'string': 'i/n/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n', '_']
				version split: ['i', 'n', '_']
				{'string': 'i/n/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n', '_']
				version split: ['i', 'n', '_', '_']
				{'string': 'i/n/_/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n', '_', '_']
				version split: ['i', 'n', '_', '_']
				{'string': 'i/n/_/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n', '_', '_']
				version split: ['i', 'n', '_', '_']
				{'string': 'i/n/_/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n', '_', '_']
				version split: ['i', 'n', '_', '_']
				{'string': 'i/n/_/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n', '_', '_']
				version split: ['i', 'n', '_', '_', '_']
				{'string': 'i/n/_/_/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n', '_', '_', '_']
				version split: ['i', 'n', '_', '_', '_']
				{'string': 'i/n/_/_/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n', '_', '_', '_']
				version split: ['i', 'n', '_', '_']
				{'string': 'i/n/_/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n', '_', '_']
				version split: ['i', 'n', '_', '_']
				{'string': 'i/n/_/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n', '_', '_']
				version split: ['i', 'n', '_', '_', '_']
				{'string': 'i/n/_/_/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n', '_', '_', '_']
				version split: ['i', 'n', '_', '_', '_']
				{'string': 'i/n/_/_/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n', '_', '_', '_']
				version split: ['i', 'n', '_', '_', '_']
				{'string': 'i/n/_/_/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n', '_', '_', '_']
				version split: ['i', 'n', '_', '_', '_']
				{'string': 'i/n/_/_/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n', '_', '_', '_']
				version split: ['i', 'n', '_', '_', '_', '_']
				{'string': 'i/n/_/_/_/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))$'}
				version split: ['i', 'n', '_', '_', '_', '_']
				{'string': 'i/n/_/_/_/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))$'}
		FAIL: 
		FAIL: 
		FAIL: 
		FAIL: 
		FAIL: 
		FAIL: 
		FAIL: 
		FAIL: 
		FAIL: 
		FAIL: 
		FAIL: 
		only one version left: ['d', 'r', 'i', 'c', '_', '_']
		only one version left: ['d', 'r', 'i', 'c', 't', '_']
		only one version left: ['d', 'r', 'i', 'gh', 't', '_']
		only one version left: ['d', 'r', 'i', 'g', 't', '_']
		only one version left: ['d', 'r', 'i', 'h', '_', '_']
		only one version left: ['d', 'r', 'i', 'h', 't', '_']
		only one version left: ['d', 'r', 'i', 'hð', 't', '_']
		only one version left: ['d', 'r', 'i', 'h', 'h', '_']
		only one version left: ['d', 'r', 'i', 'hh', 't', '_']
		only one version left: ['d', 'r', 'i', 'c', 'h', '_']
		only one version left: ['d', 'r', 'i', 'ch', 't', '_']
		only one version left: ['d', 'r', 'i', 's', 't', '_']
		only one version left: ['d', 'r', 'i', 't', 'h', '_']
		only one version left: ['d', 'r', 'i', 'th', 't', '_']
		only one version left: ['d', 'r', 'i', 't', 't', '_']
		only one version left: ['d', 'r', 'i', 'ȝ', 't', '_']
		only one version left: ['d', 'r', 'y', 'h', 't', '_']
		only one version left: ['_', '_', 'e', '_', '_', '_']
		FAIL: 
		only one version left: ['i', 'n', '_', '_', '_', '_']
		SPLIT: ['d', 'r', 'e', 'y', 't', 'e', '----!']
		SPLIT: ['d', 'r', 'i', 'h', 't', 'e', '----!']
		SPLIT: ['d', 'r', 'i', 'c.h', 't', 'e', '----!']
		SPLIT: ['d', 'r', 'i', 'k', 't', 'e', '----!']
		SPLIT: ['d', 'r', 'i', 's', 't', 'e', '----!']
		SPLIT: ['d', 'r', 'i', 't', 'h', 'e', '----!']
		SPLIT: ['d', 'r', 'i', 't.h', 't', 'e', '----!']
		SPLIT: ['d', 'r', 'i', 't', 't', 'e', '----!']
		SPLIT: ['d', 'r', 'i', 'ȝ', 't', 'e', '----!']
		SPLIT: ['d', 'r', 'i', 'ȝ', 't.t', 'e', '----!']
		SPLIT: ['d', 'r', 'y', 'h', 't', 'e', '----!']
		SPLIT: ['d', 'r', 'i', 'c', '_', '_']
		['d', 'r', 'i', 'c', '_', '_']
		['d', 'r', 'i', 'c', '_', '_']
		SPLIT: ['d', 'r', 'i', 'c', 't', '_']
		['d', 'r', 'i', 'c', 't', '_']
		['d', 'r', 'i', 'c', 't', '_']
		SPLIT: ['d', 'r', 'i', 'gh', 't', '_']
		['d', 'r', 'i', 'gh', 't', '_']
		['d', 'r', 'i', 'gh', 't', '_']
		SPLIT: ['d', 'r', 'i', 'g', 't', '_']
		['d', 'r', 'i', 'g', 't', '_']
		['d', 'r', 'i', 'g', 't', '_']
		SPLIT: ['d', 'r', 'i', 'h', '_', '_']
		['d', 'r', 'i', 'h', '_', '_']
		['d', 'r', 'i', 'h', '_', '_']
		SPLIT: ['d', 'r', 'i', 'h', 't', '_']
		['d', 'r', 'i', 'h', 't', '_']
		['d', 'r', 'i', 'h', 't', '_']
		SPLIT: ['d', 'r', 'i', 'hð', 't', '_']
		['d', 'r', 'i', 'hð', 't', '_']
		['d', 'r', 'i', 'hð', 't', '_']
		SPLIT: ['d', 'r', 'i', 'h', 'h', '_']
		['d', 'r', 'i', 'h', 'h', '_']
		['d', 'r', 'i', 'h', 'h', '_']
		SPLIT: ['d', 'r', 'i', 'hh', 't', '_']
		['d', 'r', 'i', 'hh', 't', '_']
		['d', 'r', 'i', 'hh', 't', '_']
		SPLIT: ['d', 'r', 'i', 'c', 'h', '_']
		['d', 'r', 'i', 'c', 'h', '_']
		['d', 'r', 'i', 'c', 'h', '_']
		SPLIT: ['d', 'r', 'i', 'ch', 't', '_']
		['d', 'r', 'i', 'ch', 't', '_']
		['d', 'r', 'i', 'ch', 't', '_']
		SPLIT: ['d', 'r', 'i', 's', 't', '_']
		['d', 'r', 'i', 's', 't', '_']
		['d', 'r', 'i', 's', 't', '_']
		SPLIT: ['d', 'r', 'i', 't', 'h', '_']
		['d', 'r', 'i', 't', 'h', '_']
		['d', 'r', 'i', 't', 'h', '_']
		SPLIT: ['d', 'r', 'i', 'th', 't', '_']
		['d', 'r', 'i', 'th', 't', '_']
		['d', 'r', 'i', 'th', 't', '_']
		SPLIT: ['d', 'r', 'i', 't', 't', '_']
		['d', 'r', 'i', 't', 't', '_']
		['d', 'r', 'i', 't', 't', '_']
		SPLIT: ['d', 'r', 'i', 'ȝ', 't', '_']
		['d', 'r', 'i', 'ȝ', 't', '_']
		['d', 'r', 'i', 'ȝ', 't', '_']
		SPLIT: ['d', 'r', 'y', 'h', 't', '_']
		['d', 'r', 'y', 'h', 't', '_']
		['d', 'r', 'y', 'h', 't', '_']
		SPLIT: ['_', '_', 'e', '_', '_', '_']
		['_', '_', 'e', '_', '_', '_']
		SPLIT: ['_', 'n', '_', 'n', '_', '_', '----!']
		SPLIT: ['i', 'n', '_', '_', '_', '_']
		['i', 'n', '_', '_', '_', '_']
		['i', 'n', '_', '_', '_', '_']
		version for pattern CCVCCV is INVALID
		[{'i', 'd', '_'}, {'n', '_', 'r'}, {'ch', '_', 'hð', 'ȝ', 's', 'hh', 't', 'n', 'th', 'k', 'c', 'gh', 'tt', 'y', 'g', 'h'}, {'_', 't', 'tt', 'h', 'ð'}]
		12
		OVERVIEW: version for pattern CCVCCV
{'i', 'd', '_'}, {'n', '_', 'r'}, {'ch', '_', 'hð', 'ȝ', 's', 'hh', 't', 'n', 'th', 'k', 'c', 'gh', 'tt', 'y', 'g', 'h'}, {'_', 't', 'tt', 'h', 'ð'}
faulty splits: 12
dreyte----! <-! dreyte
drihte----! <-! drihte
dric.hte----! <-! drichte
drikte----! <-! drikte
driste----! <-! driste
drithe----! <-! drithe
drit.hte----! <-! drithte
dritte----! <-! dritte
driȝte----! <-! driȝte
driȝt.te----! <-! driȝtte
dryhte----! <-! dryhte
nn----! <-! en
d | r | e | y | t | e | ----!
d | r | i | h | t | e | ----!
d | r | i | c.h | t | e | ----!
d | r | i | k | t | e | ----!
d | r | i | s | t | e | ----!
d | r | i | t | h | e | ----!
d | r | i | t.h | t | e | ----!
d | r | i | t | t | e | ----!
d | r | i | ȝ | t | e | ----!
d | r | i | ȝ | t.t | e | ----!
d | r | y | h | t | e | ----!
d | r | i | c | _ | _
d | r | i | c | t | _
d | r | i | gh | t | _
d | r | i | g | t | _
d | r | i | h | _ | _
d | r | i | h | t | _
d | r | i | hð | t | _
d | r | i | h | h | _
d | r | i | hh | t | _
d | r | i | c | h | _
d | r | i | ch | t | _
d | r | i | s | t | _
d | r | i | t | h | _
d | r | i | th | t | _
d | r | i | t | t | _
d | r | i | ȝ | t | _
d | r | y | h | t | _
_ | _ | e | _ | _ | _
_ | n | _ | n | _ | _ | ----!
i | n | _ | _ | _ | _
	[[{'lit': 'ey', 'ln': 2, 'index': 2}], [{'lit': 'ey', 'ln': 2, 'index': 2}]]
	[[{'lit': 'ey', 'ln': 2, 'index': 2}], [{'lit': 'ey', 'ln': 2, 'index': 2}], [{'lit': 'ey', 'ln': 2, 'index': 2}, {'lit': 'ey', 'ln': 2, 'index': 2}]]
	[[{'lit': 'gh', 'ln': 2, 'index': 3}]]
	[[{'lit': 'hð', 'ln': 2, 'index': 3}]]
	[[{'lit': 'hh', 'ln': 2, 'index': 3}]]
	[[{'lit': 'hh', 'ln': 2, 'index': 3}]]
	[[{'lit': 'ch', 'ln': 2, 'index': 3}]]
	[[{'lit': 'ch', 'ln': 2, 'index': 3}]]
	[[{'lit': 'ch', 'ln': 2, 'index': 3}]]
	[[{'lit': 'th', 'ln': 2, 'index': 3}]]
	[[{'lit': 'th', 'ln': 2, 'index': 3}]]
	[[{'lit': 'th', 'ln': 2, 'index': 3}]]
	[[{'lit': 'th', 'ln': 2, 'index': 3}]]
	[[{'lit': 'tt', 'ln': 2, 'index': 3}]]
	[[{'lit': 'tt', 'ln': 2, 'index': 3}]]
	[[{'lit': 'tt', 'ln': 2, 'index': 4}]]
	[[{'lit': 'yh', 'ln': 2, 'index': 2}]]
	[[{'lit': 'yh', 'ln': 2, 'index': 2}]]
	MIN pattern length=6
	Pattern CCCC is invalid
	Pattern CCVVCV is invalid
	Pattern CCVC is invalid
	Pattern CCCCV is invalid
	Pattern CCVCC is invalid
	Pattern CCVCCV is valid
	Pattern CCCCCV is invalid
	Pattern V is invalid
	Pattern CC is invalid
	Pattern CCVCCC is valid
	Pattern CCCCCCV is invalid
	Pattern CCCCC is invalid
	Pattern CCVCCCV is valid
	Pattern CCVCV is invalid
	Pattern VC is invalid
	Pattern CCCCCC is invalid
	Making the selection for pattern: CCVCCC
	Selection for pattern: CCVCCC completed
	Making a version for pattern: CCVCCC
			___CCVCCC : 0___
				ANALYSING: dright
				adding littera based on matching pattern
				ANALYSING: drihðt
				adding littera based on matching pattern
				ANALYSING: drihht
				adding littera based on matching pattern
				ANALYSING: dricht
				adding littera based on matching pattern
				ANALYSING: dritht
				adding littera based on matching pattern
				ANALYSING: dreyte
					resolving (5)
					> version: d/r/e/y/t/e
					TRYING: d
					> version: d/r/e/y/t/e
					TRYING: d
					> version: d/r/ey/t/e
					TRYING: d
					> version: d/r/ey/t/e
					TRYING: d
					> version: d/r/ey/t/e
					TRYING: d
					RESULT:  ['d']
				ANALYSING: dric
					resolving (2)
					> version: d/r/i/c
					TRYING: d
					> version: d/r/i/c
					TRYING: d
					RESULT:  ['d']
				ANALYSING: drict
					resolving (2)
					> version: d/r/i/c/t
					TRYING: d
					> version: d/r/i/c/t
					TRYING: d
					RESULT:  ['d']
				ANALYSING: drigt
					resolving (2)
					> version: d/r/i/g/t
					TRYING: d
					> version: d/r/i/g/t
					TRYING: d
					RESULT:  ['d']
				ANALYSING: drih
					resolving (2)
					> version: d/r/i/h
					TRYING: d
					> version: d/r/i/h
					TRYING: d
					RESULT:  ['d']
				ANALYSING: driht
					resolving (2)
					> version: d/r/i/h/t
					TRYING: d
					> version: d/r/i/h/t
					TRYING: d
					RESULT:  ['d']
				ANALYSING: drihh
					resolving (4)
					> version: d/r/i/h/h
					TRYING: d
					> version: d/r/i/h/h
					TRYING: d
					> version: d/r/i/hh
					TRYING: d
					> version: d/r/i/hh
					TRYING: d
					RESULT:  ['d']
				ANALYSING: drihte
					resolving (2)
					> version: d/r/i/h/t/e
					TRYING: d
					> version: d/r/i/h/t/e
					TRYING: d
					RESULT:  ['d']
				ANALYSING: drich
					resolving (4)
					> version: d/r/i/c/h
					TRYING: d
					> version: d/r/i/c/h
					TRYING: d
					> version: d/r/i/ch
					TRYING: d
					> version: d/r/i/ch
					TRYING: d
					RESULT:  ['d']
				ANALYSING: drichte
					resolving (4)
					> version: d/r/i/c/h/t/e
					TRYING: d
					> version: d/r/i/c/h/t/e
					TRYING: d
					> version: d/r/i/ch/t/e
					TRYING: d
					> version: d/r/i/ch/t/e
					TRYING: d
					RESULT:  ['d']
				ANALYSING: drikte
					resolving (2)
					> version: d/r/i/k/t/e
					TRYING: d
					> version: d/r/i/k/t/e
					TRYING: d
					RESULT:  ['d']
				ANALYSING: drist
					resolving (2)
					> version: d/r/i/s/t
					TRYING: d
					> version: d/r/i/s/t
					TRYING: d
					RESULT:  ['d']
				ANALYSING: driste
					resolving (2)
					> version: d/r/i/s/t/e
					TRYING: d
					> version: d/r/i/s/t/e
					TRYING: d
					RESULT:  ['d']
				ANALYSING: drith
					resolving (4)
					> version: d/r/i/t/h
					TRYING: d
					> version: d/r/i/t/h
					TRYING: d
					> version: d/r/i/th
					TRYING: d
					> version: d/r/i/th
					TRYING: d
					RESULT:  ['d']
				ANALYSING: drithe
					resolving (4)
					> version: d/r/i/t/h/e
					TRYING: d
					> version: d/r/i/t/h/e
					TRYING: d
					> version: d/r/i/th/e
					TRYING: d
					> version: d/r/i/th/e
					TRYING: d
					RESULT:  ['d']
				ANALYSING: drithte
					resolving (4)
					> version: d/r/i/t/h/t/e
					TRYING: d
					> version: d/r/i/t/h/t/e
					TRYING: d
					> version: d/r/i/th/t/e
					TRYING: d
					> version: d/r/i/th/t/e
					TRYING: d
					RESULT:  ['d']
				ANALYSING: dritt
					resolving (4)
					> version: d/r/i/t/t
					TRYING: d
					> version: d/r/i/t/t
					TRYING: d
					> version: d/r/i/tt
					TRYING: d
					> version: d/r/i/tt
					TRYING: d
					RESULT:  ['d']
				ANALYSING: dritte
					resolving (4)
					> version: d/r/i/t/t/e
					TRYING: d
					> version: d/r/i/t/t/e
					TRYING: d
					> version: d/r/i/tt/e
					TRYING: d
					> version: d/r/i/tt/e
					TRYING: d
					RESULT:  ['d']
				ANALYSING: driȝt
					resolving (2)
					> version: d/r/i/ȝ/t
					TRYING: d
					> version: d/r/i/ȝ/t
					TRYING: d
					RESULT:  ['d']
				ANALYSING: driȝte
					resolving (2)
					> version: d/r/i/ȝ/t/e
					TRYING: d
					> version: d/r/i/ȝ/t/e
					TRYING: d
					RESULT:  ['d']
				ANALYSING: driȝtte
					resolving (4)
					> version: d/r/i/ȝ/t/t/e
					TRYING: d
					> version: d/r/i/ȝ/t/t/e
					TRYING: d
					> version: d/r/i/ȝ/tt/e
					TRYING: d
					> version: d/r/i/ȝ/tt/e
					TRYING: d
					RESULT:  ['d']
				ANALYSING: dryht
					resolving (3)
					> version: d/r/y/h/t
					TRYING: d
					> version: d/r/y/h/t
					TRYING: d
					> version: d/r/yh/t
					TRYING: d
					RESULT:  ['d']
				ANALYSING: dryhte
					resolving (3)
					> version: d/r/y/h/t/e
					TRYING: d
					> version: d/r/y/h/t/e
					TRYING: d
					> version: d/r/yh/t/e
					TRYING: d
					RESULT:  ['d']
				ANALYSING: e
					resolving (1)
					> version: e
					TRYING: e
					RESULT:  ['_']
				adding dashed alternative: ['_', 'e']
				e(V)
_/e(AV)
				ANALYSING: en
					resolving (1)
					> version: e/n
					TRYING: e
					RESULT:  ['_']
				adding dashed alternative: ['_', 'e', 'n']
				e/n(VC)
_/e/n(AVC)
				ANALYSING: in
					resolving (2)
					> version: i/n
					TRYING: i
					> version: i/n
					TRYING: i
					RESULT:  ['i']
			___CCVCCC : 1___
				ANALYSING: dright
				adding littera based on matching pattern
				ANALYSING: drihðt
				adding littera based on matching pattern
				ANALYSING: drihht
				adding littera based on matching pattern
				ANALYSING: dricht
				adding littera based on matching pattern
				ANALYSING: dritht
				adding littera based on matching pattern
				ANALYSING: dreyte
					resolving (5)
					> version: d/r/e/y/t/e
					TRYING: r
					> version: d/r/e/y/t/e
					TRYING: r
					> version: d/r/ey/t/e
					TRYING: r
					> version: d/r/ey/t/e
					TRYING: r
					> version: d/r/ey/t/e
					TRYING: r
					RESULT:  ['r']
				ANALYSING: dric
					resolving (2)
					> version: d/r/i/c
					TRYING: r
					> version: d/r/i/c
					TRYING: r
					RESULT:  ['r']
				ANALYSING: drict
					resolving (2)
					> version: d/r/i/c/t
					TRYING: r
					> version: d/r/i/c/t
					TRYING: r
					RESULT:  ['r']
				ANALYSING: drigt
					resolving (2)
					> version: d/r/i/g/t
					TRYING: r
					> version: d/r/i/g/t
					TRYING: r
					RESULT:  ['r']
				ANALYSING: drih
					resolving (2)
					> version: d/r/i/h
					TRYING: r
					> version: d/r/i/h
					TRYING: r
					RESULT:  ['r']
				ANALYSING: driht
					resolving (2)
					> version: d/r/i/h/t
					TRYING: r
					> version: d/r/i/h/t
					TRYING: r
					RESULT:  ['r']
				ANALYSING: drihh
					resolving (4)
					> version: d/r/i/h/h
					TRYING: r
					> version: d/r/i/h/h
					TRYING: r
					> version: d/r/i/hh
					TRYING: r
					> version: d/r/i/hh
					TRYING: r
					RESULT:  ['r']
				ANALYSING: drihte
					resolving (2)
					> version: d/r/i/h/t/e
					TRYING: r
					> version: d/r/i/h/t/e
					TRYING: r
					RESULT:  ['r']
				ANALYSING: drich
					resolving (4)
					> version: d/r/i/c/h
					TRYING: r
					> version: d/r/i/c/h
					TRYING: r
					> version: d/r/i/ch
					TRYING: r
					> version: d/r/i/ch
					TRYING: r
					RESULT:  ['r']
				ANALYSING: drichte
					resolving (4)
					> version: d/r/i/c/h/t/e
					TRYING: r
					> version: d/r/i/c/h/t/e
					TRYING: r
					> version: d/r/i/ch/t/e
					TRYING: r
					> version: d/r/i/ch/t/e
					TRYING: r
					RESULT:  ['r']
				ANALYSING: drikte
					resolving (2)
					> version: d/r/i/k/t/e
					TRYING: r
					> version: d/r/i/k/t/e
					TRYING: r
					RESULT:  ['r']
				ANALYSING: drist
					resolving (2)
					> version: d/r/i/s/t
					TRYING: r
					> version: d/r/i/s/t
					TRYING: r
					RESULT:  ['r']
				ANALYSING: driste
					resolving (2)
					> version: d/r/i/s/t/e
					TRYING: r
					> version: d/r/i/s/t/e
					TRYING: r
					RESULT:  ['r']
				ANALYSING: drith
					resolving (4)
					> version: d/r/i/t/h
					TRYING: r
					> version: d/r/i/t/h
					TRYING: r
					> version: d/r/i/th
					TRYING: r
					> version: d/r/i/th
					TRYING: r
					RESULT:  ['r']
				ANALYSING: drithe
					resolving (4)
					> version: d/r/i/t/h/e
					TRYING: r
					> version: d/r/i/t/h/e
					TRYING: r
					> version: d/r/i/th/e
					TRYING: r
					> version: d/r/i/th/e
					TRYING: r
					RESULT:  ['r']
				ANALYSING: drithte
					resolving (4)
					> version: d/r/i/t/h/t/e
					TRYING: r
					> version: d/r/i/t/h/t/e
					TRYING: r
					> version: d/r/i/th/t/e
					TRYING: r
					> version: d/r/i/th/t/e
					TRYING: r
					RESULT:  ['r']
				ANALYSING: dritt
					resolving (4)
					> version: d/r/i/t/t
					TRYING: r
					> version: d/r/i/t/t
					TRYING: r
					> version: d/r/i/tt
					TRYING: r
					> version: d/r/i/tt
					TRYING: r
					RESULT:  ['r']
				ANALYSING: dritte
					resolving (4)
					> version: d/r/i/t/t/e
					TRYING: r
					> version: d/r/i/t/t/e
					TRYING: r
					> version: d/r/i/tt/e
					TRYING: r
					> version: d/r/i/tt/e
					TRYING: r
					RESULT:  ['r']
				ANALYSING: driȝt
					resolving (2)
					> version: d/r/i/ȝ/t
					TRYING: r
					> version: d/r/i/ȝ/t
					TRYING: r
					RESULT:  ['r']
				ANALYSING: driȝte
					resolving (2)
					> version: d/r/i/ȝ/t/e
					TRYING: r
					> version: d/r/i/ȝ/t/e
					TRYING: r
					RESULT:  ['r']
				ANALYSING: driȝtte
					resolving (4)
					> version: d/r/i/ȝ/t/t/e
					TRYING: r
					> version: d/r/i/ȝ/t/t/e
					TRYING: r
					> version: d/r/i/ȝ/tt/e
					TRYING: r
					> version: d/r/i/ȝ/tt/e
					TRYING: r
					RESULT:  ['r']
				ANALYSING: dryht
					resolving (3)
					> version: d/r/y/h/t
					TRYING: r
					> version: d/r/y/h/t
					TRYING: r
					> version: d/r/yh/t
					TRYING: r
					RESULT:  ['r']
				ANALYSING: dryhte
					resolving (3)
					> version: d/r/y/h/t/e
					TRYING: r
					> version: d/r/y/h/t/e
					TRYING: r
					> version: d/r/yh/t/e
					TRYING: r
					RESULT:  ['r']
				ANALYSING: e
					resolving (2)
					> version: e
					> version: _/e
					TRYING: e
					RESULT:  ['_']
				adding dashed alternative: ['e', '_']
				adding dashed alternative: ['_', '_', 'e']
				e(V)
_/e(AV)
e/_(VA)
_/_/e(AAV)
				ANALYSING: en
					resolving (2)
					> version: e/n
					TRYING: n
					> version: _/e/n
					TRYING: e
					RESULT:  ['n']
				ANALYSING: in
					resolving (2)
					> version: i/n
					TRYING: n
					> version: i/n
					TRYING: n
					RESULT:  ['n']
			___CCVCCC : 2___
				ANALYSING: dright
				adding littera based on matching pattern
				ANALYSING: drihðt
				adding littera based on matching pattern
				ANALYSING: drihht
				adding littera based on matching pattern
				ANALYSING: dricht
				adding littera based on matching pattern
				ANALYSING: dritht
				adding littera based on matching pattern
				ANALYSING: dreyte
					resolving (5)
					> version: d/r/e/y/t/e
					TRYING: e
					> version: d/r/e/y/t/e
					TRYING: e
					> version: d/r/ey/t/e
					TRYING: ey
					>>> MULTIPLE RESOLVE OPTIONS: {'e', 'ey'}
					> version: d/r/ey/t/e
					TRYING: ey
					>>> MULTIPLE RESOLVE OPTIONS: {'e', 'ey'}
					> version: d/r/ey/t/e
					TRYING: ey
					>>> MULTIPLE RESOLVE OPTIONS: {'e', 'ey'}
					RESULT:  ['e', 'ey']
				ANALYSING: dric
					resolving (2)
					> version: d/r/i/c
					TRYING: i
					> version: d/r/i/c
					TRYING: i
					RESULT:  ['i']
				ANALYSING: drict
					resolving (2)
					> version: d/r/i/c/t
					TRYING: i
					> version: d/r/i/c/t
					TRYING: i
					RESULT:  ['i']
				ANALYSING: drigt
					resolving (2)
					> version: d/r/i/g/t
					TRYING: i
					> version: d/r/i/g/t
					TRYING: i
					RESULT:  ['i']
				ANALYSING: drih
					resolving (2)
					> version: d/r/i/h
					TRYING: i
					> version: d/r/i/h
					TRYING: i
					RESULT:  ['i']
				ANALYSING: driht
					resolving (2)
					> version: d/r/i/h/t
					TRYING: i
					> version: d/r/i/h/t
					TRYING: i
					RESULT:  ['i']
				ANALYSING: drihh
					resolving (4)
					> version: d/r/i/h/h
					TRYING: i
					> version: d/r/i/h/h
					TRYING: i
					> version: d/r/i/hh
					TRYING: i
					> version: d/r/i/hh
					TRYING: i
					RESULT:  ['i']
				ANALYSING: drihte
					resolving (2)
					> version: d/r/i/h/t/e
					TRYING: i
					> version: d/r/i/h/t/e
					TRYING: i
					RESULT:  ['i']
				ANALYSING: drich
					resolving (4)
					> version: d/r/i/c/h
					TRYING: i
					> version: d/r/i/c/h
					TRYING: i
					> version: d/r/i/ch
					TRYING: i
					> version: d/r/i/ch
					TRYING: i
					RESULT:  ['i']
				ANALYSING: drichte
					resolving (4)
					> version: d/r/i/c/h/t/e
					TRYING: i
					> version: d/r/i/c/h/t/e
					TRYING: i
					> version: d/r/i/ch/t/e
					TRYING: i
					> version: d/r/i/ch/t/e
					TRYING: i
					RESULT:  ['i']
				ANALYSING: drikte
					resolving (2)
					> version: d/r/i/k/t/e
					TRYING: i
					> version: d/r/i/k/t/e
					TRYING: i
					RESULT:  ['i']
				ANALYSING: drist
					resolving (2)
					> version: d/r/i/s/t
					TRYING: i
					> version: d/r/i/s/t
					TRYING: i
					RESULT:  ['i']
				ANALYSING: driste
					resolving (2)
					> version: d/r/i/s/t/e
					TRYING: i
					> version: d/r/i/s/t/e
					TRYING: i
					RESULT:  ['i']
				ANALYSING: drith
					resolving (4)
					> version: d/r/i/t/h
					TRYING: i
					> version: d/r/i/t/h
					TRYING: i
					> version: d/r/i/th
					TRYING: i
					> version: d/r/i/th
					TRYING: i
					RESULT:  ['i']
				ANALYSING: drithe
					resolving (4)
					> version: d/r/i/t/h/e
					TRYING: i
					> version: d/r/i/t/h/e
					TRYING: i
					> version: d/r/i/th/e
					TRYING: i
					> version: d/r/i/th/e
					TRYING: i
					RESULT:  ['i']
				ANALYSING: drithte
					resolving (4)
					> version: d/r/i/t/h/t/e
					TRYING: i
					> version: d/r/i/t/h/t/e
					TRYING: i
					> version: d/r/i/th/t/e
					TRYING: i
					> version: d/r/i/th/t/e
					TRYING: i
					RESULT:  ['i']
				ANALYSING: dritt
					resolving (4)
					> version: d/r/i/t/t
					TRYING: i
					> version: d/r/i/t/t
					TRYING: i
					> version: d/r/i/tt
					TRYING: i
					> version: d/r/i/tt
					TRYING: i
					RESULT:  ['i']
				ANALYSING: dritte
					resolving (4)
					> version: d/r/i/t/t/e
					TRYING: i
					> version: d/r/i/t/t/e
					TRYING: i
					> version: d/r/i/tt/e
					TRYING: i
					> version: d/r/i/tt/e
					TRYING: i
					RESULT:  ['i']
				ANALYSING: driȝt
					resolving (2)
					> version: d/r/i/ȝ/t
					TRYING: i
					> version: d/r/i/ȝ/t
					TRYING: i
					RESULT:  ['i']
				ANALYSING: driȝte
					resolving (2)
					> version: d/r/i/ȝ/t/e
					TRYING: i
					> version: d/r/i/ȝ/t/e
					TRYING: i
					RESULT:  ['i']
				ANALYSING: driȝtte
					resolving (4)
					> version: d/r/i/ȝ/t/t/e
					TRYING: i
					> version: d/r/i/ȝ/t/t/e
					TRYING: i
					> version: d/r/i/ȝ/tt/e
					TRYING: i
					> version: d/r/i/ȝ/tt/e
					TRYING: i
					RESULT:  ['i']
				ANALYSING: dryht
					resolving (3)
					> version: d/r/y/h/t
					TRYING: y
					> version: d/r/y/h/t
					TRYING: y
					> version: d/r/yh/t
					TRYING: yh
					RESULT:  ['y']
				ANALYSING: dryhte
					resolving (3)
					> version: d/r/y/h/t/e
					TRYING: y
					> version: d/r/y/h/t/e
					TRYING: y
					> version: d/r/yh/t/e
					TRYING: yh
					RESULT:  ['y']
				ANALYSING: e
					resolving (4)
					> version: e
					> version: _/e
					> version: e/_
					> version: _/_/e
					TRYING: e
					RESULT:  ['e']
				ANALYSING: en
					resolving (2)
					> version: e/n
					> version: _/e/n
					TRYING: n
					RESULT:  ['_']
				adding dashed alternative: ['e', 'n', '_']
				adding dashed alternative: ['_', 'e', '_', 'n']
				e/n(VC)
_/e/n(AVC)
e/n/_(VCA)
_/e/_/n(AVAC)
				ANALYSING: in
					resolving (2)
					> version: i/n
					> version: i/n
					RESULT:  ['_']
				adding dashed alternative: ['i', 'n', '_']
				adding dashed alternative: ['i', 'n', '_']
				i/n(CC)
i/n(VC)
i/n/_(ACA)
i/n/_(ACA)
			___CCVCCC : 3___
				ANALYSING: dright
				adding littera based on matching pattern
				ANALYSING: drihðt
				adding littera based on matching pattern
				ANALYSING: drihht
				adding littera based on matching pattern
				ANALYSING: dricht
				adding littera based on matching pattern
				ANALYSING: dritht
				adding littera based on matching pattern
				ANALYSING: dreyte
					resolving (5)
					> version: d/r/e/y/t/e
					TRYING: y
					> version: d/r/e/y/t/e
					TRYING: y
					> version: d/r/ey/t/e
					TRYING: t
					>>> MULTIPLE RESOLVE OPTIONS: {'t', 'y'}
					> version: d/r/ey/t/e
					TRYING: t
					>>> MULTIPLE RESOLVE OPTIONS: {'t', 'y'}
					> version: d/r/ey/t/e
					TRYING: t
					>>> MULTIPLE RESOLVE OPTIONS: {'t', 'y'}
					RESULT:  ['t', 'y']
				ANALYSING: dric
					resolving (2)
					> version: d/r/i/c
					TRYING: c
					> version: d/r/i/c
					TRYING: c
					RESULT:  ['c']
				ANALYSING: drict
					resolving (2)
					> version: d/r/i/c/t
					TRYING: c
					> version: d/r/i/c/t
					TRYING: c
					RESULT:  ['c']
				ANALYSING: drigt
					resolving (2)
					> version: d/r/i/g/t
					TRYING: g
					> version: d/r/i/g/t
					TRYING: g
					RESULT:  ['g']
				ANALYSING: drih
					resolving (2)
					> version: d/r/i/h
					TRYING: h
					> version: d/r/i/h
					TRYING: h
					RESULT:  ['h']
				ANALYSING: driht
					resolving (2)
					> version: d/r/i/h/t
					TRYING: h
					> version: d/r/i/h/t
					TRYING: h
					RESULT:  ['h']
				ANALYSING: drihh
					resolving (4)
					> version: d/r/i/h/h
					TRYING: h
					> version: d/r/i/h/h
					TRYING: h
					> version: d/r/i/hh
					TRYING: hh
					>>> MULTIPLE RESOLVE OPTIONS: {'hh', 'h'}
					> version: d/r/i/hh
					TRYING: hh
					>>> MULTIPLE RESOLVE OPTIONS: {'hh', 'h'}
					RESULT:  ['hh', 'h']
				ANALYSING: drihte
					resolving (2)
					> version: d/r/i/h/t/e
					TRYING: h
					> version: d/r/i/h/t/e
					TRYING: h
					RESULT:  ['h']
				ANALYSING: drich
					resolving (4)
					> version: d/r/i/c/h
					TRYING: c
					> version: d/r/i/c/h
					TRYING: c
					> version: d/r/i/ch
					TRYING: ch
					>>> MULTIPLE RESOLVE OPTIONS: {'ch', 'c'}
					> version: d/r/i/ch
					TRYING: ch
					>>> MULTIPLE RESOLVE OPTIONS: {'ch', 'c'}
					RESULT:  ['ch', 'c']
				ANALYSING: drichte
					resolving (4)
					> version: d/r/i/c/h/t/e
					TRYING: c
					> version: d/r/i/c/h/t/e
					TRYING: c
					> version: d/r/i/ch/t/e
					TRYING: ch
					>>> MULTIPLE RESOLVE OPTIONS: {'ch', 'c'}
					> version: d/r/i/ch/t/e
					TRYING: ch
					>>> MULTIPLE RESOLVE OPTIONS: {'ch', 'c'}
					RESULT:  ['ch', 'c']
				ANALYSING: drikte
					resolving (2)
					> version: d/r/i/k/t/e
					TRYING: k
					> version: d/r/i/k/t/e
					TRYING: k
					RESULT:  ['k']
				ANALYSING: drist
					resolving (2)
					> version: d/r/i/s/t
					TRYING: s
					> version: d/r/i/s/t
					TRYING: s
					RESULT:  ['s']
				ANALYSING: driste
					resolving (2)
					> version: d/r/i/s/t/e
					TRYING: s
					> version: d/r/i/s/t/e
					TRYING: s
					RESULT:  ['s']
				ANALYSING: drith
					resolving (4)
					> version: d/r/i/t/h
					TRYING: t
					> version: d/r/i/t/h
					TRYING: t
					> version: d/r/i/th
					TRYING: th
					>>> MULTIPLE RESOLVE OPTIONS: {'t', 'th'}
					> version: d/r/i/th
					TRYING: th
					>>> MULTIPLE RESOLVE OPTIONS: {'t', 'th'}
					RESULT:  ['t', 'th']
				ANALYSING: drithe
					resolving (4)
					> version: d/r/i/t/h/e
					TRYING: t
					> version: d/r/i/t/h/e
					TRYING: t
					> version: d/r/i/th/e
					TRYING: th
					>>> MULTIPLE RESOLVE OPTIONS: {'t', 'th'}
					> version: d/r/i/th/e
					TRYING: th
					>>> MULTIPLE RESOLVE OPTIONS: {'t', 'th'}
					RESULT:  ['t', 'th']
				ANALYSING: drithte
					resolving (4)
					> version: d/r/i/t/h/t/e
					TRYING: t
					> version: d/r/i/t/h/t/e
					TRYING: t
					> version: d/r/i/th/t/e
					TRYING: th
					>>> MULTIPLE RESOLVE OPTIONS: {'t', 'th'}
					> version: d/r/i/th/t/e
					TRYING: th
					>>> MULTIPLE RESOLVE OPTIONS: {'t', 'th'}
					RESULT:  ['t', 'th']
				ANALYSING: dritt
					resolving (4)
					> version: d/r/i/t/t
					TRYING: t
					> version: d/r/i/t/t
					TRYING: t
					> version: d/r/i/tt
					TRYING: tt
					>>> MULTIPLE RESOLVE OPTIONS: {'tt', 't'}
					> version: d/r/i/tt
					TRYING: tt
					>>> MULTIPLE RESOLVE OPTIONS: {'tt', 't'}
					RESULT:  ['tt', 't']
				ANALYSING: dritte
					resolving (4)
					> version: d/r/i/t/t/e
					TRYING: t
					> version: d/r/i/t/t/e
					TRYING: t
					> version: d/r/i/tt/e
					TRYING: tt
					>>> MULTIPLE RESOLVE OPTIONS: {'tt', 't'}
					> version: d/r/i/tt/e
					TRYING: tt
					>>> MULTIPLE RESOLVE OPTIONS: {'tt', 't'}
					RESULT:  ['tt', 't']
				ANALYSING: driȝt
					resolving (2)
					> version: d/r/i/ȝ/t
					TRYING: ȝ
					> version: d/r/i/ȝ/t
					TRYING: ȝ
					RESULT:  ['ȝ']
				ANALYSING: driȝte
					resolving (2)
					> version: d/r/i/ȝ/t/e
					TRYING: ȝ
					> version: d/r/i/ȝ/t/e
					TRYING: ȝ
					RESULT:  ['ȝ']
				ANALYSING: driȝtte
					resolving (4)
					> version: d/r/i/ȝ/t/t/e
					TRYING: ȝ
					> version: d/r/i/ȝ/t/t/e
					TRYING: ȝ
					> version: d/r/i/ȝ/tt/e
					TRYING: ȝ
					> version: d/r/i/ȝ/tt/e
					TRYING: ȝ
					RESULT:  ['ȝ']
				ANALYSING: dryht
					resolving (3)
					> version: d/r/y/h/t
					TRYING: h
					> version: d/r/y/h/t
					TRYING: h
					> version: d/r/yh/t
					TRYING: t
					>>> MULTIPLE RESOLVE OPTIONS: {'t', 'h'}
					RESULT:  ['t', 'h']
				ANALYSING: dryhte
					resolving (3)
					> version: d/r/y/h/t/e
					TRYING: h
					> version: d/r/y/h/t/e
					TRYING: h
					> version: d/r/yh/t/e
					TRYING: t
					>>> MULTIPLE RESOLVE OPTIONS: {'t', 'h'}
					RESULT:  ['t', 'h']
				ANALYSING: e
					resolving (4)
					> version: e
					> version: _/e
					> version: e/_
					> version: _/_/e
					RESULT:  ['_']
				adding dashed alternative: ['e', '_']
				adding dashed alternative: ['_', 'e', '_']
				adding dashed alternative: ['e', '_', '_']
				adding dashed alternative: ['_', '_', 'e', '_']
				e(V)
_/e(AV)
e/_(VA)
_/_/e(AAV)
e/_(VA)
_/e/_(AVA)
e/_/_(VAA)
_/_/e/_(AAVA)
				ANALYSING: en
					resolving (4)
					> version: e/n
					> version: _/e/n
					> version: e/n/_
					> version: _/e/_/n
					TRYING: n
					RESULT:  ['n']
				ANALYSING: in
					resolving (4)
					> version: i/n
					> version: i/n
					> version: i/n/_
					> version: i/n/_
					RESULT:  ['_']
				adding dashed alternative: ['i', 'n', '_']
				adding dashed alternative: ['i', 'n', '_']
				adding dashed alternative: ['i', 'n', '_', '_']
				adding dashed alternative: ['i', 'n', '_', '_']
				i/n(CC)
i/n(VC)
i/n/_(ACA)
i/n/_(ACA)
i/n/_(ACA)
i/n/_(ACA)
i/n/_/_(ACAA)
i/n/_/_(ACAA)
			___CCVCCC : 4___
				ANALYSING: dright
				adding littera based on matching pattern
				ANALYSING: drihðt
				adding littera based on matching pattern
				ANALYSING: drihht
				adding littera based on matching pattern
				ANALYSING: dricht
				adding littera based on matching pattern
				ANALYSING: dritht
				adding littera based on matching pattern
				ANALYSING: dreyte
					resolving (5)
					> version: d/r/e/y/t/e
					TRYING: t
					> version: d/r/e/y/t/e
					TRYING: t
					> version: d/r/ey/t/e
					TRYING: e
					> version: d/r/ey/t/e
					TRYING: e
					> version: d/r/ey/t/e
					TRYING: e
					RESULT:  ['t']
				ANALYSING: dric
					resolving (2)
					> version: d/r/i/c
					> version: d/r/i/c
					RESULT:  ['_']
				adding dashed alternative: ['d', 'r', 'i', 'c', '_']
				adding dashed alternative: ['d', 'r', 'i', 'c', '_']
				d/r/i/c(CCCC)
d/r/i/c(CCVC)
d/r/i/c/_(CCACA)
d/r/i/c/_(CCACA)
				ANALYSING: drict
					resolving (2)
					> version: d/r/i/c/t
					TRYING: t
					> version: d/r/i/c/t
					TRYING: t
					RESULT:  ['t']
				ANALYSING: drigt
					resolving (2)
					> version: d/r/i/g/t
					TRYING: t
					> version: d/r/i/g/t
					TRYING: t
					RESULT:  ['t']
				ANALYSING: drih
					resolving (2)
					> version: d/r/i/h
					> version: d/r/i/h
					RESULT:  ['_']
				adding dashed alternative: ['d', 'r', 'i', 'h', '_']
				adding dashed alternative: ['d', 'r', 'i', 'h', '_']
				d/r/i/h(CCCC)
d/r/i/h(CCVC)
d/r/i/h/_(CCACA)
d/r/i/h/_(CCACA)
				ANALYSING: driht
					resolving (2)
					> version: d/r/i/h/t
					TRYING: t
					> version: d/r/i/h/t
					TRYING: t
					RESULT:  ['t']
				ANALYSING: drihh
					resolving (4)
					> version: d/r/i/h/h
					TRYING: h
					> version: d/r/i/h/h
					TRYING: h
					> version: d/r/i/hh
					> version: d/r/i/hh
					RESULT:  ['h']
				ANALYSING: drihte
					resolving (2)
					> version: d/r/i/h/t/e
					TRYING: t
					> version: d/r/i/h/t/e
					TRYING: t
					RESULT:  ['t']
				ANALYSING: drich
					resolving (4)
					> version: d/r/i/c/h
					TRYING: h
					> version: d/r/i/c/h
					TRYING: h
					> version: d/r/i/ch
					> version: d/r/i/ch
					RESULT:  ['h']
				ANALYSING: drichte
					resolving (4)
					> version: d/r/i/c/h/t/e
					TRYING: h
					> version: d/r/i/c/h/t/e
					TRYING: h
					> version: d/r/i/ch/t/e
					TRYING: t
					>>> MULTIPLE RESOLVE OPTIONS: {'t', 'h'}
					> version: d/r/i/ch/t/e
					TRYING: t
					>>> MULTIPLE RESOLVE OPTIONS: {'t', 'h'}
					RESULT:  ['t', 'h']
				ANALYSING: drikte
					resolving (2)
					> version: d/r/i/k/t/e
					TRYING: t
					> version: d/r/i/k/t/e
					TRYING: t
					RESULT:  ['t']
				ANALYSING: drist
					resolving (2)
					> version: d/r/i/s/t
					TRYING: t
					> version: d/r/i/s/t
					TRYING: t
					RESULT:  ['t']
				ANALYSING: driste
					resolving (2)
					> version: d/r/i/s/t/e
					TRYING: t
					> version: d/r/i/s/t/e
					TRYING: t
					RESULT:  ['t']
				ANALYSING: drith
					resolving (4)
					> version: d/r/i/t/h
					TRYING: h
					> version: d/r/i/t/h
					TRYING: h
					> version: d/r/i/th
					> version: d/r/i/th
					RESULT:  ['h']
				ANALYSING: drithe
					resolving (4)
					> version: d/r/i/t/h/e
					TRYING: h
					> version: d/r/i/t/h/e
					TRYING: h
					> version: d/r/i/th/e
					TRYING: e
					> version: d/r/i/th/e
					TRYING: e
					RESULT:  ['h']
				ANALYSING: drithte
					resolving (4)
					> version: d/r/i/t/h/t/e
					TRYING: h
					> version: d/r/i/t/h/t/e
					TRYING: h
					> version: d/r/i/th/t/e
					TRYING: t
					>>> MULTIPLE RESOLVE OPTIONS: {'t', 'h'}
					> version: d/r/i/th/t/e
					TRYING: t
					>>> MULTIPLE RESOLVE OPTIONS: {'t', 'h'}
					RESULT:  ['t', 'h']
				ANALYSING: dritt
					resolving (4)
					> version: d/r/i/t/t
					TRYING: t
					> version: d/r/i/t/t
					TRYING: t
					> version: d/r/i/tt
					> version: d/r/i/tt
					RESULT:  ['t']
				ANALYSING: dritte
					resolving (4)
					> version: d/r/i/t/t/e
					TRYING: t
					> version: d/r/i/t/t/e
					TRYING: t
					> version: d/r/i/tt/e
					TRYING: e
					> version: d/r/i/tt/e
					TRYING: e
					RESULT:  ['t']
				ANALYSING: driȝt
					resolving (2)
					> version: d/r/i/ȝ/t
					TRYING: t
					> version: d/r/i/ȝ/t
					TRYING: t
					RESULT:  ['t']
				ANALYSING: driȝte
					resolving (2)
					> version: d/r/i/ȝ/t/e
					TRYING: t
					> version: d/r/i/ȝ/t/e
					TRYING: t
					RESULT:  ['t']
				ANALYSING: driȝtte
					resolving (4)
					> version: d/r/i/ȝ/t/t/e
					TRYING: t
					> version: d/r/i/ȝ/t/t/e
					TRYING: t
					> version: d/r/i/ȝ/tt/e
					TRYING: tt
					>>> MULTIPLE RESOLVE OPTIONS: {'tt', 't'}
					> version: d/r/i/ȝ/tt/e
					TRYING: tt
					>>> MULTIPLE RESOLVE OPTIONS: {'tt', 't'}
					RESULT:  ['tt', 't']
				ANALYSING: dryht
					resolving (3)
					> version: d/r/y/h/t
					TRYING: t
					> version: d/r/y/h/t
					TRYING: t
					> version: d/r/yh/t
					RESULT:  ['t']
				ANALYSING: dryhte
					resolving (3)
					> version: d/r/y/h/t/e
					TRYING: t
					> version: d/r/y/h/t/e
					TRYING: t
					> version: d/r/yh/t/e
					TRYING: e
					RESULT:  ['t']
				ANALYSING: e
					resolving (8)
					> version: e
					> version: _/e
					> version: e/_
					> version: _/_/e
					> version: e/_
					> version: _/e/_
					> version: e/_/_
					> version: _/_/e/_
					RESULT:  ['_']
				adding dashed alternative: ['e', '_']
				adding dashed alternative: ['_', 'e', '_']
				adding dashed alternative: ['e', '_', '_']
				adding dashed alternative: ['_', '_', 'e', '_']
				adding dashed alternative: ['e', '_', '_']
				adding dashed alternative: ['_', 'e', '_', '_']
				adding dashed alternative: ['e', '_', '_', '_']
				adding dashed alternative: ['_', '_', 'e', '_', '_']
				e(V)
_/e(AV)
e/_(VA)
_/_/e(AAV)
e/_(VA)
_/e/_(AVA)
e/_/_(VAA)
_/_/e/_(AAVA)
e/_(VA)
_/e/_(AVA)
e/_/_(VAA)
_/_/e/_(AAVA)
e/_/_(VAA)
_/e/_/_(AVAA)
e/_/_/_(VAAA)
_/_/e/_/_(AAVAA)
				ANALYSING: en
					resolving (4)
					> version: e/n
					> version: _/e/n
					> version: e/n/_
					> version: _/e/_/n
					RESULT:  ['_']
				adding dashed alternative: ['e', 'n', '_']
				adding dashed alternative: ['_', 'e', 'n', '_']
				adding dashed alternative: ['e', 'n', '_', '_']
				adding dashed alternative: ['_', 'e', '_', 'n', '_']
				e/n(VC)
_/e/n(AVC)
e/n/_(VCA)
_/e/_/n(AVAC)
e/n/_(VCA)
_/e/n/_(AVCA)
e/n/_/_(VCAA)
_/e/_/n/_(AVACA)
				ANALYSING: in
					resolving (8)
					> version: i/n
					> version: i/n
					> version: i/n/_
					> version: i/n/_
					> version: i/n/_
					> version: i/n/_
					> version: i/n/_/_
					> version: i/n/_/_
					RESULT:  ['_']
				adding dashed alternative: ['i', 'n', '_']
				adding dashed alternative: ['i', 'n', '_']
				adding dashed alternative: ['i', 'n', '_', '_']
				adding dashed alternative: ['i', 'n', '_', '_']
				adding dashed alternative: ['i', 'n', '_', '_']
				adding dashed alternative: ['i', 'n', '_', '_']
				adding dashed alternative: ['i', 'n', '_', '_', '_']
				adding dashed alternative: ['i', 'n', '_', '_', '_']
				i/n(CC)
i/n(VC)
i/n/_(ACA)
i/n/_(ACA)
i/n/_(ACA)
i/n/_(ACA)
i/n/_/_(ACAA)
i/n/_/_(ACAA)
i/n/_(ACA)
i/n/_(ACA)
i/n/_/_(ACAA)
i/n/_/_(ACAA)
i/n/_/_(ACAA)
i/n/_/_(ACAA)
i/n/_/_/_(ACAAA)
i/n/_/_/_(ACAAA)
			___CCVCCC : 5___
				ANALYSING: dright
				adding littera based on matching pattern
				ANALYSING: drihðt
				adding littera based on matching pattern
				ANALYSING: drihht
				adding littera based on matching pattern
				ANALYSING: dricht
				adding littera based on matching pattern
				ANALYSING: dritht
				adding littera based on matching pattern
				ANALYSING: dreyte
					resolving (5)
					> version: d/r/e/y/t/e
					TRYING: e
					> version: d/r/e/y/t/e
					TRYING: e
					> version: d/r/ey/t/e
					> version: d/r/ey/t/e
					> version: d/r/ey/t/e
					RESULT:  ['_']
				adding dashed alternative: ['d', 'r', 'e', 'y', 't', '_', 'e']
				adding dashed alternative: ['d', 'r', 'e', 'y', 't', '_', 'e']
				adding dashed alternative: ['d', 'r', 'ey', 't', 'e', '_']
				adding dashed alternative: ['d', 'r', 'ey', 't', 'e', '_']
				adding dashed alternative: ['d', 'r', 'ey', 't', 'e', '_']
				d/r/e/y/t/e(CCVCCV)
d/r/e/y/t/e(CCVVCV)
d/r/ey/t/e(CCVCV)
d/r/ey/t/e(CCVCV)
d/r/ey/t/e(CCVCV)
d/r/e/y/t/_/e(CCVACAV)
d/r/e/y/t/_/e(CCVACAV)
d/r/ey/t/e/_(CCVCVA)
d/r/ey/t/e/_(CCVCVA)
d/r/ey/t/e/_(CCVCVA)
				version split: ['d', 'r', 'e', 'y', 't', 'e']
				{'string': 'd/r/e/y/t/e', 'rgx': '((d))/((r))/((e)|(ey))/((t)|(y))/((t))/((_))$'}
				_____REMOVING________['d', 'r', 'e', 'y', 't', 'e']
				version split: ['d', 'r', 'e', 'y', 't', 'e']
				{'string': 'd/r/e/y/t/e', 'rgx': '((d))/((r))/((e)|(ey))/((t)|(y))/((t))/((_))$'}
				_____REMOVING________['d', 'r', 'e', 'y', 't', 'e']
				version split: ['d', 'r', 'ey', 't', 'e']
				{'string': 'd/r/ey/t/e', 'rgx': '((d))/((r))/((e)|(ey))/((t)|(y))/((t))/((_))$'}
				_____REMOVING________['d', 'r', 'ey', 't', 'e']
				version split: ['d', 'r', 'ey', 't', 'e']
				{'string': 'd/r/ey/t/e', 'rgx': '((d))/((r))/((e)|(ey))/((t)|(y))/((t))/((_))$'}
				_____REMOVING________['d', 'r', 'ey', 't', 'e']
				version split: ['d', 'r', 'ey', 't', 'e']
				{'string': 'd/r/ey/t/e', 'rgx': '((d))/((r))/((e)|(ey))/((t)|(y))/((t))/((_))$'}
				_____REMOVING________['d', 'r', 'ey', 't', 'e']
				version split: ['d', 'r', 'e', 'y', 't', '_', 'e']
				{'string': 'd/r/e/y/t/_/e', 'rgx': '((d))/((r))/((e)|(ey))/((t)|(y))/((t))/((_))$'}
				_____REMOVING________['d', 'r', 'e', 'y', 't', '_', 'e']
				version split: ['d', 'r', 'e', 'y', 't', '_', 'e']
				{'string': 'd/r/e/y/t/_/e', 'rgx': '((d))/((r))/((e)|(ey))/((t)|(y))/((t))/((_))$'}
				_____REMOVING________['d', 'r', 'e', 'y', 't', '_', 'e']
				version split: ['d', 'r', 'ey', 't', 'e', '_']
				{'string': 'd/r/ey/t/e/_', 'rgx': '((d))/((r))/((e)|(ey))/((t)|(y))/((t))/((_))$'}
				_____REMOVING________['d', 'r', 'ey', 't', 'e', '_']
				version split: ['d', 'r', 'ey', 't', 'e', '_']
				{'string': 'd/r/ey/t/e/_', 'rgx': '((d))/((r))/((e)|(ey))/((t)|(y))/((t))/((_))$'}
				_____REMOVING________['d', 'r', 'ey', 't', 'e', '_']
				version split: ['d', 'r', 'ey', 't', 'e', '_']
				{'string': 'd/r/ey/t/e/_', 'rgx': '((d))/((r))/((e)|(ey))/((t)|(y))/((t))/((_))$'}
				_____REMOVING________['d', 'r', 'ey', 't', 'e', '_']
				ANALYSING: dric
					resolving (4)
					> version: d/r/i/c
					> version: d/r/i/c
					> version: d/r/i/c/_
					> version: d/r/i/c/_
					RESULT:  ['_']
				adding dashed alternative: ['d', 'r', 'i', 'c', '_']
				adding dashed alternative: ['d', 'r', 'i', 'c', '_']
				adding dashed alternative: ['d', 'r', 'i', 'c', '_', '_']
				adding dashed alternative: ['d', 'r', 'i', 'c', '_', '_']
				d/r/i/c(CCCC)
d/r/i/c(CCVC)
d/r/i/c/_(CCACA)
d/r/i/c/_(CCACA)
d/r/i/c/_(CCACA)
d/r/i/c/_(CCACA)
d/r/i/c/_/_(CCACAA)
d/r/i/c/_/_(CCACAA)
				version split: ['d', 'r', 'i', 'c']
				{'string': 'd/r/i/c', 'rgx': '((d))/((r))/((i))/((c))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'c']
				version split: ['d', 'r', 'i', 'c']
				{'string': 'd/r/i/c', 'rgx': '((d))/((r))/((i))/((c))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'c']
				version split: ['d', 'r', 'i', 'c', '_']
				{'string': 'd/r/i/c/_', 'rgx': '((d))/((r))/((i))/((c))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'c', '_']
				version split: ['d', 'r', 'i', 'c', '_']
				{'string': 'd/r/i/c/_', 'rgx': '((d))/((r))/((i))/((c))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'c', '_']
				version split: ['d', 'r', 'i', 'c', '_']
				{'string': 'd/r/i/c/_', 'rgx': '((d))/((r))/((i))/((c))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'c', '_']
				version split: ['d', 'r', 'i', 'c', '_']
				{'string': 'd/r/i/c/_', 'rgx': '((d))/((r))/((i))/((c))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'c', '_']
				version split: ['d', 'r', 'i', 'c', '_', '_']
				{'string': 'd/r/i/c/_/_', 'rgx': '((d))/((r))/((i))/((c))/((_))/((_))$'}
				version split: ['d', 'r', 'i', 'c', '_', '_']
				{'string': 'd/r/i/c/_/_', 'rgx': '((d))/((r))/((i))/((c))/((_))/((_))$'}
				ANALYSING: drict
					resolving (2)
					> version: d/r/i/c/t
					> version: d/r/i/c/t
					RESULT:  ['_']
				adding dashed alternative: ['d', 'r', 'i', 'c', 't', '_']
				adding dashed alternative: ['d', 'r', 'i', 'c', 't', '_']
				d/r/i/c/t(CCCCC)
d/r/i/c/t(CCVCC)
d/r/i/c/t/_(CCACCA)
d/r/i/c/t/_(CCACCA)
				version split: ['d', 'r', 'i', 'c', 't']
				{'string': 'd/r/i/c/t', 'rgx': '((d))/((r))/((i))/((c))/((t))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'c', 't']
				version split: ['d', 'r', 'i', 'c', 't']
				{'string': 'd/r/i/c/t', 'rgx': '((d))/((r))/((i))/((c))/((t))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'c', 't']
				version split: ['d', 'r', 'i', 'c', 't', '_']
				{'string': 'd/r/i/c/t/_', 'rgx': '((d))/((r))/((i))/((c))/((t))/((_))$'}
				version split: ['d', 'r', 'i', 'c', 't', '_']
				{'string': 'd/r/i/c/t/_', 'rgx': '((d))/((r))/((i))/((c))/((t))/((_))$'}
				ANALYSING: drigt
					resolving (2)
					> version: d/r/i/g/t
					> version: d/r/i/g/t
					RESULT:  ['_']
				adding dashed alternative: ['d', 'r', 'i', 'g', 't', '_']
				adding dashed alternative: ['d', 'r', 'i', 'g', 't', '_']
				d/r/i/g/t(CCCCC)
d/r/i/g/t(CCVCC)
d/r/i/g/t/_(CCACCA)
d/r/i/g/t/_(CCACCA)
				version split: ['d', 'r', 'i', 'g', 't']
				{'string': 'd/r/i/g/t', 'rgx': '((d))/((r))/((i))/((g))/((t))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'g', 't']
				version split: ['d', 'r', 'i', 'g', 't']
				{'string': 'd/r/i/g/t', 'rgx': '((d))/((r))/((i))/((g))/((t))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'g', 't']
				version split: ['d', 'r', 'i', 'g', 't', '_']
				{'string': 'd/r/i/g/t/_', 'rgx': '((d))/((r))/((i))/((g))/((t))/((_))$'}
				version split: ['d', 'r', 'i', 'g', 't', '_']
				{'string': 'd/r/i/g/t/_', 'rgx': '((d))/((r))/((i))/((g))/((t))/((_))$'}
				ANALYSING: drih
					resolving (4)
					> version: d/r/i/h
					> version: d/r/i/h
					> version: d/r/i/h/_
					> version: d/r/i/h/_
					RESULT:  ['_']
				adding dashed alternative: ['d', 'r', 'i', 'h', '_']
				adding dashed alternative: ['d', 'r', 'i', 'h', '_']
				adding dashed alternative: ['d', 'r', 'i', 'h', '_', '_']
				adding dashed alternative: ['d', 'r', 'i', 'h', '_', '_']
				d/r/i/h(CCCC)
d/r/i/h(CCVC)
d/r/i/h/_(CCACA)
d/r/i/h/_(CCACA)
d/r/i/h/_(CCACA)
d/r/i/h/_(CCACA)
d/r/i/h/_/_(CCACAA)
d/r/i/h/_/_(CCACAA)
				version split: ['d', 'r', 'i', 'h']
				{'string': 'd/r/i/h', 'rgx': '((d))/((r))/((i))/((h))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'h']
				version split: ['d', 'r', 'i', 'h']
				{'string': 'd/r/i/h', 'rgx': '((d))/((r))/((i))/((h))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'h']
				version split: ['d', 'r', 'i', 'h', '_']
				{'string': 'd/r/i/h/_', 'rgx': '((d))/((r))/((i))/((h))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'h', '_']
				version split: ['d', 'r', 'i', 'h', '_']
				{'string': 'd/r/i/h/_', 'rgx': '((d))/((r))/((i))/((h))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'h', '_']
				version split: ['d', 'r', 'i', 'h', '_']
				{'string': 'd/r/i/h/_', 'rgx': '((d))/((r))/((i))/((h))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'h', '_']
				version split: ['d', 'r', 'i', 'h', '_']
				{'string': 'd/r/i/h/_', 'rgx': '((d))/((r))/((i))/((h))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'h', '_']
				version split: ['d', 'r', 'i', 'h', '_', '_']
				{'string': 'd/r/i/h/_/_', 'rgx': '((d))/((r))/((i))/((h))/((_))/((_))$'}
				version split: ['d', 'r', 'i', 'h', '_', '_']
				{'string': 'd/r/i/h/_/_', 'rgx': '((d))/((r))/((i))/((h))/((_))/((_))$'}
				ANALYSING: driht
					resolving (2)
					> version: d/r/i/h/t
					> version: d/r/i/h/t
					RESULT:  ['_']
				adding dashed alternative: ['d', 'r', 'i', 'h', 't', '_']
				adding dashed alternative: ['d', 'r', 'i', 'h', 't', '_']
				d/r/i/h/t(CCCCC)
d/r/i/h/t(CCVCC)
d/r/i/h/t/_(CCACCA)
d/r/i/h/t/_(CCACCA)
				version split: ['d', 'r', 'i', 'h', 't']
				{'string': 'd/r/i/h/t', 'rgx': '((d))/((r))/((i))/((h))/((t))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'h', 't']
				version split: ['d', 'r', 'i', 'h', 't']
				{'string': 'd/r/i/h/t', 'rgx': '((d))/((r))/((i))/((h))/((t))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'h', 't']
				version split: ['d', 'r', 'i', 'h', 't', '_']
				{'string': 'd/r/i/h/t/_', 'rgx': '((d))/((r))/((i))/((h))/((t))/((_))$'}
				version split: ['d', 'r', 'i', 'h', 't', '_']
				{'string': 'd/r/i/h/t/_', 'rgx': '((d))/((r))/((i))/((h))/((t))/((_))$'}
				ANALYSING: drihh
					resolving (4)
					> version: d/r/i/h/h
					> version: d/r/i/h/h
					> version: d/r/i/hh
					> version: d/r/i/hh
					RESULT:  ['_']
				adding dashed alternative: ['d', 'r', 'i', 'h', 'h', '_']
				adding dashed alternative: ['d', 'r', 'i', 'h', 'h', '_']
				adding dashed alternative: ['d', 'r', 'i', 'hh', '_']
				adding dashed alternative: ['d', 'r', 'i', 'hh', '_']
				d/r/i/h/h(CCCCC)
d/r/i/h/h(CCVCC)
d/r/i/hh(CCCC)
d/r/i/hh(CCVC)
d/r/i/h/h/_(CCACCA)
d/r/i/h/h/_(CCACCA)
d/r/i/hh/_(CCACA)
d/r/i/hh/_(CCACA)
				version split: ['d', 'r', 'i', 'h', 'h']
				{'string': 'd/r/i/h/h', 'rgx': '((d))/((r))/((i))/((hh)|(h))/((h))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'h', 'h']
				version split: ['d', 'r', 'i', 'h', 'h']
				{'string': 'd/r/i/h/h', 'rgx': '((d))/((r))/((i))/((hh)|(h))/((h))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'h', 'h']
				version split: ['d', 'r', 'i', 'hh']
				{'string': 'd/r/i/hh', 'rgx': '((d))/((r))/((i))/((hh)|(h))/((h))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'hh']
				version split: ['d', 'r', 'i', 'hh']
				{'string': 'd/r/i/hh', 'rgx': '((d))/((r))/((i))/((hh)|(h))/((h))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'hh']
				version split: ['d', 'r', 'i', 'h', 'h', '_']
				{'string': 'd/r/i/h/h/_', 'rgx': '((d))/((r))/((i))/((hh)|(h))/((h))/((_))$'}
				version split: ['d', 'r', 'i', 'h', 'h', '_']
				{'string': 'd/r/i/h/h/_', 'rgx': '((d))/((r))/((i))/((hh)|(h))/((h))/((_))$'}
				version split: ['d', 'r', 'i', 'hh', '_']
				{'string': 'd/r/i/hh/_', 'rgx': '((d))/((r))/((i))/((hh)|(h))/((h))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'hh', '_']
				version split: ['d', 'r', 'i', 'hh', '_']
				{'string': 'd/r/i/hh/_', 'rgx': '((d))/((r))/((i))/((hh)|(h))/((h))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'hh', '_']
				ANALYSING: drihte
					resolving (2)
					> version: d/r/i/h/t/e
					TRYING: e
					> version: d/r/i/h/t/e
					TRYING: e
					RESULT:  ['_']
				adding dashed alternative: ['d', 'r', 'i', 'h', 't', '_', 'e']
				adding dashed alternative: ['d', 'r', 'i', 'h', 't', '_', 'e']
				d/r/i/h/t/e(CCCCCV)
d/r/i/h/t/e(CCVCCV)
d/r/i/h/t/_/e(CCACCAV)
d/r/i/h/t/_/e(CCACCAV)
				version split: ['d', 'r', 'i', 'h', 't', 'e']
				{'string': 'd/r/i/h/t/e', 'rgx': '((d))/((r))/((i))/((h))/((t))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'h', 't', 'e']
				version split: ['d', 'r', 'i', 'h', 't', 'e']
				{'string': 'd/r/i/h/t/e', 'rgx': '((d))/((r))/((i))/((h))/((t))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'h', 't', 'e']
				version split: ['d', 'r', 'i', 'h', 't', '_', 'e']
				{'string': 'd/r/i/h/t/_/e', 'rgx': '((d))/((r))/((i))/((h))/((t))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'h', 't', '_', 'e']
				version split: ['d', 'r', 'i', 'h', 't', '_', 'e']
				{'string': 'd/r/i/h/t/_/e', 'rgx': '((d))/((r))/((i))/((h))/((t))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'h', 't', '_', 'e']
				ANALYSING: drich
					resolving (4)
					> version: d/r/i/c/h
					> version: d/r/i/c/h
					> version: d/r/i/ch
					> version: d/r/i/ch
					RESULT:  ['_']
				adding dashed alternative: ['d', 'r', 'i', 'c', 'h', '_']
				adding dashed alternative: ['d', 'r', 'i', 'c', 'h', '_']
				adding dashed alternative: ['d', 'r', 'i', 'ch', '_']
				adding dashed alternative: ['d', 'r', 'i', 'ch', '_']
				d/r/i/c/h(CCCCC)
d/r/i/c/h(CCVCC)
d/r/i/ch(CCCC)
d/r/i/ch(CCVC)
d/r/i/c/h/_(CCACCA)
d/r/i/c/h/_(CCACCA)
d/r/i/ch/_(CCACA)
d/r/i/ch/_(CCACA)
				version split: ['d', 'r', 'i', 'c', 'h']
				{'string': 'd/r/i/c/h', 'rgx': '((d))/((r))/((i))/((ch)|(c))/((h))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'c', 'h']
				version split: ['d', 'r', 'i', 'c', 'h']
				{'string': 'd/r/i/c/h', 'rgx': '((d))/((r))/((i))/((ch)|(c))/((h))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'c', 'h']
				version split: ['d', 'r', 'i', 'ch']
				{'string': 'd/r/i/ch', 'rgx': '((d))/((r))/((i))/((ch)|(c))/((h))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'ch']
				version split: ['d', 'r', 'i', 'ch']
				{'string': 'd/r/i/ch', 'rgx': '((d))/((r))/((i))/((ch)|(c))/((h))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'ch']
				version split: ['d', 'r', 'i', 'c', 'h', '_']
				{'string': 'd/r/i/c/h/_', 'rgx': '((d))/((r))/((i))/((ch)|(c))/((h))/((_))$'}
				version split: ['d', 'r', 'i', 'c', 'h', '_']
				{'string': 'd/r/i/c/h/_', 'rgx': '((d))/((r))/((i))/((ch)|(c))/((h))/((_))$'}
				version split: ['d', 'r', 'i', 'ch', '_']
				{'string': 'd/r/i/ch/_', 'rgx': '((d))/((r))/((i))/((ch)|(c))/((h))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'ch', '_']
				version split: ['d', 'r', 'i', 'ch', '_']
				{'string': 'd/r/i/ch/_', 'rgx': '((d))/((r))/((i))/((ch)|(c))/((h))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'ch', '_']
				ANALYSING: drichte
					resolving (4)
					> version: d/r/i/c/h/t/e
					TRYING: t
					> version: d/r/i/c/h/t/e
					TRYING: t
					> version: d/r/i/ch/t/e
					TRYING: e
					> version: d/r/i/ch/t/e
					TRYING: e
					RESULT:  ['t']
				version split: ['d', 'r', 'i', 'c', 'h', 't', 'e']
				{'string': 'd/r/i/c/h/t/e', 'rgx': '((d))/((r))/((i))/((ch)|(c))/((t)|(h))/((t))$'}
				_____REMOVING________['d', 'r', 'i', 'c', 'h', 't', 'e']
				version split: ['d', 'r', 'i', 'c', 'h', 't', 'e']
				{'string': 'd/r/i/c/h/t/e', 'rgx': '((d))/((r))/((i))/((ch)|(c))/((t)|(h))/((t))$'}
				_____REMOVING________['d', 'r', 'i', 'c', 'h', 't', 'e']
				version split: ['d', 'r', 'i', 'ch', 't', 'e']
				{'string': 'd/r/i/ch/t/e', 'rgx': '((d))/((r))/((i))/((ch)|(c))/((t)|(h))/((t))$'}
				_____REMOVING________['d', 'r', 'i', 'ch', 't', 'e']
				version split: ['d', 'r', 'i', 'ch', 't', 'e']
				{'string': 'd/r/i/ch/t/e', 'rgx': '((d))/((r))/((i))/((ch)|(c))/((t)|(h))/((t))$'}
				_____REMOVING________['d', 'r', 'i', 'ch', 't', 'e']
				ANALYSING: drikte
					resolving (2)
					> version: d/r/i/k/t/e
					TRYING: e
					> version: d/r/i/k/t/e
					TRYING: e
					RESULT:  ['_']
				adding dashed alternative: ['d', 'r', 'i', 'k', 't', '_', 'e']
				adding dashed alternative: ['d', 'r', 'i', 'k', 't', '_', 'e']
				d/r/i/k/t/e(CCCCCV)
d/r/i/k/t/e(CCVCCV)
d/r/i/k/t/_/e(CCACCAV)
d/r/i/k/t/_/e(CCACCAV)
				version split: ['d', 'r', 'i', 'k', 't', 'e']
				{'string': 'd/r/i/k/t/e', 'rgx': '((d))/((r))/((i))/((k))/((t))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'k', 't', 'e']
				version split: ['d', 'r', 'i', 'k', 't', 'e']
				{'string': 'd/r/i/k/t/e', 'rgx': '((d))/((r))/((i))/((k))/((t))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'k', 't', 'e']
				version split: ['d', 'r', 'i', 'k', 't', '_', 'e']
				{'string': 'd/r/i/k/t/_/e', 'rgx': '((d))/((r))/((i))/((k))/((t))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'k', 't', '_', 'e']
				version split: ['d', 'r', 'i', 'k', 't', '_', 'e']
				{'string': 'd/r/i/k/t/_/e', 'rgx': '((d))/((r))/((i))/((k))/((t))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'k', 't', '_', 'e']
				ANALYSING: drist
					resolving (2)
					> version: d/r/i/s/t
					> version: d/r/i/s/t
					RESULT:  ['_']
				adding dashed alternative: ['d', 'r', 'i', 's', 't', '_']
				adding dashed alternative: ['d', 'r', 'i', 's', 't', '_']
				d/r/i/s/t(CCCCC)
d/r/i/s/t(CCVCC)
d/r/i/s/t/_(CCACCA)
d/r/i/s/t/_(CCACCA)
				version split: ['d', 'r', 'i', 's', 't']
				{'string': 'd/r/i/s/t', 'rgx': '((d))/((r))/((i))/((s))/((t))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 's', 't']
				version split: ['d', 'r', 'i', 's', 't']
				{'string': 'd/r/i/s/t', 'rgx': '((d))/((r))/((i))/((s))/((t))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 's', 't']
				version split: ['d', 'r', 'i', 's', 't', '_']
				{'string': 'd/r/i/s/t/_', 'rgx': '((d))/((r))/((i))/((s))/((t))/((_))$'}
				version split: ['d', 'r', 'i', 's', 't', '_']
				{'string': 'd/r/i/s/t/_', 'rgx': '((d))/((r))/((i))/((s))/((t))/((_))$'}
				ANALYSING: driste
					resolving (2)
					> version: d/r/i/s/t/e
					TRYING: e
					> version: d/r/i/s/t/e
					TRYING: e
					RESULT:  ['_']
				adding dashed alternative: ['d', 'r', 'i', 's', 't', '_', 'e']
				adding dashed alternative: ['d', 'r', 'i', 's', 't', '_', 'e']
				d/r/i/s/t/e(CCCCCV)
d/r/i/s/t/e(CCVCCV)
d/r/i/s/t/_/e(CCACCAV)
d/r/i/s/t/_/e(CCACCAV)
				version split: ['d', 'r', 'i', 's', 't', 'e']
				{'string': 'd/r/i/s/t/e', 'rgx': '((d))/((r))/((i))/((s))/((t))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 's', 't', 'e']
				version split: ['d', 'r', 'i', 's', 't', 'e']
				{'string': 'd/r/i/s/t/e', 'rgx': '((d))/((r))/((i))/((s))/((t))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 's', 't', 'e']
				version split: ['d', 'r', 'i', 's', 't', '_', 'e']
				{'string': 'd/r/i/s/t/_/e', 'rgx': '((d))/((r))/((i))/((s))/((t))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 's', 't', '_', 'e']
				version split: ['d', 'r', 'i', 's', 't', '_', 'e']
				{'string': 'd/r/i/s/t/_/e', 'rgx': '((d))/((r))/((i))/((s))/((t))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 's', 't', '_', 'e']
				ANALYSING: drith
					resolving (4)
					> version: d/r/i/t/h
					> version: d/r/i/t/h
					> version: d/r/i/th
					> version: d/r/i/th
					RESULT:  ['_']
				adding dashed alternative: ['d', 'r', 'i', 't', 'h', '_']
				adding dashed alternative: ['d', 'r', 'i', 't', 'h', '_']
				adding dashed alternative: ['d', 'r', 'i', 'th', '_']
				adding dashed alternative: ['d', 'r', 'i', 'th', '_']
				d/r/i/t/h(CCCCC)
d/r/i/t/h(CCVCC)
d/r/i/th(CCCC)
d/r/i/th(CCVC)
d/r/i/t/h/_(CCACCA)
d/r/i/t/h/_(CCACCA)
d/r/i/th/_(CCACA)
d/r/i/th/_(CCACA)
				version split: ['d', 'r', 'i', 't', 'h']
				{'string': 'd/r/i/t/h', 'rgx': '((d))/((r))/((i))/((t)|(th))/((h))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 't', 'h']
				version split: ['d', 'r', 'i', 't', 'h']
				{'string': 'd/r/i/t/h', 'rgx': '((d))/((r))/((i))/((t)|(th))/((h))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 't', 'h']
				version split: ['d', 'r', 'i', 'th']
				{'string': 'd/r/i/th', 'rgx': '((d))/((r))/((i))/((t)|(th))/((h))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'th']
				version split: ['d', 'r', 'i', 'th']
				{'string': 'd/r/i/th', 'rgx': '((d))/((r))/((i))/((t)|(th))/((h))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'th']
				version split: ['d', 'r', 'i', 't', 'h', '_']
				{'string': 'd/r/i/t/h/_', 'rgx': '((d))/((r))/((i))/((t)|(th))/((h))/((_))$'}
				version split: ['d', 'r', 'i', 't', 'h', '_']
				{'string': 'd/r/i/t/h/_', 'rgx': '((d))/((r))/((i))/((t)|(th))/((h))/((_))$'}
				version split: ['d', 'r', 'i', 'th', '_']
				{'string': 'd/r/i/th/_', 'rgx': '((d))/((r))/((i))/((t)|(th))/((h))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'th', '_']
				version split: ['d', 'r', 'i', 'th', '_']
				{'string': 'd/r/i/th/_', 'rgx': '((d))/((r))/((i))/((t)|(th))/((h))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'th', '_']
				ANALYSING: drithe
					resolving (4)
					> version: d/r/i/t/h/e
					TRYING: e
					> version: d/r/i/t/h/e
					TRYING: e
					> version: d/r/i/th/e
					> version: d/r/i/th/e
					RESULT:  ['_']
				adding dashed alternative: ['d', 'r', 'i', 't', 'h', '_', 'e']
				adding dashed alternative: ['d', 'r', 'i', 't', 'h', '_', 'e']
				adding dashed alternative: ['d', 'r', 'i', 'th', 'e', '_']
				adding dashed alternative: ['d', 'r', 'i', 'th', 'e', '_']
				d/r/i/t/h/e(CCCCCV)
d/r/i/t/h/e(CCVCCV)
d/r/i/th/e(CCCCV)
d/r/i/th/e(CCVCV)
d/r/i/t/h/_/e(CCACCAV)
d/r/i/t/h/_/e(CCACCAV)
d/r/i/th/e/_(CCACVA)
d/r/i/th/e/_(CCACVA)
				version split: ['d', 'r', 'i', 't', 'h', 'e']
				{'string': 'd/r/i/t/h/e', 'rgx': '((d))/((r))/((i))/((t)|(th))/((h))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 't', 'h', 'e']
				version split: ['d', 'r', 'i', 't', 'h', 'e']
				{'string': 'd/r/i/t/h/e', 'rgx': '((d))/((r))/((i))/((t)|(th))/((h))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 't', 'h', 'e']
				version split: ['d', 'r', 'i', 'th', 'e']
				{'string': 'd/r/i/th/e', 'rgx': '((d))/((r))/((i))/((t)|(th))/((h))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'th', 'e']
				version split: ['d', 'r', 'i', 'th', 'e']
				{'string': 'd/r/i/th/e', 'rgx': '((d))/((r))/((i))/((t)|(th))/((h))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'th', 'e']
				version split: ['d', 'r', 'i', 't', 'h', '_', 'e']
				{'string': 'd/r/i/t/h/_/e', 'rgx': '((d))/((r))/((i))/((t)|(th))/((h))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 't', 'h', '_', 'e']
				version split: ['d', 'r', 'i', 't', 'h', '_', 'e']
				{'string': 'd/r/i/t/h/_/e', 'rgx': '((d))/((r))/((i))/((t)|(th))/((h))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 't', 'h', '_', 'e']
				version split: ['d', 'r', 'i', 'th', 'e', '_']
				{'string': 'd/r/i/th/e/_', 'rgx': '((d))/((r))/((i))/((t)|(th))/((h))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'th', 'e', '_']
				version split: ['d', 'r', 'i', 'th', 'e', '_']
				{'string': 'd/r/i/th/e/_', 'rgx': '((d))/((r))/((i))/((t)|(th))/((h))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'th', 'e', '_']
				ANALYSING: drithte
					resolving (4)
					> version: d/r/i/t/h/t/e
					TRYING: t
					> version: d/r/i/t/h/t/e
					TRYING: t
					> version: d/r/i/th/t/e
					TRYING: e
					> version: d/r/i/th/t/e
					TRYING: e
					RESULT:  ['t']
				version split: ['d', 'r', 'i', 't', 'h', 't', 'e']
				{'string': 'd/r/i/t/h/t/e', 'rgx': '((d))/((r))/((i))/((t)|(th))/((t)|(h))/((t))$'}
				_____REMOVING________['d', 'r', 'i', 't', 'h', 't', 'e']
				version split: ['d', 'r', 'i', 't', 'h', 't', 'e']
				{'string': 'd/r/i/t/h/t/e', 'rgx': '((d))/((r))/((i))/((t)|(th))/((t)|(h))/((t))$'}
				_____REMOVING________['d', 'r', 'i', 't', 'h', 't', 'e']
				version split: ['d', 'r', 'i', 'th', 't', 'e']
				{'string': 'd/r/i/th/t/e', 'rgx': '((d))/((r))/((i))/((t)|(th))/((t)|(h))/((t))$'}
				_____REMOVING________['d', 'r', 'i', 'th', 't', 'e']
				version split: ['d', 'r', 'i', 'th', 't', 'e']
				{'string': 'd/r/i/th/t/e', 'rgx': '((d))/((r))/((i))/((t)|(th))/((t)|(h))/((t))$'}
				_____REMOVING________['d', 'r', 'i', 'th', 't', 'e']
				ANALYSING: dritt
					resolving (4)
					> version: d/r/i/t/t
					> version: d/r/i/t/t
					> version: d/r/i/tt
					> version: d/r/i/tt
					RESULT:  ['_']
				adding dashed alternative: ['d', 'r', 'i', 't', 't', '_']
				adding dashed alternative: ['d', 'r', 'i', 't', 't', '_']
				adding dashed alternative: ['d', 'r', 'i', 'tt', '_']
				adding dashed alternative: ['d', 'r', 'i', 'tt', '_']
				d/r/i/t/t(CCCCC)
d/r/i/t/t(CCVCC)
d/r/i/tt(CCCC)
d/r/i/tt(CCVC)
d/r/i/t/t/_(CCACCA)
d/r/i/t/t/_(CCACCA)
d/r/i/tt/_(CCACA)
d/r/i/tt/_(CCACA)
				version split: ['d', 'r', 'i', 't', 't']
				{'string': 'd/r/i/t/t', 'rgx': '((d))/((r))/((i))/((tt)|(t))/((t))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 't', 't']
				version split: ['d', 'r', 'i', 't', 't']
				{'string': 'd/r/i/t/t', 'rgx': '((d))/((r))/((i))/((tt)|(t))/((t))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 't', 't']
				version split: ['d', 'r', 'i', 'tt']
				{'string': 'd/r/i/tt', 'rgx': '((d))/((r))/((i))/((tt)|(t))/((t))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'tt']
				version split: ['d', 'r', 'i', 'tt']
				{'string': 'd/r/i/tt', 'rgx': '((d))/((r))/((i))/((tt)|(t))/((t))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'tt']
				version split: ['d', 'r', 'i', 't', 't', '_']
				{'string': 'd/r/i/t/t/_', 'rgx': '((d))/((r))/((i))/((tt)|(t))/((t))/((_))$'}
				version split: ['d', 'r', 'i', 't', 't', '_']
				{'string': 'd/r/i/t/t/_', 'rgx': '((d))/((r))/((i))/((tt)|(t))/((t))/((_))$'}
				version split: ['d', 'r', 'i', 'tt', '_']
				{'string': 'd/r/i/tt/_', 'rgx': '((d))/((r))/((i))/((tt)|(t))/((t))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'tt', '_']
				version split: ['d', 'r', 'i', 'tt', '_']
				{'string': 'd/r/i/tt/_', 'rgx': '((d))/((r))/((i))/((tt)|(t))/((t))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'tt', '_']
				ANALYSING: dritte
					resolving (4)
					> version: d/r/i/t/t/e
					TRYING: e
					> version: d/r/i/t/t/e
					TRYING: e
					> version: d/r/i/tt/e
					> version: d/r/i/tt/e
					RESULT:  ['_']
				adding dashed alternative: ['d', 'r', 'i', 't', 't', '_', 'e']
				adding dashed alternative: ['d', 'r', 'i', 't', 't', '_', 'e']
				adding dashed alternative: ['d', 'r', 'i', 'tt', 'e', '_']
				adding dashed alternative: ['d', 'r', 'i', 'tt', 'e', '_']
				d/r/i/t/t/e(CCCCCV)
d/r/i/t/t/e(CCVCCV)
d/r/i/tt/e(CCCCV)
d/r/i/tt/e(CCVCV)
d/r/i/t/t/_/e(CCACCAV)
d/r/i/t/t/_/e(CCACCAV)
d/r/i/tt/e/_(CCACVA)
d/r/i/tt/e/_(CCACVA)
				version split: ['d', 'r', 'i', 't', 't', 'e']
				{'string': 'd/r/i/t/t/e', 'rgx': '((d))/((r))/((i))/((tt)|(t))/((t))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 't', 't', 'e']
				version split: ['d', 'r', 'i', 't', 't', 'e']
				{'string': 'd/r/i/t/t/e', 'rgx': '((d))/((r))/((i))/((tt)|(t))/((t))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 't', 't', 'e']
				version split: ['d', 'r', 'i', 'tt', 'e']
				{'string': 'd/r/i/tt/e', 'rgx': '((d))/((r))/((i))/((tt)|(t))/((t))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'tt', 'e']
				version split: ['d', 'r', 'i', 'tt', 'e']
				{'string': 'd/r/i/tt/e', 'rgx': '((d))/((r))/((i))/((tt)|(t))/((t))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'tt', 'e']
				version split: ['d', 'r', 'i', 't', 't', '_', 'e']
				{'string': 'd/r/i/t/t/_/e', 'rgx': '((d))/((r))/((i))/((tt)|(t))/((t))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 't', 't', '_', 'e']
				version split: ['d', 'r', 'i', 't', 't', '_', 'e']
				{'string': 'd/r/i/t/t/_/e', 'rgx': '((d))/((r))/((i))/((tt)|(t))/((t))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 't', 't', '_', 'e']
				version split: ['d', 'r', 'i', 'tt', 'e', '_']
				{'string': 'd/r/i/tt/e/_', 'rgx': '((d))/((r))/((i))/((tt)|(t))/((t))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'tt', 'e', '_']
				version split: ['d', 'r', 'i', 'tt', 'e', '_']
				{'string': 'd/r/i/tt/e/_', 'rgx': '((d))/((r))/((i))/((tt)|(t))/((t))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'tt', 'e', '_']
				ANALYSING: driȝt
					resolving (2)
					> version: d/r/i/ȝ/t
					> version: d/r/i/ȝ/t
					RESULT:  ['_']
				adding dashed alternative: ['d', 'r', 'i', 'ȝ', 't', '_']
				adding dashed alternative: ['d', 'r', 'i', 'ȝ', 't', '_']
				d/r/i/ȝ/t(CCCCC)
d/r/i/ȝ/t(CCVCC)
d/r/i/ȝ/t/_(CCACCA)
d/r/i/ȝ/t/_(CCACCA)
				version split: ['d', 'r', 'i', 'ȝ', 't']
				{'string': 'd/r/i/ȝ/t', 'rgx': '((d))/((r))/((i))/((ȝ))/((t))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'ȝ', 't']
				version split: ['d', 'r', 'i', 'ȝ', 't']
				{'string': 'd/r/i/ȝ/t', 'rgx': '((d))/((r))/((i))/((ȝ))/((t))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'ȝ', 't']
				version split: ['d', 'r', 'i', 'ȝ', 't', '_']
				{'string': 'd/r/i/ȝ/t/_', 'rgx': '((d))/((r))/((i))/((ȝ))/((t))/((_))$'}
				version split: ['d', 'r', 'i', 'ȝ', 't', '_']
				{'string': 'd/r/i/ȝ/t/_', 'rgx': '((d))/((r))/((i))/((ȝ))/((t))/((_))$'}
				ANALYSING: driȝte
					resolving (2)
					> version: d/r/i/ȝ/t/e
					TRYING: e
					> version: d/r/i/ȝ/t/e
					TRYING: e
					RESULT:  ['_']
				adding dashed alternative: ['d', 'r', 'i', 'ȝ', 't', '_', 'e']
				adding dashed alternative: ['d', 'r', 'i', 'ȝ', 't', '_', 'e']
				d/r/i/ȝ/t/e(CCCCCV)
d/r/i/ȝ/t/e(CCVCCV)
d/r/i/ȝ/t/_/e(CCACCAV)
d/r/i/ȝ/t/_/e(CCACCAV)
				version split: ['d', 'r', 'i', 'ȝ', 't', 'e']
				{'string': 'd/r/i/ȝ/t/e', 'rgx': '((d))/((r))/((i))/((ȝ))/((t))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'ȝ', 't', 'e']
				version split: ['d', 'r', 'i', 'ȝ', 't', 'e']
				{'string': 'd/r/i/ȝ/t/e', 'rgx': '((d))/((r))/((i))/((ȝ))/((t))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'ȝ', 't', 'e']
				version split: ['d', 'r', 'i', 'ȝ', 't', '_', 'e']
				{'string': 'd/r/i/ȝ/t/_/e', 'rgx': '((d))/((r))/((i))/((ȝ))/((t))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'ȝ', 't', '_', 'e']
				version split: ['d', 'r', 'i', 'ȝ', 't', '_', 'e']
				{'string': 'd/r/i/ȝ/t/_/e', 'rgx': '((d))/((r))/((i))/((ȝ))/((t))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'ȝ', 't', '_', 'e']
				ANALYSING: driȝtte
					resolving (4)
					> version: d/r/i/ȝ/t/t/e
					TRYING: t
					> version: d/r/i/ȝ/t/t/e
					TRYING: t
					> version: d/r/i/ȝ/tt/e
					TRYING: e
					> version: d/r/i/ȝ/tt/e
					TRYING: e
					RESULT:  ['t']
				version split: ['d', 'r', 'i', 'ȝ', 't', 't', 'e']
				{'string': 'd/r/i/ȝ/t/t/e', 'rgx': '((d))/((r))/((i))/((ȝ))/((tt)|(t))/((t))$'}
				_____REMOVING________['d', 'r', 'i', 'ȝ', 't', 't', 'e']
				version split: ['d', 'r', 'i', 'ȝ', 't', 't', 'e']
				{'string': 'd/r/i/ȝ/t/t/e', 'rgx': '((d))/((r))/((i))/((ȝ))/((tt)|(t))/((t))$'}
				_____REMOVING________['d', 'r', 'i', 'ȝ', 't', 't', 'e']
				version split: ['d', 'r', 'i', 'ȝ', 'tt', 'e']
				{'string': 'd/r/i/ȝ/tt/e', 'rgx': '((d))/((r))/((i))/((ȝ))/((tt)|(t))/((t))$'}
				_____REMOVING________['d', 'r', 'i', 'ȝ', 'tt', 'e']
				version split: ['d', 'r', 'i', 'ȝ', 'tt', 'e']
				{'string': 'd/r/i/ȝ/tt/e', 'rgx': '((d))/((r))/((i))/((ȝ))/((tt)|(t))/((t))$'}
				_____REMOVING________['d', 'r', 'i', 'ȝ', 'tt', 'e']
				ANALYSING: dryht
					resolving (3)
					> version: d/r/y/h/t
					> version: d/r/y/h/t
					> version: d/r/yh/t
					RESULT:  ['_']
				adding dashed alternative: ['d', 'r', 'y', 'h', 't', '_']
				adding dashed alternative: ['d', 'r', 'y', 'h', 't', '_']
				adding dashed alternative: ['d', 'r', 'yh', 't', '_']
				d/r/y/h/t(CCCCC)
d/r/y/h/t(CCVCC)
d/r/yh/t(CCCC)
d/r/y/h/t/_(CCACCA)
d/r/y/h/t/_(CCACCA)
d/r/yh/t/_(CCCCA)
				version split: ['d', 'r', 'y', 'h', 't']
				{'string': 'd/r/y/h/t', 'rgx': '((d))/((r))/((y))/((t)|(h))/((t))/((_))$'}
				_____REMOVING________['d', 'r', 'y', 'h', 't']
				version split: ['d', 'r', 'y', 'h', 't']
				{'string': 'd/r/y/h/t', 'rgx': '((d))/((r))/((y))/((t)|(h))/((t))/((_))$'}
				_____REMOVING________['d', 'r', 'y', 'h', 't']
				version split: ['d', 'r', 'yh', 't']
				{'string': 'd/r/yh/t', 'rgx': '((d))/((r))/((y))/((t)|(h))/((t))/((_))$'}
				_____REMOVING________['d', 'r', 'yh', 't']
				version split: ['d', 'r', 'y', 'h', 't', '_']
				{'string': 'd/r/y/h/t/_', 'rgx': '((d))/((r))/((y))/((t)|(h))/((t))/((_))$'}
				version split: ['d', 'r', 'y', 'h', 't', '_']
				{'string': 'd/r/y/h/t/_', 'rgx': '((d))/((r))/((y))/((t)|(h))/((t))/((_))$'}
				version split: ['d', 'r', 'yh', 't', '_']
				{'string': 'd/r/yh/t/_', 'rgx': '((d))/((r))/((y))/((t)|(h))/((t))/((_))$'}
				_____REMOVING________['d', 'r', 'yh', 't', '_']
				ANALYSING: dryhte
					resolving (3)
					> version: d/r/y/h/t/e
					TRYING: e
					> version: d/r/y/h/t/e
					TRYING: e
					> version: d/r/yh/t/e
					RESULT:  ['_']
				adding dashed alternative: ['d', 'r', 'y', 'h', 't', '_', 'e']
				adding dashed alternative: ['d', 'r', 'y', 'h', 't', '_', 'e']
				adding dashed alternative: ['d', 'r', 'yh', 't', 'e', '_']
				d/r/y/h/t/e(CCCCCV)
d/r/y/h/t/e(CCVCCV)
d/r/yh/t/e(CCCCV)
d/r/y/h/t/_/e(CCACCAV)
d/r/y/h/t/_/e(CCACCAV)
d/r/yh/t/e/_(CCCCVA)
				version split: ['d', 'r', 'y', 'h', 't', 'e']
				{'string': 'd/r/y/h/t/e', 'rgx': '((d))/((r))/((y))/((t)|(h))/((t))/((_))$'}
				_____REMOVING________['d', 'r', 'y', 'h', 't', 'e']
				version split: ['d', 'r', 'y', 'h', 't', 'e']
				{'string': 'd/r/y/h/t/e', 'rgx': '((d))/((r))/((y))/((t)|(h))/((t))/((_))$'}
				_____REMOVING________['d', 'r', 'y', 'h', 't', 'e']
				version split: ['d', 'r', 'yh', 't', 'e']
				{'string': 'd/r/yh/t/e', 'rgx': '((d))/((r))/((y))/((t)|(h))/((t))/((_))$'}
				_____REMOVING________['d', 'r', 'yh', 't', 'e']
				version split: ['d', 'r', 'y', 'h', 't', '_', 'e']
				{'string': 'd/r/y/h/t/_/e', 'rgx': '((d))/((r))/((y))/((t)|(h))/((t))/((_))$'}
				_____REMOVING________['d', 'r', 'y', 'h', 't', '_', 'e']
				version split: ['d', 'r', 'y', 'h', 't', '_', 'e']
				{'string': 'd/r/y/h/t/_/e', 'rgx': '((d))/((r))/((y))/((t)|(h))/((t))/((_))$'}
				_____REMOVING________['d', 'r', 'y', 'h', 't', '_', 'e']
				version split: ['d', 'r', 'yh', 't', 'e', '_']
				{'string': 'd/r/yh/t/e/_', 'rgx': '((d))/((r))/((y))/((t)|(h))/((t))/((_))$'}
				_____REMOVING________['d', 'r', 'yh', 't', 'e', '_']
				ANALYSING: e
					resolving (16)
					> version: e
					> version: _/e
					> version: e/_
					> version: _/_/e
					> version: e/_
					> version: _/e/_
					> version: e/_/_
					> version: _/_/e/_
					> version: e/_
					> version: _/e/_
					> version: e/_/_
					> version: _/_/e/_
					> version: e/_/_
					> version: _/e/_/_
					> version: e/_/_/_
					> version: _/_/e/_/_
					RESULT:  ['_']
				adding dashed alternative: ['e', '_']
				adding dashed alternative: ['_', 'e', '_']
				adding dashed alternative: ['e', '_', '_']
				adding dashed alternative: ['_', '_', 'e', '_']
				adding dashed alternative: ['e', '_', '_']
				adding dashed alternative: ['_', 'e', '_', '_']
				adding dashed alternative: ['e', '_', '_', '_']
				adding dashed alternative: ['_', '_', 'e', '_', '_']
				adding dashed alternative: ['e', '_', '_']
				adding dashed alternative: ['_', 'e', '_', '_']
				adding dashed alternative: ['e', '_', '_', '_']
				adding dashed alternative: ['_', '_', 'e', '_', '_']
				adding dashed alternative: ['e', '_', '_', '_']
				adding dashed alternative: ['_', 'e', '_', '_', '_']
				adding dashed alternative: ['e', '_', '_', '_', '_']
				adding dashed alternative: ['_', '_', 'e', '_', '_', '_']
				e(V)
_/e(AV)
e/_(VA)
_/_/e(AAV)
e/_(VA)
_/e/_(AVA)
e/_/_(VAA)
_/_/e/_(AAVA)
e/_(VA)
_/e/_(AVA)
e/_/_(VAA)
_/_/e/_(AAVA)
e/_/_(VAA)
_/e/_/_(AVAA)
e/_/_/_(VAAA)
_/_/e/_/_(AAVAA)
e/_(VA)
_/e/_(AVA)
e/_/_(VAA)
_/_/e/_(AAVA)
e/_/_(VAA)
_/e/_/_(AVAA)
e/_/_/_(VAAA)
_/_/e/_/_(AAVAA)
e/_/_(VAA)
_/e/_/_(AVAA)
e/_/_/_(VAAA)
_/_/e/_/_(AAVAA)
e/_/_/_(VAAA)
_/e/_/_/_(AVAAA)
e/_/_/_/_(VAAAA)
_/_/e/_/_/_(AAVAAA)
				version split: ['e']
				{'string': 'e', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))$'}
				_____REMOVING________['e']
				version split: ['_', 'e']
				{'string': '_/e', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'e']
				version split: ['e', '_']
				{'string': 'e/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))$'}
				_____REMOVING________['e', '_']
				version split: ['_', '_', 'e']
				{'string': '_/_/e', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'e']
				version split: ['e', '_']
				{'string': 'e/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))$'}
				_____REMOVING________['e', '_']
				version split: ['_', 'e', '_']
				{'string': '_/e/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'e', '_']
				version split: ['e', '_', '_']
				{'string': 'e/_/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))$'}
				_____REMOVING________['e', '_', '_']
				version split: ['_', '_', 'e', '_']
				{'string': '_/_/e/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'e', '_']
				version split: ['e', '_']
				{'string': 'e/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))$'}
				_____REMOVING________['e', '_']
				version split: ['_', 'e', '_']
				{'string': '_/e/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'e', '_']
				version split: ['e', '_', '_']
				{'string': 'e/_/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))$'}
				_____REMOVING________['e', '_', '_']
				version split: ['_', '_', 'e', '_']
				{'string': '_/_/e/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'e', '_']
				version split: ['e', '_', '_']
				{'string': 'e/_/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))$'}
				_____REMOVING________['e', '_', '_']
				version split: ['_', 'e', '_', '_']
				{'string': '_/e/_/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'e', '_', '_']
				version split: ['e', '_', '_', '_']
				{'string': 'e/_/_/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))$'}
				_____REMOVING________['e', '_', '_', '_']
				version split: ['_', '_', 'e', '_', '_']
				{'string': '_/_/e/_/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'e', '_', '_']
				version split: ['e', '_']
				{'string': 'e/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))$'}
				_____REMOVING________['e', '_']
				version split: ['_', 'e', '_']
				{'string': '_/e/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'e', '_']
				version split: ['e', '_', '_']
				{'string': 'e/_/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))$'}
				_____REMOVING________['e', '_', '_']
				version split: ['_', '_', 'e', '_']
				{'string': '_/_/e/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'e', '_']
				version split: ['e', '_', '_']
				{'string': 'e/_/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))$'}
				_____REMOVING________['e', '_', '_']
				version split: ['_', 'e', '_', '_']
				{'string': '_/e/_/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'e', '_', '_']
				version split: ['e', '_', '_', '_']
				{'string': 'e/_/_/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))$'}
				_____REMOVING________['e', '_', '_', '_']
				version split: ['_', '_', 'e', '_', '_']
				{'string': '_/_/e/_/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'e', '_', '_']
				version split: ['e', '_', '_']
				{'string': 'e/_/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))$'}
				_____REMOVING________['e', '_', '_']
				version split: ['_', 'e', '_', '_']
				{'string': '_/e/_/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'e', '_', '_']
				version split: ['e', '_', '_', '_']
				{'string': 'e/_/_/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))$'}
				_____REMOVING________['e', '_', '_', '_']
				version split: ['_', '_', 'e', '_', '_']
				{'string': '_/_/e/_/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'e', '_', '_']
				version split: ['e', '_', '_', '_']
				{'string': 'e/_/_/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))$'}
				_____REMOVING________['e', '_', '_', '_']
				version split: ['_', 'e', '_', '_', '_']
				{'string': '_/e/_/_/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'e', '_', '_', '_']
				version split: ['e', '_', '_', '_', '_']
				{'string': 'e/_/_/_/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))$'}
				_____REMOVING________['e', '_', '_', '_', '_']
				version split: ['_', '_', 'e', '_', '_', '_']
				{'string': '_/_/e/_/_/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))$'}
				ANALYSING: en
					resolving (8)
					> version: e/n
					> version: _/e/n
					> version: e/n/_
					> version: _/e/_/n
					> version: e/n/_
					> version: _/e/n/_
					> version: e/n/_/_
					> version: _/e/_/n/_
					RESULT:  ['_']
				adding dashed alternative: ['e', 'n', '_']
				adding dashed alternative: ['_', 'e', 'n', '_']
				adding dashed alternative: ['e', 'n', '_', '_']
				adding dashed alternative: ['_', 'e', '_', 'n', '_']
				adding dashed alternative: ['e', 'n', '_', '_']
				adding dashed alternative: ['_', 'e', 'n', '_', '_']
				adding dashed alternative: ['e', 'n', '_', '_', '_']
				adding dashed alternative: ['_', 'e', '_', 'n', '_', '_']
				e/n(VC)
_/e/n(AVC)
e/n/_(VCA)
_/e/_/n(AVAC)
e/n/_(VCA)
_/e/n/_(AVCA)
e/n/_/_(VCAA)
_/e/_/n/_(AVACA)
e/n/_(VCA)
_/e/n/_(AVCA)
e/n/_/_(VCAA)
_/e/_/n/_(AVACA)
e/n/_/_(VCAA)
_/e/n/_/_(AVCAA)
e/n/_/_/_(VCAAA)
_/e/_/n/_/_(AVACAA)
				version split: ['e', 'n']
				{'string': 'e/n', 'rgx': '((_))/((n))/((_))/((n))/((_))/((_))$'}
				_____REMOVING________['e', 'n']
				version split: ['_', 'e', 'n']
				{'string': '_/e/n', 'rgx': '((_))/((n))/((_))/((n))/((_))/((_))$'}
				_____REMOVING________['_', 'e', 'n']
				version split: ['e', 'n', '_']
				{'string': 'e/n/_', 'rgx': '((_))/((n))/((_))/((n))/((_))/((_))$'}
				_____REMOVING________['e', 'n', '_']
				version split: ['_', 'e', '_', 'n']
				{'string': '_/e/_/n', 'rgx': '((_))/((n))/((_))/((n))/((_))/((_))$'}
				_____REMOVING________['_', 'e', '_', 'n']
				version split: ['e', 'n', '_']
				{'string': 'e/n/_', 'rgx': '((_))/((n))/((_))/((n))/((_))/((_))$'}
				_____REMOVING________['e', 'n', '_']
				version split: ['_', 'e', 'n', '_']
				{'string': '_/e/n/_', 'rgx': '((_))/((n))/((_))/((n))/((_))/((_))$'}
				_____REMOVING________['_', 'e', 'n', '_']
				version split: ['e', 'n', '_', '_']
				{'string': 'e/n/_/_', 'rgx': '((_))/((n))/((_))/((n))/((_))/((_))$'}
				_____REMOVING________['e', 'n', '_', '_']
				version split: ['_', 'e', '_', 'n', '_']
				{'string': '_/e/_/n/_', 'rgx': '((_))/((n))/((_))/((n))/((_))/((_))$'}
				_____REMOVING________['_', 'e', '_', 'n', '_']
				version split: ['e', 'n', '_']
				{'string': 'e/n/_', 'rgx': '((_))/((n))/((_))/((n))/((_))/((_))$'}
				_____REMOVING________['e', 'n', '_']
				version split: ['_', 'e', 'n', '_']
				{'string': '_/e/n/_', 'rgx': '((_))/((n))/((_))/((n))/((_))/((_))$'}
				_____REMOVING________['_', 'e', 'n', '_']
				version split: ['e', 'n', '_', '_']
				{'string': 'e/n/_/_', 'rgx': '((_))/((n))/((_))/((n))/((_))/((_))$'}
				_____REMOVING________['e', 'n', '_', '_']
				version split: ['_', 'e', '_', 'n', '_']
				{'string': '_/e/_/n/_', 'rgx': '((_))/((n))/((_))/((n))/((_))/((_))$'}
				_____REMOVING________['_', 'e', '_', 'n', '_']
				version split: ['e', 'n', '_', '_']
				{'string': 'e/n/_/_', 'rgx': '((_))/((n))/((_))/((n))/((_))/((_))$'}
				_____REMOVING________['e', 'n', '_', '_']
				version split: ['_', 'e', 'n', '_', '_']
				{'string': '_/e/n/_/_', 'rgx': '((_))/((n))/((_))/((n))/((_))/((_))$'}
				_____REMOVING________['_', 'e', 'n', '_', '_']
				version split: ['e', 'n', '_', '_', '_']
				{'string': 'e/n/_/_/_', 'rgx': '((_))/((n))/((_))/((n))/((_))/((_))$'}
				_____REMOVING________['e', 'n', '_', '_', '_']
				version split: ['_', 'e', '_', 'n', '_', '_']
				{'string': '_/e/_/n/_/_', 'rgx': '((_))/((n))/((_))/((n))/((_))/((_))$'}
				_____REMOVING________['_', 'e', '_', 'n', '_', '_']
				ANALYSING: in
					resolving (16)
					> version: i/n
					> version: i/n
					> version: i/n/_
					> version: i/n/_
					> version: i/n/_
					> version: i/n/_
					> version: i/n/_/_
					> version: i/n/_/_
					> version: i/n/_
					> version: i/n/_
					> version: i/n/_/_
					> version: i/n/_/_
					> version: i/n/_/_
					> version: i/n/_/_
					> version: i/n/_/_/_
					> version: i/n/_/_/_
					RESULT:  ['_']
				adding dashed alternative: ['i', 'n', '_']
				adding dashed alternative: ['i', 'n', '_']
				adding dashed alternative: ['i', 'n', '_', '_']
				adding dashed alternative: ['i', 'n', '_', '_']
				adding dashed alternative: ['i', 'n', '_', '_']
				adding dashed alternative: ['i', 'n', '_', '_']
				adding dashed alternative: ['i', 'n', '_', '_', '_']
				adding dashed alternative: ['i', 'n', '_', '_', '_']
				adding dashed alternative: ['i', 'n', '_', '_']
				adding dashed alternative: ['i', 'n', '_', '_']
				adding dashed alternative: ['i', 'n', '_', '_', '_']
				adding dashed alternative: ['i', 'n', '_', '_', '_']
				adding dashed alternative: ['i', 'n', '_', '_', '_']
				adding dashed alternative: ['i', 'n', '_', '_', '_']
				adding dashed alternative: ['i', 'n', '_', '_', '_', '_']
				adding dashed alternative: ['i', 'n', '_', '_', '_', '_']
				i/n(CC)
i/n(VC)
i/n/_(ACA)
i/n/_(ACA)
i/n/_(ACA)
i/n/_(ACA)
i/n/_/_(ACAA)
i/n/_/_(ACAA)
i/n/_(ACA)
i/n/_(ACA)
i/n/_/_(ACAA)
i/n/_/_(ACAA)
i/n/_/_(ACAA)
i/n/_/_(ACAA)
i/n/_/_/_(ACAAA)
i/n/_/_/_(ACAAA)
i/n/_(ACA)
i/n/_(ACA)
i/n/_/_(ACAA)
i/n/_/_(ACAA)
i/n/_/_(ACAA)
i/n/_/_(ACAA)
i/n/_/_/_(ACAAA)
i/n/_/_/_(ACAAA)
i/n/_/_(ACAA)
i/n/_/_(ACAA)
i/n/_/_/_(ACAAA)
i/n/_/_/_(ACAAA)
i/n/_/_/_(ACAAA)
i/n/_/_/_(ACAAA)
i/n/_/_/_/_(ACAAAA)
i/n/_/_/_/_(ACAAAA)
				version split: ['i', 'n']
				{'string': 'i/n', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n']
				version split: ['i', 'n']
				{'string': 'i/n', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n']
				version split: ['i', 'n', '_']
				{'string': 'i/n/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n', '_']
				version split: ['i', 'n', '_']
				{'string': 'i/n/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n', '_']
				version split: ['i', 'n', '_']
				{'string': 'i/n/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n', '_']
				version split: ['i', 'n', '_']
				{'string': 'i/n/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n', '_']
				version split: ['i', 'n', '_', '_']
				{'string': 'i/n/_/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n', '_', '_']
				version split: ['i', 'n', '_', '_']
				{'string': 'i/n/_/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n', '_', '_']
				version split: ['i', 'n', '_']
				{'string': 'i/n/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n', '_']
				version split: ['i', 'n', '_']
				{'string': 'i/n/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n', '_']
				version split: ['i', 'n', '_', '_']
				{'string': 'i/n/_/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n', '_', '_']
				version split: ['i', 'n', '_', '_']
				{'string': 'i/n/_/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n', '_', '_']
				version split: ['i', 'n', '_', '_']
				{'string': 'i/n/_/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n', '_', '_']
				version split: ['i', 'n', '_', '_']
				{'string': 'i/n/_/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n', '_', '_']
				version split: ['i', 'n', '_', '_', '_']
				{'string': 'i/n/_/_/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n', '_', '_', '_']
				version split: ['i', 'n', '_', '_', '_']
				{'string': 'i/n/_/_/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n', '_', '_', '_']
				version split: ['i', 'n', '_']
				{'string': 'i/n/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n', '_']
				version split: ['i', 'n', '_']
				{'string': 'i/n/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n', '_']
				version split: ['i', 'n', '_', '_']
				{'string': 'i/n/_/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n', '_', '_']
				version split: ['i', 'n', '_', '_']
				{'string': 'i/n/_/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n', '_', '_']
				version split: ['i', 'n', '_', '_']
				{'string': 'i/n/_/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n', '_', '_']
				version split: ['i', 'n', '_', '_']
				{'string': 'i/n/_/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n', '_', '_']
				version split: ['i', 'n', '_', '_', '_']
				{'string': 'i/n/_/_/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n', '_', '_', '_']
				version split: ['i', 'n', '_', '_', '_']
				{'string': 'i/n/_/_/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n', '_', '_', '_']
				version split: ['i', 'n', '_', '_']
				{'string': 'i/n/_/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n', '_', '_']
				version split: ['i', 'n', '_', '_']
				{'string': 'i/n/_/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n', '_', '_']
				version split: ['i', 'n', '_', '_', '_']
				{'string': 'i/n/_/_/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n', '_', '_', '_']
				version split: ['i', 'n', '_', '_', '_']
				{'string': 'i/n/_/_/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n', '_', '_', '_']
				version split: ['i', 'n', '_', '_', '_']
				{'string': 'i/n/_/_/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n', '_', '_', '_']
				version split: ['i', 'n', '_', '_', '_']
				{'string': 'i/n/_/_/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n', '_', '_', '_']
				version split: ['i', 'n', '_', '_', '_', '_']
				{'string': 'i/n/_/_/_/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))$'}
				version split: ['i', 'n', '_', '_', '_', '_']
				{'string': 'i/n/_/_/_/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))$'}
		FAIL: 
		FAIL: 
		FAIL: 
		FAIL: 
		FAIL: 
		FAIL: 
		only one version left: ['d', 'r', 'i', 'c', '_', '_']
		only one version left: ['d', 'r', 'i', 'c', 't', '_']
		only one version left: ['d', 'r', 'i', 'g', 't', '_']
		only one version left: ['d', 'r', 'i', 'h', '_', '_']
		only one version left: ['d', 'r', 'i', 'h', 't', '_']
		only one version left: ['d', 'r', 'i', 'h', 'h', '_']
		FAIL: 
		only one version left: ['d', 'r', 'i', 'c', 'h', '_']
		FAIL: 
		FAIL: 
		only one version left: ['d', 'r', 'i', 's', 't', '_']
		FAIL: 
		only one version left: ['d', 'r', 'i', 't', 'h', '_']
		FAIL: 
		FAIL: 
		only one version left: ['d', 'r', 'i', 't', 't', '_']
		FAIL: 
		only one version left: ['d', 'r', 'i', 'ȝ', 't', '_']
		FAIL: 
		FAIL: 
		only one version left: ['d', 'r', 'y', 'h', 't', '_']
		FAIL: 
		only one version left: ['_', '_', 'e', '_', '_', '_']
		FAIL: 
		only one version left: ['i', 'n', '_', '_', '_', '_']
		SPLIT: ['d', 'r', 'i', 'g', 'h', 't', '----!']
		SPLIT: ['d', 'r', 'i', 'h', 'ð', 't', '----!']
		SPLIT: ['d', 'r', 'i', 'h', 'h', 't', '----!']
		SPLIT: ['d', 'r', 'i', 'c', 'h', 't', '----!']
		SPLIT: ['d', 'r', 'i', 't', 'h', 't', '----!']
		SPLIT: ['d', 'r', 'e.ey', 't.y', 't', '_', '----!']
		SPLIT: ['d', 'r', 'i', 'c', '_', '_']
		['d', 'r', 'i', 'c', '_', '_']
		['d', 'r', 'i', 'c', '_', '_']
		SPLIT: ['d', 'r', 'i', 'c', 't', '_']
		['d', 'r', 'i', 'c', 't', '_']
		['d', 'r', 'i', 'c', 't', '_']
		SPLIT: ['d', 'r', 'i', 'g', 't', '_']
		['d', 'r', 'i', 'g', 't', '_']
		['d', 'r', 'i', 'g', 't', '_']
		SPLIT: ['d', 'r', 'i', 'h', '_', '_']
		['d', 'r', 'i', 'h', '_', '_']
		['d', 'r', 'i', 'h', '_', '_']
		SPLIT: ['d', 'r', 'i', 'h', 't', '_']
		['d', 'r', 'i', 'h', 't', '_']
		['d', 'r', 'i', 'h', 't', '_']
		SPLIT: ['d', 'r', 'i', 'h', 'h', '_']
		['d', 'r', 'i', 'h', 'h', '_']
		['d', 'r', 'i', 'h', 'h', '_']
		SPLIT: ['d', 'r', 'i', 'h', 't', '_', '----!']
		SPLIT: ['d', 'r', 'i', 'c', 'h', '_']
		['d', 'r', 'i', 'c', 'h', '_']
		['d', 'r', 'i', 'c', 'h', '_']
		SPLIT: ['d', 'r', 'i', 'ch.c', 't.h', 't', '----!']
		SPLIT: ['d', 'r', 'i', 'k', 't', '_', '----!']
		SPLIT: ['d', 'r', 'i', 's', 't', '_']
		['d', 'r', 'i', 's', 't', '_']
		['d', 'r', 'i', 's', 't', '_']
		SPLIT: ['d', 'r', 'i', 's', 't', '_', '----!']
		SPLIT: ['d', 'r', 'i', 't', 'h', '_']
		['d', 'r', 'i', 't', 'h', '_']
		['d', 'r', 'i', 't', 'h', '_']
		SPLIT: ['d', 'r', 'i', 't.th', 'h', '_', '----!']
		SPLIT: ['d', 'r', 'i', 't.th', 't.h', 't', '----!']
		SPLIT: ['d', 'r', 'i', 't', 't', '_']
		['d', 'r', 'i', 't', 't', '_']
		['d', 'r', 'i', 't', 't', '_']
		SPLIT: ['d', 'r', 'i', 'tt.t', 't', '_', '----!']
		SPLIT: ['d', 'r', 'i', 'ȝ', 't', '_']
		['d', 'r', 'i', 'ȝ', 't', '_']
		['d', 'r', 'i', 'ȝ', 't', '_']
		SPLIT: ['d', 'r', 'i', 'ȝ', 't', '_', '----!']
		SPLIT: ['d', 'r', 'i', 'ȝ', 'tt.t', 't', '----!']
		SPLIT: ['d', 'r', 'y', 'h', 't', '_']
		['d', 'r', 'y', 'h', 't', '_']
		['d', 'r', 'y', 'h', 't', '_']
		SPLIT: ['d', 'r', 'y', 't.h', 't', '_', '----!']
		SPLIT: ['_', '_', 'e', '_', '_', '_']
		['_', '_', 'e', '_', '_', '_']
		SPLIT: ['_', 'n', '_', 'n', '_', '_', '----!']
		SPLIT: ['i', 'n', '_', '_', '_', '_']
		['i', 'n', '_', '_', '_', '_']
		['i', 'n', '_', '_', '_', '_']
		version for pattern CCVCCC is INVALID
		[{'i', 'd', '_'}, {'n', '_', 'r'}, {'_', 'i', 'e', 'y', 'ey'}, {'ch', '_', 's', 'ȝ', 'hh', 't', 'n', 'th', 'c', 'k', 'tt', 'y', 'g', 'h'}, {'_', 't', 'tt', 'h', 'ð'}]
		17
		OVERVIEW: version for pattern CCVCCC
{'i', 'd', '_'}, {'n', '_', 'r'}, {'_', 'i', 'e', 'y', 'ey'}, {'ch', '_', 's', 'ȝ', 'hh', 't', 'n', 'th', 'c', 'k', 'tt', 'y', 'g', 'h'}, {'_', 't', 'tt', 'h', 'ð'}
faulty splits: 17
dright----! <-! dright
drihðt----! <-! drihðt
drihht----! <-! drihht
dricht----! <-! dricht
dritht----! <-! dritht
dre.eyt.yt----! <-! dreyte
driht----! <-! drihte
drich.ct.ht----! <-! drichte
drikt----! <-! drikte
drist----! <-! driste
drit.thh----! <-! drithe
drit.tht.ht----! <-! drithte
dritt.tt----! <-! dritte
driȝt----! <-! driȝte
driȝtt.tt----! <-! driȝtte
dryt.ht----! <-! dryhte
nn----! <-! en
d | r | i | g | h | t | ----!
d | r | i | h | ð | t | ----!
d | r | i | h | h | t | ----!
d | r | i | c | h | t | ----!
d | r | i | t | h | t | ----!
d | r | e.ey | t.y | t | _ | ----!
d | r | i | c | _ | _
d | r | i | c | t | _
d | r | i | g | t | _
d | r | i | h | _ | _
d | r | i | h | t | _
d | r | i | h | h | _
d | r | i | h | t | _ | ----!
d | r | i | c | h | _
d | r | i | ch.c | t.h | t | ----!
d | r | i | k | t | _ | ----!
d | r | i | s | t | _
d | r | i | s | t | _ | ----!
d | r | i | t | h | _
d | r | i | t.th | h | _ | ----!
d | r | i | t.th | t.h | t | ----!
d | r | i | t | t | _
d | r | i | tt.t | t | _ | ----!
d | r | i | ȝ | t | _
d | r | i | ȝ | t | _ | ----!
d | r | i | ȝ | tt.t | t | ----!
d | r | y | h | t | _
d | r | y | t.h | t | _ | ----!
_ | _ | e | _ | _ | _
_ | n | _ | n | _ | _ | ----!
i | n | _ | _ | _ | _
	[[{'lit': 'ey', 'ln': 2, 'index': 2}], [{'lit': 'ey', 'ln': 2, 'index': 2}]]
	[[{'lit': 'ey', 'ln': 2, 'index': 2}], [{'lit': 'ey', 'ln': 2, 'index': 2}], [{'lit': 'ey', 'ln': 2, 'index': 2}, {'lit': 'ey', 'ln': 2, 'index': 2}]]
	[[{'lit': 'gh', 'ln': 2, 'index': 3}]]
	[[{'lit': 'hð', 'ln': 2, 'index': 3}]]
	[[{'lit': 'hh', 'ln': 2, 'index': 3}]]
	[[{'lit': 'hh', 'ln': 2, 'index': 3}]]
	[[{'lit': 'ch', 'ln': 2, 'index': 3}]]
	[[{'lit': 'ch', 'ln': 2, 'index': 3}]]
	[[{'lit': 'ch', 'ln': 2, 'index': 3}]]
	[[{'lit': 'th', 'ln': 2, 'index': 3}]]
	[[{'lit': 'th', 'ln': 2, 'index': 3}]]
	[[{'lit': 'th', 'ln': 2, 'index': 3}]]
	[[{'lit': 'th', 'ln': 2, 'index': 3}]]
	[[{'lit': 'tt', 'ln': 2, 'index': 3}]]
	[[{'lit': 'tt', 'ln': 2, 'index': 3}]]
	[[{'lit': 'tt', 'ln': 2, 'index': 4}]]
	[[{'lit': 'yh', 'ln': 2, 'index': 2}]]
	[[{'lit': 'yh', 'ln': 2, 'index': 2}]]
	MIN pattern length=6
	Pattern CCCC is invalid
	Pattern CCVVCV is invalid
	Pattern CCVC is invalid
	Pattern CCCCV is invalid
	Pattern CCVCC is invalid
	Pattern CCVCCV is valid
	Pattern CCCCCV is invalid
	Pattern V is invalid
	Pattern CC is invalid
	Pattern CCVCCC is valid
	Pattern CCCCCCV is invalid
	Pattern CCCCC is invalid
	Pattern CCVCCCV is valid
	Pattern CCVCV is invalid
	Pattern VC is invalid
	Pattern CCCCCC is invalid
	Making the selection for pattern: CCVCCCV
	Selection for pattern: CCVCCCV completed
	Making a version for pattern: CCVCCCV
			___CCVCCCV : 0___
				ANALYSING: drichte
				adding littera based on matching pattern
				ANALYSING: drithte
				adding littera based on matching pattern
				ANALYSING: driȝtte
				adding littera based on matching pattern
				ANALYSING: dreyte
					resolving (5)
					> version: d/r/e/y/t/e
					TRYING: d
					> version: d/r/e/y/t/e
					TRYING: d
					> version: d/r/ey/t/e
					TRYING: d
					> version: d/r/ey/t/e
					TRYING: d
					> version: d/r/ey/t/e
					TRYING: d
					RESULT:  ['d']
				ANALYSING: dric
					resolving (2)
					> version: d/r/i/c
					TRYING: d
					> version: d/r/i/c
					TRYING: d
					RESULT:  ['d']
				ANALYSING: drict
					resolving (2)
					> version: d/r/i/c/t
					TRYING: d
					> version: d/r/i/c/t
					TRYING: d
					RESULT:  ['d']
				ANALYSING: dright
					resolving (4)
					> version: d/r/i/g/h/t
					TRYING: d
					> version: d/r/i/g/h/t
					TRYING: d
					> version: d/r/i/gh/t
					TRYING: d
					> version: d/r/i/gh/t
					TRYING: d
					RESULT:  ['d']
				ANALYSING: drigt
					resolving (2)
					> version: d/r/i/g/t
					TRYING: d
					> version: d/r/i/g/t
					TRYING: d
					RESULT:  ['d']
				ANALYSING: drih
					resolving (2)
					> version: d/r/i/h
					TRYING: d
					> version: d/r/i/h
					TRYING: d
					RESULT:  ['d']
				ANALYSING: driht
					resolving (2)
					> version: d/r/i/h/t
					TRYING: d
					> version: d/r/i/h/t
					TRYING: d
					RESULT:  ['d']
				ANALYSING: drihðt
					resolving (4)
					> version: d/r/i/h/ð/t
					TRYING: d
					> version: d/r/i/h/ð/t
					TRYING: d
					> version: d/r/i/hð/t
					TRYING: d
					> version: d/r/i/hð/t
					TRYING: d
					RESULT:  ['d']
				ANALYSING: drihh
					resolving (4)
					> version: d/r/i/h/h
					TRYING: d
					> version: d/r/i/h/h
					TRYING: d
					> version: d/r/i/hh
					TRYING: d
					> version: d/r/i/hh
					TRYING: d
					RESULT:  ['d']
				ANALYSING: drihht
					resolving (4)
					> version: d/r/i/h/h/t
					TRYING: d
					> version: d/r/i/h/h/t
					TRYING: d
					> version: d/r/i/hh/t
					TRYING: d
					> version: d/r/i/hh/t
					TRYING: d
					RESULT:  ['d']
				ANALYSING: drihte
					resolving (2)
					> version: d/r/i/h/t/e
					TRYING: d
					> version: d/r/i/h/t/e
					TRYING: d
					RESULT:  ['d']
				ANALYSING: drich
					resolving (4)
					> version: d/r/i/c/h
					TRYING: d
					> version: d/r/i/c/h
					TRYING: d
					> version: d/r/i/ch
					TRYING: d
					> version: d/r/i/ch
					TRYING: d
					RESULT:  ['d']
				ANALYSING: dricht
					resolving (4)
					> version: d/r/i/c/h/t
					TRYING: d
					> version: d/r/i/c/h/t
					TRYING: d
					> version: d/r/i/ch/t
					TRYING: d
					> version: d/r/i/ch/t
					TRYING: d
					RESULT:  ['d']
				ANALYSING: drikte
					resolving (2)
					> version: d/r/i/k/t/e
					TRYING: d
					> version: d/r/i/k/t/e
					TRYING: d
					RESULT:  ['d']
				ANALYSING: drist
					resolving (2)
					> version: d/r/i/s/t
					TRYING: d
					> version: d/r/i/s/t
					TRYING: d
					RESULT:  ['d']
				ANALYSING: driste
					resolving (2)
					> version: d/r/i/s/t/e
					TRYING: d
					> version: d/r/i/s/t/e
					TRYING: d
					RESULT:  ['d']
				ANALYSING: drith
					resolving (4)
					> version: d/r/i/t/h
					TRYING: d
					> version: d/r/i/t/h
					TRYING: d
					> version: d/r/i/th
					TRYING: d
					> version: d/r/i/th
					TRYING: d
					RESULT:  ['d']
				ANALYSING: drithe
					resolving (4)
					> version: d/r/i/t/h/e
					TRYING: d
					> version: d/r/i/t/h/e
					TRYING: d
					> version: d/r/i/th/e
					TRYING: d
					> version: d/r/i/th/e
					TRYING: d
					RESULT:  ['d']
				ANALYSING: dritht
					resolving (4)
					> version: d/r/i/t/h/t
					TRYING: d
					> version: d/r/i/t/h/t
					TRYING: d
					> version: d/r/i/th/t
					TRYING: d
					> version: d/r/i/th/t
					TRYING: d
					RESULT:  ['d']
				ANALYSING: dritt
					resolving (4)
					> version: d/r/i/t/t
					TRYING: d
					> version: d/r/i/t/t
					TRYING: d
					> version: d/r/i/tt
					TRYING: d
					> version: d/r/i/tt
					TRYING: d
					RESULT:  ['d']
				ANALYSING: dritte
					resolving (4)
					> version: d/r/i/t/t/e
					TRYING: d
					> version: d/r/i/t/t/e
					TRYING: d
					> version: d/r/i/tt/e
					TRYING: d
					> version: d/r/i/tt/e
					TRYING: d
					RESULT:  ['d']
				ANALYSING: driȝt
					resolving (2)
					> version: d/r/i/ȝ/t
					TRYING: d
					> version: d/r/i/ȝ/t
					TRYING: d
					RESULT:  ['d']
				ANALYSING: driȝte
					resolving (2)
					> version: d/r/i/ȝ/t/e
					TRYING: d
					> version: d/r/i/ȝ/t/e
					TRYING: d
					RESULT:  ['d']
				ANALYSING: dryht
					resolving (3)
					> version: d/r/y/h/t
					TRYING: d
					> version: d/r/y/h/t
					TRYING: d
					> version: d/r/yh/t
					TRYING: d
					RESULT:  ['d']
				ANALYSING: dryhte
					resolving (3)
					> version: d/r/y/h/t/e
					TRYING: d
					> version: d/r/y/h/t/e
					TRYING: d
					> version: d/r/yh/t/e
					TRYING: d
					RESULT:  ['d']
				ANALYSING: e
					resolving (1)
					> version: e
					TRYING: e
					RESULT:  ['_']
				adding dashed alternative: ['_', 'e']
				e(V)
_/e(AV)
				ANALYSING: en
					resolving (1)
					> version: e/n
					TRYING: e
					RESULT:  ['_']
				adding dashed alternative: ['_', 'e', 'n']
				e/n(VC)
_/e/n(AVC)
				ANALYSING: in
					resolving (2)
					> version: i/n
					TRYING: i
					> version: i/n
					TRYING: i
					RESULT:  ['i']
			___CCVCCCV : 1___
				ANALYSING: drichte
				adding littera based on matching pattern
				ANALYSING: drithte
				adding littera based on matching pattern
				ANALYSING: driȝtte
				adding littera based on matching pattern
				ANALYSING: dreyte
					resolving (5)
					> version: d/r/e/y/t/e
					TRYING: r
					> version: d/r/e/y/t/e
					TRYING: r
					> version: d/r/ey/t/e
					TRYING: r
					> version: d/r/ey/t/e
					TRYING: r
					> version: d/r/ey/t/e
					TRYING: r
					RESULT:  ['r']
				ANALYSING: dric
					resolving (2)
					> version: d/r/i/c
					TRYING: r
					> version: d/r/i/c
					TRYING: r
					RESULT:  ['r']
				ANALYSING: drict
					resolving (2)
					> version: d/r/i/c/t
					TRYING: r
					> version: d/r/i/c/t
					TRYING: r
					RESULT:  ['r']
				ANALYSING: dright
					resolving (4)
					> version: d/r/i/g/h/t
					TRYING: r
					> version: d/r/i/g/h/t
					TRYING: r
					> version: d/r/i/gh/t
					TRYING: r
					> version: d/r/i/gh/t
					TRYING: r
					RESULT:  ['r']
				ANALYSING: drigt
					resolving (2)
					> version: d/r/i/g/t
					TRYING: r
					> version: d/r/i/g/t
					TRYING: r
					RESULT:  ['r']
				ANALYSING: drih
					resolving (2)
					> version: d/r/i/h
					TRYING: r
					> version: d/r/i/h
					TRYING: r
					RESULT:  ['r']
				ANALYSING: driht
					resolving (2)
					> version: d/r/i/h/t
					TRYING: r
					> version: d/r/i/h/t
					TRYING: r
					RESULT:  ['r']
				ANALYSING: drihðt
					resolving (4)
					> version: d/r/i/h/ð/t
					TRYING: r
					> version: d/r/i/h/ð/t
					TRYING: r
					> version: d/r/i/hð/t
					TRYING: r
					> version: d/r/i/hð/t
					TRYING: r
					RESULT:  ['r']
				ANALYSING: drihh
					resolving (4)
					> version: d/r/i/h/h
					TRYING: r
					> version: d/r/i/h/h
					TRYING: r
					> version: d/r/i/hh
					TRYING: r
					> version: d/r/i/hh
					TRYING: r
					RESULT:  ['r']
				ANALYSING: drihht
					resolving (4)
					> version: d/r/i/h/h/t
					TRYING: r
					> version: d/r/i/h/h/t
					TRYING: r
					> version: d/r/i/hh/t
					TRYING: r
					> version: d/r/i/hh/t
					TRYING: r
					RESULT:  ['r']
				ANALYSING: drihte
					resolving (2)
					> version: d/r/i/h/t/e
					TRYING: r
					> version: d/r/i/h/t/e
					TRYING: r
					RESULT:  ['r']
				ANALYSING: drich
					resolving (4)
					> version: d/r/i/c/h
					TRYING: r
					> version: d/r/i/c/h
					TRYING: r
					> version: d/r/i/ch
					TRYING: r
					> version: d/r/i/ch
					TRYING: r
					RESULT:  ['r']
				ANALYSING: dricht
					resolving (4)
					> version: d/r/i/c/h/t
					TRYING: r
					> version: d/r/i/c/h/t
					TRYING: r
					> version: d/r/i/ch/t
					TRYING: r
					> version: d/r/i/ch/t
					TRYING: r
					RESULT:  ['r']
				ANALYSING: drikte
					resolving (2)
					> version: d/r/i/k/t/e
					TRYING: r
					> version: d/r/i/k/t/e
					TRYING: r
					RESULT:  ['r']
				ANALYSING: drist
					resolving (2)
					> version: d/r/i/s/t
					TRYING: r
					> version: d/r/i/s/t
					TRYING: r
					RESULT:  ['r']
				ANALYSING: driste
					resolving (2)
					> version: d/r/i/s/t/e
					TRYING: r
					> version: d/r/i/s/t/e
					TRYING: r
					RESULT:  ['r']
				ANALYSING: drith
					resolving (4)
					> version: d/r/i/t/h
					TRYING: r
					> version: d/r/i/t/h
					TRYING: r
					> version: d/r/i/th
					TRYING: r
					> version: d/r/i/th
					TRYING: r
					RESULT:  ['r']
				ANALYSING: drithe
					resolving (4)
					> version: d/r/i/t/h/e
					TRYING: r
					> version: d/r/i/t/h/e
					TRYING: r
					> version: d/r/i/th/e
					TRYING: r
					> version: d/r/i/th/e
					TRYING: r
					RESULT:  ['r']
				ANALYSING: dritht
					resolving (4)
					> version: d/r/i/t/h/t
					TRYING: r
					> version: d/r/i/t/h/t
					TRYING: r
					> version: d/r/i/th/t
					TRYING: r
					> version: d/r/i/th/t
					TRYING: r
					RESULT:  ['r']
				ANALYSING: dritt
					resolving (4)
					> version: d/r/i/t/t
					TRYING: r
					> version: d/r/i/t/t
					TRYING: r
					> version: d/r/i/tt
					TRYING: r
					> version: d/r/i/tt
					TRYING: r
					RESULT:  ['r']
				ANALYSING: dritte
					resolving (4)
					> version: d/r/i/t/t/e
					TRYING: r
					> version: d/r/i/t/t/e
					TRYING: r
					> version: d/r/i/tt/e
					TRYING: r
					> version: d/r/i/tt/e
					TRYING: r
					RESULT:  ['r']
				ANALYSING: driȝt
					resolving (2)
					> version: d/r/i/ȝ/t
					TRYING: r
					> version: d/r/i/ȝ/t
					TRYING: r
					RESULT:  ['r']
				ANALYSING: driȝte
					resolving (2)
					> version: d/r/i/ȝ/t/e
					TRYING: r
					> version: d/r/i/ȝ/t/e
					TRYING: r
					RESULT:  ['r']
				ANALYSING: dryht
					resolving (3)
					> version: d/r/y/h/t
					TRYING: r
					> version: d/r/y/h/t
					TRYING: r
					> version: d/r/yh/t
					TRYING: r
					RESULT:  ['r']
				ANALYSING: dryhte
					resolving (3)
					> version: d/r/y/h/t/e
					TRYING: r
					> version: d/r/y/h/t/e
					TRYING: r
					> version: d/r/yh/t/e
					TRYING: r
					RESULT:  ['r']
				ANALYSING: e
					resolving (2)
					> version: e
					> version: _/e
					TRYING: e
					RESULT:  ['_']
				adding dashed alternative: ['e', '_']
				adding dashed alternative: ['_', '_', 'e']
				e(V)
_/e(AV)
e/_(VA)
_/_/e(AAV)
				ANALYSING: en
					resolving (2)
					> version: e/n
					TRYING: n
					> version: _/e/n
					TRYING: e
					RESULT:  ['n']
				ANALYSING: in
					resolving (2)
					> version: i/n
					TRYING: n
					> version: i/n
					TRYING: n
					RESULT:  ['n']
			___CCVCCCV : 2___
				ANALYSING: drichte
				adding littera based on matching pattern
				ANALYSING: drithte
				adding littera based on matching pattern
				ANALYSING: driȝtte
				adding littera based on matching pattern
				ANALYSING: dreyte
					resolving (5)
					> version: d/r/e/y/t/e
					TRYING: e
					> version: d/r/e/y/t/e
					TRYING: e
					> version: d/r/ey/t/e
					TRYING: ey
					>>> MULTIPLE RESOLVE OPTIONS: {'e', 'ey'}
					> version: d/r/ey/t/e
					TRYING: ey
					>>> MULTIPLE RESOLVE OPTIONS: {'e', 'ey'}
					> version: d/r/ey/t/e
					TRYING: ey
					>>> MULTIPLE RESOLVE OPTIONS: {'e', 'ey'}
					RESULT:  ['e', 'ey']
				ANALYSING: dric
					resolving (2)
					> version: d/r/i/c
					TRYING: i
					> version: d/r/i/c
					TRYING: i
					RESULT:  ['i']
				ANALYSING: drict
					resolving (2)
					> version: d/r/i/c/t
					TRYING: i
					> version: d/r/i/c/t
					TRYING: i
					RESULT:  ['i']
				ANALYSING: dright
					resolving (4)
					> version: d/r/i/g/h/t
					TRYING: i
					> version: d/r/i/g/h/t
					TRYING: i
					> version: d/r/i/gh/t
					TRYING: i
					> version: d/r/i/gh/t
					TRYING: i
					RESULT:  ['i']
				ANALYSING: drigt
					resolving (2)
					> version: d/r/i/g/t
					TRYING: i
					> version: d/r/i/g/t
					TRYING: i
					RESULT:  ['i']
				ANALYSING: drih
					resolving (2)
					> version: d/r/i/h
					TRYING: i
					> version: d/r/i/h
					TRYING: i
					RESULT:  ['i']
				ANALYSING: driht
					resolving (2)
					> version: d/r/i/h/t
					TRYING: i
					> version: d/r/i/h/t
					TRYING: i
					RESULT:  ['i']
				ANALYSING: drihðt
					resolving (4)
					> version: d/r/i/h/ð/t
					TRYING: i
					> version: d/r/i/h/ð/t
					TRYING: i
					> version: d/r/i/hð/t
					TRYING: i
					> version: d/r/i/hð/t
					TRYING: i
					RESULT:  ['i']
				ANALYSING: drihh
					resolving (4)
					> version: d/r/i/h/h
					TRYING: i
					> version: d/r/i/h/h
					TRYING: i
					> version: d/r/i/hh
					TRYING: i
					> version: d/r/i/hh
					TRYING: i
					RESULT:  ['i']
				ANALYSING: drihht
					resolving (4)
					> version: d/r/i/h/h/t
					TRYING: i
					> version: d/r/i/h/h/t
					TRYING: i
					> version: d/r/i/hh/t
					TRYING: i
					> version: d/r/i/hh/t
					TRYING: i
					RESULT:  ['i']
				ANALYSING: drihte
					resolving (2)
					> version: d/r/i/h/t/e
					TRYING: i
					> version: d/r/i/h/t/e
					TRYING: i
					RESULT:  ['i']
				ANALYSING: drich
					resolving (4)
					> version: d/r/i/c/h
					TRYING: i
					> version: d/r/i/c/h
					TRYING: i
					> version: d/r/i/ch
					TRYING: i
					> version: d/r/i/ch
					TRYING: i
					RESULT:  ['i']
				ANALYSING: dricht
					resolving (4)
					> version: d/r/i/c/h/t
					TRYING: i
					> version: d/r/i/c/h/t
					TRYING: i
					> version: d/r/i/ch/t
					TRYING: i
					> version: d/r/i/ch/t
					TRYING: i
					RESULT:  ['i']
				ANALYSING: drikte
					resolving (2)
					> version: d/r/i/k/t/e
					TRYING: i
					> version: d/r/i/k/t/e
					TRYING: i
					RESULT:  ['i']
				ANALYSING: drist
					resolving (2)
					> version: d/r/i/s/t
					TRYING: i
					> version: d/r/i/s/t
					TRYING: i
					RESULT:  ['i']
				ANALYSING: driste
					resolving (2)
					> version: d/r/i/s/t/e
					TRYING: i
					> version: d/r/i/s/t/e
					TRYING: i
					RESULT:  ['i']
				ANALYSING: drith
					resolving (4)
					> version: d/r/i/t/h
					TRYING: i
					> version: d/r/i/t/h
					TRYING: i
					> version: d/r/i/th
					TRYING: i
					> version: d/r/i/th
					TRYING: i
					RESULT:  ['i']
				ANALYSING: drithe
					resolving (4)
					> version: d/r/i/t/h/e
					TRYING: i
					> version: d/r/i/t/h/e
					TRYING: i
					> version: d/r/i/th/e
					TRYING: i
					> version: d/r/i/th/e
					TRYING: i
					RESULT:  ['i']
				ANALYSING: dritht
					resolving (4)
					> version: d/r/i/t/h/t
					TRYING: i
					> version: d/r/i/t/h/t
					TRYING: i
					> version: d/r/i/th/t
					TRYING: i
					> version: d/r/i/th/t
					TRYING: i
					RESULT:  ['i']
				ANALYSING: dritt
					resolving (4)
					> version: d/r/i/t/t
					TRYING: i
					> version: d/r/i/t/t
					TRYING: i
					> version: d/r/i/tt
					TRYING: i
					> version: d/r/i/tt
					TRYING: i
					RESULT:  ['i']
				ANALYSING: dritte
					resolving (4)
					> version: d/r/i/t/t/e
					TRYING: i
					> version: d/r/i/t/t/e
					TRYING: i
					> version: d/r/i/tt/e
					TRYING: i
					> version: d/r/i/tt/e
					TRYING: i
					RESULT:  ['i']
				ANALYSING: driȝt
					resolving (2)
					> version: d/r/i/ȝ/t
					TRYING: i
					> version: d/r/i/ȝ/t
					TRYING: i
					RESULT:  ['i']
				ANALYSING: driȝte
					resolving (2)
					> version: d/r/i/ȝ/t/e
					TRYING: i
					> version: d/r/i/ȝ/t/e
					TRYING: i
					RESULT:  ['i']
				ANALYSING: dryht
					resolving (3)
					> version: d/r/y/h/t
					TRYING: y
					> version: d/r/y/h/t
					TRYING: y
					> version: d/r/yh/t
					TRYING: yh
					RESULT:  ['y']
				ANALYSING: dryhte
					resolving (3)
					> version: d/r/y/h/t/e
					TRYING: y
					> version: d/r/y/h/t/e
					TRYING: y
					> version: d/r/yh/t/e
					TRYING: yh
					RESULT:  ['y']
				ANALYSING: e
					resolving (4)
					> version: e
					> version: _/e
					> version: e/_
					> version: _/_/e
					TRYING: e
					RESULT:  ['e']
				ANALYSING: en
					resolving (2)
					> version: e/n
					> version: _/e/n
					TRYING: n
					RESULT:  ['_']
				adding dashed alternative: ['e', 'n', '_']
				adding dashed alternative: ['_', 'e', '_', 'n']
				e/n(VC)
_/e/n(AVC)
e/n/_(VCA)
_/e/_/n(AVAC)
				ANALYSING: in
					resolving (2)
					> version: i/n
					> version: i/n
					RESULT:  ['_']
				adding dashed alternative: ['i', 'n', '_']
				adding dashed alternative: ['i', 'n', '_']
				i/n(CC)
i/n(VC)
i/n/_(ACA)
i/n/_(ACA)
			___CCVCCCV : 3___
				ANALYSING: drichte
				adding littera based on matching pattern
				ANALYSING: drithte
				adding littera based on matching pattern
				ANALYSING: driȝtte
				adding littera based on matching pattern
				ANALYSING: dreyte
					resolving (5)
					> version: d/r/e/y/t/e
					TRYING: y
					> version: d/r/e/y/t/e
					TRYING: y
					> version: d/r/ey/t/e
					TRYING: t
					>>> MULTIPLE RESOLVE OPTIONS: {'t', 'y'}
					> version: d/r/ey/t/e
					TRYING: t
					>>> MULTIPLE RESOLVE OPTIONS: {'t', 'y'}
					> version: d/r/ey/t/e
					TRYING: t
					>>> MULTIPLE RESOLVE OPTIONS: {'t', 'y'}
					RESULT:  ['t', 'y']
				ANALYSING: dric
					resolving (2)
					> version: d/r/i/c
					TRYING: c
					> version: d/r/i/c
					TRYING: c
					RESULT:  ['c']
				ANALYSING: drict
					resolving (2)
					> version: d/r/i/c/t
					TRYING: c
					> version: d/r/i/c/t
					TRYING: c
					RESULT:  ['c']
				ANALYSING: dright
					resolving (4)
					> version: d/r/i/g/h/t
					TRYING: g
					> version: d/r/i/g/h/t
					TRYING: g
					> version: d/r/i/gh/t
					TRYING: gh
					>>> MULTIPLE RESOLVE OPTIONS: {'g', 'gh'}
					> version: d/r/i/gh/t
					TRYING: gh
					>>> MULTIPLE RESOLVE OPTIONS: {'g', 'gh'}
					RESULT:  ['g', 'gh']
				ANALYSING: drigt
					resolving (2)
					> version: d/r/i/g/t
					TRYING: g
					> version: d/r/i/g/t
					TRYING: g
					RESULT:  ['g']
				ANALYSING: drih
					resolving (2)
					> version: d/r/i/h
					TRYING: h
					> version: d/r/i/h
					TRYING: h
					RESULT:  ['h']
				ANALYSING: driht
					resolving (2)
					> version: d/r/i/h/t
					TRYING: h
					> version: d/r/i/h/t
					TRYING: h
					RESULT:  ['h']
				ANALYSING: drihðt
					resolving (4)
					> version: d/r/i/h/ð/t
					TRYING: h
					> version: d/r/i/h/ð/t
					TRYING: h
					> version: d/r/i/hð/t
					TRYING: hð
					>>> MULTIPLE RESOLVE OPTIONS: {'hð', 'h'}
					> version: d/r/i/hð/t
					TRYING: hð
					>>> MULTIPLE RESOLVE OPTIONS: {'hð', 'h'}
					RESULT:  ['hð', 'h']
				ANALYSING: drihh
					resolving (4)
					> version: d/r/i/h/h
					TRYING: h
					> version: d/r/i/h/h
					TRYING: h
					> version: d/r/i/hh
					TRYING: hh
					>>> MULTIPLE RESOLVE OPTIONS: {'hh', 'h'}
					> version: d/r/i/hh
					TRYING: hh
					>>> MULTIPLE RESOLVE OPTIONS: {'hh', 'h'}
					RESULT:  ['hh', 'h']
				ANALYSING: drihht
					resolving (4)
					> version: d/r/i/h/h/t
					TRYING: h
					> version: d/r/i/h/h/t
					TRYING: h
					> version: d/r/i/hh/t
					TRYING: hh
					>>> MULTIPLE RESOLVE OPTIONS: {'hh', 'h'}
					> version: d/r/i/hh/t
					TRYING: hh
					>>> MULTIPLE RESOLVE OPTIONS: {'hh', 'h'}
					RESULT:  ['hh', 'h']
				ANALYSING: drihte
					resolving (2)
					> version: d/r/i/h/t/e
					TRYING: h
					> version: d/r/i/h/t/e
					TRYING: h
					RESULT:  ['h']
				ANALYSING: drich
					resolving (4)
					> version: d/r/i/c/h
					TRYING: c
					> version: d/r/i/c/h
					TRYING: c
					> version: d/r/i/ch
					TRYING: ch
					>>> MULTIPLE RESOLVE OPTIONS: {'ch', 'c'}
					> version: d/r/i/ch
					TRYING: ch
					>>> MULTIPLE RESOLVE OPTIONS: {'ch', 'c'}
					RESULT:  ['ch', 'c']
				ANALYSING: dricht
					resolving (4)
					> version: d/r/i/c/h/t
					TRYING: c
					> version: d/r/i/c/h/t
					TRYING: c
					> version: d/r/i/ch/t
					TRYING: ch
					>>> MULTIPLE RESOLVE OPTIONS: {'ch', 'c'}
					> version: d/r/i/ch/t
					TRYING: ch
					>>> MULTIPLE RESOLVE OPTIONS: {'ch', 'c'}
					RESULT:  ['ch', 'c']
				ANALYSING: drikte
					resolving (2)
					> version: d/r/i/k/t/e
					TRYING: k
					> version: d/r/i/k/t/e
					TRYING: k
					RESULT:  ['k']
				ANALYSING: drist
					resolving (2)
					> version: d/r/i/s/t
					TRYING: s
					> version: d/r/i/s/t
					TRYING: s
					RESULT:  ['s']
				ANALYSING: driste
					resolving (2)
					> version: d/r/i/s/t/e
					TRYING: s
					> version: d/r/i/s/t/e
					TRYING: s
					RESULT:  ['s']
				ANALYSING: drith
					resolving (4)
					> version: d/r/i/t/h
					TRYING: t
					> version: d/r/i/t/h
					TRYING: t
					> version: d/r/i/th
					TRYING: th
					>>> MULTIPLE RESOLVE OPTIONS: {'t', 'th'}
					> version: d/r/i/th
					TRYING: th
					>>> MULTIPLE RESOLVE OPTIONS: {'t', 'th'}
					RESULT:  ['t', 'th']
				ANALYSING: drithe
					resolving (4)
					> version: d/r/i/t/h/e
					TRYING: t
					> version: d/r/i/t/h/e
					TRYING: t
					> version: d/r/i/th/e
					TRYING: th
					>>> MULTIPLE RESOLVE OPTIONS: {'t', 'th'}
					> version: d/r/i/th/e
					TRYING: th
					>>> MULTIPLE RESOLVE OPTIONS: {'t', 'th'}
					RESULT:  ['t', 'th']
				ANALYSING: dritht
					resolving (4)
					> version: d/r/i/t/h/t
					TRYING: t
					> version: d/r/i/t/h/t
					TRYING: t
					> version: d/r/i/th/t
					TRYING: th
					>>> MULTIPLE RESOLVE OPTIONS: {'t', 'th'}
					> version: d/r/i/th/t
					TRYING: th
					>>> MULTIPLE RESOLVE OPTIONS: {'t', 'th'}
					RESULT:  ['t', 'th']
				ANALYSING: dritt
					resolving (4)
					> version: d/r/i/t/t
					TRYING: t
					> version: d/r/i/t/t
					TRYING: t
					> version: d/r/i/tt
					TRYING: tt
					>>> MULTIPLE RESOLVE OPTIONS: {'tt', 't'}
					> version: d/r/i/tt
					TRYING: tt
					>>> MULTIPLE RESOLVE OPTIONS: {'tt', 't'}
					RESULT:  ['tt', 't']
				ANALYSING: dritte
					resolving (4)
					> version: d/r/i/t/t/e
					TRYING: t
					> version: d/r/i/t/t/e
					TRYING: t
					> version: d/r/i/tt/e
					TRYING: tt
					>>> MULTIPLE RESOLVE OPTIONS: {'tt', 't'}
					> version: d/r/i/tt/e
					TRYING: tt
					>>> MULTIPLE RESOLVE OPTIONS: {'tt', 't'}
					RESULT:  ['tt', 't']
				ANALYSING: driȝt
					resolving (2)
					> version: d/r/i/ȝ/t
					TRYING: ȝ
					> version: d/r/i/ȝ/t
					TRYING: ȝ
					RESULT:  ['ȝ']
				ANALYSING: driȝte
					resolving (2)
					> version: d/r/i/ȝ/t/e
					TRYING: ȝ
					> version: d/r/i/ȝ/t/e
					TRYING: ȝ
					RESULT:  ['ȝ']
				ANALYSING: dryht
					resolving (3)
					> version: d/r/y/h/t
					TRYING: h
					> version: d/r/y/h/t
					TRYING: h
					> version: d/r/yh/t
					TRYING: t
					>>> MULTIPLE RESOLVE OPTIONS: {'t', 'h'}
					RESULT:  ['t', 'h']
				ANALYSING: dryhte
					resolving (3)
					> version: d/r/y/h/t/e
					TRYING: h
					> version: d/r/y/h/t/e
					TRYING: h
					> version: d/r/yh/t/e
					TRYING: t
					>>> MULTIPLE RESOLVE OPTIONS: {'t', 'h'}
					RESULT:  ['t', 'h']
				ANALYSING: e
					resolving (4)
					> version: e
					> version: _/e
					> version: e/_
					> version: _/_/e
					RESULT:  ['_']
				adding dashed alternative: ['e', '_']
				adding dashed alternative: ['_', 'e', '_']
				adding dashed alternative: ['e', '_', '_']
				adding dashed alternative: ['_', '_', 'e', '_']
				e(V)
_/e(AV)
e/_(VA)
_/_/e(AAV)
e/_(VA)
_/e/_(AVA)
e/_/_(VAA)
_/_/e/_(AAVA)
				ANALYSING: en
					resolving (4)
					> version: e/n
					> version: _/e/n
					> version: e/n/_
					> version: _/e/_/n
					TRYING: n
					RESULT:  ['n']
				ANALYSING: in
					resolving (4)
					> version: i/n
					> version: i/n
					> version: i/n/_
					> version: i/n/_
					RESULT:  ['_']
				adding dashed alternative: ['i', 'n', '_']
				adding dashed alternative: ['i', 'n', '_']
				adding dashed alternative: ['i', 'n', '_', '_']
				adding dashed alternative: ['i', 'n', '_', '_']
				i/n(CC)
i/n(VC)
i/n/_(ACA)
i/n/_(ACA)
i/n/_(ACA)
i/n/_(ACA)
i/n/_/_(ACAA)
i/n/_/_(ACAA)
			___CCVCCCV : 4___
				ANALYSING: drichte
				adding littera based on matching pattern
				ANALYSING: drithte
				adding littera based on matching pattern
				ANALYSING: driȝtte
				adding littera based on matching pattern
				ANALYSING: dreyte
					resolving (5)
					> version: d/r/e/y/t/e
					TRYING: t
					> version: d/r/e/y/t/e
					TRYING: t
					> version: d/r/ey/t/e
					TRYING: e
					> version: d/r/ey/t/e
					TRYING: e
					> version: d/r/ey/t/e
					TRYING: e
					RESULT:  ['t']
				ANALYSING: dric
					resolving (2)
					> version: d/r/i/c
					> version: d/r/i/c
					RESULT:  ['_']
				adding dashed alternative: ['d', 'r', 'i', 'c', '_']
				adding dashed alternative: ['d', 'r', 'i', 'c', '_']
				d/r/i/c(CCCC)
d/r/i/c(CCVC)
d/r/i/c/_(CCACA)
d/r/i/c/_(CCACA)
				ANALYSING: drict
					resolving (2)
					> version: d/r/i/c/t
					TRYING: t
					> version: d/r/i/c/t
					TRYING: t
					RESULT:  ['t']
				ANALYSING: dright
					resolving (4)
					> version: d/r/i/g/h/t
					TRYING: h
					> version: d/r/i/g/h/t
					TRYING: h
					> version: d/r/i/gh/t
					TRYING: t
					>>> MULTIPLE RESOLVE OPTIONS: {'t', 'h'}
					> version: d/r/i/gh/t
					TRYING: t
					>>> MULTIPLE RESOLVE OPTIONS: {'t', 'h'}
					RESULT:  ['t', 'h']
				ANALYSING: drigt
					resolving (2)
					> version: d/r/i/g/t
					TRYING: t
					> version: d/r/i/g/t
					TRYING: t
					RESULT:  ['t']
				ANALYSING: drih
					resolving (2)
					> version: d/r/i/h
					> version: d/r/i/h
					RESULT:  ['_']
				adding dashed alternative: ['d', 'r', 'i', 'h', '_']
				adding dashed alternative: ['d', 'r', 'i', 'h', '_']
				d/r/i/h(CCCC)
d/r/i/h(CCVC)
d/r/i/h/_(CCACA)
d/r/i/h/_(CCACA)
				ANALYSING: driht
					resolving (2)
					> version: d/r/i/h/t
					TRYING: t
					> version: d/r/i/h/t
					TRYING: t
					RESULT:  ['t']
				ANALYSING: drihðt
					resolving (4)
					> version: d/r/i/h/ð/t
					TRYING: ð
					> version: d/r/i/h/ð/t
					TRYING: ð
					> version: d/r/i/hð/t
					TRYING: t
					>>> MULTIPLE RESOLVE OPTIONS: {'t', 'ð'}
					> version: d/r/i/hð/t
					TRYING: t
					>>> MULTIPLE RESOLVE OPTIONS: {'t', 'ð'}
					RESULT:  ['t', 'ð']
				ANALYSING: drihh
					resolving (4)
					> version: d/r/i/h/h
					TRYING: h
					> version: d/r/i/h/h
					TRYING: h
					> version: d/r/i/hh
					> version: d/r/i/hh
					RESULT:  ['h']
				ANALYSING: drihht
					resolving (4)
					> version: d/r/i/h/h/t
					TRYING: h
					> version: d/r/i/h/h/t
					TRYING: h
					> version: d/r/i/hh/t
					TRYING: t
					>>> MULTIPLE RESOLVE OPTIONS: {'t', 'h'}
					> version: d/r/i/hh/t
					TRYING: t
					>>> MULTIPLE RESOLVE OPTIONS: {'t', 'h'}
					RESULT:  ['t', 'h']
				ANALYSING: drihte
					resolving (2)
					> version: d/r/i/h/t/e
					TRYING: t
					> version: d/r/i/h/t/e
					TRYING: t
					RESULT:  ['t']
				ANALYSING: drich
					resolving (4)
					> version: d/r/i/c/h
					TRYING: h
					> version: d/r/i/c/h
					TRYING: h
					> version: d/r/i/ch
					> version: d/r/i/ch
					RESULT:  ['h']
				ANALYSING: dricht
					resolving (4)
					> version: d/r/i/c/h/t
					TRYING: h
					> version: d/r/i/c/h/t
					TRYING: h
					> version: d/r/i/ch/t
					TRYING: t
					>>> MULTIPLE RESOLVE OPTIONS: {'t', 'h'}
					> version: d/r/i/ch/t
					TRYING: t
					>>> MULTIPLE RESOLVE OPTIONS: {'t', 'h'}
					RESULT:  ['t', 'h']
				ANALYSING: drikte
					resolving (2)
					> version: d/r/i/k/t/e
					TRYING: t
					> version: d/r/i/k/t/e
					TRYING: t
					RESULT:  ['t']
				ANALYSING: drist
					resolving (2)
					> version: d/r/i/s/t
					TRYING: t
					> version: d/r/i/s/t
					TRYING: t
					RESULT:  ['t']
				ANALYSING: driste
					resolving (2)
					> version: d/r/i/s/t/e
					TRYING: t
					> version: d/r/i/s/t/e
					TRYING: t
					RESULT:  ['t']
				ANALYSING: drith
					resolving (4)
					> version: d/r/i/t/h
					TRYING: h
					> version: d/r/i/t/h
					TRYING: h
					> version: d/r/i/th
					> version: d/r/i/th
					RESULT:  ['h']
				ANALYSING: drithe
					resolving (4)
					> version: d/r/i/t/h/e
					TRYING: h
					> version: d/r/i/t/h/e
					TRYING: h
					> version: d/r/i/th/e
					TRYING: e
					> version: d/r/i/th/e
					TRYING: e
					RESULT:  ['h']
				ANALYSING: dritht
					resolving (4)
					> version: d/r/i/t/h/t
					TRYING: h
					> version: d/r/i/t/h/t
					TRYING: h
					> version: d/r/i/th/t
					TRYING: t
					>>> MULTIPLE RESOLVE OPTIONS: {'t', 'h'}
					> version: d/r/i/th/t
					TRYING: t
					>>> MULTIPLE RESOLVE OPTIONS: {'t', 'h'}
					RESULT:  ['t', 'h']
				ANALYSING: dritt
					resolving (4)
					> version: d/r/i/t/t
					TRYING: t
					> version: d/r/i/t/t
					TRYING: t
					> version: d/r/i/tt
					> version: d/r/i/tt
					RESULT:  ['t']
				ANALYSING: dritte
					resolving (4)
					> version: d/r/i/t/t/e
					TRYING: t
					> version: d/r/i/t/t/e
					TRYING: t
					> version: d/r/i/tt/e
					TRYING: e
					> version: d/r/i/tt/e
					TRYING: e
					RESULT:  ['t']
				ANALYSING: driȝt
					resolving (2)
					> version: d/r/i/ȝ/t
					TRYING: t
					> version: d/r/i/ȝ/t
					TRYING: t
					RESULT:  ['t']
				ANALYSING: driȝte
					resolving (2)
					> version: d/r/i/ȝ/t/e
					TRYING: t
					> version: d/r/i/ȝ/t/e
					TRYING: t
					RESULT:  ['t']
				ANALYSING: dryht
					resolving (3)
					> version: d/r/y/h/t
					TRYING: t
					> version: d/r/y/h/t
					TRYING: t
					> version: d/r/yh/t
					RESULT:  ['t']
				ANALYSING: dryhte
					resolving (3)
					> version: d/r/y/h/t/e
					TRYING: t
					> version: d/r/y/h/t/e
					TRYING: t
					> version: d/r/yh/t/e
					TRYING: e
					RESULT:  ['t']
				ANALYSING: e
					resolving (8)
					> version: e
					> version: _/e
					> version: e/_
					> version: _/_/e
					> version: e/_
					> version: _/e/_
					> version: e/_/_
					> version: _/_/e/_
					RESULT:  ['_']
				adding dashed alternative: ['e', '_']
				adding dashed alternative: ['_', 'e', '_']
				adding dashed alternative: ['e', '_', '_']
				adding dashed alternative: ['_', '_', 'e', '_']
				adding dashed alternative: ['e', '_', '_']
				adding dashed alternative: ['_', 'e', '_', '_']
				adding dashed alternative: ['e', '_', '_', '_']
				adding dashed alternative: ['_', '_', 'e', '_', '_']
				e(V)
_/e(AV)
e/_(VA)
_/_/e(AAV)
e/_(VA)
_/e/_(AVA)
e/_/_(VAA)
_/_/e/_(AAVA)
e/_(VA)
_/e/_(AVA)
e/_/_(VAA)
_/_/e/_(AAVA)
e/_/_(VAA)
_/e/_/_(AVAA)
e/_/_/_(VAAA)
_/_/e/_/_(AAVAA)
				ANALYSING: en
					resolving (4)
					> version: e/n
					> version: _/e/n
					> version: e/n/_
					> version: _/e/_/n
					RESULT:  ['_']
				adding dashed alternative: ['e', 'n', '_']
				adding dashed alternative: ['_', 'e', 'n', '_']
				adding dashed alternative: ['e', 'n', '_', '_']
				adding dashed alternative: ['_', 'e', '_', 'n', '_']
				e/n(VC)
_/e/n(AVC)
e/n/_(VCA)
_/e/_/n(AVAC)
e/n/_(VCA)
_/e/n/_(AVCA)
e/n/_/_(VCAA)
_/e/_/n/_(AVACA)
				ANALYSING: in
					resolving (8)
					> version: i/n
					> version: i/n
					> version: i/n/_
					> version: i/n/_
					> version: i/n/_
					> version: i/n/_
					> version: i/n/_/_
					> version: i/n/_/_
					RESULT:  ['_']
				adding dashed alternative: ['i', 'n', '_']
				adding dashed alternative: ['i', 'n', '_']
				adding dashed alternative: ['i', 'n', '_', '_']
				adding dashed alternative: ['i', 'n', '_', '_']
				adding dashed alternative: ['i', 'n', '_', '_']
				adding dashed alternative: ['i', 'n', '_', '_']
				adding dashed alternative: ['i', 'n', '_', '_', '_']
				adding dashed alternative: ['i', 'n', '_', '_', '_']
				i/n(CC)
i/n(VC)
i/n/_(ACA)
i/n/_(ACA)
i/n/_(ACA)
i/n/_(ACA)
i/n/_/_(ACAA)
i/n/_/_(ACAA)
i/n/_(ACA)
i/n/_(ACA)
i/n/_/_(ACAA)
i/n/_/_(ACAA)
i/n/_/_(ACAA)
i/n/_/_(ACAA)
i/n/_/_/_(ACAAA)
i/n/_/_/_(ACAAA)
			___CCVCCCV : 5___
				ANALYSING: drichte
				adding littera based on matching pattern
				ANALYSING: drithte
				adding littera based on matching pattern
				ANALYSING: driȝtte
				adding littera based on matching pattern
				ANALYSING: dreyte
					resolving (5)
					> version: d/r/e/y/t/e
					TRYING: e
					> version: d/r/e/y/t/e
					TRYING: e
					> version: d/r/ey/t/e
					> version: d/r/ey/t/e
					> version: d/r/ey/t/e
					RESULT:  ['_']
				adding dashed alternative: ['d', 'r', 'e', 'y', 't', '_', 'e']
				adding dashed alternative: ['d', 'r', 'e', 'y', 't', '_', 'e']
				adding dashed alternative: ['d', 'r', 'ey', 't', 'e', '_']
				adding dashed alternative: ['d', 'r', 'ey', 't', 'e', '_']
				adding dashed alternative: ['d', 'r', 'ey', 't', 'e', '_']
				d/r/e/y/t/e(CCVCCV)
d/r/e/y/t/e(CCVVCV)
d/r/ey/t/e(CCVCV)
d/r/ey/t/e(CCVCV)
d/r/ey/t/e(CCVCV)
d/r/e/y/t/_/e(CCVACAV)
d/r/e/y/t/_/e(CCVACAV)
d/r/ey/t/e/_(CCVCVA)
d/r/ey/t/e/_(CCVCVA)
d/r/ey/t/e/_(CCVCVA)
				ANALYSING: dric
					resolving (4)
					> version: d/r/i/c
					> version: d/r/i/c
					> version: d/r/i/c/_
					> version: d/r/i/c/_
					RESULT:  ['_']
				adding dashed alternative: ['d', 'r', 'i', 'c', '_']
				adding dashed alternative: ['d', 'r', 'i', 'c', '_']
				adding dashed alternative: ['d', 'r', 'i', 'c', '_', '_']
				adding dashed alternative: ['d', 'r', 'i', 'c', '_', '_']
				d/r/i/c(CCCC)
d/r/i/c(CCVC)
d/r/i/c/_(CCACA)
d/r/i/c/_(CCACA)
d/r/i/c/_(CCACA)
d/r/i/c/_(CCACA)
d/r/i/c/_/_(CCACAA)
d/r/i/c/_/_(CCACAA)
				ANALYSING: drict
					resolving (2)
					> version: d/r/i/c/t
					> version: d/r/i/c/t
					RESULT:  ['_']
				adding dashed alternative: ['d', 'r', 'i', 'c', 't', '_']
				adding dashed alternative: ['d', 'r', 'i', 'c', 't', '_']
				d/r/i/c/t(CCCCC)
d/r/i/c/t(CCVCC)
d/r/i/c/t/_(CCACCA)
d/r/i/c/t/_(CCACCA)
				ANALYSING: dright
					resolving (4)
					> version: d/r/i/g/h/t
					TRYING: t
					> version: d/r/i/g/h/t
					TRYING: t
					> version: d/r/i/gh/t
					> version: d/r/i/gh/t
					RESULT:  ['t']
				ANALYSING: drigt
					resolving (2)
					> version: d/r/i/g/t
					> version: d/r/i/g/t
					RESULT:  ['_']
				adding dashed alternative: ['d', 'r', 'i', 'g', 't', '_']
				adding dashed alternative: ['d', 'r', 'i', 'g', 't', '_']
				d/r/i/g/t(CCCCC)
d/r/i/g/t(CCVCC)
d/r/i/g/t/_(CCACCA)
d/r/i/g/t/_(CCACCA)
				ANALYSING: drih
					resolving (4)
					> version: d/r/i/h
					> version: d/r/i/h
					> version: d/r/i/h/_
					> version: d/r/i/h/_
					RESULT:  ['_']
				adding dashed alternative: ['d', 'r', 'i', 'h', '_']
				adding dashed alternative: ['d', 'r', 'i', 'h', '_']
				adding dashed alternative: ['d', 'r', 'i', 'h', '_', '_']
				adding dashed alternative: ['d', 'r', 'i', 'h', '_', '_']
				d/r/i/h(CCCC)
d/r/i/h(CCVC)
d/r/i/h/_(CCACA)
d/r/i/h/_(CCACA)
d/r/i/h/_(CCACA)
d/r/i/h/_(CCACA)
d/r/i/h/_/_(CCACAA)
d/r/i/h/_/_(CCACAA)
				ANALYSING: driht
					resolving (2)
					> version: d/r/i/h/t
					> version: d/r/i/h/t
					RESULT:  ['_']
				adding dashed alternative: ['d', 'r', 'i', 'h', 't', '_']
				adding dashed alternative: ['d', 'r', 'i', 'h', 't', '_']
				d/r/i/h/t(CCCCC)
d/r/i/h/t(CCVCC)
d/r/i/h/t/_(CCACCA)
d/r/i/h/t/_(CCACCA)
				ANALYSING: drihðt
					resolving (4)
					> version: d/r/i/h/ð/t
					TRYING: t
					> version: d/r/i/h/ð/t
					TRYING: t
					> version: d/r/i/hð/t
					> version: d/r/i/hð/t
					RESULT:  ['t']
				ANALYSING: drihh
					resolving (4)
					> version: d/r/i/h/h
					> version: d/r/i/h/h
					> version: d/r/i/hh
					> version: d/r/i/hh
					RESULT:  ['_']
				adding dashed alternative: ['d', 'r', 'i', 'h', 'h', '_']
				adding dashed alternative: ['d', 'r', 'i', 'h', 'h', '_']
				adding dashed alternative: ['d', 'r', 'i', 'hh', '_']
				adding dashed alternative: ['d', 'r', 'i', 'hh', '_']
				d/r/i/h/h(CCCCC)
d/r/i/h/h(CCVCC)
d/r/i/hh(CCCC)
d/r/i/hh(CCVC)
d/r/i/h/h/_(CCACCA)
d/r/i/h/h/_(CCACCA)
d/r/i/hh/_(CCACA)
d/r/i/hh/_(CCACA)
				ANALYSING: drihht
					resolving (4)
					> version: d/r/i/h/h/t
					TRYING: t
					> version: d/r/i/h/h/t
					TRYING: t
					> version: d/r/i/hh/t
					> version: d/r/i/hh/t
					RESULT:  ['t']
				ANALYSING: drihte
					resolving (2)
					> version: d/r/i/h/t/e
					TRYING: e
					> version: d/r/i/h/t/e
					TRYING: e
					RESULT:  ['_']
				adding dashed alternative: ['d', 'r', 'i', 'h', 't', '_', 'e']
				adding dashed alternative: ['d', 'r', 'i', 'h', 't', '_', 'e']
				d/r/i/h/t/e(CCCCCV)
d/r/i/h/t/e(CCVCCV)
d/r/i/h/t/_/e(CCACCAV)
d/r/i/h/t/_/e(CCACCAV)
				ANALYSING: drich
					resolving (4)
					> version: d/r/i/c/h
					> version: d/r/i/c/h
					> version: d/r/i/ch
					> version: d/r/i/ch
					RESULT:  ['_']
				adding dashed alternative: ['d', 'r', 'i', 'c', 'h', '_']
				adding dashed alternative: ['d', 'r', 'i', 'c', 'h', '_']
				adding dashed alternative: ['d', 'r', 'i', 'ch', '_']
				adding dashed alternative: ['d', 'r', 'i', 'ch', '_']
				d/r/i/c/h(CCCCC)
d/r/i/c/h(CCVCC)
d/r/i/ch(CCCC)
d/r/i/ch(CCVC)
d/r/i/c/h/_(CCACCA)
d/r/i/c/h/_(CCACCA)
d/r/i/ch/_(CCACA)
d/r/i/ch/_(CCACA)
				ANALYSING: dricht
					resolving (4)
					> version: d/r/i/c/h/t
					TRYING: t
					> version: d/r/i/c/h/t
					TRYING: t
					> version: d/r/i/ch/t
					> version: d/r/i/ch/t
					RESULT:  ['t']
				ANALYSING: drikte
					resolving (2)
					> version: d/r/i/k/t/e
					TRYING: e
					> version: d/r/i/k/t/e
					TRYING: e
					RESULT:  ['_']
				adding dashed alternative: ['d', 'r', 'i', 'k', 't', '_', 'e']
				adding dashed alternative: ['d', 'r', 'i', 'k', 't', '_', 'e']
				d/r/i/k/t/e(CCCCCV)
d/r/i/k/t/e(CCVCCV)
d/r/i/k/t/_/e(CCACCAV)
d/r/i/k/t/_/e(CCACCAV)
				ANALYSING: drist
					resolving (2)
					> version: d/r/i/s/t
					> version: d/r/i/s/t
					RESULT:  ['_']
				adding dashed alternative: ['d', 'r', 'i', 's', 't', '_']
				adding dashed alternative: ['d', 'r', 'i', 's', 't', '_']
				d/r/i/s/t(CCCCC)
d/r/i/s/t(CCVCC)
d/r/i/s/t/_(CCACCA)
d/r/i/s/t/_(CCACCA)
				ANALYSING: driste
					resolving (2)
					> version: d/r/i/s/t/e
					TRYING: e
					> version: d/r/i/s/t/e
					TRYING: e
					RESULT:  ['_']
				adding dashed alternative: ['d', 'r', 'i', 's', 't', '_', 'e']
				adding dashed alternative: ['d', 'r', 'i', 's', 't', '_', 'e']
				d/r/i/s/t/e(CCCCCV)
d/r/i/s/t/e(CCVCCV)
d/r/i/s/t/_/e(CCACCAV)
d/r/i/s/t/_/e(CCACCAV)
				ANALYSING: drith
					resolving (4)
					> version: d/r/i/t/h
					> version: d/r/i/t/h
					> version: d/r/i/th
					> version: d/r/i/th
					RESULT:  ['_']
				adding dashed alternative: ['d', 'r', 'i', 't', 'h', '_']
				adding dashed alternative: ['d', 'r', 'i', 't', 'h', '_']
				adding dashed alternative: ['d', 'r', 'i', 'th', '_']
				adding dashed alternative: ['d', 'r', 'i', 'th', '_']
				d/r/i/t/h(CCCCC)
d/r/i/t/h(CCVCC)
d/r/i/th(CCCC)
d/r/i/th(CCVC)
d/r/i/t/h/_(CCACCA)
d/r/i/t/h/_(CCACCA)
d/r/i/th/_(CCACA)
d/r/i/th/_(CCACA)
				ANALYSING: drithe
					resolving (4)
					> version: d/r/i/t/h/e
					TRYING: e
					> version: d/r/i/t/h/e
					TRYING: e
					> version: d/r/i/th/e
					> version: d/r/i/th/e
					RESULT:  ['_']
				adding dashed alternative: ['d', 'r', 'i', 't', 'h', '_', 'e']
				adding dashed alternative: ['d', 'r', 'i', 't', 'h', '_', 'e']
				adding dashed alternative: ['d', 'r', 'i', 'th', 'e', '_']
				adding dashed alternative: ['d', 'r', 'i', 'th', 'e', '_']
				d/r/i/t/h/e(CCCCCV)
d/r/i/t/h/e(CCVCCV)
d/r/i/th/e(CCCCV)
d/r/i/th/e(CCVCV)
d/r/i/t/h/_/e(CCACCAV)
d/r/i/t/h/_/e(CCACCAV)
d/r/i/th/e/_(CCACVA)
d/r/i/th/e/_(CCACVA)
				ANALYSING: dritht
					resolving (4)
					> version: d/r/i/t/h/t
					TRYING: t
					> version: d/r/i/t/h/t
					TRYING: t
					> version: d/r/i/th/t
					> version: d/r/i/th/t
					RESULT:  ['t']
				ANALYSING: dritt
					resolving (4)
					> version: d/r/i/t/t
					> version: d/r/i/t/t
					> version: d/r/i/tt
					> version: d/r/i/tt
					RESULT:  ['_']
				adding dashed alternative: ['d', 'r', 'i', 't', 't', '_']
				adding dashed alternative: ['d', 'r', 'i', 't', 't', '_']
				adding dashed alternative: ['d', 'r', 'i', 'tt', '_']
				adding dashed alternative: ['d', 'r', 'i', 'tt', '_']
				d/r/i/t/t(CCCCC)
d/r/i/t/t(CCVCC)
d/r/i/tt(CCCC)
d/r/i/tt(CCVC)
d/r/i/t/t/_(CCACCA)
d/r/i/t/t/_(CCACCA)
d/r/i/tt/_(CCACA)
d/r/i/tt/_(CCACA)
				ANALYSING: dritte
					resolving (4)
					> version: d/r/i/t/t/e
					TRYING: e
					> version: d/r/i/t/t/e
					TRYING: e
					> version: d/r/i/tt/e
					> version: d/r/i/tt/e
					RESULT:  ['_']
				adding dashed alternative: ['d', 'r', 'i', 't', 't', '_', 'e']
				adding dashed alternative: ['d', 'r', 'i', 't', 't', '_', 'e']
				adding dashed alternative: ['d', 'r', 'i', 'tt', 'e', '_']
				adding dashed alternative: ['d', 'r', 'i', 'tt', 'e', '_']
				d/r/i/t/t/e(CCCCCV)
d/r/i/t/t/e(CCVCCV)
d/r/i/tt/e(CCCCV)
d/r/i/tt/e(CCVCV)
d/r/i/t/t/_/e(CCACCAV)
d/r/i/t/t/_/e(CCACCAV)
d/r/i/tt/e/_(CCACVA)
d/r/i/tt/e/_(CCACVA)
				ANALYSING: driȝt
					resolving (2)
					> version: d/r/i/ȝ/t
					> version: d/r/i/ȝ/t
					RESULT:  ['_']
				adding dashed alternative: ['d', 'r', 'i', 'ȝ', 't', '_']
				adding dashed alternative: ['d', 'r', 'i', 'ȝ', 't', '_']
				d/r/i/ȝ/t(CCCCC)
d/r/i/ȝ/t(CCVCC)
d/r/i/ȝ/t/_(CCACCA)
d/r/i/ȝ/t/_(CCACCA)
				ANALYSING: driȝte
					resolving (2)
					> version: d/r/i/ȝ/t/e
					TRYING: e
					> version: d/r/i/ȝ/t/e
					TRYING: e
					RESULT:  ['_']
				adding dashed alternative: ['d', 'r', 'i', 'ȝ', 't', '_', 'e']
				adding dashed alternative: ['d', 'r', 'i', 'ȝ', 't', '_', 'e']
				d/r/i/ȝ/t/e(CCCCCV)
d/r/i/ȝ/t/e(CCVCCV)
d/r/i/ȝ/t/_/e(CCACCAV)
d/r/i/ȝ/t/_/e(CCACCAV)
				ANALYSING: dryht
					resolving (3)
					> version: d/r/y/h/t
					> version: d/r/y/h/t
					> version: d/r/yh/t
					RESULT:  ['_']
				adding dashed alternative: ['d', 'r', 'y', 'h', 't', '_']
				adding dashed alternative: ['d', 'r', 'y', 'h', 't', '_']
				adding dashed alternative: ['d', 'r', 'yh', 't', '_']
				d/r/y/h/t(CCCCC)
d/r/y/h/t(CCVCC)
d/r/yh/t(CCCC)
d/r/y/h/t/_(CCACCA)
d/r/y/h/t/_(CCACCA)
d/r/yh/t/_(CCCCA)
				ANALYSING: dryhte
					resolving (3)
					> version: d/r/y/h/t/e
					TRYING: e
					> version: d/r/y/h/t/e
					TRYING: e
					> version: d/r/yh/t/e
					RESULT:  ['_']
				adding dashed alternative: ['d', 'r', 'y', 'h', 't', '_', 'e']
				adding dashed alternative: ['d', 'r', 'y', 'h', 't', '_', 'e']
				adding dashed alternative: ['d', 'r', 'yh', 't', 'e', '_']
				d/r/y/h/t/e(CCCCCV)
d/r/y/h/t/e(CCVCCV)
d/r/yh/t/e(CCCCV)
d/r/y/h/t/_/e(CCACCAV)
d/r/y/h/t/_/e(CCACCAV)
d/r/yh/t/e/_(CCCCVA)
				ANALYSING: e
					resolving (16)
					> version: e
					> version: _/e
					> version: e/_
					> version: _/_/e
					> version: e/_
					> version: _/e/_
					> version: e/_/_
					> version: _/_/e/_
					> version: e/_
					> version: _/e/_
					> version: e/_/_
					> version: _/_/e/_
					> version: e/_/_
					> version: _/e/_/_
					> version: e/_/_/_
					> version: _/_/e/_/_
					RESULT:  ['_']
				adding dashed alternative: ['e', '_']
				adding dashed alternative: ['_', 'e', '_']
				adding dashed alternative: ['e', '_', '_']
				adding dashed alternative: ['_', '_', 'e', '_']
				adding dashed alternative: ['e', '_', '_']
				adding dashed alternative: ['_', 'e', '_', '_']
				adding dashed alternative: ['e', '_', '_', '_']
				adding dashed alternative: ['_', '_', 'e', '_', '_']
				adding dashed alternative: ['e', '_', '_']
				adding dashed alternative: ['_', 'e', '_', '_']
				adding dashed alternative: ['e', '_', '_', '_']
				adding dashed alternative: ['_', '_', 'e', '_', '_']
				adding dashed alternative: ['e', '_', '_', '_']
				adding dashed alternative: ['_', 'e', '_', '_', '_']
				adding dashed alternative: ['e', '_', '_', '_', '_']
				adding dashed alternative: ['_', '_', 'e', '_', '_', '_']
				e(V)
_/e(AV)
e/_(VA)
_/_/e(AAV)
e/_(VA)
_/e/_(AVA)
e/_/_(VAA)
_/_/e/_(AAVA)
e/_(VA)
_/e/_(AVA)
e/_/_(VAA)
_/_/e/_(AAVA)
e/_/_(VAA)
_/e/_/_(AVAA)
e/_/_/_(VAAA)
_/_/e/_/_(AAVAA)
e/_(VA)
_/e/_(AVA)
e/_/_(VAA)
_/_/e/_(AAVA)
e/_/_(VAA)
_/e/_/_(AVAA)
e/_/_/_(VAAA)
_/_/e/_/_(AAVAA)
e/_/_(VAA)
_/e/_/_(AVAA)
e/_/_/_(VAAA)
_/_/e/_/_(AAVAA)
e/_/_/_(VAAA)
_/e/_/_/_(AVAAA)
e/_/_/_/_(VAAAA)
_/_/e/_/_/_(AAVAAA)
				ANALYSING: en
					resolving (8)
					> version: e/n
					> version: _/e/n
					> version: e/n/_
					> version: _/e/_/n
					> version: e/n/_
					> version: _/e/n/_
					> version: e/n/_/_
					> version: _/e/_/n/_
					RESULT:  ['_']
				adding dashed alternative: ['e', 'n', '_']
				adding dashed alternative: ['_', 'e', 'n', '_']
				adding dashed alternative: ['e', 'n', '_', '_']
				adding dashed alternative: ['_', 'e', '_', 'n', '_']
				adding dashed alternative: ['e', 'n', '_', '_']
				adding dashed alternative: ['_', 'e', 'n', '_', '_']
				adding dashed alternative: ['e', 'n', '_', '_', '_']
				adding dashed alternative: ['_', 'e', '_', 'n', '_', '_']
				e/n(VC)
_/e/n(AVC)
e/n/_(VCA)
_/e/_/n(AVAC)
e/n/_(VCA)
_/e/n/_(AVCA)
e/n/_/_(VCAA)
_/e/_/n/_(AVACA)
e/n/_(VCA)
_/e/n/_(AVCA)
e/n/_/_(VCAA)
_/e/_/n/_(AVACA)
e/n/_/_(VCAA)
_/e/n/_/_(AVCAA)
e/n/_/_/_(VCAAA)
_/e/_/n/_/_(AVACAA)
				ANALYSING: in
					resolving (16)
					> version: i/n
					> version: i/n
					> version: i/n/_
					> version: i/n/_
					> version: i/n/_
					> version: i/n/_
					> version: i/n/_/_
					> version: i/n/_/_
					> version: i/n/_
					> version: i/n/_
					> version: i/n/_/_
					> version: i/n/_/_
					> version: i/n/_/_
					> version: i/n/_/_
					> version: i/n/_/_/_
					> version: i/n/_/_/_
					RESULT:  ['_']
				adding dashed alternative: ['i', 'n', '_']
				adding dashed alternative: ['i', 'n', '_']
				adding dashed alternative: ['i', 'n', '_', '_']
				adding dashed alternative: ['i', 'n', '_', '_']
				adding dashed alternative: ['i', 'n', '_', '_']
				adding dashed alternative: ['i', 'n', '_', '_']
				adding dashed alternative: ['i', 'n', '_', '_', '_']
				adding dashed alternative: ['i', 'n', '_', '_', '_']
				adding dashed alternative: ['i', 'n', '_', '_']
				adding dashed alternative: ['i', 'n', '_', '_']
				adding dashed alternative: ['i', 'n', '_', '_', '_']
				adding dashed alternative: ['i', 'n', '_', '_', '_']
				adding dashed alternative: ['i', 'n', '_', '_', '_']
				adding dashed alternative: ['i', 'n', '_', '_', '_']
				adding dashed alternative: ['i', 'n', '_', '_', '_', '_']
				adding dashed alternative: ['i', 'n', '_', '_', '_', '_']
				i/n(CC)
i/n(VC)
i/n/_(ACA)
i/n/_(ACA)
i/n/_(ACA)
i/n/_(ACA)
i/n/_/_(ACAA)
i/n/_/_(ACAA)
i/n/_(ACA)
i/n/_(ACA)
i/n/_/_(ACAA)
i/n/_/_(ACAA)
i/n/_/_(ACAA)
i/n/_/_(ACAA)
i/n/_/_/_(ACAAA)
i/n/_/_/_(ACAAA)
i/n/_(ACA)
i/n/_(ACA)
i/n/_/_(ACAA)
i/n/_/_(ACAA)
i/n/_/_(ACAA)
i/n/_/_(ACAA)
i/n/_/_/_(ACAAA)
i/n/_/_/_(ACAAA)
i/n/_/_(ACAA)
i/n/_/_(ACAA)
i/n/_/_/_(ACAAA)
i/n/_/_/_(ACAAA)
i/n/_/_/_(ACAAA)
i/n/_/_/_(ACAAA)
i/n/_/_/_/_(ACAAAA)
i/n/_/_/_/_(ACAAAA)
			___CCVCCCV : 6___
				ANALYSING: drichte
				adding littera based on matching pattern
				ANALYSING: drithte
				adding littera based on matching pattern
				ANALYSING: driȝtte
				adding littera based on matching pattern
				ANALYSING: dreyte
					resolving (10)
					> version: d/r/e/y/t/e
					> version: d/r/e/y/t/e
					> version: d/r/ey/t/e
					> version: d/r/ey/t/e
					> version: d/r/ey/t/e
					> version: d/r/e/y/t/_/e
					TRYING: e
					> version: d/r/e/y/t/_/e
					TRYING: e
					> version: d/r/ey/t/e/_
					> version: d/r/ey/t/e/_
					> version: d/r/ey/t/e/_
					RESULT:  ['e']
				version split: ['d', 'r', 'e', 'y', 't', 'e']
				{'string': 'd/r/e/y/t/e', 'rgx': '((d))/((r))/((e)|(ey))/((t)|(y))/((t))/((_))/((e))$'}
				_____REMOVING________['d', 'r', 'e', 'y', 't', 'e']
				version split: ['d', 'r', 'e', 'y', 't', 'e']
				{'string': 'd/r/e/y/t/e', 'rgx': '((d))/((r))/((e)|(ey))/((t)|(y))/((t))/((_))/((e))$'}
				_____REMOVING________['d', 'r', 'e', 'y', 't', 'e']
				version split: ['d', 'r', 'ey', 't', 'e']
				{'string': 'd/r/ey/t/e', 'rgx': '((d))/((r))/((e)|(ey))/((t)|(y))/((t))/((_))/((e))$'}
				_____REMOVING________['d', 'r', 'ey', 't', 'e']
				version split: ['d', 'r', 'ey', 't', 'e']
				{'string': 'd/r/ey/t/e', 'rgx': '((d))/((r))/((e)|(ey))/((t)|(y))/((t))/((_))/((e))$'}
				_____REMOVING________['d', 'r', 'ey', 't', 'e']
				version split: ['d', 'r', 'ey', 't', 'e']
				{'string': 'd/r/ey/t/e', 'rgx': '((d))/((r))/((e)|(ey))/((t)|(y))/((t))/((_))/((e))$'}
				_____REMOVING________['d', 'r', 'ey', 't', 'e']
				version split: ['d', 'r', 'e', 'y', 't', '_', 'e']
				{'string': 'd/r/e/y/t/_/e', 'rgx': '((d))/((r))/((e)|(ey))/((t)|(y))/((t))/((_))/((e))$'}
				version split: ['d', 'r', 'e', 'y', 't', '_', 'e']
				{'string': 'd/r/e/y/t/_/e', 'rgx': '((d))/((r))/((e)|(ey))/((t)|(y))/((t))/((_))/((e))$'}
				version split: ['d', 'r', 'ey', 't', 'e', '_']
				{'string': 'd/r/ey/t/e/_', 'rgx': '((d))/((r))/((e)|(ey))/((t)|(y))/((t))/((_))/((e))$'}
				_____REMOVING________['d', 'r', 'ey', 't', 'e', '_']
				version split: ['d', 'r', 'ey', 't', 'e', '_']
				{'string': 'd/r/ey/t/e/_', 'rgx': '((d))/((r))/((e)|(ey))/((t)|(y))/((t))/((_))/((e))$'}
				_____REMOVING________['d', 'r', 'ey', 't', 'e', '_']
				version split: ['d', 'r', 'ey', 't', 'e', '_']
				{'string': 'd/r/ey/t/e/_', 'rgx': '((d))/((r))/((e)|(ey))/((t)|(y))/((t))/((_))/((e))$'}
				_____REMOVING________['d', 'r', 'ey', 't', 'e', '_']
				ANALYSING: dric
					resolving (8)
					> version: d/r/i/c
					> version: d/r/i/c
					> version: d/r/i/c/_
					> version: d/r/i/c/_
					> version: d/r/i/c/_
					> version: d/r/i/c/_
					> version: d/r/i/c/_/_
					> version: d/r/i/c/_/_
					RESULT:  ['_']
				adding dashed alternative: ['d', 'r', 'i', 'c', '_']
				adding dashed alternative: ['d', 'r', 'i', 'c', '_']
				adding dashed alternative: ['d', 'r', 'i', 'c', '_', '_']
				adding dashed alternative: ['d', 'r', 'i', 'c', '_', '_']
				adding dashed alternative: ['d', 'r', 'i', 'c', '_', '_']
				adding dashed alternative: ['d', 'r', 'i', 'c', '_', '_']
				adding dashed alternative: ['d', 'r', 'i', 'c', '_', '_', '_']
				adding dashed alternative: ['d', 'r', 'i', 'c', '_', '_', '_']
				d/r/i/c(CCCC)
d/r/i/c(CCVC)
d/r/i/c/_(CCACA)
d/r/i/c/_(CCACA)
d/r/i/c/_(CCACA)
d/r/i/c/_(CCACA)
d/r/i/c/_/_(CCACAA)
d/r/i/c/_/_(CCACAA)
d/r/i/c/_(CCACA)
d/r/i/c/_(CCACA)
d/r/i/c/_/_(CCACAA)
d/r/i/c/_/_(CCACAA)
d/r/i/c/_/_(CCACAA)
d/r/i/c/_/_(CCACAA)
d/r/i/c/_/_/_(CCACAAA)
d/r/i/c/_/_/_(CCACAAA)
				version split: ['d', 'r', 'i', 'c']
				{'string': 'd/r/i/c', 'rgx': '((d))/((r))/((i))/((c))/((_))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'c']
				version split: ['d', 'r', 'i', 'c']
				{'string': 'd/r/i/c', 'rgx': '((d))/((r))/((i))/((c))/((_))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'c']
				version split: ['d', 'r', 'i', 'c', '_']
				{'string': 'd/r/i/c/_', 'rgx': '((d))/((r))/((i))/((c))/((_))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'c', '_']
				version split: ['d', 'r', 'i', 'c', '_']
				{'string': 'd/r/i/c/_', 'rgx': '((d))/((r))/((i))/((c))/((_))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'c', '_']
				version split: ['d', 'r', 'i', 'c', '_']
				{'string': 'd/r/i/c/_', 'rgx': '((d))/((r))/((i))/((c))/((_))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'c', '_']
				version split: ['d', 'r', 'i', 'c', '_']
				{'string': 'd/r/i/c/_', 'rgx': '((d))/((r))/((i))/((c))/((_))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'c', '_']
				version split: ['d', 'r', 'i', 'c', '_', '_']
				{'string': 'd/r/i/c/_/_', 'rgx': '((d))/((r))/((i))/((c))/((_))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'c', '_', '_']
				version split: ['d', 'r', 'i', 'c', '_', '_']
				{'string': 'd/r/i/c/_/_', 'rgx': '((d))/((r))/((i))/((c))/((_))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'c', '_', '_']
				version split: ['d', 'r', 'i', 'c', '_']
				{'string': 'd/r/i/c/_', 'rgx': '((d))/((r))/((i))/((c))/((_))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'c', '_']
				version split: ['d', 'r', 'i', 'c', '_']
				{'string': 'd/r/i/c/_', 'rgx': '((d))/((r))/((i))/((c))/((_))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'c', '_']
				version split: ['d', 'r', 'i', 'c', '_', '_']
				{'string': 'd/r/i/c/_/_', 'rgx': '((d))/((r))/((i))/((c))/((_))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'c', '_', '_']
				version split: ['d', 'r', 'i', 'c', '_', '_']
				{'string': 'd/r/i/c/_/_', 'rgx': '((d))/((r))/((i))/((c))/((_))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'c', '_', '_']
				version split: ['d', 'r', 'i', 'c', '_', '_']
				{'string': 'd/r/i/c/_/_', 'rgx': '((d))/((r))/((i))/((c))/((_))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'c', '_', '_']
				version split: ['d', 'r', 'i', 'c', '_', '_']
				{'string': 'd/r/i/c/_/_', 'rgx': '((d))/((r))/((i))/((c))/((_))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'c', '_', '_']
				version split: ['d', 'r', 'i', 'c', '_', '_', '_']
				{'string': 'd/r/i/c/_/_/_', 'rgx': '((d))/((r))/((i))/((c))/((_))/((_))/((_))$'}
				version split: ['d', 'r', 'i', 'c', '_', '_', '_']
				{'string': 'd/r/i/c/_/_/_', 'rgx': '((d))/((r))/((i))/((c))/((_))/((_))/((_))$'}
				ANALYSING: drict
					resolving (4)
					> version: d/r/i/c/t
					> version: d/r/i/c/t
					> version: d/r/i/c/t/_
					> version: d/r/i/c/t/_
					RESULT:  ['_']
				adding dashed alternative: ['d', 'r', 'i', 'c', 't', '_']
				adding dashed alternative: ['d', 'r', 'i', 'c', 't', '_']
				adding dashed alternative: ['d', 'r', 'i', 'c', 't', '_', '_']
				adding dashed alternative: ['d', 'r', 'i', 'c', 't', '_', '_']
				d/r/i/c/t(CCCCC)
d/r/i/c/t(CCVCC)
d/r/i/c/t/_(CCACCA)
d/r/i/c/t/_(CCACCA)
d/r/i/c/t/_(CCACCA)
d/r/i/c/t/_(CCACCA)
d/r/i/c/t/_/_(CCACCAA)
d/r/i/c/t/_/_(CCACCAA)
				version split: ['d', 'r', 'i', 'c', 't']
				{'string': 'd/r/i/c/t', 'rgx': '((d))/((r))/((i))/((c))/((t))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'c', 't']
				version split: ['d', 'r', 'i', 'c', 't']
				{'string': 'd/r/i/c/t', 'rgx': '((d))/((r))/((i))/((c))/((t))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'c', 't']
				version split: ['d', 'r', 'i', 'c', 't', '_']
				{'string': 'd/r/i/c/t/_', 'rgx': '((d))/((r))/((i))/((c))/((t))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'c', 't', '_']
				version split: ['d', 'r', 'i', 'c', 't', '_']
				{'string': 'd/r/i/c/t/_', 'rgx': '((d))/((r))/((i))/((c))/((t))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'c', 't', '_']
				version split: ['d', 'r', 'i', 'c', 't', '_']
				{'string': 'd/r/i/c/t/_', 'rgx': '((d))/((r))/((i))/((c))/((t))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'c', 't', '_']
				version split: ['d', 'r', 'i', 'c', 't', '_']
				{'string': 'd/r/i/c/t/_', 'rgx': '((d))/((r))/((i))/((c))/((t))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'c', 't', '_']
				version split: ['d', 'r', 'i', 'c', 't', '_', '_']
				{'string': 'd/r/i/c/t/_/_', 'rgx': '((d))/((r))/((i))/((c))/((t))/((_))/((_))$'}
				version split: ['d', 'r', 'i', 'c', 't', '_', '_']
				{'string': 'd/r/i/c/t/_/_', 'rgx': '((d))/((r))/((i))/((c))/((t))/((_))/((_))$'}
				ANALYSING: dright
					resolving (4)
					> version: d/r/i/g/h/t
					> version: d/r/i/g/h/t
					> version: d/r/i/gh/t
					> version: d/r/i/gh/t
					RESULT:  ['_']
				adding dashed alternative: ['d', 'r', 'i', 'g', 'h', 't', '_']
				adding dashed alternative: ['d', 'r', 'i', 'g', 'h', 't', '_']
				adding dashed alternative: ['d', 'r', 'i', 'gh', 't', '_']
				adding dashed alternative: ['d', 'r', 'i', 'gh', 't', '_']
				d/r/i/g/h/t(CCCCCC)
d/r/i/g/h/t(CCVCCC)
d/r/i/gh/t(CCCCC)
d/r/i/gh/t(CCVCC)
d/r/i/g/h/t/_(CCACCCA)
d/r/i/g/h/t/_(CCACCCA)
d/r/i/gh/t/_(CCACCA)
d/r/i/gh/t/_(CCACCA)
				version split: ['d', 'r', 'i', 'g', 'h', 't']
				{'string': 'd/r/i/g/h/t', 'rgx': '((d))/((r))/((i))/((g)|(gh))/((t)|(h))/((t))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'g', 'h', 't']
				version split: ['d', 'r', 'i', 'g', 'h', 't']
				{'string': 'd/r/i/g/h/t', 'rgx': '((d))/((r))/((i))/((g)|(gh))/((t)|(h))/((t))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'g', 'h', 't']
				version split: ['d', 'r', 'i', 'gh', 't']
				{'string': 'd/r/i/gh/t', 'rgx': '((d))/((r))/((i))/((g)|(gh))/((t)|(h))/((t))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'gh', 't']
				version split: ['d', 'r', 'i', 'gh', 't']
				{'string': 'd/r/i/gh/t', 'rgx': '((d))/((r))/((i))/((g)|(gh))/((t)|(h))/((t))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'gh', 't']
				version split: ['d', 'r', 'i', 'g', 'h', 't', '_']
				{'string': 'd/r/i/g/h/t/_', 'rgx': '((d))/((r))/((i))/((g)|(gh))/((t)|(h))/((t))/((_))$'}
				version split: ['d', 'r', 'i', 'g', 'h', 't', '_']
				{'string': 'd/r/i/g/h/t/_', 'rgx': '((d))/((r))/((i))/((g)|(gh))/((t)|(h))/((t))/((_))$'}
				version split: ['d', 'r', 'i', 'gh', 't', '_']
				{'string': 'd/r/i/gh/t/_', 'rgx': '((d))/((r))/((i))/((g)|(gh))/((t)|(h))/((t))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'gh', 't', '_']
				version split: ['d', 'r', 'i', 'gh', 't', '_']
				{'string': 'd/r/i/gh/t/_', 'rgx': '((d))/((r))/((i))/((g)|(gh))/((t)|(h))/((t))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'gh', 't', '_']
				ANALYSING: drigt
					resolving (4)
					> version: d/r/i/g/t
					> version: d/r/i/g/t
					> version: d/r/i/g/t/_
					> version: d/r/i/g/t/_
					RESULT:  ['_']
				adding dashed alternative: ['d', 'r', 'i', 'g', 't', '_']
				adding dashed alternative: ['d', 'r', 'i', 'g', 't', '_']
				adding dashed alternative: ['d', 'r', 'i', 'g', 't', '_', '_']
				adding dashed alternative: ['d', 'r', 'i', 'g', 't', '_', '_']
				d/r/i/g/t(CCCCC)
d/r/i/g/t(CCVCC)
d/r/i/g/t/_(CCACCA)
d/r/i/g/t/_(CCACCA)
d/r/i/g/t/_(CCACCA)
d/r/i/g/t/_(CCACCA)
d/r/i/g/t/_/_(CCACCAA)
d/r/i/g/t/_/_(CCACCAA)
				version split: ['d', 'r', 'i', 'g', 't']
				{'string': 'd/r/i/g/t', 'rgx': '((d))/((r))/((i))/((g))/((t))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'g', 't']
				version split: ['d', 'r', 'i', 'g', 't']
				{'string': 'd/r/i/g/t', 'rgx': '((d))/((r))/((i))/((g))/((t))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'g', 't']
				version split: ['d', 'r', 'i', 'g', 't', '_']
				{'string': 'd/r/i/g/t/_', 'rgx': '((d))/((r))/((i))/((g))/((t))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'g', 't', '_']
				version split: ['d', 'r', 'i', 'g', 't', '_']
				{'string': 'd/r/i/g/t/_', 'rgx': '((d))/((r))/((i))/((g))/((t))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'g', 't', '_']
				version split: ['d', 'r', 'i', 'g', 't', '_']
				{'string': 'd/r/i/g/t/_', 'rgx': '((d))/((r))/((i))/((g))/((t))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'g', 't', '_']
				version split: ['d', 'r', 'i', 'g', 't', '_']
				{'string': 'd/r/i/g/t/_', 'rgx': '((d))/((r))/((i))/((g))/((t))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'g', 't', '_']
				version split: ['d', 'r', 'i', 'g', 't', '_', '_']
				{'string': 'd/r/i/g/t/_/_', 'rgx': '((d))/((r))/((i))/((g))/((t))/((_))/((_))$'}
				version split: ['d', 'r', 'i', 'g', 't', '_', '_']
				{'string': 'd/r/i/g/t/_/_', 'rgx': '((d))/((r))/((i))/((g))/((t))/((_))/((_))$'}
				ANALYSING: drih
					resolving (8)
					> version: d/r/i/h
					> version: d/r/i/h
					> version: d/r/i/h/_
					> version: d/r/i/h/_
					> version: d/r/i/h/_
					> version: d/r/i/h/_
					> version: d/r/i/h/_/_
					> version: d/r/i/h/_/_
					RESULT:  ['_']
				adding dashed alternative: ['d', 'r', 'i', 'h', '_']
				adding dashed alternative: ['d', 'r', 'i', 'h', '_']
				adding dashed alternative: ['d', 'r', 'i', 'h', '_', '_']
				adding dashed alternative: ['d', 'r', 'i', 'h', '_', '_']
				adding dashed alternative: ['d', 'r', 'i', 'h', '_', '_']
				adding dashed alternative: ['d', 'r', 'i', 'h', '_', '_']
				adding dashed alternative: ['d', 'r', 'i', 'h', '_', '_', '_']
				adding dashed alternative: ['d', 'r', 'i', 'h', '_', '_', '_']
				d/r/i/h(CCCC)
d/r/i/h(CCVC)
d/r/i/h/_(CCACA)
d/r/i/h/_(CCACA)
d/r/i/h/_(CCACA)
d/r/i/h/_(CCACA)
d/r/i/h/_/_(CCACAA)
d/r/i/h/_/_(CCACAA)
d/r/i/h/_(CCACA)
d/r/i/h/_(CCACA)
d/r/i/h/_/_(CCACAA)
d/r/i/h/_/_(CCACAA)
d/r/i/h/_/_(CCACAA)
d/r/i/h/_/_(CCACAA)
d/r/i/h/_/_/_(CCACAAA)
d/r/i/h/_/_/_(CCACAAA)
				version split: ['d', 'r', 'i', 'h']
				{'string': 'd/r/i/h', 'rgx': '((d))/((r))/((i))/((h))/((_))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'h']
				version split: ['d', 'r', 'i', 'h']
				{'string': 'd/r/i/h', 'rgx': '((d))/((r))/((i))/((h))/((_))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'h']
				version split: ['d', 'r', 'i', 'h', '_']
				{'string': 'd/r/i/h/_', 'rgx': '((d))/((r))/((i))/((h))/((_))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'h', '_']
				version split: ['d', 'r', 'i', 'h', '_']
				{'string': 'd/r/i/h/_', 'rgx': '((d))/((r))/((i))/((h))/((_))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'h', '_']
				version split: ['d', 'r', 'i', 'h', '_']
				{'string': 'd/r/i/h/_', 'rgx': '((d))/((r))/((i))/((h))/((_))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'h', '_']
				version split: ['d', 'r', 'i', 'h', '_']
				{'string': 'd/r/i/h/_', 'rgx': '((d))/((r))/((i))/((h))/((_))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'h', '_']
				version split: ['d', 'r', 'i', 'h', '_', '_']
				{'string': 'd/r/i/h/_/_', 'rgx': '((d))/((r))/((i))/((h))/((_))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'h', '_', '_']
				version split: ['d', 'r', 'i', 'h', '_', '_']
				{'string': 'd/r/i/h/_/_', 'rgx': '((d))/((r))/((i))/((h))/((_))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'h', '_', '_']
				version split: ['d', 'r', 'i', 'h', '_']
				{'string': 'd/r/i/h/_', 'rgx': '((d))/((r))/((i))/((h))/((_))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'h', '_']
				version split: ['d', 'r', 'i', 'h', '_']
				{'string': 'd/r/i/h/_', 'rgx': '((d))/((r))/((i))/((h))/((_))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'h', '_']
				version split: ['d', 'r', 'i', 'h', '_', '_']
				{'string': 'd/r/i/h/_/_', 'rgx': '((d))/((r))/((i))/((h))/((_))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'h', '_', '_']
				version split: ['d', 'r', 'i', 'h', '_', '_']
				{'string': 'd/r/i/h/_/_', 'rgx': '((d))/((r))/((i))/((h))/((_))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'h', '_', '_']
				version split: ['d', 'r', 'i', 'h', '_', '_']
				{'string': 'd/r/i/h/_/_', 'rgx': '((d))/((r))/((i))/((h))/((_))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'h', '_', '_']
				version split: ['d', 'r', 'i', 'h', '_', '_']
				{'string': 'd/r/i/h/_/_', 'rgx': '((d))/((r))/((i))/((h))/((_))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'h', '_', '_']
				version split: ['d', 'r', 'i', 'h', '_', '_', '_']
				{'string': 'd/r/i/h/_/_/_', 'rgx': '((d))/((r))/((i))/((h))/((_))/((_))/((_))$'}
				version split: ['d', 'r', 'i', 'h', '_', '_', '_']
				{'string': 'd/r/i/h/_/_/_', 'rgx': '((d))/((r))/((i))/((h))/((_))/((_))/((_))$'}
				ANALYSING: driht
					resolving (4)
					> version: d/r/i/h/t
					> version: d/r/i/h/t
					> version: d/r/i/h/t/_
					> version: d/r/i/h/t/_
					RESULT:  ['_']
				adding dashed alternative: ['d', 'r', 'i', 'h', 't', '_']
				adding dashed alternative: ['d', 'r', 'i', 'h', 't', '_']
				adding dashed alternative: ['d', 'r', 'i', 'h', 't', '_', '_']
				adding dashed alternative: ['d', 'r', 'i', 'h', 't', '_', '_']
				d/r/i/h/t(CCCCC)
d/r/i/h/t(CCVCC)
d/r/i/h/t/_(CCACCA)
d/r/i/h/t/_(CCACCA)
d/r/i/h/t/_(CCACCA)
d/r/i/h/t/_(CCACCA)
d/r/i/h/t/_/_(CCACCAA)
d/r/i/h/t/_/_(CCACCAA)
				version split: ['d', 'r', 'i', 'h', 't']
				{'string': 'd/r/i/h/t', 'rgx': '((d))/((r))/((i))/((h))/((t))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'h', 't']
				version split: ['d', 'r', 'i', 'h', 't']
				{'string': 'd/r/i/h/t', 'rgx': '((d))/((r))/((i))/((h))/((t))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'h', 't']
				version split: ['d', 'r', 'i', 'h', 't', '_']
				{'string': 'd/r/i/h/t/_', 'rgx': '((d))/((r))/((i))/((h))/((t))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'h', 't', '_']
				version split: ['d', 'r', 'i', 'h', 't', '_']
				{'string': 'd/r/i/h/t/_', 'rgx': '((d))/((r))/((i))/((h))/((t))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'h', 't', '_']
				version split: ['d', 'r', 'i', 'h', 't', '_']
				{'string': 'd/r/i/h/t/_', 'rgx': '((d))/((r))/((i))/((h))/((t))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'h', 't', '_']
				version split: ['d', 'r', 'i', 'h', 't', '_']
				{'string': 'd/r/i/h/t/_', 'rgx': '((d))/((r))/((i))/((h))/((t))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'h', 't', '_']
				version split: ['d', 'r', 'i', 'h', 't', '_', '_']
				{'string': 'd/r/i/h/t/_/_', 'rgx': '((d))/((r))/((i))/((h))/((t))/((_))/((_))$'}
				version split: ['d', 'r', 'i', 'h', 't', '_', '_']
				{'string': 'd/r/i/h/t/_/_', 'rgx': '((d))/((r))/((i))/((h))/((t))/((_))/((_))$'}
				ANALYSING: drihðt
					resolving (4)
					> version: d/r/i/h/ð/t
					> version: d/r/i/h/ð/t
					> version: d/r/i/hð/t
					> version: d/r/i/hð/t
					RESULT:  ['_']
				adding dashed alternative: ['d', 'r', 'i', 'h', 'ð', 't', '_']
				adding dashed alternative: ['d', 'r', 'i', 'h', 'ð', 't', '_']
				adding dashed alternative: ['d', 'r', 'i', 'hð', 't', '_']
				adding dashed alternative: ['d', 'r', 'i', 'hð', 't', '_']
				d/r/i/h/ð/t(CCCCCC)
d/r/i/h/ð/t(CCVCCC)
d/r/i/hð/t(CCCCC)
d/r/i/hð/t(CCVCC)
d/r/i/h/ð/t/_(CCACCCA)
d/r/i/h/ð/t/_(CCACCCA)
d/r/i/hð/t/_(CCACCA)
d/r/i/hð/t/_(CCACCA)
				version split: ['d', 'r', 'i', 'h', 'ð', 't']
				{'string': 'd/r/i/h/ð/t', 'rgx': '((d))/((r))/((i))/((hð)|(h))/((t)|(ð))/((t))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'h', 'ð', 't']
				version split: ['d', 'r', 'i', 'h', 'ð', 't']
				{'string': 'd/r/i/h/ð/t', 'rgx': '((d))/((r))/((i))/((hð)|(h))/((t)|(ð))/((t))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'h', 'ð', 't']
				version split: ['d', 'r', 'i', 'hð', 't']
				{'string': 'd/r/i/hð/t', 'rgx': '((d))/((r))/((i))/((hð)|(h))/((t)|(ð))/((t))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'hð', 't']
				version split: ['d', 'r', 'i', 'hð', 't']
				{'string': 'd/r/i/hð/t', 'rgx': '((d))/((r))/((i))/((hð)|(h))/((t)|(ð))/((t))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'hð', 't']
				version split: ['d', 'r', 'i', 'h', 'ð', 't', '_']
				{'string': 'd/r/i/h/ð/t/_', 'rgx': '((d))/((r))/((i))/((hð)|(h))/((t)|(ð))/((t))/((_))$'}
				version split: ['d', 'r', 'i', 'h', 'ð', 't', '_']
				{'string': 'd/r/i/h/ð/t/_', 'rgx': '((d))/((r))/((i))/((hð)|(h))/((t)|(ð))/((t))/((_))$'}
				version split: ['d', 'r', 'i', 'hð', 't', '_']
				{'string': 'd/r/i/hð/t/_', 'rgx': '((d))/((r))/((i))/((hð)|(h))/((t)|(ð))/((t))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'hð', 't', '_']
				version split: ['d', 'r', 'i', 'hð', 't', '_']
				{'string': 'd/r/i/hð/t/_', 'rgx': '((d))/((r))/((i))/((hð)|(h))/((t)|(ð))/((t))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'hð', 't', '_']
				ANALYSING: drihh
					resolving (8)
					> version: d/r/i/h/h
					> version: d/r/i/h/h
					> version: d/r/i/hh
					> version: d/r/i/hh
					> version: d/r/i/h/h/_
					> version: d/r/i/h/h/_
					> version: d/r/i/hh/_
					> version: d/r/i/hh/_
					RESULT:  ['_']
				adding dashed alternative: ['d', 'r', 'i', 'h', 'h', '_']
				adding dashed alternative: ['d', 'r', 'i', 'h', 'h', '_']
				adding dashed alternative: ['d', 'r', 'i', 'hh', '_']
				adding dashed alternative: ['d', 'r', 'i', 'hh', '_']
				adding dashed alternative: ['d', 'r', 'i', 'h', 'h', '_', '_']
				adding dashed alternative: ['d', 'r', 'i', 'h', 'h', '_', '_']
				adding dashed alternative: ['d', 'r', 'i', 'hh', '_', '_']
				adding dashed alternative: ['d', 'r', 'i', 'hh', '_', '_']
				d/r/i/h/h(CCCCC)
d/r/i/h/h(CCVCC)
d/r/i/hh(CCCC)
d/r/i/hh(CCVC)
d/r/i/h/h/_(CCACCA)
d/r/i/h/h/_(CCACCA)
d/r/i/hh/_(CCACA)
d/r/i/hh/_(CCACA)
d/r/i/h/h/_(CCACCA)
d/r/i/h/h/_(CCACCA)
d/r/i/hh/_(CCACA)
d/r/i/hh/_(CCACA)
d/r/i/h/h/_/_(CCACCAA)
d/r/i/h/h/_/_(CCACCAA)
d/r/i/hh/_/_(CCACAA)
d/r/i/hh/_/_(CCACAA)
				version split: ['d', 'r', 'i', 'h', 'h']
				{'string': 'd/r/i/h/h', 'rgx': '((d))/((r))/((i))/((hh)|(h))/((h))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'h', 'h']
				version split: ['d', 'r', 'i', 'h', 'h']
				{'string': 'd/r/i/h/h', 'rgx': '((d))/((r))/((i))/((hh)|(h))/((h))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'h', 'h']
				version split: ['d', 'r', 'i', 'hh']
				{'string': 'd/r/i/hh', 'rgx': '((d))/((r))/((i))/((hh)|(h))/((h))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'hh']
				version split: ['d', 'r', 'i', 'hh']
				{'string': 'd/r/i/hh', 'rgx': '((d))/((r))/((i))/((hh)|(h))/((h))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'hh']
				version split: ['d', 'r', 'i', 'h', 'h', '_']
				{'string': 'd/r/i/h/h/_', 'rgx': '((d))/((r))/((i))/((hh)|(h))/((h))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'h', 'h', '_']
				version split: ['d', 'r', 'i', 'h', 'h', '_']
				{'string': 'd/r/i/h/h/_', 'rgx': '((d))/((r))/((i))/((hh)|(h))/((h))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'h', 'h', '_']
				version split: ['d', 'r', 'i', 'hh', '_']
				{'string': 'd/r/i/hh/_', 'rgx': '((d))/((r))/((i))/((hh)|(h))/((h))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'hh', '_']
				version split: ['d', 'r', 'i', 'hh', '_']
				{'string': 'd/r/i/hh/_', 'rgx': '((d))/((r))/((i))/((hh)|(h))/((h))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'hh', '_']
				version split: ['d', 'r', 'i', 'h', 'h', '_']
				{'string': 'd/r/i/h/h/_', 'rgx': '((d))/((r))/((i))/((hh)|(h))/((h))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'h', 'h', '_']
				version split: ['d', 'r', 'i', 'h', 'h', '_']
				{'string': 'd/r/i/h/h/_', 'rgx': '((d))/((r))/((i))/((hh)|(h))/((h))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'h', 'h', '_']
				version split: ['d', 'r', 'i', 'hh', '_']
				{'string': 'd/r/i/hh/_', 'rgx': '((d))/((r))/((i))/((hh)|(h))/((h))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'hh', '_']
				version split: ['d', 'r', 'i', 'hh', '_']
				{'string': 'd/r/i/hh/_', 'rgx': '((d))/((r))/((i))/((hh)|(h))/((h))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'hh', '_']
				version split: ['d', 'r', 'i', 'h', 'h', '_', '_']
				{'string': 'd/r/i/h/h/_/_', 'rgx': '((d))/((r))/((i))/((hh)|(h))/((h))/((_))/((_))$'}
				version split: ['d', 'r', 'i', 'h', 'h', '_', '_']
				{'string': 'd/r/i/h/h/_/_', 'rgx': '((d))/((r))/((i))/((hh)|(h))/((h))/((_))/((_))$'}
				version split: ['d', 'r', 'i', 'hh', '_', '_']
				{'string': 'd/r/i/hh/_/_', 'rgx': '((d))/((r))/((i))/((hh)|(h))/((h))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'hh', '_', '_']
				version split: ['d', 'r', 'i', 'hh', '_', '_']
				{'string': 'd/r/i/hh/_/_', 'rgx': '((d))/((r))/((i))/((hh)|(h))/((h))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'hh', '_', '_']
				ANALYSING: drihht
					resolving (4)
					> version: d/r/i/h/h/t
					> version: d/r/i/h/h/t
					> version: d/r/i/hh/t
					> version: d/r/i/hh/t
					RESULT:  ['_']
				adding dashed alternative: ['d', 'r', 'i', 'h', 'h', 't', '_']
				adding dashed alternative: ['d', 'r', 'i', 'h', 'h', 't', '_']
				adding dashed alternative: ['d', 'r', 'i', 'hh', 't', '_']
				adding dashed alternative: ['d', 'r', 'i', 'hh', 't', '_']
				d/r/i/h/h/t(CCCCCC)
d/r/i/h/h/t(CCVCCC)
d/r/i/hh/t(CCCCC)
d/r/i/hh/t(CCVCC)
d/r/i/h/h/t/_(CCACCCA)
d/r/i/h/h/t/_(CCACCCA)
d/r/i/hh/t/_(CCACCA)
d/r/i/hh/t/_(CCACCA)
				version split: ['d', 'r', 'i', 'h', 'h', 't']
				{'string': 'd/r/i/h/h/t', 'rgx': '((d))/((r))/((i))/((hh)|(h))/((t)|(h))/((t))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'h', 'h', 't']
				version split: ['d', 'r', 'i', 'h', 'h', 't']
				{'string': 'd/r/i/h/h/t', 'rgx': '((d))/((r))/((i))/((hh)|(h))/((t)|(h))/((t))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'h', 'h', 't']
				version split: ['d', 'r', 'i', 'hh', 't']
				{'string': 'd/r/i/hh/t', 'rgx': '((d))/((r))/((i))/((hh)|(h))/((t)|(h))/((t))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'hh', 't']
				version split: ['d', 'r', 'i', 'hh', 't']
				{'string': 'd/r/i/hh/t', 'rgx': '((d))/((r))/((i))/((hh)|(h))/((t)|(h))/((t))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'hh', 't']
				version split: ['d', 'r', 'i', 'h', 'h', 't', '_']
				{'string': 'd/r/i/h/h/t/_', 'rgx': '((d))/((r))/((i))/((hh)|(h))/((t)|(h))/((t))/((_))$'}
				version split: ['d', 'r', 'i', 'h', 'h', 't', '_']
				{'string': 'd/r/i/h/h/t/_', 'rgx': '((d))/((r))/((i))/((hh)|(h))/((t)|(h))/((t))/((_))$'}
				version split: ['d', 'r', 'i', 'hh', 't', '_']
				{'string': 'd/r/i/hh/t/_', 'rgx': '((d))/((r))/((i))/((hh)|(h))/((t)|(h))/((t))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'hh', 't', '_']
				version split: ['d', 'r', 'i', 'hh', 't', '_']
				{'string': 'd/r/i/hh/t/_', 'rgx': '((d))/((r))/((i))/((hh)|(h))/((t)|(h))/((t))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'hh', 't', '_']
				ANALYSING: drihte
					resolving (4)
					> version: d/r/i/h/t/e
					> version: d/r/i/h/t/e
					> version: d/r/i/h/t/_/e
					TRYING: e
					> version: d/r/i/h/t/_/e
					TRYING: e
					RESULT:  ['e']
				version split: ['d', 'r', 'i', 'h', 't', 'e']
				{'string': 'd/r/i/h/t/e', 'rgx': '((d))/((r))/((i))/((h))/((t))/((_))/((e))$'}
				_____REMOVING________['d', 'r', 'i', 'h', 't', 'e']
				version split: ['d', 'r', 'i', 'h', 't', 'e']
				{'string': 'd/r/i/h/t/e', 'rgx': '((d))/((r))/((i))/((h))/((t))/((_))/((e))$'}
				_____REMOVING________['d', 'r', 'i', 'h', 't', 'e']
				version split: ['d', 'r', 'i', 'h', 't', '_', 'e']
				{'string': 'd/r/i/h/t/_/e', 'rgx': '((d))/((r))/((i))/((h))/((t))/((_))/((e))$'}
				version split: ['d', 'r', 'i', 'h', 't', '_', 'e']
				{'string': 'd/r/i/h/t/_/e', 'rgx': '((d))/((r))/((i))/((h))/((t))/((_))/((e))$'}
				ANALYSING: drich
					resolving (8)
					> version: d/r/i/c/h
					> version: d/r/i/c/h
					> version: d/r/i/ch
					> version: d/r/i/ch
					> version: d/r/i/c/h/_
					> version: d/r/i/c/h/_
					> version: d/r/i/ch/_
					> version: d/r/i/ch/_
					RESULT:  ['_']
				adding dashed alternative: ['d', 'r', 'i', 'c', 'h', '_']
				adding dashed alternative: ['d', 'r', 'i', 'c', 'h', '_']
				adding dashed alternative: ['d', 'r', 'i', 'ch', '_']
				adding dashed alternative: ['d', 'r', 'i', 'ch', '_']
				adding dashed alternative: ['d', 'r', 'i', 'c', 'h', '_', '_']
				adding dashed alternative: ['d', 'r', 'i', 'c', 'h', '_', '_']
				adding dashed alternative: ['d', 'r', 'i', 'ch', '_', '_']
				adding dashed alternative: ['d', 'r', 'i', 'ch', '_', '_']
				d/r/i/c/h(CCCCC)
d/r/i/c/h(CCVCC)
d/r/i/ch(CCCC)
d/r/i/ch(CCVC)
d/r/i/c/h/_(CCACCA)
d/r/i/c/h/_(CCACCA)
d/r/i/ch/_(CCACA)
d/r/i/ch/_(CCACA)
d/r/i/c/h/_(CCACCA)
d/r/i/c/h/_(CCACCA)
d/r/i/ch/_(CCACA)
d/r/i/ch/_(CCACA)
d/r/i/c/h/_/_(CCACCAA)
d/r/i/c/h/_/_(CCACCAA)
d/r/i/ch/_/_(CCACAA)
d/r/i/ch/_/_(CCACAA)
				version split: ['d', 'r', 'i', 'c', 'h']
				{'string': 'd/r/i/c/h', 'rgx': '((d))/((r))/((i))/((ch)|(c))/((h))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'c', 'h']
				version split: ['d', 'r', 'i', 'c', 'h']
				{'string': 'd/r/i/c/h', 'rgx': '((d))/((r))/((i))/((ch)|(c))/((h))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'c', 'h']
				version split: ['d', 'r', 'i', 'ch']
				{'string': 'd/r/i/ch', 'rgx': '((d))/((r))/((i))/((ch)|(c))/((h))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'ch']
				version split: ['d', 'r', 'i', 'ch']
				{'string': 'd/r/i/ch', 'rgx': '((d))/((r))/((i))/((ch)|(c))/((h))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'ch']
				version split: ['d', 'r', 'i', 'c', 'h', '_']
				{'string': 'd/r/i/c/h/_', 'rgx': '((d))/((r))/((i))/((ch)|(c))/((h))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'c', 'h', '_']
				version split: ['d', 'r', 'i', 'c', 'h', '_']
				{'string': 'd/r/i/c/h/_', 'rgx': '((d))/((r))/((i))/((ch)|(c))/((h))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'c', 'h', '_']
				version split: ['d', 'r', 'i', 'ch', '_']
				{'string': 'd/r/i/ch/_', 'rgx': '((d))/((r))/((i))/((ch)|(c))/((h))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'ch', '_']
				version split: ['d', 'r', 'i', 'ch', '_']
				{'string': 'd/r/i/ch/_', 'rgx': '((d))/((r))/((i))/((ch)|(c))/((h))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'ch', '_']
				version split: ['d', 'r', 'i', 'c', 'h', '_']
				{'string': 'd/r/i/c/h/_', 'rgx': '((d))/((r))/((i))/((ch)|(c))/((h))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'c', 'h', '_']
				version split: ['d', 'r', 'i', 'c', 'h', '_']
				{'string': 'd/r/i/c/h/_', 'rgx': '((d))/((r))/((i))/((ch)|(c))/((h))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'c', 'h', '_']
				version split: ['d', 'r', 'i', 'ch', '_']
				{'string': 'd/r/i/ch/_', 'rgx': '((d))/((r))/((i))/((ch)|(c))/((h))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'ch', '_']
				version split: ['d', 'r', 'i', 'ch', '_']
				{'string': 'd/r/i/ch/_', 'rgx': '((d))/((r))/((i))/((ch)|(c))/((h))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'ch', '_']
				version split: ['d', 'r', 'i', 'c', 'h', '_', '_']
				{'string': 'd/r/i/c/h/_/_', 'rgx': '((d))/((r))/((i))/((ch)|(c))/((h))/((_))/((_))$'}
				version split: ['d', 'r', 'i', 'c', 'h', '_', '_']
				{'string': 'd/r/i/c/h/_/_', 'rgx': '((d))/((r))/((i))/((ch)|(c))/((h))/((_))/((_))$'}
				version split: ['d', 'r', 'i', 'ch', '_', '_']
				{'string': 'd/r/i/ch/_/_', 'rgx': '((d))/((r))/((i))/((ch)|(c))/((h))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'ch', '_', '_']
				version split: ['d', 'r', 'i', 'ch', '_', '_']
				{'string': 'd/r/i/ch/_/_', 'rgx': '((d))/((r))/((i))/((ch)|(c))/((h))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'ch', '_', '_']
				ANALYSING: dricht
					resolving (4)
					> version: d/r/i/c/h/t
					> version: d/r/i/c/h/t
					> version: d/r/i/ch/t
					> version: d/r/i/ch/t
					RESULT:  ['_']
				adding dashed alternative: ['d', 'r', 'i', 'c', 'h', 't', '_']
				adding dashed alternative: ['d', 'r', 'i', 'c', 'h', 't', '_']
				adding dashed alternative: ['d', 'r', 'i', 'ch', 't', '_']
				adding dashed alternative: ['d', 'r', 'i', 'ch', 't', '_']
				d/r/i/c/h/t(CCCCCC)
d/r/i/c/h/t(CCVCCC)
d/r/i/ch/t(CCCCC)
d/r/i/ch/t(CCVCC)
d/r/i/c/h/t/_(CCACCCA)
d/r/i/c/h/t/_(CCACCCA)
d/r/i/ch/t/_(CCACCA)
d/r/i/ch/t/_(CCACCA)
				version split: ['d', 'r', 'i', 'c', 'h', 't']
				{'string': 'd/r/i/c/h/t', 'rgx': '((d))/((r))/((i))/((ch)|(c))/((t)|(h))/((t))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'c', 'h', 't']
				version split: ['d', 'r', 'i', 'c', 'h', 't']
				{'string': 'd/r/i/c/h/t', 'rgx': '((d))/((r))/((i))/((ch)|(c))/((t)|(h))/((t))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'c', 'h', 't']
				version split: ['d', 'r', 'i', 'ch', 't']
				{'string': 'd/r/i/ch/t', 'rgx': '((d))/((r))/((i))/((ch)|(c))/((t)|(h))/((t))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'ch', 't']
				version split: ['d', 'r', 'i', 'ch', 't']
				{'string': 'd/r/i/ch/t', 'rgx': '((d))/((r))/((i))/((ch)|(c))/((t)|(h))/((t))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'ch', 't']
				version split: ['d', 'r', 'i', 'c', 'h', 't', '_']
				{'string': 'd/r/i/c/h/t/_', 'rgx': '((d))/((r))/((i))/((ch)|(c))/((t)|(h))/((t))/((_))$'}
				version split: ['d', 'r', 'i', 'c', 'h', 't', '_']
				{'string': 'd/r/i/c/h/t/_', 'rgx': '((d))/((r))/((i))/((ch)|(c))/((t)|(h))/((t))/((_))$'}
				version split: ['d', 'r', 'i', 'ch', 't', '_']
				{'string': 'd/r/i/ch/t/_', 'rgx': '((d))/((r))/((i))/((ch)|(c))/((t)|(h))/((t))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'ch', 't', '_']
				version split: ['d', 'r', 'i', 'ch', 't', '_']
				{'string': 'd/r/i/ch/t/_', 'rgx': '((d))/((r))/((i))/((ch)|(c))/((t)|(h))/((t))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'ch', 't', '_']
				ANALYSING: drikte
					resolving (4)
					> version: d/r/i/k/t/e
					> version: d/r/i/k/t/e
					> version: d/r/i/k/t/_/e
					TRYING: e
					> version: d/r/i/k/t/_/e
					TRYING: e
					RESULT:  ['e']
				version split: ['d', 'r', 'i', 'k', 't', 'e']
				{'string': 'd/r/i/k/t/e', 'rgx': '((d))/((r))/((i))/((k))/((t))/((_))/((e))$'}
				_____REMOVING________['d', 'r', 'i', 'k', 't', 'e']
				version split: ['d', 'r', 'i', 'k', 't', 'e']
				{'string': 'd/r/i/k/t/e', 'rgx': '((d))/((r))/((i))/((k))/((t))/((_))/((e))$'}
				_____REMOVING________['d', 'r', 'i', 'k', 't', 'e']
				version split: ['d', 'r', 'i', 'k', 't', '_', 'e']
				{'string': 'd/r/i/k/t/_/e', 'rgx': '((d))/((r))/((i))/((k))/((t))/((_))/((e))$'}
				version split: ['d', 'r', 'i', 'k', 't', '_', 'e']
				{'string': 'd/r/i/k/t/_/e', 'rgx': '((d))/((r))/((i))/((k))/((t))/((_))/((e))$'}
				ANALYSING: drist
					resolving (4)
					> version: d/r/i/s/t
					> version: d/r/i/s/t
					> version: d/r/i/s/t/_
					> version: d/r/i/s/t/_
					RESULT:  ['_']
				adding dashed alternative: ['d', 'r', 'i', 's', 't', '_']
				adding dashed alternative: ['d', 'r', 'i', 's', 't', '_']
				adding dashed alternative: ['d', 'r', 'i', 's', 't', '_', '_']
				adding dashed alternative: ['d', 'r', 'i', 's', 't', '_', '_']
				d/r/i/s/t(CCCCC)
d/r/i/s/t(CCVCC)
d/r/i/s/t/_(CCACCA)
d/r/i/s/t/_(CCACCA)
d/r/i/s/t/_(CCACCA)
d/r/i/s/t/_(CCACCA)
d/r/i/s/t/_/_(CCACCAA)
d/r/i/s/t/_/_(CCACCAA)
				version split: ['d', 'r', 'i', 's', 't']
				{'string': 'd/r/i/s/t', 'rgx': '((d))/((r))/((i))/((s))/((t))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 's', 't']
				version split: ['d', 'r', 'i', 's', 't']
				{'string': 'd/r/i/s/t', 'rgx': '((d))/((r))/((i))/((s))/((t))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 's', 't']
				version split: ['d', 'r', 'i', 's', 't', '_']
				{'string': 'd/r/i/s/t/_', 'rgx': '((d))/((r))/((i))/((s))/((t))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 's', 't', '_']
				version split: ['d', 'r', 'i', 's', 't', '_']
				{'string': 'd/r/i/s/t/_', 'rgx': '((d))/((r))/((i))/((s))/((t))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 's', 't', '_']
				version split: ['d', 'r', 'i', 's', 't', '_']
				{'string': 'd/r/i/s/t/_', 'rgx': '((d))/((r))/((i))/((s))/((t))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 's', 't', '_']
				version split: ['d', 'r', 'i', 's', 't', '_']
				{'string': 'd/r/i/s/t/_', 'rgx': '((d))/((r))/((i))/((s))/((t))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 's', 't', '_']
				version split: ['d', 'r', 'i', 's', 't', '_', '_']
				{'string': 'd/r/i/s/t/_/_', 'rgx': '((d))/((r))/((i))/((s))/((t))/((_))/((_))$'}
				version split: ['d', 'r', 'i', 's', 't', '_', '_']
				{'string': 'd/r/i/s/t/_/_', 'rgx': '((d))/((r))/((i))/((s))/((t))/((_))/((_))$'}
				ANALYSING: driste
					resolving (4)
					> version: d/r/i/s/t/e
					> version: d/r/i/s/t/e
					> version: d/r/i/s/t/_/e
					TRYING: e
					> version: d/r/i/s/t/_/e
					TRYING: e
					RESULT:  ['e']
				version split: ['d', 'r', 'i', 's', 't', 'e']
				{'string': 'd/r/i/s/t/e', 'rgx': '((d))/((r))/((i))/((s))/((t))/((_))/((e))$'}
				_____REMOVING________['d', 'r', 'i', 's', 't', 'e']
				version split: ['d', 'r', 'i', 's', 't', 'e']
				{'string': 'd/r/i/s/t/e', 'rgx': '((d))/((r))/((i))/((s))/((t))/((_))/((e))$'}
				_____REMOVING________['d', 'r', 'i', 's', 't', 'e']
				version split: ['d', 'r', 'i', 's', 't', '_', 'e']
				{'string': 'd/r/i/s/t/_/e', 'rgx': '((d))/((r))/((i))/((s))/((t))/((_))/((e))$'}
				version split: ['d', 'r', 'i', 's', 't', '_', 'e']
				{'string': 'd/r/i/s/t/_/e', 'rgx': '((d))/((r))/((i))/((s))/((t))/((_))/((e))$'}
				ANALYSING: drith
					resolving (8)
					> version: d/r/i/t/h
					> version: d/r/i/t/h
					> version: d/r/i/th
					> version: d/r/i/th
					> version: d/r/i/t/h/_
					> version: d/r/i/t/h/_
					> version: d/r/i/th/_
					> version: d/r/i/th/_
					RESULT:  ['_']
				adding dashed alternative: ['d', 'r', 'i', 't', 'h', '_']
				adding dashed alternative: ['d', 'r', 'i', 't', 'h', '_']
				adding dashed alternative: ['d', 'r', 'i', 'th', '_']
				adding dashed alternative: ['d', 'r', 'i', 'th', '_']
				adding dashed alternative: ['d', 'r', 'i', 't', 'h', '_', '_']
				adding dashed alternative: ['d', 'r', 'i', 't', 'h', '_', '_']
				adding dashed alternative: ['d', 'r', 'i', 'th', '_', '_']
				adding dashed alternative: ['d', 'r', 'i', 'th', '_', '_']
				d/r/i/t/h(CCCCC)
d/r/i/t/h(CCVCC)
d/r/i/th(CCCC)
d/r/i/th(CCVC)
d/r/i/t/h/_(CCACCA)
d/r/i/t/h/_(CCACCA)
d/r/i/th/_(CCACA)
d/r/i/th/_(CCACA)
d/r/i/t/h/_(CCACCA)
d/r/i/t/h/_(CCACCA)
d/r/i/th/_(CCACA)
d/r/i/th/_(CCACA)
d/r/i/t/h/_/_(CCACCAA)
d/r/i/t/h/_/_(CCACCAA)
d/r/i/th/_/_(CCACAA)
d/r/i/th/_/_(CCACAA)
				version split: ['d', 'r', 'i', 't', 'h']
				{'string': 'd/r/i/t/h', 'rgx': '((d))/((r))/((i))/((t)|(th))/((h))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 't', 'h']
				version split: ['d', 'r', 'i', 't', 'h']
				{'string': 'd/r/i/t/h', 'rgx': '((d))/((r))/((i))/((t)|(th))/((h))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 't', 'h']
				version split: ['d', 'r', 'i', 'th']
				{'string': 'd/r/i/th', 'rgx': '((d))/((r))/((i))/((t)|(th))/((h))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'th']
				version split: ['d', 'r', 'i', 'th']
				{'string': 'd/r/i/th', 'rgx': '((d))/((r))/((i))/((t)|(th))/((h))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'th']
				version split: ['d', 'r', 'i', 't', 'h', '_']
				{'string': 'd/r/i/t/h/_', 'rgx': '((d))/((r))/((i))/((t)|(th))/((h))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 't', 'h', '_']
				version split: ['d', 'r', 'i', 't', 'h', '_']
				{'string': 'd/r/i/t/h/_', 'rgx': '((d))/((r))/((i))/((t)|(th))/((h))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 't', 'h', '_']
				version split: ['d', 'r', 'i', 'th', '_']
				{'string': 'd/r/i/th/_', 'rgx': '((d))/((r))/((i))/((t)|(th))/((h))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'th', '_']
				version split: ['d', 'r', 'i', 'th', '_']
				{'string': 'd/r/i/th/_', 'rgx': '((d))/((r))/((i))/((t)|(th))/((h))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'th', '_']
				version split: ['d', 'r', 'i', 't', 'h', '_']
				{'string': 'd/r/i/t/h/_', 'rgx': '((d))/((r))/((i))/((t)|(th))/((h))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 't', 'h', '_']
				version split: ['d', 'r', 'i', 't', 'h', '_']
				{'string': 'd/r/i/t/h/_', 'rgx': '((d))/((r))/((i))/((t)|(th))/((h))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 't', 'h', '_']
				version split: ['d', 'r', 'i', 'th', '_']
				{'string': 'd/r/i/th/_', 'rgx': '((d))/((r))/((i))/((t)|(th))/((h))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'th', '_']
				version split: ['d', 'r', 'i', 'th', '_']
				{'string': 'd/r/i/th/_', 'rgx': '((d))/((r))/((i))/((t)|(th))/((h))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'th', '_']
				version split: ['d', 'r', 'i', 't', 'h', '_', '_']
				{'string': 'd/r/i/t/h/_/_', 'rgx': '((d))/((r))/((i))/((t)|(th))/((h))/((_))/((_))$'}
				version split: ['d', 'r', 'i', 't', 'h', '_', '_']
				{'string': 'd/r/i/t/h/_/_', 'rgx': '((d))/((r))/((i))/((t)|(th))/((h))/((_))/((_))$'}
				version split: ['d', 'r', 'i', 'th', '_', '_']
				{'string': 'd/r/i/th/_/_', 'rgx': '((d))/((r))/((i))/((t)|(th))/((h))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'th', '_', '_']
				version split: ['d', 'r', 'i', 'th', '_', '_']
				{'string': 'd/r/i/th/_/_', 'rgx': '((d))/((r))/((i))/((t)|(th))/((h))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'th', '_', '_']
				ANALYSING: drithe
					resolving (8)
					> version: d/r/i/t/h/e
					> version: d/r/i/t/h/e
					> version: d/r/i/th/e
					> version: d/r/i/th/e
					> version: d/r/i/t/h/_/e
					TRYING: e
					> version: d/r/i/t/h/_/e
					TRYING: e
					> version: d/r/i/th/e/_
					> version: d/r/i/th/e/_
					RESULT:  ['e']
				version split: ['d', 'r', 'i', 't', 'h', 'e']
				{'string': 'd/r/i/t/h/e', 'rgx': '((d))/((r))/((i))/((t)|(th))/((h))/((_))/((e))$'}
				_____REMOVING________['d', 'r', 'i', 't', 'h', 'e']
				version split: ['d', 'r', 'i', 't', 'h', 'e']
				{'string': 'd/r/i/t/h/e', 'rgx': '((d))/((r))/((i))/((t)|(th))/((h))/((_))/((e))$'}
				_____REMOVING________['d', 'r', 'i', 't', 'h', 'e']
				version split: ['d', 'r', 'i', 'th', 'e']
				{'string': 'd/r/i/th/e', 'rgx': '((d))/((r))/((i))/((t)|(th))/((h))/((_))/((e))$'}
				_____REMOVING________['d', 'r', 'i', 'th', 'e']
				version split: ['d', 'r', 'i', 'th', 'e']
				{'string': 'd/r/i/th/e', 'rgx': '((d))/((r))/((i))/((t)|(th))/((h))/((_))/((e))$'}
				_____REMOVING________['d', 'r', 'i', 'th', 'e']
				version split: ['d', 'r', 'i', 't', 'h', '_', 'e']
				{'string': 'd/r/i/t/h/_/e', 'rgx': '((d))/((r))/((i))/((t)|(th))/((h))/((_))/((e))$'}
				version split: ['d', 'r', 'i', 't', 'h', '_', 'e']
				{'string': 'd/r/i/t/h/_/e', 'rgx': '((d))/((r))/((i))/((t)|(th))/((h))/((_))/((e))$'}
				version split: ['d', 'r', 'i', 'th', 'e', '_']
				{'string': 'd/r/i/th/e/_', 'rgx': '((d))/((r))/((i))/((t)|(th))/((h))/((_))/((e))$'}
				_____REMOVING________['d', 'r', 'i', 'th', 'e', '_']
				version split: ['d', 'r', 'i', 'th', 'e', '_']
				{'string': 'd/r/i/th/e/_', 'rgx': '((d))/((r))/((i))/((t)|(th))/((h))/((_))/((e))$'}
				_____REMOVING________['d', 'r', 'i', 'th', 'e', '_']
				ANALYSING: dritht
					resolving (4)
					> version: d/r/i/t/h/t
					> version: d/r/i/t/h/t
					> version: d/r/i/th/t
					> version: d/r/i/th/t
					RESULT:  ['_']
				adding dashed alternative: ['d', 'r', 'i', 't', 'h', 't', '_']
				adding dashed alternative: ['d', 'r', 'i', 't', 'h', 't', '_']
				adding dashed alternative: ['d', 'r', 'i', 'th', 't', '_']
				adding dashed alternative: ['d', 'r', 'i', 'th', 't', '_']
				d/r/i/t/h/t(CCCCCC)
d/r/i/t/h/t(CCVCCC)
d/r/i/th/t(CCCCC)
d/r/i/th/t(CCVCC)
d/r/i/t/h/t/_(CCACCCA)
d/r/i/t/h/t/_(CCACCCA)
d/r/i/th/t/_(CCACCA)
d/r/i/th/t/_(CCACCA)
				version split: ['d', 'r', 'i', 't', 'h', 't']
				{'string': 'd/r/i/t/h/t', 'rgx': '((d))/((r))/((i))/((t)|(th))/((t)|(h))/((t))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 't', 'h', 't']
				version split: ['d', 'r', 'i', 't', 'h', 't']
				{'string': 'd/r/i/t/h/t', 'rgx': '((d))/((r))/((i))/((t)|(th))/((t)|(h))/((t))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 't', 'h', 't']
				version split: ['d', 'r', 'i', 'th', 't']
				{'string': 'd/r/i/th/t', 'rgx': '((d))/((r))/((i))/((t)|(th))/((t)|(h))/((t))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'th', 't']
				version split: ['d', 'r', 'i', 'th', 't']
				{'string': 'd/r/i/th/t', 'rgx': '((d))/((r))/((i))/((t)|(th))/((t)|(h))/((t))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'th', 't']
				version split: ['d', 'r', 'i', 't', 'h', 't', '_']
				{'string': 'd/r/i/t/h/t/_', 'rgx': '((d))/((r))/((i))/((t)|(th))/((t)|(h))/((t))/((_))$'}
				version split: ['d', 'r', 'i', 't', 'h', 't', '_']
				{'string': 'd/r/i/t/h/t/_', 'rgx': '((d))/((r))/((i))/((t)|(th))/((t)|(h))/((t))/((_))$'}
				version split: ['d', 'r', 'i', 'th', 't', '_']
				{'string': 'd/r/i/th/t/_', 'rgx': '((d))/((r))/((i))/((t)|(th))/((t)|(h))/((t))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'th', 't', '_']
				version split: ['d', 'r', 'i', 'th', 't', '_']
				{'string': 'd/r/i/th/t/_', 'rgx': '((d))/((r))/((i))/((t)|(th))/((t)|(h))/((t))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'th', 't', '_']
				ANALYSING: dritt
					resolving (8)
					> version: d/r/i/t/t
					> version: d/r/i/t/t
					> version: d/r/i/tt
					> version: d/r/i/tt
					> version: d/r/i/t/t/_
					> version: d/r/i/t/t/_
					> version: d/r/i/tt/_
					> version: d/r/i/tt/_
					RESULT:  ['_']
				adding dashed alternative: ['d', 'r', 'i', 't', 't', '_']
				adding dashed alternative: ['d', 'r', 'i', 't', 't', '_']
				adding dashed alternative: ['d', 'r', 'i', 'tt', '_']
				adding dashed alternative: ['d', 'r', 'i', 'tt', '_']
				adding dashed alternative: ['d', 'r', 'i', 't', 't', '_', '_']
				adding dashed alternative: ['d', 'r', 'i', 't', 't', '_', '_']
				adding dashed alternative: ['d', 'r', 'i', 'tt', '_', '_']
				adding dashed alternative: ['d', 'r', 'i', 'tt', '_', '_']
				d/r/i/t/t(CCCCC)
d/r/i/t/t(CCVCC)
d/r/i/tt(CCCC)
d/r/i/tt(CCVC)
d/r/i/t/t/_(CCACCA)
d/r/i/t/t/_(CCACCA)
d/r/i/tt/_(CCACA)
d/r/i/tt/_(CCACA)
d/r/i/t/t/_(CCACCA)
d/r/i/t/t/_(CCACCA)
d/r/i/tt/_(CCACA)
d/r/i/tt/_(CCACA)
d/r/i/t/t/_/_(CCACCAA)
d/r/i/t/t/_/_(CCACCAA)
d/r/i/tt/_/_(CCACAA)
d/r/i/tt/_/_(CCACAA)
				version split: ['d', 'r', 'i', 't', 't']
				{'string': 'd/r/i/t/t', 'rgx': '((d))/((r))/((i))/((tt)|(t))/((t))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 't', 't']
				version split: ['d', 'r', 'i', 't', 't']
				{'string': 'd/r/i/t/t', 'rgx': '((d))/((r))/((i))/((tt)|(t))/((t))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 't', 't']
				version split: ['d', 'r', 'i', 'tt']
				{'string': 'd/r/i/tt', 'rgx': '((d))/((r))/((i))/((tt)|(t))/((t))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'tt']
				version split: ['d', 'r', 'i', 'tt']
				{'string': 'd/r/i/tt', 'rgx': '((d))/((r))/((i))/((tt)|(t))/((t))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'tt']
				version split: ['d', 'r', 'i', 't', 't', '_']
				{'string': 'd/r/i/t/t/_', 'rgx': '((d))/((r))/((i))/((tt)|(t))/((t))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 't', 't', '_']
				version split: ['d', 'r', 'i', 't', 't', '_']
				{'string': 'd/r/i/t/t/_', 'rgx': '((d))/((r))/((i))/((tt)|(t))/((t))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 't', 't', '_']
				version split: ['d', 'r', 'i', 'tt', '_']
				{'string': 'd/r/i/tt/_', 'rgx': '((d))/((r))/((i))/((tt)|(t))/((t))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'tt', '_']
				version split: ['d', 'r', 'i', 'tt', '_']
				{'string': 'd/r/i/tt/_', 'rgx': '((d))/((r))/((i))/((tt)|(t))/((t))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'tt', '_']
				version split: ['d', 'r', 'i', 't', 't', '_']
				{'string': 'd/r/i/t/t/_', 'rgx': '((d))/((r))/((i))/((tt)|(t))/((t))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 't', 't', '_']
				version split: ['d', 'r', 'i', 't', 't', '_']
				{'string': 'd/r/i/t/t/_', 'rgx': '((d))/((r))/((i))/((tt)|(t))/((t))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 't', 't', '_']
				version split: ['d', 'r', 'i', 'tt', '_']
				{'string': 'd/r/i/tt/_', 'rgx': '((d))/((r))/((i))/((tt)|(t))/((t))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'tt', '_']
				version split: ['d', 'r', 'i', 'tt', '_']
				{'string': 'd/r/i/tt/_', 'rgx': '((d))/((r))/((i))/((tt)|(t))/((t))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'tt', '_']
				version split: ['d', 'r', 'i', 't', 't', '_', '_']
				{'string': 'd/r/i/t/t/_/_', 'rgx': '((d))/((r))/((i))/((tt)|(t))/((t))/((_))/((_))$'}
				version split: ['d', 'r', 'i', 't', 't', '_', '_']
				{'string': 'd/r/i/t/t/_/_', 'rgx': '((d))/((r))/((i))/((tt)|(t))/((t))/((_))/((_))$'}
				version split: ['d', 'r', 'i', 'tt', '_', '_']
				{'string': 'd/r/i/tt/_/_', 'rgx': '((d))/((r))/((i))/((tt)|(t))/((t))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'tt', '_', '_']
				version split: ['d', 'r', 'i', 'tt', '_', '_']
				{'string': 'd/r/i/tt/_/_', 'rgx': '((d))/((r))/((i))/((tt)|(t))/((t))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'tt', '_', '_']
				ANALYSING: dritte
					resolving (8)
					> version: d/r/i/t/t/e
					> version: d/r/i/t/t/e
					> version: d/r/i/tt/e
					> version: d/r/i/tt/e
					> version: d/r/i/t/t/_/e
					TRYING: e
					> version: d/r/i/t/t/_/e
					TRYING: e
					> version: d/r/i/tt/e/_
					> version: d/r/i/tt/e/_
					RESULT:  ['e']
				version split: ['d', 'r', 'i', 't', 't', 'e']
				{'string': 'd/r/i/t/t/e', 'rgx': '((d))/((r))/((i))/((tt)|(t))/((t))/((_))/((e))$'}
				_____REMOVING________['d', 'r', 'i', 't', 't', 'e']
				version split: ['d', 'r', 'i', 't', 't', 'e']
				{'string': 'd/r/i/t/t/e', 'rgx': '((d))/((r))/((i))/((tt)|(t))/((t))/((_))/((e))$'}
				_____REMOVING________['d', 'r', 'i', 't', 't', 'e']
				version split: ['d', 'r', 'i', 'tt', 'e']
				{'string': 'd/r/i/tt/e', 'rgx': '((d))/((r))/((i))/((tt)|(t))/((t))/((_))/((e))$'}
				_____REMOVING________['d', 'r', 'i', 'tt', 'e']
				version split: ['d', 'r', 'i', 'tt', 'e']
				{'string': 'd/r/i/tt/e', 'rgx': '((d))/((r))/((i))/((tt)|(t))/((t))/((_))/((e))$'}
				_____REMOVING________['d', 'r', 'i', 'tt', 'e']
				version split: ['d', 'r', 'i', 't', 't', '_', 'e']
				{'string': 'd/r/i/t/t/_/e', 'rgx': '((d))/((r))/((i))/((tt)|(t))/((t))/((_))/((e))$'}
				version split: ['d', 'r', 'i', 't', 't', '_', 'e']
				{'string': 'd/r/i/t/t/_/e', 'rgx': '((d))/((r))/((i))/((tt)|(t))/((t))/((_))/((e))$'}
				version split: ['d', 'r', 'i', 'tt', 'e', '_']
				{'string': 'd/r/i/tt/e/_', 'rgx': '((d))/((r))/((i))/((tt)|(t))/((t))/((_))/((e))$'}
				_____REMOVING________['d', 'r', 'i', 'tt', 'e', '_']
				version split: ['d', 'r', 'i', 'tt', 'e', '_']
				{'string': 'd/r/i/tt/e/_', 'rgx': '((d))/((r))/((i))/((tt)|(t))/((t))/((_))/((e))$'}
				_____REMOVING________['d', 'r', 'i', 'tt', 'e', '_']
				ANALYSING: driȝt
					resolving (4)
					> version: d/r/i/ȝ/t
					> version: d/r/i/ȝ/t
					> version: d/r/i/ȝ/t/_
					> version: d/r/i/ȝ/t/_
					RESULT:  ['_']
				adding dashed alternative: ['d', 'r', 'i', 'ȝ', 't', '_']
				adding dashed alternative: ['d', 'r', 'i', 'ȝ', 't', '_']
				adding dashed alternative: ['d', 'r', 'i', 'ȝ', 't', '_', '_']
				adding dashed alternative: ['d', 'r', 'i', 'ȝ', 't', '_', '_']
				d/r/i/ȝ/t(CCCCC)
d/r/i/ȝ/t(CCVCC)
d/r/i/ȝ/t/_(CCACCA)
d/r/i/ȝ/t/_(CCACCA)
d/r/i/ȝ/t/_(CCACCA)
d/r/i/ȝ/t/_(CCACCA)
d/r/i/ȝ/t/_/_(CCACCAA)
d/r/i/ȝ/t/_/_(CCACCAA)
				version split: ['d', 'r', 'i', 'ȝ', 't']
				{'string': 'd/r/i/ȝ/t', 'rgx': '((d))/((r))/((i))/((ȝ))/((t))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'ȝ', 't']
				version split: ['d', 'r', 'i', 'ȝ', 't']
				{'string': 'd/r/i/ȝ/t', 'rgx': '((d))/((r))/((i))/((ȝ))/((t))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'ȝ', 't']
				version split: ['d', 'r', 'i', 'ȝ', 't', '_']
				{'string': 'd/r/i/ȝ/t/_', 'rgx': '((d))/((r))/((i))/((ȝ))/((t))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'ȝ', 't', '_']
				version split: ['d', 'r', 'i', 'ȝ', 't', '_']
				{'string': 'd/r/i/ȝ/t/_', 'rgx': '((d))/((r))/((i))/((ȝ))/((t))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'ȝ', 't', '_']
				version split: ['d', 'r', 'i', 'ȝ', 't', '_']
				{'string': 'd/r/i/ȝ/t/_', 'rgx': '((d))/((r))/((i))/((ȝ))/((t))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'ȝ', 't', '_']
				version split: ['d', 'r', 'i', 'ȝ', 't', '_']
				{'string': 'd/r/i/ȝ/t/_', 'rgx': '((d))/((r))/((i))/((ȝ))/((t))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'i', 'ȝ', 't', '_']
				version split: ['d', 'r', 'i', 'ȝ', 't', '_', '_']
				{'string': 'd/r/i/ȝ/t/_/_', 'rgx': '((d))/((r))/((i))/((ȝ))/((t))/((_))/((_))$'}
				version split: ['d', 'r', 'i', 'ȝ', 't', '_', '_']
				{'string': 'd/r/i/ȝ/t/_/_', 'rgx': '((d))/((r))/((i))/((ȝ))/((t))/((_))/((_))$'}
				ANALYSING: driȝte
					resolving (4)
					> version: d/r/i/ȝ/t/e
					> version: d/r/i/ȝ/t/e
					> version: d/r/i/ȝ/t/_/e
					TRYING: e
					> version: d/r/i/ȝ/t/_/e
					TRYING: e
					RESULT:  ['e']
				version split: ['d', 'r', 'i', 'ȝ', 't', 'e']
				{'string': 'd/r/i/ȝ/t/e', 'rgx': '((d))/((r))/((i))/((ȝ))/((t))/((_))/((e))$'}
				_____REMOVING________['d', 'r', 'i', 'ȝ', 't', 'e']
				version split: ['d', 'r', 'i', 'ȝ', 't', 'e']
				{'string': 'd/r/i/ȝ/t/e', 'rgx': '((d))/((r))/((i))/((ȝ))/((t))/((_))/((e))$'}
				_____REMOVING________['d', 'r', 'i', 'ȝ', 't', 'e']
				version split: ['d', 'r', 'i', 'ȝ', 't', '_', 'e']
				{'string': 'd/r/i/ȝ/t/_/e', 'rgx': '((d))/((r))/((i))/((ȝ))/((t))/((_))/((e))$'}
				version split: ['d', 'r', 'i', 'ȝ', 't', '_', 'e']
				{'string': 'd/r/i/ȝ/t/_/e', 'rgx': '((d))/((r))/((i))/((ȝ))/((t))/((_))/((e))$'}
				ANALYSING: dryht
					resolving (6)
					> version: d/r/y/h/t
					> version: d/r/y/h/t
					> version: d/r/yh/t
					> version: d/r/y/h/t/_
					> version: d/r/y/h/t/_
					> version: d/r/yh/t/_
					RESULT:  ['_']
				adding dashed alternative: ['d', 'r', 'y', 'h', 't', '_']
				adding dashed alternative: ['d', 'r', 'y', 'h', 't', '_']
				adding dashed alternative: ['d', 'r', 'yh', 't', '_']
				adding dashed alternative: ['d', 'r', 'y', 'h', 't', '_', '_']
				adding dashed alternative: ['d', 'r', 'y', 'h', 't', '_', '_']
				adding dashed alternative: ['d', 'r', 'yh', 't', '_', '_']
				d/r/y/h/t(CCCCC)
d/r/y/h/t(CCVCC)
d/r/yh/t(CCCC)
d/r/y/h/t/_(CCACCA)
d/r/y/h/t/_(CCACCA)
d/r/yh/t/_(CCCCA)
d/r/y/h/t/_(CCACCA)
d/r/y/h/t/_(CCACCA)
d/r/yh/t/_(CCCCA)
d/r/y/h/t/_/_(CCACCAA)
d/r/y/h/t/_/_(CCACCAA)
d/r/yh/t/_/_(CCCCAA)
				version split: ['d', 'r', 'y', 'h', 't']
				{'string': 'd/r/y/h/t', 'rgx': '((d))/((r))/((y))/((t)|(h))/((t))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'y', 'h', 't']
				version split: ['d', 'r', 'y', 'h', 't']
				{'string': 'd/r/y/h/t', 'rgx': '((d))/((r))/((y))/((t)|(h))/((t))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'y', 'h', 't']
				version split: ['d', 'r', 'yh', 't']
				{'string': 'd/r/yh/t', 'rgx': '((d))/((r))/((y))/((t)|(h))/((t))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'yh', 't']
				version split: ['d', 'r', 'y', 'h', 't', '_']
				{'string': 'd/r/y/h/t/_', 'rgx': '((d))/((r))/((y))/((t)|(h))/((t))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'y', 'h', 't', '_']
				version split: ['d', 'r', 'y', 'h', 't', '_']
				{'string': 'd/r/y/h/t/_', 'rgx': '((d))/((r))/((y))/((t)|(h))/((t))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'y', 'h', 't', '_']
				version split: ['d', 'r', 'yh', 't', '_']
				{'string': 'd/r/yh/t/_', 'rgx': '((d))/((r))/((y))/((t)|(h))/((t))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'yh', 't', '_']
				version split: ['d', 'r', 'y', 'h', 't', '_']
				{'string': 'd/r/y/h/t/_', 'rgx': '((d))/((r))/((y))/((t)|(h))/((t))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'y', 'h', 't', '_']
				version split: ['d', 'r', 'y', 'h', 't', '_']
				{'string': 'd/r/y/h/t/_', 'rgx': '((d))/((r))/((y))/((t)|(h))/((t))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'y', 'h', 't', '_']
				version split: ['d', 'r', 'yh', 't', '_']
				{'string': 'd/r/yh/t/_', 'rgx': '((d))/((r))/((y))/((t)|(h))/((t))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'yh', 't', '_']
				version split: ['d', 'r', 'y', 'h', 't', '_', '_']
				{'string': 'd/r/y/h/t/_/_', 'rgx': '((d))/((r))/((y))/((t)|(h))/((t))/((_))/((_))$'}
				version split: ['d', 'r', 'y', 'h', 't', '_', '_']
				{'string': 'd/r/y/h/t/_/_', 'rgx': '((d))/((r))/((y))/((t)|(h))/((t))/((_))/((_))$'}
				version split: ['d', 'r', 'yh', 't', '_', '_']
				{'string': 'd/r/yh/t/_/_', 'rgx': '((d))/((r))/((y))/((t)|(h))/((t))/((_))/((_))$'}
				_____REMOVING________['d', 'r', 'yh', 't', '_', '_']
				ANALYSING: dryhte
					resolving (6)
					> version: d/r/y/h/t/e
					> version: d/r/y/h/t/e
					> version: d/r/yh/t/e
					> version: d/r/y/h/t/_/e
					TRYING: e
					> version: d/r/y/h/t/_/e
					TRYING: e
					> version: d/r/yh/t/e/_
					RESULT:  ['e']
				version split: ['d', 'r', 'y', 'h', 't', 'e']
				{'string': 'd/r/y/h/t/e', 'rgx': '((d))/((r))/((y))/((t)|(h))/((t))/((_))/((e))$'}
				_____REMOVING________['d', 'r', 'y', 'h', 't', 'e']
				version split: ['d', 'r', 'y', 'h', 't', 'e']
				{'string': 'd/r/y/h/t/e', 'rgx': '((d))/((r))/((y))/((t)|(h))/((t))/((_))/((e))$'}
				_____REMOVING________['d', 'r', 'y', 'h', 't', 'e']
				version split: ['d', 'r', 'yh', 't', 'e']
				{'string': 'd/r/yh/t/e', 'rgx': '((d))/((r))/((y))/((t)|(h))/((t))/((_))/((e))$'}
				_____REMOVING________['d', 'r', 'yh', 't', 'e']
				version split: ['d', 'r', 'y', 'h', 't', '_', 'e']
				{'string': 'd/r/y/h/t/_/e', 'rgx': '((d))/((r))/((y))/((t)|(h))/((t))/((_))/((e))$'}
				version split: ['d', 'r', 'y', 'h', 't', '_', 'e']
				{'string': 'd/r/y/h/t/_/e', 'rgx': '((d))/((r))/((y))/((t)|(h))/((t))/((_))/((e))$'}
				version split: ['d', 'r', 'yh', 't', 'e', '_']
				{'string': 'd/r/yh/t/e/_', 'rgx': '((d))/((r))/((y))/((t)|(h))/((t))/((_))/((e))$'}
				_____REMOVING________['d', 'r', 'yh', 't', 'e', '_']
				ANALYSING: e
					resolving (32)
					> version: e
					> version: _/e
					> version: e/_
					> version: _/_/e
					> version: e/_
					> version: _/e/_
					> version: e/_/_
					> version: _/_/e/_
					> version: e/_
					> version: _/e/_
					> version: e/_/_
					> version: _/_/e/_
					> version: e/_/_
					> version: _/e/_/_
					> version: e/_/_/_
					> version: _/_/e/_/_
					> version: e/_
					> version: _/e/_
					> version: e/_/_
					> version: _/_/e/_
					> version: e/_/_
					> version: _/e/_/_
					> version: e/_/_/_
					> version: _/_/e/_/_
					> version: e/_/_
					> version: _/e/_/_
					> version: e/_/_/_
					> version: _/_/e/_/_
					> version: e/_/_/_
					> version: _/e/_/_/_
					> version: e/_/_/_/_
					> version: _/_/e/_/_/_
					RESULT:  ['_']
				adding dashed alternative: ['e', '_']
				adding dashed alternative: ['_', 'e', '_']
				adding dashed alternative: ['e', '_', '_']
				adding dashed alternative: ['_', '_', 'e', '_']
				adding dashed alternative: ['e', '_', '_']
				adding dashed alternative: ['_', 'e', '_', '_']
				adding dashed alternative: ['e', '_', '_', '_']
				adding dashed alternative: ['_', '_', 'e', '_', '_']
				adding dashed alternative: ['e', '_', '_']
				adding dashed alternative: ['_', 'e', '_', '_']
				adding dashed alternative: ['e', '_', '_', '_']
				adding dashed alternative: ['_', '_', 'e', '_', '_']
				adding dashed alternative: ['e', '_', '_', '_']
				adding dashed alternative: ['_', 'e', '_', '_', '_']
				adding dashed alternative: ['e', '_', '_', '_', '_']
				adding dashed alternative: ['_', '_', 'e', '_', '_', '_']
				adding dashed alternative: ['e', '_', '_']
				adding dashed alternative: ['_', 'e', '_', '_']
				adding dashed alternative: ['e', '_', '_', '_']
				adding dashed alternative: ['_', '_', 'e', '_', '_']
				adding dashed alternative: ['e', '_', '_', '_']
				adding dashed alternative: ['_', 'e', '_', '_', '_']
				adding dashed alternative: ['e', '_', '_', '_', '_']
				adding dashed alternative: ['_', '_', 'e', '_', '_', '_']
				adding dashed alternative: ['e', '_', '_', '_']
				adding dashed alternative: ['_', 'e', '_', '_', '_']
				adding dashed alternative: ['e', '_', '_', '_', '_']
				adding dashed alternative: ['_', '_', 'e', '_', '_', '_']
				adding dashed alternative: ['e', '_', '_', '_', '_']
				adding dashed alternative: ['_', 'e', '_', '_', '_', '_']
				adding dashed alternative: ['e', '_', '_', '_', '_', '_']
				adding dashed alternative: ['_', '_', 'e', '_', '_', '_', '_']
				e(V)
_/e(AV)
e/_(VA)
_/_/e(AAV)
e/_(VA)
_/e/_(AVA)
e/_/_(VAA)
_/_/e/_(AAVA)
e/_(VA)
_/e/_(AVA)
e/_/_(VAA)
_/_/e/_(AAVA)
e/_/_(VAA)
_/e/_/_(AVAA)
e/_/_/_(VAAA)
_/_/e/_/_(AAVAA)
e/_(VA)
_/e/_(AVA)
e/_/_(VAA)
_/_/e/_(AAVA)
e/_/_(VAA)
_/e/_/_(AVAA)
e/_/_/_(VAAA)
_/_/e/_/_(AAVAA)
e/_/_(VAA)
_/e/_/_(AVAA)
e/_/_/_(VAAA)
_/_/e/_/_(AAVAA)
e/_/_/_(VAAA)
_/e/_/_/_(AVAAA)
e/_/_/_/_(VAAAA)
_/_/e/_/_/_(AAVAAA)
e/_(VA)
_/e/_(AVA)
e/_/_(VAA)
_/_/e/_(AAVA)
e/_/_(VAA)
_/e/_/_(AVAA)
e/_/_/_(VAAA)
_/_/e/_/_(AAVAA)
e/_/_(VAA)
_/e/_/_(AVAA)
e/_/_/_(VAAA)
_/_/e/_/_(AAVAA)
e/_/_/_(VAAA)
_/e/_/_/_(AVAAA)
e/_/_/_/_(VAAAA)
_/_/e/_/_/_(AAVAAA)
e/_/_(VAA)
_/e/_/_(AVAA)
e/_/_/_(VAAA)
_/_/e/_/_(AAVAA)
e/_/_/_(VAAA)
_/e/_/_/_(AVAAA)
e/_/_/_/_(VAAAA)
_/_/e/_/_/_(AAVAAA)
e/_/_/_(VAAA)
_/e/_/_/_(AVAAA)
e/_/_/_/_(VAAAA)
_/_/e/_/_/_(AAVAAA)
e/_/_/_/_(VAAAA)
_/e/_/_/_/_(AVAAAA)
e/_/_/_/_/_(VAAAAA)
_/_/e/_/_/_/_(AAVAAAA)
				version split: ['e']
				{'string': 'e', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['e']
				version split: ['_', 'e']
				{'string': '_/e', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'e']
				version split: ['e', '_']
				{'string': 'e/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['e', '_']
				version split: ['_', '_', 'e']
				{'string': '_/_/e', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'e']
				version split: ['e', '_']
				{'string': 'e/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['e', '_']
				version split: ['_', 'e', '_']
				{'string': '_/e/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'e', '_']
				version split: ['e', '_', '_']
				{'string': 'e/_/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['e', '_', '_']
				version split: ['_', '_', 'e', '_']
				{'string': '_/_/e/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'e', '_']
				version split: ['e', '_']
				{'string': 'e/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['e', '_']
				version split: ['_', 'e', '_']
				{'string': '_/e/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'e', '_']
				version split: ['e', '_', '_']
				{'string': 'e/_/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['e', '_', '_']
				version split: ['_', '_', 'e', '_']
				{'string': '_/_/e/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'e', '_']
				version split: ['e', '_', '_']
				{'string': 'e/_/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['e', '_', '_']
				version split: ['_', 'e', '_', '_']
				{'string': '_/e/_/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'e', '_', '_']
				version split: ['e', '_', '_', '_']
				{'string': 'e/_/_/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['e', '_', '_', '_']
				version split: ['_', '_', 'e', '_', '_']
				{'string': '_/_/e/_/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'e', '_', '_']
				version split: ['e', '_']
				{'string': 'e/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['e', '_']
				version split: ['_', 'e', '_']
				{'string': '_/e/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'e', '_']
				version split: ['e', '_', '_']
				{'string': 'e/_/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['e', '_', '_']
				version split: ['_', '_', 'e', '_']
				{'string': '_/_/e/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'e', '_']
				version split: ['e', '_', '_']
				{'string': 'e/_/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['e', '_', '_']
				version split: ['_', 'e', '_', '_']
				{'string': '_/e/_/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'e', '_', '_']
				version split: ['e', '_', '_', '_']
				{'string': 'e/_/_/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['e', '_', '_', '_']
				version split: ['_', '_', 'e', '_', '_']
				{'string': '_/_/e/_/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'e', '_', '_']
				version split: ['e', '_', '_']
				{'string': 'e/_/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['e', '_', '_']
				version split: ['_', 'e', '_', '_']
				{'string': '_/e/_/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'e', '_', '_']
				version split: ['e', '_', '_', '_']
				{'string': 'e/_/_/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['e', '_', '_', '_']
				version split: ['_', '_', 'e', '_', '_']
				{'string': '_/_/e/_/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'e', '_', '_']
				version split: ['e', '_', '_', '_']
				{'string': 'e/_/_/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['e', '_', '_', '_']
				version split: ['_', 'e', '_', '_', '_']
				{'string': '_/e/_/_/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'e', '_', '_', '_']
				version split: ['e', '_', '_', '_', '_']
				{'string': 'e/_/_/_/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['e', '_', '_', '_', '_']
				version split: ['_', '_', 'e', '_', '_', '_']
				{'string': '_/_/e/_/_/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'e', '_', '_', '_']
				version split: ['e', '_']
				{'string': 'e/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['e', '_']
				version split: ['_', 'e', '_']
				{'string': '_/e/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'e', '_']
				version split: ['e', '_', '_']
				{'string': 'e/_/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['e', '_', '_']
				version split: ['_', '_', 'e', '_']
				{'string': '_/_/e/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'e', '_']
				version split: ['e', '_', '_']
				{'string': 'e/_/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['e', '_', '_']
				version split: ['_', 'e', '_', '_']
				{'string': '_/e/_/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'e', '_', '_']
				version split: ['e', '_', '_', '_']
				{'string': 'e/_/_/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['e', '_', '_', '_']
				version split: ['_', '_', 'e', '_', '_']
				{'string': '_/_/e/_/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'e', '_', '_']
				version split: ['e', '_', '_']
				{'string': 'e/_/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['e', '_', '_']
				version split: ['_', 'e', '_', '_']
				{'string': '_/e/_/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'e', '_', '_']
				version split: ['e', '_', '_', '_']
				{'string': 'e/_/_/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['e', '_', '_', '_']
				version split: ['_', '_', 'e', '_', '_']
				{'string': '_/_/e/_/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'e', '_', '_']
				version split: ['e', '_', '_', '_']
				{'string': 'e/_/_/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['e', '_', '_', '_']
				version split: ['_', 'e', '_', '_', '_']
				{'string': '_/e/_/_/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'e', '_', '_', '_']
				version split: ['e', '_', '_', '_', '_']
				{'string': 'e/_/_/_/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['e', '_', '_', '_', '_']
				version split: ['_', '_', 'e', '_', '_', '_']
				{'string': '_/_/e/_/_/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'e', '_', '_', '_']
				version split: ['e', '_', '_']
				{'string': 'e/_/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['e', '_', '_']
				version split: ['_', 'e', '_', '_']
				{'string': '_/e/_/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'e', '_', '_']
				version split: ['e', '_', '_', '_']
				{'string': 'e/_/_/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['e', '_', '_', '_']
				version split: ['_', '_', 'e', '_', '_']
				{'string': '_/_/e/_/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'e', '_', '_']
				version split: ['e', '_', '_', '_']
				{'string': 'e/_/_/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['e', '_', '_', '_']
				version split: ['_', 'e', '_', '_', '_']
				{'string': '_/e/_/_/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'e', '_', '_', '_']
				version split: ['e', '_', '_', '_', '_']
				{'string': 'e/_/_/_/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['e', '_', '_', '_', '_']
				version split: ['_', '_', 'e', '_', '_', '_']
				{'string': '_/_/e/_/_/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'e', '_', '_', '_']
				version split: ['e', '_', '_', '_']
				{'string': 'e/_/_/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['e', '_', '_', '_']
				version split: ['_', 'e', '_', '_', '_']
				{'string': '_/e/_/_/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'e', '_', '_', '_']
				version split: ['e', '_', '_', '_', '_']
				{'string': 'e/_/_/_/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['e', '_', '_', '_', '_']
				version split: ['_', '_', 'e', '_', '_', '_']
				{'string': '_/_/e/_/_/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'e', '_', '_', '_']
				version split: ['e', '_', '_', '_', '_']
				{'string': 'e/_/_/_/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['e', '_', '_', '_', '_']
				version split: ['_', 'e', '_', '_', '_', '_']
				{'string': '_/e/_/_/_/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'e', '_', '_', '_', '_']
				version split: ['e', '_', '_', '_', '_', '_']
				{'string': 'e/_/_/_/_/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['e', '_', '_', '_', '_', '_']
				version split: ['_', '_', 'e', '_', '_', '_', '_']
				{'string': '_/_/e/_/_/_/_', 'rgx': '((_))/((_))/((e))/((_))/((_))/((_))/((_))$'}
				ANALYSING: en
					resolving (16)
					> version: e/n
					> version: _/e/n
					> version: e/n/_
					> version: _/e/_/n
					> version: e/n/_
					> version: _/e/n/_
					> version: e/n/_/_
					> version: _/e/_/n/_
					> version: e/n/_
					> version: _/e/n/_
					> version: e/n/_/_
					> version: _/e/_/n/_
					> version: e/n/_/_
					> version: _/e/n/_/_
					> version: e/n/_/_/_
					> version: _/e/_/n/_/_
					RESULT:  ['_']
				adding dashed alternative: ['e', 'n', '_']
				adding dashed alternative: ['_', 'e', 'n', '_']
				adding dashed alternative: ['e', 'n', '_', '_']
				adding dashed alternative: ['_', 'e', '_', 'n', '_']
				adding dashed alternative: ['e', 'n', '_', '_']
				adding dashed alternative: ['_', 'e', 'n', '_', '_']
				adding dashed alternative: ['e', 'n', '_', '_', '_']
				adding dashed alternative: ['_', 'e', '_', 'n', '_', '_']
				adding dashed alternative: ['e', 'n', '_', '_']
				adding dashed alternative: ['_', 'e', 'n', '_', '_']
				adding dashed alternative: ['e', 'n', '_', '_', '_']
				adding dashed alternative: ['_', 'e', '_', 'n', '_', '_']
				adding dashed alternative: ['e', 'n', '_', '_', '_']
				adding dashed alternative: ['_', 'e', 'n', '_', '_', '_']
				adding dashed alternative: ['e', 'n', '_', '_', '_', '_']
				adding dashed alternative: ['_', 'e', '_', 'n', '_', '_', '_']
				e/n(VC)
_/e/n(AVC)
e/n/_(VCA)
_/e/_/n(AVAC)
e/n/_(VCA)
_/e/n/_(AVCA)
e/n/_/_(VCAA)
_/e/_/n/_(AVACA)
e/n/_(VCA)
_/e/n/_(AVCA)
e/n/_/_(VCAA)
_/e/_/n/_(AVACA)
e/n/_/_(VCAA)
_/e/n/_/_(AVCAA)
e/n/_/_/_(VCAAA)
_/e/_/n/_/_(AVACAA)
e/n/_(VCA)
_/e/n/_(AVCA)
e/n/_/_(VCAA)
_/e/_/n/_(AVACA)
e/n/_/_(VCAA)
_/e/n/_/_(AVCAA)
e/n/_/_/_(VCAAA)
_/e/_/n/_/_(AVACAA)
e/n/_/_(VCAA)
_/e/n/_/_(AVCAA)
e/n/_/_/_(VCAAA)
_/e/_/n/_/_(AVACAA)
e/n/_/_/_(VCAAA)
_/e/n/_/_/_(AVCAAA)
e/n/_/_/_/_(VCAAAA)
_/e/_/n/_/_/_(AVACAAA)
				version split: ['e', 'n']
				{'string': 'e/n', 'rgx': '((_))/((n))/((_))/((n))/((_))/((_))/((_))$'}
				_____REMOVING________['e', 'n']
				version split: ['_', 'e', 'n']
				{'string': '_/e/n', 'rgx': '((_))/((n))/((_))/((n))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'e', 'n']
				version split: ['e', 'n', '_']
				{'string': 'e/n/_', 'rgx': '((_))/((n))/((_))/((n))/((_))/((_))/((_))$'}
				_____REMOVING________['e', 'n', '_']
				version split: ['_', 'e', '_', 'n']
				{'string': '_/e/_/n', 'rgx': '((_))/((n))/((_))/((n))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'e', '_', 'n']
				version split: ['e', 'n', '_']
				{'string': 'e/n/_', 'rgx': '((_))/((n))/((_))/((n))/((_))/((_))/((_))$'}
				_____REMOVING________['e', 'n', '_']
				version split: ['_', 'e', 'n', '_']
				{'string': '_/e/n/_', 'rgx': '((_))/((n))/((_))/((n))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'e', 'n', '_']
				version split: ['e', 'n', '_', '_']
				{'string': 'e/n/_/_', 'rgx': '((_))/((n))/((_))/((n))/((_))/((_))/((_))$'}
				_____REMOVING________['e', 'n', '_', '_']
				version split: ['_', 'e', '_', 'n', '_']
				{'string': '_/e/_/n/_', 'rgx': '((_))/((n))/((_))/((n))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'e', '_', 'n', '_']
				version split: ['e', 'n', '_']
				{'string': 'e/n/_', 'rgx': '((_))/((n))/((_))/((n))/((_))/((_))/((_))$'}
				_____REMOVING________['e', 'n', '_']
				version split: ['_', 'e', 'n', '_']
				{'string': '_/e/n/_', 'rgx': '((_))/((n))/((_))/((n))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'e', 'n', '_']
				version split: ['e', 'n', '_', '_']
				{'string': 'e/n/_/_', 'rgx': '((_))/((n))/((_))/((n))/((_))/((_))/((_))$'}
				_____REMOVING________['e', 'n', '_', '_']
				version split: ['_', 'e', '_', 'n', '_']
				{'string': '_/e/_/n/_', 'rgx': '((_))/((n))/((_))/((n))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'e', '_', 'n', '_']
				version split: ['e', 'n', '_', '_']
				{'string': 'e/n/_/_', 'rgx': '((_))/((n))/((_))/((n))/((_))/((_))/((_))$'}
				_____REMOVING________['e', 'n', '_', '_']
				version split: ['_', 'e', 'n', '_', '_']
				{'string': '_/e/n/_/_', 'rgx': '((_))/((n))/((_))/((n))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'e', 'n', '_', '_']
				version split: ['e', 'n', '_', '_', '_']
				{'string': 'e/n/_/_/_', 'rgx': '((_))/((n))/((_))/((n))/((_))/((_))/((_))$'}
				_____REMOVING________['e', 'n', '_', '_', '_']
				version split: ['_', 'e', '_', 'n', '_', '_']
				{'string': '_/e/_/n/_/_', 'rgx': '((_))/((n))/((_))/((n))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'e', '_', 'n', '_', '_']
				version split: ['e', 'n', '_']
				{'string': 'e/n/_', 'rgx': '((_))/((n))/((_))/((n))/((_))/((_))/((_))$'}
				_____REMOVING________['e', 'n', '_']
				version split: ['_', 'e', 'n', '_']
				{'string': '_/e/n/_', 'rgx': '((_))/((n))/((_))/((n))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'e', 'n', '_']
				version split: ['e', 'n', '_', '_']
				{'string': 'e/n/_/_', 'rgx': '((_))/((n))/((_))/((n))/((_))/((_))/((_))$'}
				_____REMOVING________['e', 'n', '_', '_']
				version split: ['_', 'e', '_', 'n', '_']
				{'string': '_/e/_/n/_', 'rgx': '((_))/((n))/((_))/((n))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'e', '_', 'n', '_']
				version split: ['e', 'n', '_', '_']
				{'string': 'e/n/_/_', 'rgx': '((_))/((n))/((_))/((n))/((_))/((_))/((_))$'}
				_____REMOVING________['e', 'n', '_', '_']
				version split: ['_', 'e', 'n', '_', '_']
				{'string': '_/e/n/_/_', 'rgx': '((_))/((n))/((_))/((n))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'e', 'n', '_', '_']
				version split: ['e', 'n', '_', '_', '_']
				{'string': 'e/n/_/_/_', 'rgx': '((_))/((n))/((_))/((n))/((_))/((_))/((_))$'}
				_____REMOVING________['e', 'n', '_', '_', '_']
				version split: ['_', 'e', '_', 'n', '_', '_']
				{'string': '_/e/_/n/_/_', 'rgx': '((_))/((n))/((_))/((n))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'e', '_', 'n', '_', '_']
				version split: ['e', 'n', '_', '_']
				{'string': 'e/n/_/_', 'rgx': '((_))/((n))/((_))/((n))/((_))/((_))/((_))$'}
				_____REMOVING________['e', 'n', '_', '_']
				version split: ['_', 'e', 'n', '_', '_']
				{'string': '_/e/n/_/_', 'rgx': '((_))/((n))/((_))/((n))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'e', 'n', '_', '_']
				version split: ['e', 'n', '_', '_', '_']
				{'string': 'e/n/_/_/_', 'rgx': '((_))/((n))/((_))/((n))/((_))/((_))/((_))$'}
				_____REMOVING________['e', 'n', '_', '_', '_']
				version split: ['_', 'e', '_', 'n', '_', '_']
				{'string': '_/e/_/n/_/_', 'rgx': '((_))/((n))/((_))/((n))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'e', '_', 'n', '_', '_']
				version split: ['e', 'n', '_', '_', '_']
				{'string': 'e/n/_/_/_', 'rgx': '((_))/((n))/((_))/((n))/((_))/((_))/((_))$'}
				_____REMOVING________['e', 'n', '_', '_', '_']
				version split: ['_', 'e', 'n', '_', '_', '_']
				{'string': '_/e/n/_/_/_', 'rgx': '((_))/((n))/((_))/((n))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'e', 'n', '_', '_', '_']
				version split: ['e', 'n', '_', '_', '_', '_']
				{'string': 'e/n/_/_/_/_', 'rgx': '((_))/((n))/((_))/((n))/((_))/((_))/((_))$'}
				_____REMOVING________['e', 'n', '_', '_', '_', '_']
				version split: ['_', 'e', '_', 'n', '_', '_', '_']
				{'string': '_/e/_/n/_/_/_', 'rgx': '((_))/((n))/((_))/((n))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'e', '_', 'n', '_', '_', '_']
				ANALYSING: in
					resolving (32)
					> version: i/n
					> version: i/n
					> version: i/n/_
					> version: i/n/_
					> version: i/n/_
					> version: i/n/_
					> version: i/n/_/_
					> version: i/n/_/_
					> version: i/n/_
					> version: i/n/_
					> version: i/n/_/_
					> version: i/n/_/_
					> version: i/n/_/_
					> version: i/n/_/_
					> version: i/n/_/_/_
					> version: i/n/_/_/_
					> version: i/n/_
					> version: i/n/_
					> version: i/n/_/_
					> version: i/n/_/_
					> version: i/n/_/_
					> version: i/n/_/_
					> version: i/n/_/_/_
					> version: i/n/_/_/_
					> version: i/n/_/_
					> version: i/n/_/_
					> version: i/n/_/_/_
					> version: i/n/_/_/_
					> version: i/n/_/_/_
					> version: i/n/_/_/_
					> version: i/n/_/_/_/_
					> version: i/n/_/_/_/_
					RESULT:  ['_']
				adding dashed alternative: ['i', 'n', '_']
				adding dashed alternative: ['i', 'n', '_']
				adding dashed alternative: ['i', 'n', '_', '_']
				adding dashed alternative: ['i', 'n', '_', '_']
				adding dashed alternative: ['i', 'n', '_', '_']
				adding dashed alternative: ['i', 'n', '_', '_']
				adding dashed alternative: ['i', 'n', '_', '_', '_']
				adding dashed alternative: ['i', 'n', '_', '_', '_']
				adding dashed alternative: ['i', 'n', '_', '_']
				adding dashed alternative: ['i', 'n', '_', '_']
				adding dashed alternative: ['i', 'n', '_', '_', '_']
				adding dashed alternative: ['i', 'n', '_', '_', '_']
				adding dashed alternative: ['i', 'n', '_', '_', '_']
				adding dashed alternative: ['i', 'n', '_', '_', '_']
				adding dashed alternative: ['i', 'n', '_', '_', '_', '_']
				adding dashed alternative: ['i', 'n', '_', '_', '_', '_']
				adding dashed alternative: ['i', 'n', '_', '_']
				adding dashed alternative: ['i', 'n', '_', '_']
				adding dashed alternative: ['i', 'n', '_', '_', '_']
				adding dashed alternative: ['i', 'n', '_', '_', '_']
				adding dashed alternative: ['i', 'n', '_', '_', '_']
				adding dashed alternative: ['i', 'n', '_', '_', '_']
				adding dashed alternative: ['i', 'n', '_', '_', '_', '_']
				adding dashed alternative: ['i', 'n', '_', '_', '_', '_']
				adding dashed alternative: ['i', 'n', '_', '_', '_']
				adding dashed alternative: ['i', 'n', '_', '_', '_']
				adding dashed alternative: ['i', 'n', '_', '_', '_', '_']
				adding dashed alternative: ['i', 'n', '_', '_', '_', '_']
				adding dashed alternative: ['i', 'n', '_', '_', '_', '_']
				adding dashed alternative: ['i', 'n', '_', '_', '_', '_']
				adding dashed alternative: ['i', 'n', '_', '_', '_', '_', '_']
				adding dashed alternative: ['i', 'n', '_', '_', '_', '_', '_']
				i/n(CC)
i/n(VC)
i/n/_(ACA)
i/n/_(ACA)
i/n/_(ACA)
i/n/_(ACA)
i/n/_/_(ACAA)
i/n/_/_(ACAA)
i/n/_(ACA)
i/n/_(ACA)
i/n/_/_(ACAA)
i/n/_/_(ACAA)
i/n/_/_(ACAA)
i/n/_/_(ACAA)
i/n/_/_/_(ACAAA)
i/n/_/_/_(ACAAA)
i/n/_(ACA)
i/n/_(ACA)
i/n/_/_(ACAA)
i/n/_/_(ACAA)
i/n/_/_(ACAA)
i/n/_/_(ACAA)
i/n/_/_/_(ACAAA)
i/n/_/_/_(ACAAA)
i/n/_/_(ACAA)
i/n/_/_(ACAA)
i/n/_/_/_(ACAAA)
i/n/_/_/_(ACAAA)
i/n/_/_/_(ACAAA)
i/n/_/_/_(ACAAA)
i/n/_/_/_/_(ACAAAA)
i/n/_/_/_/_(ACAAAA)
i/n/_(ACA)
i/n/_(ACA)
i/n/_/_(ACAA)
i/n/_/_(ACAA)
i/n/_/_(ACAA)
i/n/_/_(ACAA)
i/n/_/_/_(ACAAA)
i/n/_/_/_(ACAAA)
i/n/_/_(ACAA)
i/n/_/_(ACAA)
i/n/_/_/_(ACAAA)
i/n/_/_/_(ACAAA)
i/n/_/_/_(ACAAA)
i/n/_/_/_(ACAAA)
i/n/_/_/_/_(ACAAAA)
i/n/_/_/_/_(ACAAAA)
i/n/_/_(ACAA)
i/n/_/_(ACAA)
i/n/_/_/_(ACAAA)
i/n/_/_/_(ACAAA)
i/n/_/_/_(ACAAA)
i/n/_/_/_(ACAAA)
i/n/_/_/_/_(ACAAAA)
i/n/_/_/_/_(ACAAAA)
i/n/_/_/_(ACAAA)
i/n/_/_/_(ACAAA)
i/n/_/_/_/_(ACAAAA)
i/n/_/_/_/_(ACAAAA)
i/n/_/_/_/_(ACAAAA)
i/n/_/_/_/_(ACAAAA)
i/n/_/_/_/_/_(ACAAAAA)
i/n/_/_/_/_/_(ACAAAAA)
				version split: ['i', 'n']
				{'string': 'i/n', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n']
				version split: ['i', 'n']
				{'string': 'i/n', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n']
				version split: ['i', 'n', '_']
				{'string': 'i/n/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n', '_']
				version split: ['i', 'n', '_']
				{'string': 'i/n/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n', '_']
				version split: ['i', 'n', '_']
				{'string': 'i/n/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n', '_']
				version split: ['i', 'n', '_']
				{'string': 'i/n/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n', '_']
				version split: ['i', 'n', '_', '_']
				{'string': 'i/n/_/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n', '_', '_']
				version split: ['i', 'n', '_', '_']
				{'string': 'i/n/_/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n', '_', '_']
				version split: ['i', 'n', '_']
				{'string': 'i/n/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n', '_']
				version split: ['i', 'n', '_']
				{'string': 'i/n/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n', '_']
				version split: ['i', 'n', '_', '_']
				{'string': 'i/n/_/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n', '_', '_']
				version split: ['i', 'n', '_', '_']
				{'string': 'i/n/_/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n', '_', '_']
				version split: ['i', 'n', '_', '_']
				{'string': 'i/n/_/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n', '_', '_']
				version split: ['i', 'n', '_', '_']
				{'string': 'i/n/_/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n', '_', '_']
				version split: ['i', 'n', '_', '_', '_']
				{'string': 'i/n/_/_/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n', '_', '_', '_']
				version split: ['i', 'n', '_', '_', '_']
				{'string': 'i/n/_/_/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n', '_', '_', '_']
				version split: ['i', 'n', '_']
				{'string': 'i/n/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n', '_']
				version split: ['i', 'n', '_']
				{'string': 'i/n/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n', '_']
				version split: ['i', 'n', '_', '_']
				{'string': 'i/n/_/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n', '_', '_']
				version split: ['i', 'n', '_', '_']
				{'string': 'i/n/_/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n', '_', '_']
				version split: ['i', 'n', '_', '_']
				{'string': 'i/n/_/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n', '_', '_']
				version split: ['i', 'n', '_', '_']
				{'string': 'i/n/_/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n', '_', '_']
				version split: ['i', 'n', '_', '_', '_']
				{'string': 'i/n/_/_/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n', '_', '_', '_']
				version split: ['i', 'n', '_', '_', '_']
				{'string': 'i/n/_/_/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n', '_', '_', '_']
				version split: ['i', 'n', '_', '_']
				{'string': 'i/n/_/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n', '_', '_']
				version split: ['i', 'n', '_', '_']
				{'string': 'i/n/_/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n', '_', '_']
				version split: ['i', 'n', '_', '_', '_']
				{'string': 'i/n/_/_/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n', '_', '_', '_']
				version split: ['i', 'n', '_', '_', '_']
				{'string': 'i/n/_/_/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n', '_', '_', '_']
				version split: ['i', 'n', '_', '_', '_']
				{'string': 'i/n/_/_/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n', '_', '_', '_']
				version split: ['i', 'n', '_', '_', '_']
				{'string': 'i/n/_/_/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n', '_', '_', '_']
				version split: ['i', 'n', '_', '_', '_', '_']
				{'string': 'i/n/_/_/_/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n', '_', '_', '_', '_']
				version split: ['i', 'n', '_', '_', '_', '_']
				{'string': 'i/n/_/_/_/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n', '_', '_', '_', '_']
				version split: ['i', 'n', '_']
				{'string': 'i/n/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n', '_']
				version split: ['i', 'n', '_']
				{'string': 'i/n/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n', '_']
				version split: ['i', 'n', '_', '_']
				{'string': 'i/n/_/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n', '_', '_']
				version split: ['i', 'n', '_', '_']
				{'string': 'i/n/_/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n', '_', '_']
				version split: ['i', 'n', '_', '_']
				{'string': 'i/n/_/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n', '_', '_']
				version split: ['i', 'n', '_', '_']
				{'string': 'i/n/_/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n', '_', '_']
				version split: ['i', 'n', '_', '_', '_']
				{'string': 'i/n/_/_/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n', '_', '_', '_']
				version split: ['i', 'n', '_', '_', '_']
				{'string': 'i/n/_/_/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n', '_', '_', '_']
				version split: ['i', 'n', '_', '_']
				{'string': 'i/n/_/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n', '_', '_']
				version split: ['i', 'n', '_', '_']
				{'string': 'i/n/_/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n', '_', '_']
				version split: ['i', 'n', '_', '_', '_']
				{'string': 'i/n/_/_/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n', '_', '_', '_']
				version split: ['i', 'n', '_', '_', '_']
				{'string': 'i/n/_/_/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n', '_', '_', '_']
				version split: ['i', 'n', '_', '_', '_']
				{'string': 'i/n/_/_/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n', '_', '_', '_']
				version split: ['i', 'n', '_', '_', '_']
				{'string': 'i/n/_/_/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n', '_', '_', '_']
				version split: ['i', 'n', '_', '_', '_', '_']
				{'string': 'i/n/_/_/_/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n', '_', '_', '_', '_']
				version split: ['i', 'n', '_', '_', '_', '_']
				{'string': 'i/n/_/_/_/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n', '_', '_', '_', '_']
				version split: ['i', 'n', '_', '_']
				{'string': 'i/n/_/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n', '_', '_']
				version split: ['i', 'n', '_', '_']
				{'string': 'i/n/_/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n', '_', '_']
				version split: ['i', 'n', '_', '_', '_']
				{'string': 'i/n/_/_/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n', '_', '_', '_']
				version split: ['i', 'n', '_', '_', '_']
				{'string': 'i/n/_/_/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n', '_', '_', '_']
				version split: ['i', 'n', '_', '_', '_']
				{'string': 'i/n/_/_/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n', '_', '_', '_']
				version split: ['i', 'n', '_', '_', '_']
				{'string': 'i/n/_/_/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n', '_', '_', '_']
				version split: ['i', 'n', '_', '_', '_', '_']
				{'string': 'i/n/_/_/_/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n', '_', '_', '_', '_']
				version split: ['i', 'n', '_', '_', '_', '_']
				{'string': 'i/n/_/_/_/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n', '_', '_', '_', '_']
				version split: ['i', 'n', '_', '_', '_']
				{'string': 'i/n/_/_/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n', '_', '_', '_']
				version split: ['i', 'n', '_', '_', '_']
				{'string': 'i/n/_/_/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n', '_', '_', '_']
				version split: ['i', 'n', '_', '_', '_', '_']
				{'string': 'i/n/_/_/_/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n', '_', '_', '_', '_']
				version split: ['i', 'n', '_', '_', '_', '_']
				{'string': 'i/n/_/_/_/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n', '_', '_', '_', '_']
				version split: ['i', 'n', '_', '_', '_', '_']
				{'string': 'i/n/_/_/_/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n', '_', '_', '_', '_']
				version split: ['i', 'n', '_', '_', '_', '_']
				{'string': 'i/n/_/_/_/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'n', '_', '_', '_', '_']
				version split: ['i', 'n', '_', '_', '_', '_', '_']
				{'string': 'i/n/_/_/_/_/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))/((_))$'}
				version split: ['i', 'n', '_', '_', '_', '_', '_']
				{'string': 'i/n/_/_/_/_/_', 'rgx': '((i))/((n))/((_))/((_))/((_))/((_))/((_))$'}
		FAIL: 
		FAIL: 
		FAIL: 
		only one version left: ['d', 'r', 'e', 'y', 't', '_', 'e']
		only one version left: ['d', 'r', 'i', 'c', '_', '_', '_']
		only one version left: ['d', 'r', 'i', 'c', 't', '_', '_']
		only one version left: ['d', 'r', 'i', 'g', 'h', 't', '_']
		only one version left: ['d', 'r', 'i', 'g', 't', '_', '_']
		only one version left: ['d', 'r', 'i', 'h', '_', '_', '_']
		only one version left: ['d', 'r', 'i', 'h', 't', '_', '_']
		only one version left: ['d', 'r', 'i', 'h', 'ð', 't', '_']
		only one version left: ['d', 'r', 'i', 'h', 'h', '_', '_']
		only one version left: ['d', 'r', 'i', 'h', 'h', 't', '_']
		only one version left: ['d', 'r', 'i', 'h', 't', '_', 'e']
		only one version left: ['d', 'r', 'i', 'c', 'h', '_', '_']
		only one version left: ['d', 'r', 'i', 'c', 'h', 't', '_']
		only one version left: ['d', 'r', 'i', 'k', 't', '_', 'e']
		only one version left: ['d', 'r', 'i', 's', 't', '_', '_']
		only one version left: ['d', 'r', 'i', 's', 't', '_', 'e']
		only one version left: ['d', 'r', 'i', 't', 'h', '_', '_']
		only one version left: ['d', 'r', 'i', 't', 'h', '_', 'e']
		only one version left: ['d', 'r', 'i', 't', 'h', 't', '_']
		only one version left: ['d', 'r', 'i', 't', 't', '_', '_']
		only one version left: ['d', 'r', 'i', 't', 't', '_', 'e']
		only one version left: ['d', 'r', 'i', 'ȝ', 't', '_', '_']
		only one version left: ['d', 'r', 'i', 'ȝ', 't', '_', 'e']
		only one version left: ['d', 'r', 'y', 'h', 't', '_', '_']
		only one version left: ['d', 'r', 'y', 'h', 't', '_', 'e']
		only one version left: ['_', '_', 'e', '_', '_', '_', '_']
		FAIL: 
		only one version left: ['i', 'n', '_', '_', '_', '_', '_']
		SPLIT: ['d', 'r', 'i', 'c', 'h', 't', 'e', '----!']
		SPLIT: ['d', 'r', 'i', 't', 'h', 't', 'e', '----!']
		SPLIT: ['d', 'r', 'i', 'ȝ', 't', 't', 'e', '----!']
		SPLIT: ['d', 'r', 'e', 'y', 't', '_', 'e']
		['d', 'r', 'e', 'y', 't', '_', 'e']
		['d', 'r', 'e', 'y', 't', '_', 'e']
		SPLIT: ['d', 'r', 'i', 'c', '_', '_', '_']
		['d', 'r', 'i', 'c', '_', '_', '_']
		['d', 'r', 'i', 'c', '_', '_', '_']
		SPLIT: ['d', 'r', 'i', 'c', 't', '_', '_']
		['d', 'r', 'i', 'c', 't', '_', '_']
		['d', 'r', 'i', 'c', 't', '_', '_']
		SPLIT: ['d', 'r', 'i', 'g', 'h', 't', '_']
		['d', 'r', 'i', 'g', 'h', 't', '_']
		['d', 'r', 'i', 'g', 'h', 't', '_']
		SPLIT: ['d', 'r', 'i', 'g', 't', '_', '_']
		['d', 'r', 'i', 'g', 't', '_', '_']
		['d', 'r', 'i', 'g', 't', '_', '_']
		SPLIT: ['d', 'r', 'i', 'h', '_', '_', '_']
		['d', 'r', 'i', 'h', '_', '_', '_']
		['d', 'r', 'i', 'h', '_', '_', '_']
		SPLIT: ['d', 'r', 'i', 'h', 't', '_', '_']
		['d', 'r', 'i', 'h', 't', '_', '_']
		['d', 'r', 'i', 'h', 't', '_', '_']
		SPLIT: ['d', 'r', 'i', 'h', 'ð', 't', '_']
		['d', 'r', 'i', 'h', 'ð', 't', '_']
		['d', 'r', 'i', 'h', 'ð', 't', '_']
		SPLIT: ['d', 'r', 'i', 'h', 'h', '_', '_']
		['d', 'r', 'i', 'h', 'h', '_', '_']
		['d', 'r', 'i', 'h', 'h', '_', '_']
		SPLIT: ['d', 'r', 'i', 'h', 'h', 't', '_']
		['d', 'r', 'i', 'h', 'h', 't', '_']
		['d', 'r', 'i', 'h', 'h', 't', '_']
		SPLIT: ['d', 'r', 'i', 'h', 't', '_', 'e']
		['d', 'r', 'i', 'h', 't', '_', 'e']
		['d', 'r', 'i', 'h', 't', '_', 'e']
		SPLIT: ['d', 'r', 'i', 'c', 'h', '_', '_']
		['d', 'r', 'i', 'c', 'h', '_', '_']
		['d', 'r', 'i', 'c', 'h', '_', '_']
		SPLIT: ['d', 'r', 'i', 'c', 'h', 't', '_']
		['d', 'r', 'i', 'c', 'h', 't', '_']
		['d', 'r', 'i', 'c', 'h', 't', '_']
		SPLIT: ['d', 'r', 'i', 'k', 't', '_', 'e']
		['d', 'r', 'i', 'k', 't', '_', 'e']
		['d', 'r', 'i', 'k', 't', '_', 'e']
		SPLIT: ['d', 'r', 'i', 's', 't', '_', '_']
		['d', 'r', 'i', 's', 't', '_', '_']
		['d', 'r', 'i', 's', 't', '_', '_']
		SPLIT: ['d', 'r', 'i', 's', 't', '_', 'e']
		['d', 'r', 'i', 's', 't', '_', 'e']
		['d', 'r', 'i', 's', 't', '_', 'e']
		SPLIT: ['d', 'r', 'i', 't', 'h', '_', '_']
		['d', 'r', 'i', 't', 'h', '_', '_']
		['d', 'r', 'i', 't', 'h', '_', '_']
		SPLIT: ['d', 'r', 'i', 't', 'h', '_', 'e']
		['d', 'r', 'i', 't', 'h', '_', 'e']
		['d', 'r', 'i', 't', 'h', '_', 'e']
		SPLIT: ['d', 'r', 'i', 't', 'h', 't', '_']
		['d', 'r', 'i', 't', 'h', 't', '_']
		['d', 'r', 'i', 't', 'h', 't', '_']
		SPLIT: ['d', 'r', 'i', 't', 't', '_', '_']
		['d', 'r', 'i', 't', 't', '_', '_']
		['d', 'r', 'i', 't', 't', '_', '_']
		SPLIT: ['d', 'r', 'i', 't', 't', '_', 'e']
		['d', 'r', 'i', 't', 't', '_', 'e']
		['d', 'r', 'i', 't', 't', '_', 'e']
		SPLIT: ['d', 'r', 'i', 'ȝ', 't', '_', '_']
		['d', 'r', 'i', 'ȝ', 't', '_', '_']
		['d', 'r', 'i', 'ȝ', 't', '_', '_']
		SPLIT: ['d', 'r', 'i', 'ȝ', 't', '_', 'e']
		['d', 'r', 'i', 'ȝ', 't', '_', 'e']
		['d', 'r', 'i', 'ȝ', 't', '_', 'e']
		SPLIT: ['d', 'r', 'y', 'h', 't', '_', '_']
		['d', 'r', 'y', 'h', 't', '_', '_']
		['d', 'r', 'y', 'h', 't', '_', '_']
		SPLIT: ['d', 'r', 'y', 'h', 't', '_', 'e']
		['d', 'r', 'y', 'h', 't', '_', 'e']
		['d', 'r', 'y', 'h', 't', '_', 'e']
		SPLIT: ['_', '_', 'e', '_', '_', '_', '_']
		['_', '_', 'e', '_', '_', '_', '_']
		SPLIT: ['_', 'n', '_', 'n', '_', '_', '_', '----!']
		SPLIT: ['i', 'n', '_', '_', '_', '_', '_']
		['i', 'n', '_', '_', '_', '_', '_']
		['i', 'n', '_', '_', '_', '_', '_']
		version for pattern CCVCCCV is INVALID
		[{'i', 'd', '_'}, {'n', '_', 'r'}, {'_', 'i', 'e', 'y', 'ey'}, {'y', 'hð', '_', 'ch', 'ȝ', 'hh', 't', 'n', 'th', 'c', 'k', 'gh', 'tt', 's', 'g', 'h'}, {'t', '_', 'h', 'ð'}]
		4
		OVERVIEW: version for pattern CCVCCCV
{'i', 'd', '_'}, {'n', '_', 'r'}, {'_', 'i', 'e', 'y', 'ey'}, {'y', 'hð', '_', 'ch', 'ȝ', 'hh', 't', 'n', 'th', 'c', 'k', 'gh', 'tt', 's', 'g', 'h'}, {'t', '_', 'h', 'ð'}
faulty splits: 4
drichte----! <-! drichte
drithte----! <-! drithte
driȝtte----! <-! driȝtte
nn----! <-! en
d | r | i | c | h | t | e | ----!
d | r | i | t | h | t | e | ----!
d | r | i | ȝ | t | t | e | ----!
d | r | e | y | t | _ | e
d | r | i | c | _ | _ | _
d | r | i | c | t | _ | _
d | r | i | g | h | t | _
d | r | i | g | t | _ | _
d | r | i | h | _ | _ | _
d | r | i | h | t | _ | _
d | r | i | h | ð | t | _
d | r | i | h | h | _ | _
d | r | i | h | h | t | _
d | r | i | h | t | _ | e
d | r | i | c | h | _ | _
d | r | i | c | h | t | _
d | r | i | k | t | _ | e
d | r | i | s | t | _ | _
d | r | i | s | t | _ | e
d | r | i | t | h | _ | _
d | r | i | t | h | _ | e
d | r | i | t | h | t | _
d | r | i | t | t | _ | _
d | r | i | t | t | _ | e
d | r | i | ȝ | t | _ | _
d | r | i | ȝ | t | _ | e
d | r | y | h | t | _ | _
d | r | y | h | t | _ | e
_ | _ | e | _ | _ | _ | _
_ | n | _ | n | _ | _ | _ | ----!
i | n | _ | _ | _ | _ | _
	FOUND __ 0 __ VALID VERSION(S)
	OVERVIEW: version for pattern CCVCCCV
{'i', 'd', '_'}, {'n', '_', 'r'}, {'_', 'i', 'e', 'y', 'ey'}, {'y', 'hð', '_', 'ch', 'ȝ', 'hh', 't', 'n', 'th', 'c', 'k', 'gh', 'tt', 's', 'g', 'h'}, {'t', '_', 'h', 'ð'}
faulty splits: 4
drichte----! <-! drichte
drithte----! <-! drithte
driȝtte----! <-! driȝtte
nn----! <-! en
d | r | i | c | h | t | e | ----!
d | r | i | t | h | t | e | ----!
d | r | i | ȝ | t | t | e | ----!
d | r | e | y | t | _ | e
d | r | i | c | _ | _ | _
d | r | i | c | t | _ | _
d | r | i | g | h | t | _
d | r | i | g | t | _ | _
d | r | i | h | _ | _ | _
d | r | i | h | t | _ | _
d | r | i | h | ð | t | _
d | r | i | h | h | _ | _
d | r | i | h | h | t | _
d | r | i | h | t | _ | e
d | r | i | c | h | _ | _
d | r | i | c | h | t | _
d | r | i | k | t | _ | e
d | r | i | s | t | _ | _
d | r | i | s | t | _ | e
d | r | i | t | h | _ | _
d | r | i | t | h | _ | e
d | r | i | t | h | t | _
d | r | i | t | t | _ | _
d | r | i | t | t | _ | e
d | r | i | ȝ | t | _ | _
d | r | i | ȝ | t | _ | e
d | r | y | h | t | _ | _
d | r | y | h | t | _ | e
_ | _ | e | _ | _ | _ | _
_ | n | _ | n | _ | _ | _ | ----!
i | n | _ | _ | _ | _ | _
	set()
