Analysis object initialized
{'æc': 1, 'æhc': 2, 'æch': 2, 'ælc': 7, 'ælch': 1, 'ælche': 1, 'alc': 2, 'alch': 3, 'alkere': 2, 'ec': 1, 'ecche': 1, 'ecl': 1, 'ech': 65, 'eche': 3, 'echen': 8, 'elc': 4, 'elcan': 1, 'elch': 9, 'elche': 4, 'elchun': 1, 'euch': 27, 'euche': 1, 'eƿilcum': 1, 'hech': 1, 'hilg': 1, 'hƿulke': 1, 'hyylkun': 1, 'ich': 3, 'ilc': 4, 'ilk': 4, 'ilke': 1, 'uch': 2, 'uƿilchen': 1, 'vch': 1, 'vich': 1, 'vych': 2}
Lexel initialized
[[{'lit': 'ch', 'ln': 2, 'index': 1}]]
[[{'lit': 'ch', 'ln': 2, 'index': 2}]]
[[{'lit': 'ch', 'ln': 2, 'index': 1}]]
[[{'lit': 'ch', 'ln': 2, 'index': 1}]]
[[{'lit': 'ch', 'ln': 2, 'index': 1}]]
[[{'lit': 'ch', 'ln': 2, 'index': 2}]]
[[{'lit': 'ch', 'ln': 2, 'index': 2}]]
[[{'lit': 'ch', 'ln': 2, 'index': 2}], [{'lit': 'eu', 'ln': 2, 'index': 0}]]
[[{'lit': 'ch', 'ln': 2, 'index': 2}], [{'lit': 'eu', 'ln': 2, 'index': 0}], [{'lit': 'ch', 'ln': 2, 'index': 2}, {'lit': 'eu', 'ln': 2, 'index': 0}]]
[[{'lit': 'ch', 'ln': 2, 'index': 1}]]
[[{'lit': 'ch', 'ln': 2, 'index': 1}]]
[[{'lit': 'ch', 'ln': 2, 'index': 2}]]
MIN pattern length=6
Pattern VCVC is invalid
Pattern VCC is invalid
Pattern VVCC is invalid
Pattern CC is invalid
Pattern CCCC is invalid
Pattern VCCV is invalid
Pattern VCV is invalid
Pattern VCCVC is invalid
Pattern VC is invalid
Pattern VVC is invalid
Pattern CCC is invalid
Pattern VCCCV is invalid
Pattern VCCVCV is valid
Pattern VCCC is invalid
{'value': 1, 'patterns': ['VCCVCV']}
	[[{'lit': 'ch', 'ln': 2, 'index': 1}]]
	[[{'lit': 'ch', 'ln': 2, 'index': 2}]]
	[[{'lit': 'ch', 'ln': 2, 'index': 1}]]
	[[{'lit': 'ch', 'ln': 2, 'index': 1}]]
	[[{'lit': 'ch', 'ln': 2, 'index': 1}]]
	[[{'lit': 'ch', 'ln': 2, 'index': 2}]]
	[[{'lit': 'ch', 'ln': 2, 'index': 2}]]
	[[{'lit': 'ch', 'ln': 2, 'index': 2}], [{'lit': 'eu', 'ln': 2, 'index': 0}]]
	[[{'lit': 'ch', 'ln': 2, 'index': 2}], [{'lit': 'eu', 'ln': 2, 'index': 0}], [{'lit': 'ch', 'ln': 2, 'index': 2}, {'lit': 'eu', 'ln': 2, 'index': 0}]]
	[[{'lit': 'ch', 'ln': 2, 'index': 1}]]
	[[{'lit': 'ch', 'ln': 2, 'index': 1}]]
	[[{'lit': 'ch', 'ln': 2, 'index': 2}]]
	MIN pattern length=6
	Pattern VCVC is invalid
	Pattern VCC is invalid
	Pattern VVCC is invalid
	Pattern CC is invalid
	Pattern CCCC is invalid
	Pattern VCCV is invalid
	Pattern VCV is invalid
	Pattern VCCVC is invalid
	Pattern VC is invalid
	Pattern VVC is invalid
	Pattern CCC is invalid
	Pattern VCCCV is invalid
	Pattern VCCVCV is valid
	Pattern VCCC is invalid
	Making the selection for pattern: VCCVCV
	Selection for pattern: VCCVCV completed
	Making a version for pattern: VCCVCV
			___VCCVCV : 0___
				ANALYSING: alkere
				adding littera based on matching pattern
				ANALYSING: æhc
					resolving (1)
					> version: æ/h/c
					TRYING: æ
					RESULT:  ['æ']
				ANALYSING: æch
					resolving (2)
					> version: æ/c/h
					TRYING: æ
					> version: æ/ch
					TRYING: æ
					RESULT:  ['æ']
				ANALYSING: ælc
					resolving (1)
					> version: æ/l/c
					TRYING: æ
					RESULT:  ['æ']
				ANALYSING: alc
					resolving (1)
					> version: a/l/c
					TRYING: a
					RESULT:  ['a']
				ANALYSING: alch
					resolving (2)
					> version: a/l/c/h
					TRYING: a
					> version: a/l/ch
					TRYING: a
					RESULT:  ['a']
				ANALYSING: ech
					resolving (2)
					> version: e/c/h
					TRYING: e
					> version: e/ch
					TRYING: e
					RESULT:  ['e']
				ANALYSING: eche
					resolving (2)
					> version: e/c/h/e
					TRYING: e
					> version: e/ch/e
					TRYING: e
					RESULT:  ['e']
				ANALYSING: echen
					resolving (2)
					> version: e/c/h/e/n
					TRYING: e
					> version: e/ch/e/n
					TRYING: e
					RESULT:  ['e']
				ANALYSING: elc
					resolving (1)
					> version: e/l/c
					TRYING: e
					RESULT:  ['e']
				ANALYSING: elch
					resolving (2)
					> version: e/l/c/h
					TRYING: e
					> version: e/l/ch
					TRYING: e
					RESULT:  ['e']
				ANALYSING: elche
					resolving (2)
					> version: e/l/c/h/e
					TRYING: e
					> version: e/l/ch/e
					TRYING: e
					RESULT:  ['e']
				ANALYSING: euch
					resolving (6)
					> version: e/u/c/h
					TRYING: e
					> version: e/u/c/h
					TRYING: e
					> version: e/u/ch
					TRYING: e
					> version: e/u/ch
					TRYING: e
					> version: eu/c/h
					TRYING: eu
					>>> MULTIPLE RESOLVE OPTIONS: {'eu', 'e'}
					> version: eu/ch
					TRYING: eu
					>>> MULTIPLE RESOLVE OPTIONS: {'eu', 'e'}
					RESULT:  ['eu', 'e']
				ANALYSING: ich
					resolving (4)
					> version: i/c/h
					TRYING: i
					> version: i/c/h
					TRYING: i
					> version: i/ch
					TRYING: i
					> version: i/ch
					TRYING: i
					RESULT:  ['i']
				ANALYSING: ilc
					resolving (2)
					> version: i/l/c
					TRYING: i
					> version: i/l/c
					TRYING: i
					RESULT:  ['i']
				ANALYSING: ilk
					resolving (2)
					> version: i/l/k
					TRYING: i
					> version: i/l/k
					TRYING: i
					RESULT:  ['i']
				ANALYSING: uch
					resolving (4)
					> version: u/c/h
					TRYING: u
					> version: u/c/h
					TRYING: u
					> version: u/ch
					TRYING: u
					> version: u/ch
					TRYING: u
					RESULT:  ['u']
				ANALYSING: vych
					resolving (4)
					> version: v/y/c/h
					TRYING: v
					> version: v/y/c/h
					TRYING: v
					> version: v/y/ch
					TRYING: v
					> version: v/y/ch
					TRYING: v
					RESULT:  ['v']
			___VCCVCV : 1___
				ANALYSING: alkere
				adding littera based on matching pattern
				ANALYSING: æhc
					resolving (1)
					> version: æ/h/c
					TRYING: h
					adding blocked set: C = C >> h, l
					RESULT:  ['_']
				adding dashed alternative: ['æ', '_', 'h', 'c']
				æ/h/c(VCC)
æ/_/h/c(VACC)
				ANALYSING: æch
					resolving (2)
					> version: æ/c/h
					TRYING: c
					adding blocked set: C = C >> c, l, _
					> version: æ/ch
					TRYING: ch
					adding blocked set: C = C >> ch, l, _
					RESULT:  ['_']
				adding dashed alternative: ['æ', '_', 'c', 'h']
				adding dashed alternative: ['æ', '_', 'ch']
				æ/c/h(VCC)
æ/ch(VC)
æ/_/c/h(VACC)
æ/_/ch(VAC)
				ANALYSING: ælc
					resolving (1)
					> version: æ/l/c
					TRYING: l
					RESULT:  ['l']
				ANALYSING: alc
					resolving (1)
					> version: a/l/c
					TRYING: l
					RESULT:  ['l']
				ANALYSING: alch
					resolving (2)
					> version: a/l/c/h
					TRYING: l
					> version: a/l/ch
					TRYING: l
					RESULT:  ['l']
				ANALYSING: ech
					resolving (2)
					> version: e/c/h
					TRYING: c
					adding blocked set: C = C >> c, l, _
					> version: e/ch
					TRYING: ch
					adding blocked set: C = C >> ch, l, _
					RESULT:  ['_']
				adding dashed alternative: ['e', '_', 'c', 'h']
				adding dashed alternative: ['e', '_', 'ch']
				e/c/h(VCC)
e/ch(VC)
e/_/c/h(VACC)
e/_/ch(VAC)
				ANALYSING: eche
					resolving (2)
					> version: e/c/h/e
					TRYING: c
					adding blocked set: C = C >> c, l, _
					> version: e/ch/e
					TRYING: ch
					adding blocked set: C = C >> ch, l, _
					RESULT:  ['_']
				adding dashed alternative: ['e', '_', 'c', 'h', 'e']
				adding dashed alternative: ['e', '_', 'ch', 'e']
				e/c/h/e(VCCV)
e/ch/e(VCV)
e/_/c/h/e(VACCV)
e/_/ch/e(VACV)
				ANALYSING: echen
					resolving (2)
					> version: e/c/h/e/n
					TRYING: c
					adding blocked set: C = C >> c, l, _
					> version: e/ch/e/n
					TRYING: ch
					adding blocked set: C = C >> ch, l, _
					RESULT:  ['_']
				adding dashed alternative: ['e', '_', 'c', 'h', 'e', 'n']
				adding dashed alternative: ['e', '_', 'ch', 'e', 'n']
				e/c/h/e/n(VCCVC)
e/ch/e/n(VCVC)
e/_/c/h/e/n(VACCVC)
e/_/ch/e/n(VACVC)
				ANALYSING: elc
					resolving (1)
					> version: e/l/c
					TRYING: l
					RESULT:  ['l']
				ANALYSING: elch
					resolving (2)
					> version: e/l/c/h
					TRYING: l
					> version: e/l/ch
					TRYING: l
					RESULT:  ['l']
				ANALYSING: elche
					resolving (2)
					> version: e/l/c/h/e
					TRYING: l
					> version: e/l/ch/e
					TRYING: l
					RESULT:  ['l']
				ANALYSING: euch
					resolving (6)
					> version: e/u/c/h
					TRYING: u
					adding blocked set: C = C >> u, l, _
					> version: e/u/c/h
					TRYING: u
					adding blocked set: C = C >> u, l, _
					> version: e/u/ch
					TRYING: u
					adding blocked set: C = C >> u, l, _
					> version: e/u/ch
					TRYING: u
					adding blocked set: C = C >> u, l, _
					> version: eu/c/h
					TRYING: c
					adding blocked set: C = C >> c, l, _
					> version: eu/ch
					TRYING: ch
					adding blocked set: C = C >> ch, l, _
					RESULT:  ['_']
				adding dashed alternative: ['e', '_', 'u', 'c', 'h']
				adding dashed alternative: ['e', '_', 'u', 'c', 'h']
				adding dashed alternative: ['e', '_', 'u', 'ch']
				adding dashed alternative: ['e', '_', 'u', 'ch']
				adding dashed alternative: ['eu', '_', 'c', 'h']
				adding dashed alternative: ['eu', '_', 'ch']
				e/u/c/h(VCCC)
e/u/c/h(VVCC)
e/u/ch(VCC)
e/u/ch(VVC)
eu/c/h(VCC)
eu/ch(VC)
e/_/u/c/h(VAACC)
e/_/u/c/h(VAACC)
e/_/u/ch(VAAC)
e/_/u/ch(VAAC)
eu/_/c/h(VACC)
eu/_/ch(VAC)
				ANALYSING: ich
					resolving (4)
					> version: i/c/h
					TRYING: c
					adding blocked set: C = C >> c, l, _
					> version: i/c/h
					TRYING: c
					adding blocked set: C = C >> c, l, _
					> version: i/ch
					TRYING: ch
					adding blocked set: C = C >> ch, l, _
					> version: i/ch
					TRYING: ch
					adding blocked set: C = C >> ch, l, _
					RESULT:  ['_']
				adding dashed alternative: ['i', '_', 'c', 'h']
				adding dashed alternative: ['i', '_', 'c', 'h']
				adding dashed alternative: ['i', '_', 'ch']
				adding dashed alternative: ['i', '_', 'ch']
				i/c/h(CCC)
i/c/h(VCC)
i/ch(CC)
i/ch(VC)
i/_/c/h(AACC)
i/_/c/h(AACC)
i/_/ch(AAC)
i/_/ch(AAC)
				ANALYSING: ilc
					resolving (2)
					> version: i/l/c
					TRYING: l
					> version: i/l/c
					TRYING: l
					RESULT:  ['l']
				ANALYSING: ilk
					resolving (2)
					> version: i/l/k
					TRYING: l
					> version: i/l/k
					TRYING: l
					RESULT:  ['l']
				ANALYSING: uch
					resolving (4)
					> version: u/c/h
					TRYING: c
					adding blocked set: C = C >> c, l, _
					> version: u/c/h
					TRYING: c
					adding blocked set: C = C >> c, l, _
					> version: u/ch
					TRYING: ch
					adding blocked set: C = C >> ch, l, _
					> version: u/ch
					TRYING: ch
					adding blocked set: C = C >> ch, l, _
					RESULT:  ['_']
				adding dashed alternative: ['u', '_', 'c', 'h']
				adding dashed alternative: ['u', '_', 'c', 'h']
				adding dashed alternative: ['u', '_', 'ch']
				adding dashed alternative: ['u', '_', 'ch']
				u/c/h(CCC)
u/c/h(VCC)
u/ch(CC)
u/ch(VC)
u/_/c/h(AACC)
u/_/c/h(AACC)
u/_/ch(AAC)
u/_/ch(AAC)
				ANALYSING: vych
					resolving (4)
					> version: v/y/c/h
					TRYING: y
					adding blocked set: C = C >> y, l, _
					> version: v/y/c/h
					TRYING: y
					adding blocked set: C = C >> y, l, _
					> version: v/y/ch
					TRYING: y
					adding blocked set: C = C >> y, l, _
					> version: v/y/ch
					TRYING: y
					adding blocked set: C = C >> y, l, _
					RESULT:  ['_']
				adding dashed alternative: ['v', '_', 'y', 'c', 'h']
				adding dashed alternative: ['v', '_', 'y', 'c', 'h']
				adding dashed alternative: ['v', '_', 'y', 'ch']
				adding dashed alternative: ['v', '_', 'y', 'ch']
				v/y/c/h(CCCC)
v/y/c/h(VVCC)
v/y/ch(CCC)
v/y/ch(VVC)
v/_/y/c/h(AAACC)
v/_/y/c/h(AAACC)
v/_/y/ch(AAAC)
v/_/y/ch(AAAC)
			___VCCVCV : 2___
				ANALYSING: alkere
				adding littera based on matching pattern
				ANALYSING: æhc
					resolving (2)
					> version: æ/h/c
					TRYING: c
					> version: æ/_/h/c
					TRYING: h
					>>> MULTIPLE RESOLVE OPTIONS: {'h', 'c'}
					RESULT:  ['h', 'c']
				ANALYSING: æch
					resolving (4)
					> version: æ/c/h
					TRYING: h
					> version: æ/ch
					> version: æ/_/c/h
					TRYING: c
					>>> MULTIPLE RESOLVE OPTIONS: {'h', 'c'}
					> version: æ/_/ch
					TRYING: ch
					>>> MULTIPLE RESOLVE OPTIONS: {'h', 'ch', 'c'}
					RESULT:  ['h', 'ch', 'c']
				ANALYSING: ælc
					resolving (1)
					> version: æ/l/c
					TRYING: c
					RESULT:  ['c']
				ANALYSING: alc
					resolving (1)
					> version: a/l/c
					TRYING: c
					RESULT:  ['c']
				ANALYSING: alch
					resolving (2)
					> version: a/l/c/h
					TRYING: c
					> version: a/l/ch
					TRYING: ch
					>>> MULTIPLE RESOLVE OPTIONS: {'ch', 'c'}
					RESULT:  ['ch', 'c']
				ANALYSING: ech
					resolving (4)
					> version: e/c/h
					TRYING: h
					> version: e/ch
					> version: e/_/c/h
					TRYING: c
					>>> MULTIPLE RESOLVE OPTIONS: {'h', 'c'}
					> version: e/_/ch
					TRYING: ch
					>>> MULTIPLE RESOLVE OPTIONS: {'h', 'ch', 'c'}
					RESULT:  ['h', 'ch', 'c']
				ANALYSING: eche
					resolving (4)
					> version: e/c/h/e
					TRYING: h
					> version: e/ch/e
					TRYING: e
					> version: e/_/c/h/e
					TRYING: c
					>>> MULTIPLE RESOLVE OPTIONS: {'h', 'c'}
					> version: e/_/ch/e
					TRYING: ch
					>>> MULTIPLE RESOLVE OPTIONS: {'h', 'ch', 'c'}
					RESULT:  ['h', 'ch', 'c']
				ANALYSING: echen
					resolving (4)
					> version: e/c/h/e/n
					TRYING: h
					> version: e/ch/e/n
					TRYING: e
					> version: e/_/c/h/e/n
					TRYING: c
					>>> MULTIPLE RESOLVE OPTIONS: {'h', 'c'}
					> version: e/_/ch/e/n
					TRYING: ch
					>>> MULTIPLE RESOLVE OPTIONS: {'h', 'ch', 'c'}
					RESULT:  ['h', 'ch', 'c']
				ANALYSING: elc
					resolving (1)
					> version: e/l/c
					TRYING: c
					RESULT:  ['c']
				ANALYSING: elch
					resolving (2)
					> version: e/l/c/h
					TRYING: c
					> version: e/l/ch
					TRYING: ch
					>>> MULTIPLE RESOLVE OPTIONS: {'ch', 'c'}
					RESULT:  ['ch', 'c']
				ANALYSING: elche
					resolving (2)
					> version: e/l/c/h/e
					TRYING: c
					> version: e/l/ch/e
					TRYING: ch
					>>> MULTIPLE RESOLVE OPTIONS: {'ch', 'c'}
					RESULT:  ['ch', 'c']
				ANALYSING: euch
					resolving (12)
					> version: e/u/c/h
					TRYING: c
					> version: e/u/c/h
					TRYING: c
					> version: e/u/ch
					TRYING: ch
					>>> MULTIPLE RESOLVE OPTIONS: {'ch', 'c'}
					> version: e/u/ch
					TRYING: ch
					>>> MULTIPLE RESOLVE OPTIONS: {'ch', 'c'}
					> version: eu/c/h
					TRYING: h
					>>> MULTIPLE RESOLVE OPTIONS: {'h', 'ch', 'c'}
					> version: eu/ch
					>>> MULTIPLE RESOLVE OPTIONS: {'h', 'ch', 'c'}
					> version: e/_/u/c/h
					TRYING: u
					adding blocked set: C = C >> k, u, c, h, ch
					>>> MULTIPLE RESOLVE OPTIONS: {'h', 'ch', 'c'}
					> version: e/_/u/c/h
					TRYING: u
					adding blocked set: C = C >> k, u, c, h, ch
					>>> MULTIPLE RESOLVE OPTIONS: {'h', 'ch', 'c'}
					> version: e/_/u/ch
					TRYING: u
					adding blocked set: C = C >> k, u, c, h, ch
					>>> MULTIPLE RESOLVE OPTIONS: {'h', 'ch', 'c'}
					> version: e/_/u/ch
					TRYING: u
					adding blocked set: C = C >> k, u, c, h, ch
					>>> MULTIPLE RESOLVE OPTIONS: {'h', 'ch', 'c'}
					> version: eu/_/c/h
					TRYING: c
					>>> MULTIPLE RESOLVE OPTIONS: {'h', 'ch', 'c'}
					> version: eu/_/ch
					TRYING: ch
					>>> MULTIPLE RESOLVE OPTIONS: {'h', 'ch', 'c'}
					RESULT:  ['h', 'ch', 'c']
				ANALYSING: ich
					resolving (8)
					> version: i/c/h
					TRYING: h
					> version: i/c/h
					TRYING: h
					> version: i/ch
					> version: i/ch
					> version: i/_/c/h
					TRYING: c
					>>> MULTIPLE RESOLVE OPTIONS: {'h', 'c'}
					> version: i/_/c/h
					TRYING: c
					>>> MULTIPLE RESOLVE OPTIONS: {'h', 'c'}
					> version: i/_/ch
					TRYING: ch
					>>> MULTIPLE RESOLVE OPTIONS: {'h', 'ch', 'c'}
					> version: i/_/ch
					TRYING: ch
					>>> MULTIPLE RESOLVE OPTIONS: {'h', 'ch', 'c'}
					RESULT:  ['h', 'ch', 'c']
				ANALYSING: ilc
					resolving (2)
					> version: i/l/c
					TRYING: c
					> version: i/l/c
					TRYING: c
					RESULT:  ['c']
				ANALYSING: ilk
					resolving (2)
					> version: i/l/k
					TRYING: k
					> version: i/l/k
					TRYING: k
					RESULT:  ['k']
				ANALYSING: uch
					resolving (8)
					> version: u/c/h
					TRYING: h
					> version: u/c/h
					TRYING: h
					> version: u/ch
					> version: u/ch
					> version: u/_/c/h
					TRYING: c
					>>> MULTIPLE RESOLVE OPTIONS: {'h', 'c'}
					> version: u/_/c/h
					TRYING: c
					>>> MULTIPLE RESOLVE OPTIONS: {'h', 'c'}
					> version: u/_/ch
					TRYING: ch
					>>> MULTIPLE RESOLVE OPTIONS: {'h', 'ch', 'c'}
					> version: u/_/ch
					TRYING: ch
					>>> MULTIPLE RESOLVE OPTIONS: {'h', 'ch', 'c'}
					RESULT:  ['h', 'ch', 'c']
				ANALYSING: vych
					resolving (8)
					> version: v/y/c/h
					TRYING: c
					> version: v/y/c/h
					TRYING: c
					> version: v/y/ch
					TRYING: ch
					>>> MULTIPLE RESOLVE OPTIONS: {'ch', 'c'}
					> version: v/y/ch
					TRYING: ch
					>>> MULTIPLE RESOLVE OPTIONS: {'ch', 'c'}
					> version: v/_/y/c/h
					TRYING: y
					adding blocked set: C = C >> y, k, c, h, ch
					>>> MULTIPLE RESOLVE OPTIONS: {'ch', 'c'}
					> version: v/_/y/c/h
					TRYING: y
					adding blocked set: C = C >> y, k, c, h, ch
					>>> MULTIPLE RESOLVE OPTIONS: {'ch', 'c'}
					> version: v/_/y/ch
					TRYING: y
					adding blocked set: C = C >> y, k, c, h, ch
					>>> MULTIPLE RESOLVE OPTIONS: {'ch', 'c'}
					> version: v/_/y/ch
					TRYING: y
					adding blocked set: C = C >> y, k, c, h, ch
					>>> MULTIPLE RESOLVE OPTIONS: {'ch', 'c'}
					RESULT:  ['ch', 'c']
			___VCCVCV : 3___
				ANALYSING: alkere
				adding littera based on matching pattern
				ANALYSING: æhc
					resolving (2)
					> version: æ/h/c
					> version: æ/_/h/c
					TRYING: c
					RESULT:  ['_']
				adding dashed alternative: ['æ', 'h', 'c', '_']
				adding dashed alternative: ['æ', '_', 'h', '_', 'c']
				æ/h/c(VCC)
æ/_/h/c(VACC)
æ/h/c/_(VCCA)
æ/_/h/_/c(VACAC)
				ANALYSING: æch
					resolving (4)
					> version: æ/c/h
					> version: æ/ch
					> version: æ/_/c/h
					TRYING: h
					> version: æ/_/ch
					RESULT:  ['_']
				adding dashed alternative: ['æ', 'c', 'h', '_']
				adding dashed alternative: ['æ', 'ch', '_']
				adding dashed alternative: ['æ', '_', 'c', '_', 'h']
				adding dashed alternative: ['æ', '_', 'ch', '_']
				æ/c/h(VCC)
æ/ch(VC)
æ/_/c/h(VACC)
æ/_/ch(VAC)
æ/c/h/_(VCCA)
æ/ch/_(VCA)
æ/_/c/_/h(VACAC)
æ/_/ch/_(VACA)
				ANALYSING: ælc
					resolving (1)
					> version: æ/l/c
					RESULT:  ['_']
				adding dashed alternative: ['æ', 'l', 'c', '_']
				æ/l/c(VCC)
æ/l/c/_(VCCA)
				ANALYSING: alc
					resolving (1)
					> version: a/l/c
					RESULT:  ['_']
				adding dashed alternative: ['a', 'l', 'c', '_']
				a/l/c(VCC)
a/l/c/_(VCCA)
				ANALYSING: alch
					resolving (2)
					> version: a/l/c/h
					TRYING: h
					> version: a/l/ch
					RESULT:  ['_']
				adding dashed alternative: ['a', 'l', 'c', '_', 'h']
				adding dashed alternative: ['a', 'l', 'ch', '_']
				a/l/c/h(VCCC)
a/l/ch(VCC)
a/l/c/_/h(VCCAC)
a/l/ch/_(VCCA)
				ANALYSING: ech
					resolving (4)
					> version: e/c/h
					> version: e/ch
					> version: e/_/c/h
					TRYING: h
					> version: e/_/ch
					RESULT:  ['_']
				adding dashed alternative: ['e', 'c', 'h', '_']
				adding dashed alternative: ['e', 'ch', '_']
				adding dashed alternative: ['e', '_', 'c', '_', 'h']
				adding dashed alternative: ['e', '_', 'ch', '_']
				e/c/h(VCC)
e/ch(VC)
e/_/c/h(VACC)
e/_/ch(VAC)
e/c/h/_(VCCA)
e/ch/_(VCA)
e/_/c/_/h(VACAC)
e/_/ch/_(VACA)
				ANALYSING: eche
					resolving (4)
					> version: e/c/h/e
					TRYING: e
					> version: e/ch/e
					> version: e/_/c/h/e
					TRYING: h
					> version: e/_/ch/e
					TRYING: e
					RESULT:  ['e']
				ANALYSING: echen
					resolving (4)
					> version: e/c/h/e/n
					TRYING: e
					> version: e/ch/e/n
					TRYING: n
					> version: e/_/c/h/e/n
					TRYING: h
					> version: e/_/ch/e/n
					TRYING: e
					RESULT:  ['e']
				ANALYSING: elc
					resolving (1)
					> version: e/l/c
					RESULT:  ['_']
				adding dashed alternative: ['e', 'l', 'c', '_']
				e/l/c(VCC)
e/l/c/_(VCCA)
				ANALYSING: elch
					resolving (2)
					> version: e/l/c/h
					TRYING: h
					> version: e/l/ch
					RESULT:  ['_']
				adding dashed alternative: ['e', 'l', 'c', '_', 'h']
				adding dashed alternative: ['e', 'l', 'ch', '_']
				e/l/c/h(VCCC)
e/l/ch(VCC)
e/l/c/_/h(VCCAC)
e/l/ch/_(VCCA)
				ANALYSING: elche
					resolving (2)
					> version: e/l/c/h/e
					TRYING: h
					> version: e/l/ch/e
					TRYING: e
					RESULT:  ['e']
				ANALYSING: euch
					resolving (12)
					> version: e/u/c/h
					TRYING: h
					> version: e/u/c/h
					TRYING: h
					> version: e/u/ch
					> version: e/u/ch
					> version: eu/c/h
					> version: eu/ch
					> version: e/_/u/c/h
					TRYING: c
					> version: e/_/u/c/h
					TRYING: c
					> version: e/_/u/ch
					TRYING: ch
					> version: e/_/u/ch
					TRYING: ch
					> version: eu/_/c/h
					TRYING: h
					> version: eu/_/ch
					RESULT:  ['_']
				adding dashed alternative: ['e', 'u', 'c', '_', 'h']
				adding dashed alternative: ['e', 'u', 'c', '_', 'h']
				adding dashed alternative: ['e', 'u', 'ch', '_']
				adding dashed alternative: ['e', 'u', 'ch', '_']
				adding dashed alternative: ['eu', 'c', 'h', '_']
				adding dashed alternative: ['eu', 'ch', '_']
				adding dashed alternative: ['e', '_', 'u', '_', 'c', 'h']
				adding dashed alternative: ['e', '_', 'u', '_', 'c', 'h']
				adding dashed alternative: ['e', '_', 'u', '_', 'ch']
				adding dashed alternative: ['e', '_', 'u', '_', 'ch']
				adding dashed alternative: ['eu', '_', 'c', '_', 'h']
				adding dashed alternative: ['eu', '_', 'ch', '_']
				e/u/c/h(VCCC)
e/u/c/h(VVCC)
e/u/ch(VCC)
e/u/ch(VVC)
eu/c/h(VCC)
eu/ch(VC)
e/_/u/c/h(VAACC)
e/_/u/c/h(VAACC)
e/_/u/ch(VAAC)
e/_/u/ch(VAAC)
eu/_/c/h(VACC)
eu/_/ch(VAC)
e/u/c/_/h(VACAC)
e/u/c/_/h(VACAC)
e/u/ch/_(VACA)
e/u/ch/_(VACA)
eu/c/h/_(VCCA)
eu/ch/_(VCA)
e/_/u/_/c/h(VAAACC)
e/_/u/_/c/h(VAAACC)
e/_/u/_/ch(VAAAC)
e/_/u/_/ch(VAAAC)
eu/_/c/_/h(VACAC)
eu/_/ch/_(VACA)
				ANALYSING: ich
					resolving (8)
					> version: i/c/h
					> version: i/c/h
					> version: i/ch
					> version: i/ch
					> version: i/_/c/h
					TRYING: h
					> version: i/_/c/h
					TRYING: h
					> version: i/_/ch
					> version: i/_/ch
					RESULT:  ['_']
				adding dashed alternative: ['i', 'c', 'h', '_']
				adding dashed alternative: ['i', 'c', 'h', '_']
				adding dashed alternative: ['i', 'ch', '_']
				adding dashed alternative: ['i', 'ch', '_']
				adding dashed alternative: ['i', '_', 'c', '_', 'h']
				adding dashed alternative: ['i', '_', 'c', '_', 'h']
				adding dashed alternative: ['i', '_', 'ch', '_']
				adding dashed alternative: ['i', '_', 'ch', '_']
				i/c/h(CCC)
i/c/h(VCC)
i/ch(CC)
i/ch(VC)
i/_/c/h(AACC)
i/_/c/h(AACC)
i/_/ch(AAC)
i/_/ch(AAC)
i/c/h/_(ACCA)
i/c/h/_(ACCA)
i/ch/_(ACA)
i/ch/_(ACA)
i/_/c/_/h(AACAC)
i/_/c/_/h(AACAC)
i/_/ch/_(AACA)
i/_/ch/_(AACA)
				ANALYSING: ilc
					resolving (2)
					> version: i/l/c
					> version: i/l/c
					RESULT:  ['_']
				adding dashed alternative: ['i', 'l', 'c', '_']
				adding dashed alternative: ['i', 'l', 'c', '_']
				i/l/c(CCC)
i/l/c(VCC)
i/l/c/_(ACCA)
i/l/c/_(ACCA)
				ANALYSING: ilk
					resolving (2)
					> version: i/l/k
					> version: i/l/k
					RESULT:  ['_']
				adding dashed alternative: ['i', 'l', 'k', '_']
				adding dashed alternative: ['i', 'l', 'k', '_']
				i/l/k(CCC)
i/l/k(VCC)
i/l/k/_(ACCA)
i/l/k/_(ACCA)
				ANALYSING: uch
					resolving (8)
					> version: u/c/h
					> version: u/c/h
					> version: u/ch
					> version: u/ch
					> version: u/_/c/h
					TRYING: h
					> version: u/_/c/h
					TRYING: h
					> version: u/_/ch
					> version: u/_/ch
					RESULT:  ['_']
				adding dashed alternative: ['u', 'c', 'h', '_']
				adding dashed alternative: ['u', 'c', 'h', '_']
				adding dashed alternative: ['u', 'ch', '_']
				adding dashed alternative: ['u', 'ch', '_']
				adding dashed alternative: ['u', '_', 'c', '_', 'h']
				adding dashed alternative: ['u', '_', 'c', '_', 'h']
				adding dashed alternative: ['u', '_', 'ch', '_']
				adding dashed alternative: ['u', '_', 'ch', '_']
				u/c/h(CCC)
u/c/h(VCC)
u/ch(CC)
u/ch(VC)
u/_/c/h(AACC)
u/_/c/h(AACC)
u/_/ch(AAC)
u/_/ch(AAC)
u/c/h/_(ACCA)
u/c/h/_(ACCA)
u/ch/_(ACA)
u/ch/_(ACA)
u/_/c/_/h(AACAC)
u/_/c/_/h(AACAC)
u/_/ch/_(AACA)
u/_/ch/_(AACA)
				ANALYSING: vych
					resolving (8)
					> version: v/y/c/h
					TRYING: h
					> version: v/y/c/h
					TRYING: h
					> version: v/y/ch
					> version: v/y/ch
					> version: v/_/y/c/h
					TRYING: c
					> version: v/_/y/c/h
					TRYING: c
					> version: v/_/y/ch
					TRYING: ch
					> version: v/_/y/ch
					TRYING: ch
					RESULT:  ['_']
				adding dashed alternative: ['v', 'y', 'c', '_', 'h']
				adding dashed alternative: ['v', 'y', 'c', '_', 'h']
				adding dashed alternative: ['v', 'y', 'ch', '_']
				adding dashed alternative: ['v', 'y', 'ch', '_']
				adding dashed alternative: ['v', '_', 'y', '_', 'c', 'h']
				adding dashed alternative: ['v', '_', 'y', '_', 'c', 'h']
				adding dashed alternative: ['v', '_', 'y', '_', 'ch']
				adding dashed alternative: ['v', '_', 'y', '_', 'ch']
				v/y/c/h(CCCC)
v/y/c/h(VVCC)
v/y/ch(CCC)
v/y/ch(VVC)
v/_/y/c/h(AAACC)
v/_/y/c/h(AAACC)
v/_/y/ch(AAAC)
v/_/y/ch(AAAC)
v/y/c/_/h(AACAC)
v/y/c/_/h(AACAC)
v/y/ch/_(AACA)
v/y/ch/_(AACA)
v/_/y/_/c/h(AAAACC)
v/_/y/_/c/h(AAAACC)
v/_/y/_/ch(AAAAC)
v/_/y/_/ch(AAAAC)
			___VCCVCV : 4___
				ANALYSING: alkere
				adding littera based on matching pattern
				ANALYSING: æhc
					resolving (4)
					> version: æ/h/c
					> version: æ/_/h/c
					> version: æ/h/c/_
					> version: æ/_/h/_/c
					TRYING: c
					adding blocked set: C = C >> c, r
					RESULT:  ['_']
				adding dashed alternative: ['æ', 'h', 'c', '_']
				adding dashed alternative: ['æ', '_', 'h', 'c', '_']
				adding dashed alternative: ['æ', 'h', 'c', '_', '_']
				adding dashed alternative: ['æ', '_', 'h', '_', '_', 'c']
				æ/h/c(VCC)
æ/_/h/c(VACC)
æ/h/c/_(VCCA)
æ/_/h/_/c(VACAC)
æ/h/c/_(VCCA)
æ/_/h/c/_(VACCA)
æ/h/c/_/_(VCCAA)
æ/_/h/_/_/c(VACAAC)
				ANALYSING: æch
					resolving (8)
					> version: æ/c/h
					> version: æ/ch
					> version: æ/_/c/h
					> version: æ/_/ch
					> version: æ/c/h/_
					> version: æ/ch/_
					> version: æ/_/c/_/h
					TRYING: h
					adding blocked set: C = C >> h, r, _
					> version: æ/_/ch/_
					RESULT:  ['_']
				adding dashed alternative: ['æ', 'c', 'h', '_']
				adding dashed alternative: ['æ', 'ch', '_']
				adding dashed alternative: ['æ', '_', 'c', 'h', '_']
				adding dashed alternative: ['æ', '_', 'ch', '_']
				adding dashed alternative: ['æ', 'c', 'h', '_', '_']
				adding dashed alternative: ['æ', 'ch', '_', '_']
				adding dashed alternative: ['æ', '_', 'c', '_', '_', 'h']
				adding dashed alternative: ['æ', '_', 'ch', '_', '_']
				æ/c/h(VCC)
æ/ch(VC)
æ/_/c/h(VACC)
æ/_/ch(VAC)
æ/c/h/_(VCCA)
æ/ch/_(VCA)
æ/_/c/_/h(VACAC)
æ/_/ch/_(VACA)
æ/c/h/_(VCCA)
æ/ch/_(VCA)
æ/_/c/h/_(VACCA)
æ/_/ch/_(VACA)
æ/c/h/_/_(VCCAA)
æ/ch/_/_(VCAA)
æ/_/c/_/_/h(VACAAC)
æ/_/ch/_/_(VACAA)
				ANALYSING: ælc
					resolving (2)
					> version: æ/l/c
					> version: æ/l/c/_
					RESULT:  ['_']
				adding dashed alternative: ['æ', 'l', 'c', '_']
				adding dashed alternative: ['æ', 'l', 'c', '_', '_']
				æ/l/c(VCC)
æ/l/c/_(VCCA)
æ/l/c/_(VCCA)
æ/l/c/_/_(VCCAA)
				ANALYSING: alc
					resolving (2)
					> version: a/l/c
					> version: a/l/c/_
					RESULT:  ['_']
				adding dashed alternative: ['a', 'l', 'c', '_']
				adding dashed alternative: ['a', 'l', 'c', '_', '_']
				a/l/c(VCC)
a/l/c/_(VCCA)
a/l/c/_(VCCA)
a/l/c/_/_(VCCAA)
				ANALYSING: alch
					resolving (4)
					> version: a/l/c/h
					> version: a/l/ch
					> version: a/l/c/_/h
					TRYING: h
					adding blocked set: C = C >> h, r, _
					> version: a/l/ch/_
					RESULT:  ['_']
				adding dashed alternative: ['a', 'l', 'c', 'h', '_']
				adding dashed alternative: ['a', 'l', 'ch', '_']
				adding dashed alternative: ['a', 'l', 'c', '_', '_', 'h']
				adding dashed alternative: ['a', 'l', 'ch', '_', '_']
				a/l/c/h(VCCC)
a/l/ch(VCC)
a/l/c/_/h(VCCAC)
a/l/ch/_(VCCA)
a/l/c/h/_(VCCCA)
a/l/ch/_(VCCA)
a/l/c/_/_/h(VCCAAC)
a/l/ch/_/_(VCCAA)
				ANALYSING: ech
					resolving (8)
					> version: e/c/h
					> version: e/ch
					> version: e/_/c/h
					> version: e/_/ch
					> version: e/c/h/_
					> version: e/ch/_
					> version: e/_/c/_/h
					TRYING: h
					adding blocked set: C = C >> h, r, _
					> version: e/_/ch/_
					RESULT:  ['_']
				adding dashed alternative: ['e', 'c', 'h', '_']
				adding dashed alternative: ['e', 'ch', '_']
				adding dashed alternative: ['e', '_', 'c', 'h', '_']
				adding dashed alternative: ['e', '_', 'ch', '_']
				adding dashed alternative: ['e', 'c', 'h', '_', '_']
				adding dashed alternative: ['e', 'ch', '_', '_']
				adding dashed alternative: ['e', '_', 'c', '_', '_', 'h']
				adding dashed alternative: ['e', '_', 'ch', '_', '_']
				e/c/h(VCC)
e/ch(VC)
e/_/c/h(VACC)
e/_/ch(VAC)
e/c/h/_(VCCA)
e/ch/_(VCA)
e/_/c/_/h(VACAC)
e/_/ch/_(VACA)
e/c/h/_(VCCA)
e/ch/_(VCA)
e/_/c/h/_(VACCA)
e/_/ch/_(VACA)
e/c/h/_/_(VCCAA)
e/ch/_/_(VCAA)
e/_/c/_/_/h(VACAAC)
e/_/ch/_/_(VACAA)
				ANALYSING: eche
					resolving (4)
					> version: e/c/h/e
					> version: e/ch/e
					> version: e/_/c/h/e
					TRYING: e
					> version: e/_/ch/e
					RESULT:  ['_']
				adding dashed alternative: ['e', 'c', 'h', 'e', '_']
				adding dashed alternative: ['e', 'ch', 'e', '_']
				adding dashed alternative: ['e', '_', 'c', 'h', '_', 'e']
				adding dashed alternative: ['e', '_', 'ch', 'e', '_']
				e/c/h/e(VCCV)
e/ch/e(VCV)
e/_/c/h/e(VACCV)
e/_/ch/e(VACV)
e/c/h/e/_(VCCVA)
e/ch/e/_(VCVA)
e/_/c/h/_/e(VACCAV)
e/_/ch/e/_(VACVA)
				ANALYSING: echen
					resolving (4)
					> version: e/c/h/e/n
					TRYING: n
					adding blocked set: C = C >> n, r, _
					> version: e/ch/e/n
					> version: e/_/c/h/e/n
					TRYING: e
					> version: e/_/ch/e/n
					TRYING: n
					adding blocked set: C = C >> n, r, _
					RESULT:  ['_']
				adding dashed alternative: ['e', 'c', 'h', 'e', '_', 'n']
				adding dashed alternative: ['e', 'ch', 'e', 'n', '_']
				adding dashed alternative: ['e', '_', 'c', 'h', '_', 'e', 'n']
				adding dashed alternative: ['e', '_', 'ch', 'e', '_', 'n']
				e/c/h/e/n(VCCVC)
e/ch/e/n(VCVC)
e/_/c/h/e/n(VACCVC)
e/_/ch/e/n(VACVC)
e/c/h/e/_/n(VCCVAC)
e/ch/e/n/_(VCVCA)
e/_/c/h/_/e/n(VACCAVC)
e/_/ch/e/_/n(VACVAC)
				ANALYSING: elc
					resolving (2)
					> version: e/l/c
					> version: e/l/c/_
					RESULT:  ['_']
				adding dashed alternative: ['e', 'l', 'c', '_']
				adding dashed alternative: ['e', 'l', 'c', '_', '_']
				e/l/c(VCC)
e/l/c/_(VCCA)
e/l/c/_(VCCA)
e/l/c/_/_(VCCAA)
				ANALYSING: elch
					resolving (4)
					> version: e/l/c/h
					> version: e/l/ch
					> version: e/l/c/_/h
					TRYING: h
					adding blocked set: C = C >> h, r, _
					> version: e/l/ch/_
					RESULT:  ['_']
				adding dashed alternative: ['e', 'l', 'c', 'h', '_']
				adding dashed alternative: ['e', 'l', 'ch', '_']
				adding dashed alternative: ['e', 'l', 'c', '_', '_', 'h']
				adding dashed alternative: ['e', 'l', 'ch', '_', '_']
				e/l/c/h(VCCC)
e/l/ch(VCC)
e/l/c/_/h(VCCAC)
e/l/ch/_(VCCA)
e/l/c/h/_(VCCCA)
e/l/ch/_(VCCA)
e/l/c/_/_/h(VCCAAC)
e/l/ch/_/_(VCCAA)
				ANALYSING: elche
					resolving (2)
					> version: e/l/c/h/e
					TRYING: e
					> version: e/l/ch/e
					RESULT:  ['_']
				adding dashed alternative: ['e', 'l', 'c', 'h', '_', 'e']
				adding dashed alternative: ['e', 'l', 'ch', 'e', '_']
				e/l/c/h/e(VCCCV)
e/l/ch/e(VCCV)
e/l/c/h/_/e(VCCCAV)
e/l/ch/e/_(VCCVA)
				ANALYSING: euch
					resolving (24)
					> version: e/u/c/h
					> version: e/u/c/h
					> version: e/u/ch
					> version: e/u/ch
					> version: eu/c/h
					> version: eu/ch
					> version: e/_/u/c/h
					TRYING: h
					adding blocked set: C = C >> h, r, _
					> version: e/_/u/c/h
					TRYING: h
					adding blocked set: C = C >> h, r, _
					> version: e/_/u/ch
					> version: e/_/u/ch
					> version: eu/_/c/h
					> version: eu/_/ch
					> version: e/u/c/_/h
					TRYING: h
					adding blocked set: C = C >> h, r, _
					> version: e/u/c/_/h
					TRYING: h
					adding blocked set: C = C >> h, r, _
					> version: e/u/ch/_
					> version: e/u/ch/_
					> version: eu/c/h/_
					> version: eu/ch/_
					> version: e/_/u/_/c/h
					TRYING: c
					adding blocked set: C = C >> c, r, _
					> version: e/_/u/_/c/h
					TRYING: c
					adding blocked set: C = C >> c, r, _
					> version: e/_/u/_/ch
					TRYING: ch
					adding blocked set: C = C >> ch, r, _
					> version: e/_/u/_/ch
					TRYING: ch
					adding blocked set: C = C >> ch, r, _
					> version: eu/_/c/_/h
					TRYING: h
					adding blocked set: C = C >> h, r, _
					> version: eu/_/ch/_
					RESULT:  ['_']
				adding dashed alternative: ['e', 'u', 'c', 'h', '_']
				adding dashed alternative: ['e', 'u', 'c', 'h', '_']
				adding dashed alternative: ['e', 'u', 'ch', '_']
				adding dashed alternative: ['e', 'u', 'ch', '_']
				adding dashed alternative: ['eu', 'c', 'h', '_']
				adding dashed alternative: ['eu', 'ch', '_']
				adding dashed alternative: ['e', '_', 'u', 'c', '_', 'h']
				adding dashed alternative: ['e', '_', 'u', 'c', '_', 'h']
				adding dashed alternative: ['e', '_', 'u', 'ch', '_']
				adding dashed alternative: ['e', '_', 'u', 'ch', '_']
				adding dashed alternative: ['eu', '_', 'c', 'h', '_']
				adding dashed alternative: ['eu', '_', 'ch', '_']
				adding dashed alternative: ['e', 'u', 'c', '_', '_', 'h']
				adding dashed alternative: ['e', 'u', 'c', '_', '_', 'h']
				adding dashed alternative: ['e', 'u', 'ch', '_', '_']
				adding dashed alternative: ['e', 'u', 'ch', '_', '_']
				adding dashed alternative: ['eu', 'c', 'h', '_', '_']
				adding dashed alternative: ['eu', 'ch', '_', '_']
				adding dashed alternative: ['e', '_', 'u', '_', '_', 'c', 'h']
				adding dashed alternative: ['e', '_', 'u', '_', '_', 'c', 'h']
				adding dashed alternative: ['e', '_', 'u', '_', '_', 'ch']
				adding dashed alternative: ['e', '_', 'u', '_', '_', 'ch']
				adding dashed alternative: ['eu', '_', 'c', '_', '_', 'h']
				adding dashed alternative: ['eu', '_', 'ch', '_', '_']
				e/u/c/h(VCCC)
e/u/c/h(VVCC)
e/u/ch(VCC)
e/u/ch(VVC)
eu/c/h(VCC)
eu/ch(VC)
e/_/u/c/h(VAACC)
e/_/u/c/h(VAACC)
e/_/u/ch(VAAC)
e/_/u/ch(VAAC)
eu/_/c/h(VACC)
eu/_/ch(VAC)
e/u/c/_/h(VACAC)
e/u/c/_/h(VACAC)
e/u/ch/_(VACA)
e/u/ch/_(VACA)
eu/c/h/_(VCCA)
eu/ch/_(VCA)
e/_/u/_/c/h(VAAACC)
e/_/u/_/c/h(VAAACC)
e/_/u/_/ch(VAAAC)
e/_/u/_/ch(VAAAC)
eu/_/c/_/h(VACAC)
eu/_/ch/_(VACA)
e/u/c/h/_(VACCA)
e/u/c/h/_(VACCA)
e/u/ch/_(VACA)
e/u/ch/_(VACA)
eu/c/h/_(VCCA)
eu/ch/_(VCA)
e/_/u/c/_/h(VAACAC)
e/_/u/c/_/h(VAACAC)
e/_/u/ch/_(VAACA)
e/_/u/ch/_(VAACA)
eu/_/c/h/_(VACCA)
eu/_/ch/_(VACA)
e/u/c/_/_/h(VACAAC)
e/u/c/_/_/h(VACAAC)
e/u/ch/_/_(VACAA)
e/u/ch/_/_(VACAA)
eu/c/h/_/_(VCCAA)
eu/ch/_/_(VCAA)
e/_/u/_/_/c/h(VAAAACC)
e/_/u/_/_/c/h(VAAAACC)
e/_/u/_/_/ch(VAAAAC)
e/_/u/_/_/ch(VAAAAC)
eu/_/c/_/_/h(VACAAC)
eu/_/ch/_/_(VACAA)
				ANALYSING: ich
					resolving (16)
					> version: i/c/h
					> version: i/c/h
					> version: i/ch
					> version: i/ch
					> version: i/_/c/h
					> version: i/_/c/h
					> version: i/_/ch
					> version: i/_/ch
					> version: i/c/h/_
					> version: i/c/h/_
					> version: i/ch/_
					> version: i/ch/_
					> version: i/_/c/_/h
					TRYING: h
					adding blocked set: C = C >> h, r, _
					> version: i/_/c/_/h
					TRYING: h
					adding blocked set: C = C >> h, r, _
					> version: i/_/ch/_
					> version: i/_/ch/_
					RESULT:  ['_']
				adding dashed alternative: ['i', 'c', 'h', '_']
				adding dashed alternative: ['i', 'c', 'h', '_']
				adding dashed alternative: ['i', 'ch', '_']
				adding dashed alternative: ['i', 'ch', '_']
				adding dashed alternative: ['i', '_', 'c', 'h', '_']
				adding dashed alternative: ['i', '_', 'c', 'h', '_']
				adding dashed alternative: ['i', '_', 'ch', '_']
				adding dashed alternative: ['i', '_', 'ch', '_']
				adding dashed alternative: ['i', 'c', 'h', '_', '_']
				adding dashed alternative: ['i', 'c', 'h', '_', '_']
				adding dashed alternative: ['i', 'ch', '_', '_']
				adding dashed alternative: ['i', 'ch', '_', '_']
				adding dashed alternative: ['i', '_', 'c', '_', '_', 'h']
				adding dashed alternative: ['i', '_', 'c', '_', '_', 'h']
				adding dashed alternative: ['i', '_', 'ch', '_', '_']
				adding dashed alternative: ['i', '_', 'ch', '_', '_']
				i/c/h(CCC)
i/c/h(VCC)
i/ch(CC)
i/ch(VC)
i/_/c/h(AACC)
i/_/c/h(AACC)
i/_/ch(AAC)
i/_/ch(AAC)
i/c/h/_(ACCA)
i/c/h/_(ACCA)
i/ch/_(ACA)
i/ch/_(ACA)
i/_/c/_/h(AACAC)
i/_/c/_/h(AACAC)
i/_/ch/_(AACA)
i/_/ch/_(AACA)
i/c/h/_(ACCA)
i/c/h/_(ACCA)
i/ch/_(ACA)
i/ch/_(ACA)
i/_/c/h/_(AACCA)
i/_/c/h/_(AACCA)
i/_/ch/_(AACA)
i/_/ch/_(AACA)
i/c/h/_/_(ACCAA)
i/c/h/_/_(ACCAA)
i/ch/_/_(ACAA)
i/ch/_/_(ACAA)
i/_/c/_/_/h(AACAAC)
i/_/c/_/_/h(AACAAC)
i/_/ch/_/_(AACAA)
i/_/ch/_/_(AACAA)
				ANALYSING: ilc
					resolving (4)
					> version: i/l/c
					> version: i/l/c
					> version: i/l/c/_
					> version: i/l/c/_
					RESULT:  ['_']
				adding dashed alternative: ['i', 'l', 'c', '_']
				adding dashed alternative: ['i', 'l', 'c', '_']
				adding dashed alternative: ['i', 'l', 'c', '_', '_']
				adding dashed alternative: ['i', 'l', 'c', '_', '_']
				i/l/c(CCC)
i/l/c(VCC)
i/l/c/_(ACCA)
i/l/c/_(ACCA)
i/l/c/_(ACCA)
i/l/c/_(ACCA)
i/l/c/_/_(ACCAA)
i/l/c/_/_(ACCAA)
				ANALYSING: ilk
					resolving (4)
					> version: i/l/k
					> version: i/l/k
					> version: i/l/k/_
					> version: i/l/k/_
					RESULT:  ['_']
				adding dashed alternative: ['i', 'l', 'k', '_']
				adding dashed alternative: ['i', 'l', 'k', '_']
				adding dashed alternative: ['i', 'l', 'k', '_', '_']
				adding dashed alternative: ['i', 'l', 'k', '_', '_']
				i/l/k(CCC)
i/l/k(VCC)
i/l/k/_(ACCA)
i/l/k/_(ACCA)
i/l/k/_(ACCA)
i/l/k/_(ACCA)
i/l/k/_/_(ACCAA)
i/l/k/_/_(ACCAA)
				ANALYSING: uch
					resolving (16)
					> version: u/c/h
					> version: u/c/h
					> version: u/ch
					> version: u/ch
					> version: u/_/c/h
					> version: u/_/c/h
					> version: u/_/ch
					> version: u/_/ch
					> version: u/c/h/_
					> version: u/c/h/_
					> version: u/ch/_
					> version: u/ch/_
					> version: u/_/c/_/h
					TRYING: h
					adding blocked set: C = C >> h, r, _
					> version: u/_/c/_/h
					TRYING: h
					adding blocked set: C = C >> h, r, _
					> version: u/_/ch/_
					> version: u/_/ch/_
					RESULT:  ['_']
				adding dashed alternative: ['u', 'c', 'h', '_']
				adding dashed alternative: ['u', 'c', 'h', '_']
				adding dashed alternative: ['u', 'ch', '_']
				adding dashed alternative: ['u', 'ch', '_']
				adding dashed alternative: ['u', '_', 'c', 'h', '_']
				adding dashed alternative: ['u', '_', 'c', 'h', '_']
				adding dashed alternative: ['u', '_', 'ch', '_']
				adding dashed alternative: ['u', '_', 'ch', '_']
				adding dashed alternative: ['u', 'c', 'h', '_', '_']
				adding dashed alternative: ['u', 'c', 'h', '_', '_']
				adding dashed alternative: ['u', 'ch', '_', '_']
				adding dashed alternative: ['u', 'ch', '_', '_']
				adding dashed alternative: ['u', '_', 'c', '_', '_', 'h']
				adding dashed alternative: ['u', '_', 'c', '_', '_', 'h']
				adding dashed alternative: ['u', '_', 'ch', '_', '_']
				adding dashed alternative: ['u', '_', 'ch', '_', '_']
				u/c/h(CCC)
u/c/h(VCC)
u/ch(CC)
u/ch(VC)
u/_/c/h(AACC)
u/_/c/h(AACC)
u/_/ch(AAC)
u/_/ch(AAC)
u/c/h/_(ACCA)
u/c/h/_(ACCA)
u/ch/_(ACA)
u/ch/_(ACA)
u/_/c/_/h(AACAC)
u/_/c/_/h(AACAC)
u/_/ch/_(AACA)
u/_/ch/_(AACA)
u/c/h/_(ACCA)
u/c/h/_(ACCA)
u/ch/_(ACA)
u/ch/_(ACA)
u/_/c/h/_(AACCA)
u/_/c/h/_(AACCA)
u/_/ch/_(AACA)
u/_/ch/_(AACA)
u/c/h/_/_(ACCAA)
u/c/h/_/_(ACCAA)
u/ch/_/_(ACAA)
u/ch/_/_(ACAA)
u/_/c/_/_/h(AACAAC)
u/_/c/_/_/h(AACAAC)
u/_/ch/_/_(AACAA)
u/_/ch/_/_(AACAA)
				ANALYSING: vych
					resolving (16)
					> version: v/y/c/h
					> version: v/y/c/h
					> version: v/y/ch
					> version: v/y/ch
					> version: v/_/y/c/h
					TRYING: h
					adding blocked set: C = C >> h, r, _
					> version: v/_/y/c/h
					TRYING: h
					adding blocked set: C = C >> h, r, _
					> version: v/_/y/ch
					> version: v/_/y/ch
					> version: v/y/c/_/h
					TRYING: h
					adding blocked set: C = C >> h, r, _
					> version: v/y/c/_/h
					TRYING: h
					adding blocked set: C = C >> h, r, _
					> version: v/y/ch/_
					> version: v/y/ch/_
					> version: v/_/y/_/c/h
					TRYING: c
					adding blocked set: C = C >> c, r, _
					> version: v/_/y/_/c/h
					TRYING: c
					adding blocked set: C = C >> c, r, _
					> version: v/_/y/_/ch
					TRYING: ch
					adding blocked set: C = C >> ch, r, _
					> version: v/_/y/_/ch
					TRYING: ch
					adding blocked set: C = C >> ch, r, _
					RESULT:  ['_']
				adding dashed alternative: ['v', 'y', 'c', 'h', '_']
				adding dashed alternative: ['v', 'y', 'c', 'h', '_']
				adding dashed alternative: ['v', 'y', 'ch', '_']
				adding dashed alternative: ['v', 'y', 'ch', '_']
				adding dashed alternative: ['v', '_', 'y', 'c', '_', 'h']
				adding dashed alternative: ['v', '_', 'y', 'c', '_', 'h']
				adding dashed alternative: ['v', '_', 'y', 'ch', '_']
				adding dashed alternative: ['v', '_', 'y', 'ch', '_']
				adding dashed alternative: ['v', 'y', 'c', '_', '_', 'h']
				adding dashed alternative: ['v', 'y', 'c', '_', '_', 'h']
				adding dashed alternative: ['v', 'y', 'ch', '_', '_']
				adding dashed alternative: ['v', 'y', 'ch', '_', '_']
				adding dashed alternative: ['v', '_', 'y', '_', '_', 'c', 'h']
				adding dashed alternative: ['v', '_', 'y', '_', '_', 'c', 'h']
				adding dashed alternative: ['v', '_', 'y', '_', '_', 'ch']
				adding dashed alternative: ['v', '_', 'y', '_', '_', 'ch']
				v/y/c/h(CCCC)
v/y/c/h(VVCC)
v/y/ch(CCC)
v/y/ch(VVC)
v/_/y/c/h(AAACC)
v/_/y/c/h(AAACC)
v/_/y/ch(AAAC)
v/_/y/ch(AAAC)
v/y/c/_/h(AACAC)
v/y/c/_/h(AACAC)
v/y/ch/_(AACA)
v/y/ch/_(AACA)
v/_/y/_/c/h(AAAACC)
v/_/y/_/c/h(AAAACC)
v/_/y/_/ch(AAAAC)
v/_/y/_/ch(AAAAC)
v/y/c/h/_(AACCA)
v/y/c/h/_(AACCA)
v/y/ch/_(AACA)
v/y/ch/_(AACA)
v/_/y/c/_/h(AAACAC)
v/_/y/c/_/h(AAACAC)
v/_/y/ch/_(AAACA)
v/_/y/ch/_(AAACA)
v/y/c/_/_/h(AACAAC)
v/y/c/_/_/h(AACAAC)
v/y/ch/_/_(AACAA)
v/y/ch/_/_(AACAA)
v/_/y/_/_/c/h(AAAAACC)
v/_/y/_/_/c/h(AAAAACC)
v/_/y/_/_/ch(AAAAAC)
v/_/y/_/_/ch(AAAAAC)
			___VCCVCV : 5___
				ANALYSING: alkere
				adding littera based on matching pattern
				ANALYSING: æhc
					resolving (8)
					> version: æ/h/c
					> version: æ/_/h/c
					> version: æ/h/c/_
					> version: æ/_/h/_/c
					> version: æ/h/c/_
					> version: æ/_/h/c/_
					> version: æ/h/c/_/_
					> version: æ/_/h/_/_/c
					TRYING: c
					RESULT:  ['_']
				adding dashed alternative: ['æ', 'h', 'c', '_']
				adding dashed alternative: ['æ', '_', 'h', 'c', '_']
				adding dashed alternative: ['æ', 'h', 'c', '_', '_']
				adding dashed alternative: ['æ', '_', 'h', '_', 'c', '_']
				adding dashed alternative: ['æ', 'h', 'c', '_', '_']
				adding dashed alternative: ['æ', '_', 'h', 'c', '_', '_']
				adding dashed alternative: ['æ', 'h', 'c', '_', '_', '_']
				adding dashed alternative: ['æ', '_', 'h', '_', '_', '_', 'c']
				æ/h/c(VCC)
æ/_/h/c(VACC)
æ/h/c/_(VCCA)
æ/_/h/_/c(VACAC)
æ/h/c/_(VCCA)
æ/_/h/c/_(VACCA)
æ/h/c/_/_(VCCAA)
æ/_/h/_/_/c(VACAAC)
æ/h/c/_(VCCA)
æ/_/h/c/_(VACCA)
æ/h/c/_/_(VCCAA)
æ/_/h/_/c/_(VACACA)
æ/h/c/_/_(VCCAA)
æ/_/h/c/_/_(VACCAA)
æ/h/c/_/_/_(VCCAAA)
æ/_/h/_/_/_/c(VACAAAC)
				version split: ['æ', 'h', 'c']
				{'string': 'æ/h/c', 'rgx': '((æ))/((_))/((h)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['æ', 'h', 'c']
				version split: ['æ', '_', 'h', 'c']
				{'string': 'æ/_/h/c', 'rgx': '((æ))/((_))/((h)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['æ', '_', 'h', 'c']
				version split: ['æ', 'h', 'c', '_']
				{'string': 'æ/h/c/_', 'rgx': '((æ))/((_))/((h)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['æ', 'h', 'c', '_']
				version split: ['æ', '_', 'h', '_', 'c']
				{'string': 'æ/_/h/_/c', 'rgx': '((æ))/((_))/((h)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['æ', '_', 'h', '_', 'c']
				version split: ['æ', 'h', 'c', '_']
				{'string': 'æ/h/c/_', 'rgx': '((æ))/((_))/((h)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['æ', 'h', 'c', '_']
				version split: ['æ', '_', 'h', 'c', '_']
				{'string': 'æ/_/h/c/_', 'rgx': '((æ))/((_))/((h)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['æ', '_', 'h', 'c', '_']
				version split: ['æ', 'h', 'c', '_', '_']
				{'string': 'æ/h/c/_/_', 'rgx': '((æ))/((_))/((h)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['æ', 'h', 'c', '_', '_']
				version split: ['æ', '_', 'h', '_', '_', 'c']
				{'string': 'æ/_/h/_/_/c', 'rgx': '((æ))/((_))/((h)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['æ', '_', 'h', '_', '_', 'c']
				version split: ['æ', 'h', 'c', '_']
				{'string': 'æ/h/c/_', 'rgx': '((æ))/((_))/((h)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['æ', 'h', 'c', '_']
				version split: ['æ', '_', 'h', 'c', '_']
				{'string': 'æ/_/h/c/_', 'rgx': '((æ))/((_))/((h)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['æ', '_', 'h', 'c', '_']
				version split: ['æ', 'h', 'c', '_', '_']
				{'string': 'æ/h/c/_/_', 'rgx': '((æ))/((_))/((h)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['æ', 'h', 'c', '_', '_']
				version split: ['æ', '_', 'h', '_', 'c', '_']
				{'string': 'æ/_/h/_/c/_', 'rgx': '((æ))/((_))/((h)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['æ', '_', 'h', '_', 'c', '_']
				version split: ['æ', 'h', 'c', '_', '_']
				{'string': 'æ/h/c/_/_', 'rgx': '((æ))/((_))/((h)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['æ', 'h', 'c', '_', '_']
				version split: ['æ', '_', 'h', 'c', '_', '_']
				{'string': 'æ/_/h/c/_/_', 'rgx': '((æ))/((_))/((h)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['æ', '_', 'h', 'c', '_', '_']
				version split: ['æ', 'h', 'c', '_', '_', '_']
				{'string': 'æ/h/c/_/_/_', 'rgx': '((æ))/((_))/((h)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['æ', 'h', 'c', '_', '_', '_']
				version split: ['æ', '_', 'h', '_', '_', '_', 'c']
				{'string': 'æ/_/h/_/_/_/c', 'rgx': '((æ))/((_))/((h)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['æ', '_', 'h', '_', '_', '_', 'c']
				ANALYSING: æch
					resolving (16)
					> version: æ/c/h
					> version: æ/ch
					> version: æ/_/c/h
					> version: æ/_/ch
					> version: æ/c/h/_
					> version: æ/ch/_
					> version: æ/_/c/_/h
					> version: æ/_/ch/_
					> version: æ/c/h/_
					> version: æ/ch/_
					> version: æ/_/c/h/_
					> version: æ/_/ch/_
					> version: æ/c/h/_/_
					> version: æ/ch/_/_
					> version: æ/_/c/_/_/h
					TRYING: h
					> version: æ/_/ch/_/_
					RESULT:  ['_']
				adding dashed alternative: ['æ', 'c', 'h', '_']
				adding dashed alternative: ['æ', 'ch', '_']
				adding dashed alternative: ['æ', '_', 'c', 'h', '_']
				adding dashed alternative: ['æ', '_', 'ch', '_']
				adding dashed alternative: ['æ', 'c', 'h', '_', '_']
				adding dashed alternative: ['æ', 'ch', '_', '_']
				adding dashed alternative: ['æ', '_', 'c', '_', 'h', '_']
				adding dashed alternative: ['æ', '_', 'ch', '_', '_']
				adding dashed alternative: ['æ', 'c', 'h', '_', '_']
				adding dashed alternative: ['æ', 'ch', '_', '_']
				adding dashed alternative: ['æ', '_', 'c', 'h', '_', '_']
				adding dashed alternative: ['æ', '_', 'ch', '_', '_']
				adding dashed alternative: ['æ', 'c', 'h', '_', '_', '_']
				adding dashed alternative: ['æ', 'ch', '_', '_', '_']
				adding dashed alternative: ['æ', '_', 'c', '_', '_', '_', 'h']
				adding dashed alternative: ['æ', '_', 'ch', '_', '_', '_']
				æ/c/h(VCC)
æ/ch(VC)
æ/_/c/h(VACC)
æ/_/ch(VAC)
æ/c/h/_(VCCA)
æ/ch/_(VCA)
æ/_/c/_/h(VACAC)
æ/_/ch/_(VACA)
æ/c/h/_(VCCA)
æ/ch/_(VCA)
æ/_/c/h/_(VACCA)
æ/_/ch/_(VACA)
æ/c/h/_/_(VCCAA)
æ/ch/_/_(VCAA)
æ/_/c/_/_/h(VACAAC)
æ/_/ch/_/_(VACAA)
æ/c/h/_(VCCA)
æ/ch/_(VCA)
æ/_/c/h/_(VACCA)
æ/_/ch/_(VACA)
æ/c/h/_/_(VCCAA)
æ/ch/_/_(VCAA)
æ/_/c/_/h/_(VACACA)
æ/_/ch/_/_(VACAA)
æ/c/h/_/_(VCCAA)
æ/ch/_/_(VCAA)
æ/_/c/h/_/_(VACCAA)
æ/_/ch/_/_(VACAA)
æ/c/h/_/_/_(VCCAAA)
æ/ch/_/_/_(VCAAA)
æ/_/c/_/_/_/h(VACAAAC)
æ/_/ch/_/_/_(VACAAA)
				version split: ['æ', 'c', 'h']
				{'string': 'æ/c/h', 'rgx': '((æ))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['æ', 'c', 'h']
				version split: ['æ', 'ch']
				{'string': 'æ/ch', 'rgx': '((æ))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['æ', 'ch']
				version split: ['æ', '_', 'c', 'h']
				{'string': 'æ/_/c/h', 'rgx': '((æ))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['æ', '_', 'c', 'h']
				version split: ['æ', '_', 'ch']
				{'string': 'æ/_/ch', 'rgx': '((æ))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['æ', '_', 'ch']
				version split: ['æ', 'c', 'h', '_']
				{'string': 'æ/c/h/_', 'rgx': '((æ))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['æ', 'c', 'h', '_']
				version split: ['æ', 'ch', '_']
				{'string': 'æ/ch/_', 'rgx': '((æ))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['æ', 'ch', '_']
				version split: ['æ', '_', 'c', '_', 'h']
				{'string': 'æ/_/c/_/h', 'rgx': '((æ))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['æ', '_', 'c', '_', 'h']
				version split: ['æ', '_', 'ch', '_']
				{'string': 'æ/_/ch/_', 'rgx': '((æ))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['æ', '_', 'ch', '_']
				version split: ['æ', 'c', 'h', '_']
				{'string': 'æ/c/h/_', 'rgx': '((æ))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['æ', 'c', 'h', '_']
				version split: ['æ', 'ch', '_']
				{'string': 'æ/ch/_', 'rgx': '((æ))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['æ', 'ch', '_']
				version split: ['æ', '_', 'c', 'h', '_']
				{'string': 'æ/_/c/h/_', 'rgx': '((æ))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['æ', '_', 'c', 'h', '_']
				version split: ['æ', '_', 'ch', '_']
				{'string': 'æ/_/ch/_', 'rgx': '((æ))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['æ', '_', 'ch', '_']
				version split: ['æ', 'c', 'h', '_', '_']
				{'string': 'æ/c/h/_/_', 'rgx': '((æ))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['æ', 'c', 'h', '_', '_']
				version split: ['æ', 'ch', '_', '_']
				{'string': 'æ/ch/_/_', 'rgx': '((æ))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['æ', 'ch', '_', '_']
				version split: ['æ', '_', 'c', '_', '_', 'h']
				{'string': 'æ/_/c/_/_/h', 'rgx': '((æ))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['æ', '_', 'c', '_', '_', 'h']
				version split: ['æ', '_', 'ch', '_', '_']
				{'string': 'æ/_/ch/_/_', 'rgx': '((æ))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['æ', '_', 'ch', '_', '_']
				version split: ['æ', 'c', 'h', '_']
				{'string': 'æ/c/h/_', 'rgx': '((æ))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['æ', 'c', 'h', '_']
				version split: ['æ', 'ch', '_']
				{'string': 'æ/ch/_', 'rgx': '((æ))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['æ', 'ch', '_']
				version split: ['æ', '_', 'c', 'h', '_']
				{'string': 'æ/_/c/h/_', 'rgx': '((æ))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['æ', '_', 'c', 'h', '_']
				version split: ['æ', '_', 'ch', '_']
				{'string': 'æ/_/ch/_', 'rgx': '((æ))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['æ', '_', 'ch', '_']
				version split: ['æ', 'c', 'h', '_', '_']
				{'string': 'æ/c/h/_/_', 'rgx': '((æ))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['æ', 'c', 'h', '_', '_']
				version split: ['æ', 'ch', '_', '_']
				{'string': 'æ/ch/_/_', 'rgx': '((æ))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['æ', 'ch', '_', '_']
				version split: ['æ', '_', 'c', '_', 'h', '_']
				{'string': 'æ/_/c/_/h/_', 'rgx': '((æ))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['æ', '_', 'c', '_', 'h', '_']
				version split: ['æ', '_', 'ch', '_', '_']
				{'string': 'æ/_/ch/_/_', 'rgx': '((æ))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['æ', '_', 'ch', '_', '_']
				version split: ['æ', 'c', 'h', '_', '_']
				{'string': 'æ/c/h/_/_', 'rgx': '((æ))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['æ', 'c', 'h', '_', '_']
				version split: ['æ', 'ch', '_', '_']
				{'string': 'æ/ch/_/_', 'rgx': '((æ))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['æ', 'ch', '_', '_']
				version split: ['æ', '_', 'c', 'h', '_', '_']
				{'string': 'æ/_/c/h/_/_', 'rgx': '((æ))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['æ', '_', 'c', 'h', '_', '_']
				version split: ['æ', '_', 'ch', '_', '_']
				{'string': 'æ/_/ch/_/_', 'rgx': '((æ))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['æ', '_', 'ch', '_', '_']
				version split: ['æ', 'c', 'h', '_', '_', '_']
				{'string': 'æ/c/h/_/_/_', 'rgx': '((æ))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['æ', 'c', 'h', '_', '_', '_']
				version split: ['æ', 'ch', '_', '_', '_']
				{'string': 'æ/ch/_/_/_', 'rgx': '((æ))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['æ', 'ch', '_', '_', '_']
				version split: ['æ', '_', 'c', '_', '_', '_', 'h']
				{'string': 'æ/_/c/_/_/_/h', 'rgx': '((æ))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['æ', '_', 'c', '_', '_', '_', 'h']
				version split: ['æ', '_', 'ch', '_', '_', '_']
				{'string': 'æ/_/ch/_/_/_', 'rgx': '((æ))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				ANALYSING: ælc
					resolving (4)
					> version: æ/l/c
					> version: æ/l/c/_
					> version: æ/l/c/_
					> version: æ/l/c/_/_
					RESULT:  ['_']
				adding dashed alternative: ['æ', 'l', 'c', '_']
				adding dashed alternative: ['æ', 'l', 'c', '_', '_']
				adding dashed alternative: ['æ', 'l', 'c', '_', '_']
				adding dashed alternative: ['æ', 'l', 'c', '_', '_', '_']
				æ/l/c(VCC)
æ/l/c/_(VCCA)
æ/l/c/_(VCCA)
æ/l/c/_/_(VCCAA)
æ/l/c/_(VCCA)
æ/l/c/_/_(VCCAA)
æ/l/c/_/_(VCCAA)
æ/l/c/_/_/_(VCCAAA)
				version split: ['æ', 'l', 'c']
				{'string': 'æ/l/c', 'rgx': '((æ))/((l))/((c))/((_))/((_))/((_))$'}
				_____REMOVING________['æ', 'l', 'c']
				version split: ['æ', 'l', 'c', '_']
				{'string': 'æ/l/c/_', 'rgx': '((æ))/((l))/((c))/((_))/((_))/((_))$'}
				_____REMOVING________['æ', 'l', 'c', '_']
				version split: ['æ', 'l', 'c', '_']
				{'string': 'æ/l/c/_', 'rgx': '((æ))/((l))/((c))/((_))/((_))/((_))$'}
				_____REMOVING________['æ', 'l', 'c', '_']
				version split: ['æ', 'l', 'c', '_', '_']
				{'string': 'æ/l/c/_/_', 'rgx': '((æ))/((l))/((c))/((_))/((_))/((_))$'}
				_____REMOVING________['æ', 'l', 'c', '_', '_']
				version split: ['æ', 'l', 'c', '_']
				{'string': 'æ/l/c/_', 'rgx': '((æ))/((l))/((c))/((_))/((_))/((_))$'}
				_____REMOVING________['æ', 'l', 'c', '_']
				version split: ['æ', 'l', 'c', '_', '_']
				{'string': 'æ/l/c/_/_', 'rgx': '((æ))/((l))/((c))/((_))/((_))/((_))$'}
				_____REMOVING________['æ', 'l', 'c', '_', '_']
				version split: ['æ', 'l', 'c', '_', '_']
				{'string': 'æ/l/c/_/_', 'rgx': '((æ))/((l))/((c))/((_))/((_))/((_))$'}
				_____REMOVING________['æ', 'l', 'c', '_', '_']
				version split: ['æ', 'l', 'c', '_', '_', '_']
				{'string': 'æ/l/c/_/_/_', 'rgx': '((æ))/((l))/((c))/((_))/((_))/((_))$'}
				ANALYSING: alc
					resolving (4)
					> version: a/l/c
					> version: a/l/c/_
					> version: a/l/c/_
					> version: a/l/c/_/_
					RESULT:  ['_']
				adding dashed alternative: ['a', 'l', 'c', '_']
				adding dashed alternative: ['a', 'l', 'c', '_', '_']
				adding dashed alternative: ['a', 'l', 'c', '_', '_']
				adding dashed alternative: ['a', 'l', 'c', '_', '_', '_']
				a/l/c(VCC)
a/l/c/_(VCCA)
a/l/c/_(VCCA)
a/l/c/_/_(VCCAA)
a/l/c/_(VCCA)
a/l/c/_/_(VCCAA)
a/l/c/_/_(VCCAA)
a/l/c/_/_/_(VCCAAA)
				version split: ['a', 'l', 'c']
				{'string': 'a/l/c', 'rgx': '((a))/((l))/((c))/((_))/((_))/((_))$'}
				_____REMOVING________['a', 'l', 'c']
				version split: ['a', 'l', 'c', '_']
				{'string': 'a/l/c/_', 'rgx': '((a))/((l))/((c))/((_))/((_))/((_))$'}
				_____REMOVING________['a', 'l', 'c', '_']
				version split: ['a', 'l', 'c', '_']
				{'string': 'a/l/c/_', 'rgx': '((a))/((l))/((c))/((_))/((_))/((_))$'}
				_____REMOVING________['a', 'l', 'c', '_']
				version split: ['a', 'l', 'c', '_', '_']
				{'string': 'a/l/c/_/_', 'rgx': '((a))/((l))/((c))/((_))/((_))/((_))$'}
				_____REMOVING________['a', 'l', 'c', '_', '_']
				version split: ['a', 'l', 'c', '_']
				{'string': 'a/l/c/_', 'rgx': '((a))/((l))/((c))/((_))/((_))/((_))$'}
				_____REMOVING________['a', 'l', 'c', '_']
				version split: ['a', 'l', 'c', '_', '_']
				{'string': 'a/l/c/_/_', 'rgx': '((a))/((l))/((c))/((_))/((_))/((_))$'}
				_____REMOVING________['a', 'l', 'c', '_', '_']
				version split: ['a', 'l', 'c', '_', '_']
				{'string': 'a/l/c/_/_', 'rgx': '((a))/((l))/((c))/((_))/((_))/((_))$'}
				_____REMOVING________['a', 'l', 'c', '_', '_']
				version split: ['a', 'l', 'c', '_', '_', '_']
				{'string': 'a/l/c/_/_/_', 'rgx': '((a))/((l))/((c))/((_))/((_))/((_))$'}
				ANALYSING: alch
					resolving (8)
					> version: a/l/c/h
					> version: a/l/ch
					> version: a/l/c/_/h
					> version: a/l/ch/_
					> version: a/l/c/h/_
					> version: a/l/ch/_
					> version: a/l/c/_/_/h
					TRYING: h
					> version: a/l/ch/_/_
					RESULT:  ['_']
				adding dashed alternative: ['a', 'l', 'c', 'h', '_']
				adding dashed alternative: ['a', 'l', 'ch', '_']
				adding dashed alternative: ['a', 'l', 'c', '_', 'h', '_']
				adding dashed alternative: ['a', 'l', 'ch', '_', '_']
				adding dashed alternative: ['a', 'l', 'c', 'h', '_', '_']
				adding dashed alternative: ['a', 'l', 'ch', '_', '_']
				adding dashed alternative: ['a', 'l', 'c', '_', '_', '_', 'h']
				adding dashed alternative: ['a', 'l', 'ch', '_', '_', '_']
				a/l/c/h(VCCC)
a/l/ch(VCC)
a/l/c/_/h(VCCAC)
a/l/ch/_(VCCA)
a/l/c/h/_(VCCCA)
a/l/ch/_(VCCA)
a/l/c/_/_/h(VCCAAC)
a/l/ch/_/_(VCCAA)
a/l/c/h/_(VCCCA)
a/l/ch/_(VCCA)
a/l/c/_/h/_(VCCACA)
a/l/ch/_/_(VCCAA)
a/l/c/h/_/_(VCCCAA)
a/l/ch/_/_(VCCAA)
a/l/c/_/_/_/h(VCCAAAC)
a/l/ch/_/_/_(VCCAAA)
				version split: ['a', 'l', 'c', 'h']
				{'string': 'a/l/c/h', 'rgx': '((a))/((l))/((ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['a', 'l', 'c', 'h']
				version split: ['a', 'l', 'ch']
				{'string': 'a/l/ch', 'rgx': '((a))/((l))/((ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['a', 'l', 'ch']
				version split: ['a', 'l', 'c', '_', 'h']
				{'string': 'a/l/c/_/h', 'rgx': '((a))/((l))/((ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['a', 'l', 'c', '_', 'h']
				version split: ['a', 'l', 'ch', '_']
				{'string': 'a/l/ch/_', 'rgx': '((a))/((l))/((ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['a', 'l', 'ch', '_']
				version split: ['a', 'l', 'c', 'h', '_']
				{'string': 'a/l/c/h/_', 'rgx': '((a))/((l))/((ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['a', 'l', 'c', 'h', '_']
				version split: ['a', 'l', 'ch', '_']
				{'string': 'a/l/ch/_', 'rgx': '((a))/((l))/((ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['a', 'l', 'ch', '_']
				version split: ['a', 'l', 'c', '_', '_', 'h']
				{'string': 'a/l/c/_/_/h', 'rgx': '((a))/((l))/((ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['a', 'l', 'c', '_', '_', 'h']
				version split: ['a', 'l', 'ch', '_', '_']
				{'string': 'a/l/ch/_/_', 'rgx': '((a))/((l))/((ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['a', 'l', 'ch', '_', '_']
				version split: ['a', 'l', 'c', 'h', '_']
				{'string': 'a/l/c/h/_', 'rgx': '((a))/((l))/((ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['a', 'l', 'c', 'h', '_']
				version split: ['a', 'l', 'ch', '_']
				{'string': 'a/l/ch/_', 'rgx': '((a))/((l))/((ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['a', 'l', 'ch', '_']
				version split: ['a', 'l', 'c', '_', 'h', '_']
				{'string': 'a/l/c/_/h/_', 'rgx': '((a))/((l))/((ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['a', 'l', 'c', '_', 'h', '_']
				version split: ['a', 'l', 'ch', '_', '_']
				{'string': 'a/l/ch/_/_', 'rgx': '((a))/((l))/((ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['a', 'l', 'ch', '_', '_']
				version split: ['a', 'l', 'c', 'h', '_', '_']
				{'string': 'a/l/c/h/_/_', 'rgx': '((a))/((l))/((ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['a', 'l', 'c', 'h', '_', '_']
				version split: ['a', 'l', 'ch', '_', '_']
				{'string': 'a/l/ch/_/_', 'rgx': '((a))/((l))/((ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['a', 'l', 'ch', '_', '_']
				version split: ['a', 'l', 'c', '_', '_', '_', 'h']
				{'string': 'a/l/c/_/_/_/h', 'rgx': '((a))/((l))/((ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['a', 'l', 'c', '_', '_', '_', 'h']
				version split: ['a', 'l', 'ch', '_', '_', '_']
				{'string': 'a/l/ch/_/_/_', 'rgx': '((a))/((l))/((ch)|(c))/((_))/((_))/((_))$'}
				ANALYSING: ech
					resolving (16)
					> version: e/c/h
					> version: e/ch
					> version: e/_/c/h
					> version: e/_/ch
					> version: e/c/h/_
					> version: e/ch/_
					> version: e/_/c/_/h
					> version: e/_/ch/_
					> version: e/c/h/_
					> version: e/ch/_
					> version: e/_/c/h/_
					> version: e/_/ch/_
					> version: e/c/h/_/_
					> version: e/ch/_/_
					> version: e/_/c/_/_/h
					TRYING: h
					> version: e/_/ch/_/_
					RESULT:  ['_']
				adding dashed alternative: ['e', 'c', 'h', '_']
				adding dashed alternative: ['e', 'ch', '_']
				adding dashed alternative: ['e', '_', 'c', 'h', '_']
				adding dashed alternative: ['e', '_', 'ch', '_']
				adding dashed alternative: ['e', 'c', 'h', '_', '_']
				adding dashed alternative: ['e', 'ch', '_', '_']
				adding dashed alternative: ['e', '_', 'c', '_', 'h', '_']
				adding dashed alternative: ['e', '_', 'ch', '_', '_']
				adding dashed alternative: ['e', 'c', 'h', '_', '_']
				adding dashed alternative: ['e', 'ch', '_', '_']
				adding dashed alternative: ['e', '_', 'c', 'h', '_', '_']
				adding dashed alternative: ['e', '_', 'ch', '_', '_']
				adding dashed alternative: ['e', 'c', 'h', '_', '_', '_']
				adding dashed alternative: ['e', 'ch', '_', '_', '_']
				adding dashed alternative: ['e', '_', 'c', '_', '_', '_', 'h']
				adding dashed alternative: ['e', '_', 'ch', '_', '_', '_']
				e/c/h(VCC)
e/ch(VC)
e/_/c/h(VACC)
e/_/ch(VAC)
e/c/h/_(VCCA)
e/ch/_(VCA)
e/_/c/_/h(VACAC)
e/_/ch/_(VACA)
e/c/h/_(VCCA)
e/ch/_(VCA)
e/_/c/h/_(VACCA)
e/_/ch/_(VACA)
e/c/h/_/_(VCCAA)
e/ch/_/_(VCAA)
e/_/c/_/_/h(VACAAC)
e/_/ch/_/_(VACAA)
e/c/h/_(VCCA)
e/ch/_(VCA)
e/_/c/h/_(VACCA)
e/_/ch/_(VACA)
e/c/h/_/_(VCCAA)
e/ch/_/_(VCAA)
e/_/c/_/h/_(VACACA)
e/_/ch/_/_(VACAA)
e/c/h/_/_(VCCAA)
e/ch/_/_(VCAA)
e/_/c/h/_/_(VACCAA)
e/_/ch/_/_(VACAA)
e/c/h/_/_/_(VCCAAA)
e/ch/_/_/_(VCAAA)
e/_/c/_/_/_/h(VACAAAC)
e/_/ch/_/_/_(VACAAA)
				version split: ['e', 'c', 'h']
				{'string': 'e/c/h', 'rgx': '((e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', 'c', 'h']
				version split: ['e', 'ch']
				{'string': 'e/ch', 'rgx': '((e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', 'ch']
				version split: ['e', '_', 'c', 'h']
				{'string': 'e/_/c/h', 'rgx': '((e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', '_', 'c', 'h']
				version split: ['e', '_', 'ch']
				{'string': 'e/_/ch', 'rgx': '((e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', '_', 'ch']
				version split: ['e', 'c', 'h', '_']
				{'string': 'e/c/h/_', 'rgx': '((e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', 'c', 'h', '_']
				version split: ['e', 'ch', '_']
				{'string': 'e/ch/_', 'rgx': '((e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', 'ch', '_']
				version split: ['e', '_', 'c', '_', 'h']
				{'string': 'e/_/c/_/h', 'rgx': '((e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', '_', 'c', '_', 'h']
				version split: ['e', '_', 'ch', '_']
				{'string': 'e/_/ch/_', 'rgx': '((e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', '_', 'ch', '_']
				version split: ['e', 'c', 'h', '_']
				{'string': 'e/c/h/_', 'rgx': '((e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', 'c', 'h', '_']
				version split: ['e', 'ch', '_']
				{'string': 'e/ch/_', 'rgx': '((e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', 'ch', '_']
				version split: ['e', '_', 'c', 'h', '_']
				{'string': 'e/_/c/h/_', 'rgx': '((e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', '_', 'c', 'h', '_']
				version split: ['e', '_', 'ch', '_']
				{'string': 'e/_/ch/_', 'rgx': '((e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', '_', 'ch', '_']
				version split: ['e', 'c', 'h', '_', '_']
				{'string': 'e/c/h/_/_', 'rgx': '((e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', 'c', 'h', '_', '_']
				version split: ['e', 'ch', '_', '_']
				{'string': 'e/ch/_/_', 'rgx': '((e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', 'ch', '_', '_']
				version split: ['e', '_', 'c', '_', '_', 'h']
				{'string': 'e/_/c/_/_/h', 'rgx': '((e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', '_', 'c', '_', '_', 'h']
				version split: ['e', '_', 'ch', '_', '_']
				{'string': 'e/_/ch/_/_', 'rgx': '((e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', '_', 'ch', '_', '_']
				version split: ['e', 'c', 'h', '_']
				{'string': 'e/c/h/_', 'rgx': '((e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', 'c', 'h', '_']
				version split: ['e', 'ch', '_']
				{'string': 'e/ch/_', 'rgx': '((e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', 'ch', '_']
				version split: ['e', '_', 'c', 'h', '_']
				{'string': 'e/_/c/h/_', 'rgx': '((e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', '_', 'c', 'h', '_']
				version split: ['e', '_', 'ch', '_']
				{'string': 'e/_/ch/_', 'rgx': '((e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', '_', 'ch', '_']
				version split: ['e', 'c', 'h', '_', '_']
				{'string': 'e/c/h/_/_', 'rgx': '((e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', 'c', 'h', '_', '_']
				version split: ['e', 'ch', '_', '_']
				{'string': 'e/ch/_/_', 'rgx': '((e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', 'ch', '_', '_']
				version split: ['e', '_', 'c', '_', 'h', '_']
				{'string': 'e/_/c/_/h/_', 'rgx': '((e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', '_', 'c', '_', 'h', '_']
				version split: ['e', '_', 'ch', '_', '_']
				{'string': 'e/_/ch/_/_', 'rgx': '((e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', '_', 'ch', '_', '_']
				version split: ['e', 'c', 'h', '_', '_']
				{'string': 'e/c/h/_/_', 'rgx': '((e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', 'c', 'h', '_', '_']
				version split: ['e', 'ch', '_', '_']
				{'string': 'e/ch/_/_', 'rgx': '((e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', 'ch', '_', '_']
				version split: ['e', '_', 'c', 'h', '_', '_']
				{'string': 'e/_/c/h/_/_', 'rgx': '((e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', '_', 'c', 'h', '_', '_']
				version split: ['e', '_', 'ch', '_', '_']
				{'string': 'e/_/ch/_/_', 'rgx': '((e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', '_', 'ch', '_', '_']
				version split: ['e', 'c', 'h', '_', '_', '_']
				{'string': 'e/c/h/_/_/_', 'rgx': '((e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', 'c', 'h', '_', '_', '_']
				version split: ['e', 'ch', '_', '_', '_']
				{'string': 'e/ch/_/_/_', 'rgx': '((e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', 'ch', '_', '_', '_']
				version split: ['e', '_', 'c', '_', '_', '_', 'h']
				{'string': 'e/_/c/_/_/_/h', 'rgx': '((e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', '_', 'c', '_', '_', '_', 'h']
				version split: ['e', '_', 'ch', '_', '_', '_']
				{'string': 'e/_/ch/_/_/_', 'rgx': '((e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				ANALYSING: eche
					resolving (8)
					> version: e/c/h/e
					> version: e/ch/e
					> version: e/_/c/h/e
					> version: e/_/ch/e
					> version: e/c/h/e/_
					> version: e/ch/e/_
					> version: e/_/c/h/_/e
					TRYING: e
					> version: e/_/ch/e/_
					RESULT:  ['e']
				version split: ['e', 'c', 'h', 'e']
				{'string': 'e/c/h/e', 'rgx': '((e))/((_))/((h)|(ch)|(c))/((e))/((_))/((e))$'}
				_____REMOVING________['e', 'c', 'h', 'e']
				version split: ['e', 'ch', 'e']
				{'string': 'e/ch/e', 'rgx': '((e))/((_))/((h)|(ch)|(c))/((e))/((_))/((e))$'}
				_____REMOVING________['e', 'ch', 'e']
				version split: ['e', '_', 'c', 'h', 'e']
				{'string': 'e/_/c/h/e', 'rgx': '((e))/((_))/((h)|(ch)|(c))/((e))/((_))/((e))$'}
				_____REMOVING________['e', '_', 'c', 'h', 'e']
				version split: ['e', '_', 'ch', 'e']
				{'string': 'e/_/ch/e', 'rgx': '((e))/((_))/((h)|(ch)|(c))/((e))/((_))/((e))$'}
				_____REMOVING________['e', '_', 'ch', 'e']
				version split: ['e', 'c', 'h', 'e', '_']
				{'string': 'e/c/h/e/_', 'rgx': '((e))/((_))/((h)|(ch)|(c))/((e))/((_))/((e))$'}
				_____REMOVING________['e', 'c', 'h', 'e', '_']
				version split: ['e', 'ch', 'e', '_']
				{'string': 'e/ch/e/_', 'rgx': '((e))/((_))/((h)|(ch)|(c))/((e))/((_))/((e))$'}
				_____REMOVING________['e', 'ch', 'e', '_']
				version split: ['e', '_', 'c', 'h', '_', 'e']
				{'string': 'e/_/c/h/_/e', 'rgx': '((e))/((_))/((h)|(ch)|(c))/((e))/((_))/((e))$'}
				_____REMOVING________['e', '_', 'c', 'h', '_', 'e']
				version split: ['e', '_', 'ch', 'e', '_']
				{'string': 'e/_/ch/e/_', 'rgx': '((e))/((_))/((h)|(ch)|(c))/((e))/((_))/((e))$'}
				_____REMOVING________['e', '_', 'ch', 'e', '_']
				ANALYSING: echen
					resolving (8)
					> version: e/c/h/e/n
					> version: e/ch/e/n
					> version: e/_/c/h/e/n
					TRYING: n
					> version: e/_/ch/e/n
					> version: e/c/h/e/_/n
					TRYING: n
					> version: e/ch/e/n/_
					> version: e/_/c/h/_/e/n
					TRYING: e
					> version: e/_/ch/e/_/n
					TRYING: n
					RESULT:  ['e']
				version split: ['e', 'c', 'h', 'e', 'n']
				{'string': 'e/c/h/e/n', 'rgx': '((e))/((_))/((h)|(ch)|(c))/((e))/((_))/((e))$'}
				_____REMOVING________['e', 'c', 'h', 'e', 'n']
				version split: ['e', 'ch', 'e', 'n']
				{'string': 'e/ch/e/n', 'rgx': '((e))/((_))/((h)|(ch)|(c))/((e))/((_))/((e))$'}
				_____REMOVING________['e', 'ch', 'e', 'n']
				version split: ['e', '_', 'c', 'h', 'e', 'n']
				{'string': 'e/_/c/h/e/n', 'rgx': '((e))/((_))/((h)|(ch)|(c))/((e))/((_))/((e))$'}
				_____REMOVING________['e', '_', 'c', 'h', 'e', 'n']
				version split: ['e', '_', 'ch', 'e', 'n']
				{'string': 'e/_/ch/e/n', 'rgx': '((e))/((_))/((h)|(ch)|(c))/((e))/((_))/((e))$'}
				_____REMOVING________['e', '_', 'ch', 'e', 'n']
				version split: ['e', 'c', 'h', 'e', '_', 'n']
				{'string': 'e/c/h/e/_/n', 'rgx': '((e))/((_))/((h)|(ch)|(c))/((e))/((_))/((e))$'}
				_____REMOVING________['e', 'c', 'h', 'e', '_', 'n']
				version split: ['e', 'ch', 'e', 'n', '_']
				{'string': 'e/ch/e/n/_', 'rgx': '((e))/((_))/((h)|(ch)|(c))/((e))/((_))/((e))$'}
				_____REMOVING________['e', 'ch', 'e', 'n', '_']
				version split: ['e', '_', 'c', 'h', '_', 'e', 'n']
				{'string': 'e/_/c/h/_/e/n', 'rgx': '((e))/((_))/((h)|(ch)|(c))/((e))/((_))/((e))$'}
				_____REMOVING________['e', '_', 'c', 'h', '_', 'e', 'n']
				version split: ['e', '_', 'ch', 'e', '_', 'n']
				{'string': 'e/_/ch/e/_/n', 'rgx': '((e))/((_))/((h)|(ch)|(c))/((e))/((_))/((e))$'}
				_____REMOVING________['e', '_', 'ch', 'e', '_', 'n']
				ANALYSING: elc
					resolving (4)
					> version: e/l/c
					> version: e/l/c/_
					> version: e/l/c/_
					> version: e/l/c/_/_
					RESULT:  ['_']
				adding dashed alternative: ['e', 'l', 'c', '_']
				adding dashed alternative: ['e', 'l', 'c', '_', '_']
				adding dashed alternative: ['e', 'l', 'c', '_', '_']
				adding dashed alternative: ['e', 'l', 'c', '_', '_', '_']
				e/l/c(VCC)
e/l/c/_(VCCA)
e/l/c/_(VCCA)
e/l/c/_/_(VCCAA)
e/l/c/_(VCCA)
e/l/c/_/_(VCCAA)
e/l/c/_/_(VCCAA)
e/l/c/_/_/_(VCCAAA)
				version split: ['e', 'l', 'c']
				{'string': 'e/l/c', 'rgx': '((e))/((l))/((c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', 'l', 'c']
				version split: ['e', 'l', 'c', '_']
				{'string': 'e/l/c/_', 'rgx': '((e))/((l))/((c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', 'l', 'c', '_']
				version split: ['e', 'l', 'c', '_']
				{'string': 'e/l/c/_', 'rgx': '((e))/((l))/((c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', 'l', 'c', '_']
				version split: ['e', 'l', 'c', '_', '_']
				{'string': 'e/l/c/_/_', 'rgx': '((e))/((l))/((c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', 'l', 'c', '_', '_']
				version split: ['e', 'l', 'c', '_']
				{'string': 'e/l/c/_', 'rgx': '((e))/((l))/((c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', 'l', 'c', '_']
				version split: ['e', 'l', 'c', '_', '_']
				{'string': 'e/l/c/_/_', 'rgx': '((e))/((l))/((c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', 'l', 'c', '_', '_']
				version split: ['e', 'l', 'c', '_', '_']
				{'string': 'e/l/c/_/_', 'rgx': '((e))/((l))/((c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', 'l', 'c', '_', '_']
				version split: ['e', 'l', 'c', '_', '_', '_']
				{'string': 'e/l/c/_/_/_', 'rgx': '((e))/((l))/((c))/((_))/((_))/((_))$'}
				ANALYSING: elch
					resolving (8)
					> version: e/l/c/h
					> version: e/l/ch
					> version: e/l/c/_/h
					> version: e/l/ch/_
					> version: e/l/c/h/_
					> version: e/l/ch/_
					> version: e/l/c/_/_/h
					TRYING: h
					> version: e/l/ch/_/_
					RESULT:  ['_']
				adding dashed alternative: ['e', 'l', 'c', 'h', '_']
				adding dashed alternative: ['e', 'l', 'ch', '_']
				adding dashed alternative: ['e', 'l', 'c', '_', 'h', '_']
				adding dashed alternative: ['e', 'l', 'ch', '_', '_']
				adding dashed alternative: ['e', 'l', 'c', 'h', '_', '_']
				adding dashed alternative: ['e', 'l', 'ch', '_', '_']
				adding dashed alternative: ['e', 'l', 'c', '_', '_', '_', 'h']
				adding dashed alternative: ['e', 'l', 'ch', '_', '_', '_']
				e/l/c/h(VCCC)
e/l/ch(VCC)
e/l/c/_/h(VCCAC)
e/l/ch/_(VCCA)
e/l/c/h/_(VCCCA)
e/l/ch/_(VCCA)
e/l/c/_/_/h(VCCAAC)
e/l/ch/_/_(VCCAA)
e/l/c/h/_(VCCCA)
e/l/ch/_(VCCA)
e/l/c/_/h/_(VCCACA)
e/l/ch/_/_(VCCAA)
e/l/c/h/_/_(VCCCAA)
e/l/ch/_/_(VCCAA)
e/l/c/_/_/_/h(VCCAAAC)
e/l/ch/_/_/_(VCCAAA)
				version split: ['e', 'l', 'c', 'h']
				{'string': 'e/l/c/h', 'rgx': '((e))/((l))/((ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', 'l', 'c', 'h']
				version split: ['e', 'l', 'ch']
				{'string': 'e/l/ch', 'rgx': '((e))/((l))/((ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', 'l', 'ch']
				version split: ['e', 'l', 'c', '_', 'h']
				{'string': 'e/l/c/_/h', 'rgx': '((e))/((l))/((ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', 'l', 'c', '_', 'h']
				version split: ['e', 'l', 'ch', '_']
				{'string': 'e/l/ch/_', 'rgx': '((e))/((l))/((ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', 'l', 'ch', '_']
				version split: ['e', 'l', 'c', 'h', '_']
				{'string': 'e/l/c/h/_', 'rgx': '((e))/((l))/((ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', 'l', 'c', 'h', '_']
				version split: ['e', 'l', 'ch', '_']
				{'string': 'e/l/ch/_', 'rgx': '((e))/((l))/((ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', 'l', 'ch', '_']
				version split: ['e', 'l', 'c', '_', '_', 'h']
				{'string': 'e/l/c/_/_/h', 'rgx': '((e))/((l))/((ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', 'l', 'c', '_', '_', 'h']
				version split: ['e', 'l', 'ch', '_', '_']
				{'string': 'e/l/ch/_/_', 'rgx': '((e))/((l))/((ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', 'l', 'ch', '_', '_']
				version split: ['e', 'l', 'c', 'h', '_']
				{'string': 'e/l/c/h/_', 'rgx': '((e))/((l))/((ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', 'l', 'c', 'h', '_']
				version split: ['e', 'l', 'ch', '_']
				{'string': 'e/l/ch/_', 'rgx': '((e))/((l))/((ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', 'l', 'ch', '_']
				version split: ['e', 'l', 'c', '_', 'h', '_']
				{'string': 'e/l/c/_/h/_', 'rgx': '((e))/((l))/((ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', 'l', 'c', '_', 'h', '_']
				version split: ['e', 'l', 'ch', '_', '_']
				{'string': 'e/l/ch/_/_', 'rgx': '((e))/((l))/((ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', 'l', 'ch', '_', '_']
				version split: ['e', 'l', 'c', 'h', '_', '_']
				{'string': 'e/l/c/h/_/_', 'rgx': '((e))/((l))/((ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', 'l', 'c', 'h', '_', '_']
				version split: ['e', 'l', 'ch', '_', '_']
				{'string': 'e/l/ch/_/_', 'rgx': '((e))/((l))/((ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', 'l', 'ch', '_', '_']
				version split: ['e', 'l', 'c', '_', '_', '_', 'h']
				{'string': 'e/l/c/_/_/_/h', 'rgx': '((e))/((l))/((ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', 'l', 'c', '_', '_', '_', 'h']
				version split: ['e', 'l', 'ch', '_', '_', '_']
				{'string': 'e/l/ch/_/_/_', 'rgx': '((e))/((l))/((ch)|(c))/((_))/((_))/((_))$'}
				ANALYSING: elche
					resolving (4)
					> version: e/l/c/h/e
					> version: e/l/ch/e
					> version: e/l/c/h/_/e
					TRYING: e
					> version: e/l/ch/e/_
					RESULT:  ['e']
				version split: ['e', 'l', 'c', 'h', 'e']
				{'string': 'e/l/c/h/e', 'rgx': '((e))/((l))/((ch)|(c))/((e))/((_))/((e))$'}
				_____REMOVING________['e', 'l', 'c', 'h', 'e']
				version split: ['e', 'l', 'ch', 'e']
				{'string': 'e/l/ch/e', 'rgx': '((e))/((l))/((ch)|(c))/((e))/((_))/((e))$'}
				_____REMOVING________['e', 'l', 'ch', 'e']
				version split: ['e', 'l', 'c', 'h', '_', 'e']
				{'string': 'e/l/c/h/_/e', 'rgx': '((e))/((l))/((ch)|(c))/((e))/((_))/((e))$'}
				_____REMOVING________['e', 'l', 'c', 'h', '_', 'e']
				version split: ['e', 'l', 'ch', 'e', '_']
				{'string': 'e/l/ch/e/_', 'rgx': '((e))/((l))/((ch)|(c))/((e))/((_))/((e))$'}
				_____REMOVING________['e', 'l', 'ch', 'e', '_']
				ANALYSING: euch
					resolving (48)
					> version: e/u/c/h
					> version: e/u/c/h
					> version: e/u/ch
					> version: e/u/ch
					> version: eu/c/h
					> version: eu/ch
					> version: e/_/u/c/h
					> version: e/_/u/c/h
					> version: e/_/u/ch
					> version: e/_/u/ch
					> version: eu/_/c/h
					> version: eu/_/ch
					> version: e/u/c/_/h
					> version: e/u/c/_/h
					> version: e/u/ch/_
					> version: e/u/ch/_
					> version: eu/c/h/_
					> version: eu/ch/_
					> version: e/_/u/_/c/h
					TRYING: h
					> version: e/_/u/_/c/h
					TRYING: h
					> version: e/_/u/_/ch
					> version: e/_/u/_/ch
					> version: eu/_/c/_/h
					> version: eu/_/ch/_
					> version: e/u/c/h/_
					> version: e/u/c/h/_
					> version: e/u/ch/_
					> version: e/u/ch/_
					> version: eu/c/h/_
					> version: eu/ch/_
					> version: e/_/u/c/_/h
					TRYING: h
					> version: e/_/u/c/_/h
					TRYING: h
					> version: e/_/u/ch/_
					> version: e/_/u/ch/_
					> version: eu/_/c/h/_
					> version: eu/_/ch/_
					> version: e/u/c/_/_/h
					TRYING: h
					> version: e/u/c/_/_/h
					TRYING: h
					> version: e/u/ch/_/_
					> version: e/u/ch/_/_
					> version: eu/c/h/_/_
					> version: eu/ch/_/_
					> version: e/_/u/_/_/c/h
					TRYING: c
					> version: e/_/u/_/_/c/h
					TRYING: c
					> version: e/_/u/_/_/ch
					TRYING: ch
					> version: e/_/u/_/_/ch
					TRYING: ch
					> version: eu/_/c/_/_/h
					TRYING: h
					> version: eu/_/ch/_/_
					RESULT:  ['_']
				adding dashed alternative: ['e', 'u', 'c', 'h', '_']
				adding dashed alternative: ['e', 'u', 'c', 'h', '_']
				adding dashed alternative: ['e', 'u', 'ch', '_']
				adding dashed alternative: ['e', 'u', 'ch', '_']
				adding dashed alternative: ['eu', 'c', 'h', '_']
				adding dashed alternative: ['eu', 'ch', '_']
				adding dashed alternative: ['e', '_', 'u', 'c', 'h', '_']
				adding dashed alternative: ['e', '_', 'u', 'c', 'h', '_']
				adding dashed alternative: ['e', '_', 'u', 'ch', '_']
				adding dashed alternative: ['e', '_', 'u', 'ch', '_']
				adding dashed alternative: ['eu', '_', 'c', 'h', '_']
				adding dashed alternative: ['eu', '_', 'ch', '_']
				adding dashed alternative: ['e', 'u', 'c', '_', 'h', '_']
				adding dashed alternative: ['e', 'u', 'c', '_', 'h', '_']
				adding dashed alternative: ['e', 'u', 'ch', '_', '_']
				adding dashed alternative: ['e', 'u', 'ch', '_', '_']
				adding dashed alternative: ['eu', 'c', 'h', '_', '_']
				adding dashed alternative: ['eu', 'ch', '_', '_']
				adding dashed alternative: ['e', '_', 'u', '_', 'c', '_', 'h']
				adding dashed alternative: ['e', '_', 'u', '_', 'c', '_', 'h']
				adding dashed alternative: ['e', '_', 'u', '_', 'ch', '_']
				adding dashed alternative: ['e', '_', 'u', '_', 'ch', '_']
				adding dashed alternative: ['eu', '_', 'c', '_', 'h', '_']
				adding dashed alternative: ['eu', '_', 'ch', '_', '_']
				adding dashed alternative: ['e', 'u', 'c', 'h', '_', '_']
				adding dashed alternative: ['e', 'u', 'c', 'h', '_', '_']
				adding dashed alternative: ['e', 'u', 'ch', '_', '_']
				adding dashed alternative: ['e', 'u', 'ch', '_', '_']
				adding dashed alternative: ['eu', 'c', 'h', '_', '_']
				adding dashed alternative: ['eu', 'ch', '_', '_']
				adding dashed alternative: ['e', '_', 'u', 'c', '_', '_', 'h']
				adding dashed alternative: ['e', '_', 'u', 'c', '_', '_', 'h']
				adding dashed alternative: ['e', '_', 'u', 'ch', '_', '_']
				adding dashed alternative: ['e', '_', 'u', 'ch', '_', '_']
				adding dashed alternative: ['eu', '_', 'c', 'h', '_', '_']
				adding dashed alternative: ['eu', '_', 'ch', '_', '_']
				adding dashed alternative: ['e', 'u', 'c', '_', '_', '_', 'h']
				adding dashed alternative: ['e', 'u', 'c', '_', '_', '_', 'h']
				adding dashed alternative: ['e', 'u', 'ch', '_', '_', '_']
				adding dashed alternative: ['e', 'u', 'ch', '_', '_', '_']
				adding dashed alternative: ['eu', 'c', 'h', '_', '_', '_']
				adding dashed alternative: ['eu', 'ch', '_', '_', '_']
				adding dashed alternative: ['e', '_', 'u', '_', '_', '_', 'c', 'h']
				adding dashed alternative: ['e', '_', 'u', '_', '_', '_', 'c', 'h']
				adding dashed alternative: ['e', '_', 'u', '_', '_', '_', 'ch']
				adding dashed alternative: ['e', '_', 'u', '_', '_', '_', 'ch']
				adding dashed alternative: ['eu', '_', 'c', '_', '_', '_', 'h']
				adding dashed alternative: ['eu', '_', 'ch', '_', '_', '_']
				e/u/c/h(VCCC)
e/u/c/h(VVCC)
e/u/ch(VCC)
e/u/ch(VVC)
eu/c/h(VCC)
eu/ch(VC)
e/_/u/c/h(VAACC)
e/_/u/c/h(VAACC)
e/_/u/ch(VAAC)
e/_/u/ch(VAAC)
eu/_/c/h(VACC)
eu/_/ch(VAC)
e/u/c/_/h(VACAC)
e/u/c/_/h(VACAC)
e/u/ch/_(VACA)
e/u/ch/_(VACA)
eu/c/h/_(VCCA)
eu/ch/_(VCA)
e/_/u/_/c/h(VAAACC)
e/_/u/_/c/h(VAAACC)
e/_/u/_/ch(VAAAC)
e/_/u/_/ch(VAAAC)
eu/_/c/_/h(VACAC)
eu/_/ch/_(VACA)
e/u/c/h/_(VACCA)
e/u/c/h/_(VACCA)
e/u/ch/_(VACA)
e/u/ch/_(VACA)
eu/c/h/_(VCCA)
eu/ch/_(VCA)
e/_/u/c/_/h(VAACAC)
e/_/u/c/_/h(VAACAC)
e/_/u/ch/_(VAACA)
e/_/u/ch/_(VAACA)
eu/_/c/h/_(VACCA)
eu/_/ch/_(VACA)
e/u/c/_/_/h(VACAAC)
e/u/c/_/_/h(VACAAC)
e/u/ch/_/_(VACAA)
e/u/ch/_/_(VACAA)
eu/c/h/_/_(VCCAA)
eu/ch/_/_(VCAA)
e/_/u/_/_/c/h(VAAAACC)
e/_/u/_/_/c/h(VAAAACC)
e/_/u/_/_/ch(VAAAAC)
e/_/u/_/_/ch(VAAAAC)
eu/_/c/_/_/h(VACAAC)
eu/_/ch/_/_(VACAA)
e/u/c/h/_(VACCA)
e/u/c/h/_(VACCA)
e/u/ch/_(VACA)
e/u/ch/_(VACA)
eu/c/h/_(VCCA)
eu/ch/_(VCA)
e/_/u/c/h/_(VAACCA)
e/_/u/c/h/_(VAACCA)
e/_/u/ch/_(VAACA)
e/_/u/ch/_(VAACA)
eu/_/c/h/_(VACCA)
eu/_/ch/_(VACA)
e/u/c/_/h/_(VACACA)
e/u/c/_/h/_(VACACA)
e/u/ch/_/_(VACAA)
e/u/ch/_/_(VACAA)
eu/c/h/_/_(VCCAA)
eu/ch/_/_(VCAA)
e/_/u/_/c/_/h(VAAACAC)
e/_/u/_/c/_/h(VAAACAC)
e/_/u/_/ch/_(VAAACA)
e/_/u/_/ch/_(VAAACA)
eu/_/c/_/h/_(VACACA)
eu/_/ch/_/_(VACAA)
e/u/c/h/_/_(VACCAA)
e/u/c/h/_/_(VACCAA)
e/u/ch/_/_(VACAA)
e/u/ch/_/_(VACAA)
eu/c/h/_/_(VCCAA)
eu/ch/_/_(VCAA)
e/_/u/c/_/_/h(VAACAAC)
e/_/u/c/_/_/h(VAACAAC)
e/_/u/ch/_/_(VAACAA)
e/_/u/ch/_/_(VAACAA)
eu/_/c/h/_/_(VACCAA)
eu/_/ch/_/_(VACAA)
e/u/c/_/_/_/h(VACAAAC)
e/u/c/_/_/_/h(VACAAAC)
e/u/ch/_/_/_(VACAAA)
e/u/ch/_/_/_(VACAAA)
eu/c/h/_/_/_(VCCAAA)
eu/ch/_/_/_(VCAAA)
e/_/u/_/_/_/c/h(VAAAAACC)
e/_/u/_/_/_/c/h(VAAAAACC)
e/_/u/_/_/_/ch(VAAAAAC)
e/_/u/_/_/_/ch(VAAAAAC)
eu/_/c/_/_/_/h(VACAAAC)
eu/_/ch/_/_/_(VACAAA)
				version split: ['e', 'u', 'c', 'h']
				{'string': 'e/u/c/h', 'rgx': '((eu)|(e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', 'u', 'c', 'h']
				version split: ['e', 'u', 'c', 'h']
				{'string': 'e/u/c/h', 'rgx': '((eu)|(e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', 'u', 'c', 'h']
				version split: ['e', 'u', 'ch']
				{'string': 'e/u/ch', 'rgx': '((eu)|(e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', 'u', 'ch']
				version split: ['e', 'u', 'ch']
				{'string': 'e/u/ch', 'rgx': '((eu)|(e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', 'u', 'ch']
				version split: ['eu', 'c', 'h']
				{'string': 'eu/c/h', 'rgx': '((eu)|(e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['eu', 'c', 'h']
				version split: ['eu', 'ch']
				{'string': 'eu/ch', 'rgx': '((eu)|(e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['eu', 'ch']
				version split: ['e', '_', 'u', 'c', 'h']
				{'string': 'e/_/u/c/h', 'rgx': '((eu)|(e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', '_', 'u', 'c', 'h']
				version split: ['e', '_', 'u', 'c', 'h']
				{'string': 'e/_/u/c/h', 'rgx': '((eu)|(e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', '_', 'u', 'c', 'h']
				version split: ['e', '_', 'u', 'ch']
				{'string': 'e/_/u/ch', 'rgx': '((eu)|(e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', '_', 'u', 'ch']
				version split: ['e', '_', 'u', 'ch']
				{'string': 'e/_/u/ch', 'rgx': '((eu)|(e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', '_', 'u', 'ch']
				version split: ['eu', '_', 'c', 'h']
				{'string': 'eu/_/c/h', 'rgx': '((eu)|(e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['eu', '_', 'c', 'h']
				version split: ['eu', '_', 'ch']
				{'string': 'eu/_/ch', 'rgx': '((eu)|(e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['eu', '_', 'ch']
				version split: ['e', 'u', 'c', '_', 'h']
				{'string': 'e/u/c/_/h', 'rgx': '((eu)|(e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', 'u', 'c', '_', 'h']
				version split: ['e', 'u', 'c', '_', 'h']
				{'string': 'e/u/c/_/h', 'rgx': '((eu)|(e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', 'u', 'c', '_', 'h']
				version split: ['e', 'u', 'ch', '_']
				{'string': 'e/u/ch/_', 'rgx': '((eu)|(e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', 'u', 'ch', '_']
				version split: ['e', 'u', 'ch', '_']
				{'string': 'e/u/ch/_', 'rgx': '((eu)|(e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', 'u', 'ch', '_']
				version split: ['eu', 'c', 'h', '_']
				{'string': 'eu/c/h/_', 'rgx': '((eu)|(e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['eu', 'c', 'h', '_']
				version split: ['eu', 'ch', '_']
				{'string': 'eu/ch/_', 'rgx': '((eu)|(e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['eu', 'ch', '_']
				version split: ['e', '_', 'u', '_', 'c', 'h']
				{'string': 'e/_/u/_/c/h', 'rgx': '((eu)|(e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', '_', 'u', '_', 'c', 'h']
				version split: ['e', '_', 'u', '_', 'c', 'h']
				{'string': 'e/_/u/_/c/h', 'rgx': '((eu)|(e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', '_', 'u', '_', 'c', 'h']
				version split: ['e', '_', 'u', '_', 'ch']
				{'string': 'e/_/u/_/ch', 'rgx': '((eu)|(e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', '_', 'u', '_', 'ch']
				version split: ['e', '_', 'u', '_', 'ch']
				{'string': 'e/_/u/_/ch', 'rgx': '((eu)|(e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', '_', 'u', '_', 'ch']
				version split: ['eu', '_', 'c', '_', 'h']
				{'string': 'eu/_/c/_/h', 'rgx': '((eu)|(e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['eu', '_', 'c', '_', 'h']
				version split: ['eu', '_', 'ch', '_']
				{'string': 'eu/_/ch/_', 'rgx': '((eu)|(e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['eu', '_', 'ch', '_']
				version split: ['e', 'u', 'c', 'h', '_']
				{'string': 'e/u/c/h/_', 'rgx': '((eu)|(e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', 'u', 'c', 'h', '_']
				version split: ['e', 'u', 'c', 'h', '_']
				{'string': 'e/u/c/h/_', 'rgx': '((eu)|(e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', 'u', 'c', 'h', '_']
				version split: ['e', 'u', 'ch', '_']
				{'string': 'e/u/ch/_', 'rgx': '((eu)|(e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', 'u', 'ch', '_']
				version split: ['e', 'u', 'ch', '_']
				{'string': 'e/u/ch/_', 'rgx': '((eu)|(e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', 'u', 'ch', '_']
				version split: ['eu', 'c', 'h', '_']
				{'string': 'eu/c/h/_', 'rgx': '((eu)|(e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['eu', 'c', 'h', '_']
				version split: ['eu', 'ch', '_']
				{'string': 'eu/ch/_', 'rgx': '((eu)|(e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['eu', 'ch', '_']
				version split: ['e', '_', 'u', 'c', '_', 'h']
				{'string': 'e/_/u/c/_/h', 'rgx': '((eu)|(e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', '_', 'u', 'c', '_', 'h']
				version split: ['e', '_', 'u', 'c', '_', 'h']
				{'string': 'e/_/u/c/_/h', 'rgx': '((eu)|(e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', '_', 'u', 'c', '_', 'h']
				version split: ['e', '_', 'u', 'ch', '_']
				{'string': 'e/_/u/ch/_', 'rgx': '((eu)|(e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', '_', 'u', 'ch', '_']
				version split: ['e', '_', 'u', 'ch', '_']
				{'string': 'e/_/u/ch/_', 'rgx': '((eu)|(e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', '_', 'u', 'ch', '_']
				version split: ['eu', '_', 'c', 'h', '_']
				{'string': 'eu/_/c/h/_', 'rgx': '((eu)|(e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['eu', '_', 'c', 'h', '_']
				version split: ['eu', '_', 'ch', '_']
				{'string': 'eu/_/ch/_', 'rgx': '((eu)|(e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['eu', '_', 'ch', '_']
				version split: ['e', 'u', 'c', '_', '_', 'h']
				{'string': 'e/u/c/_/_/h', 'rgx': '((eu)|(e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', 'u', 'c', '_', '_', 'h']
				version split: ['e', 'u', 'c', '_', '_', 'h']
				{'string': 'e/u/c/_/_/h', 'rgx': '((eu)|(e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', 'u', 'c', '_', '_', 'h']
				version split: ['e', 'u', 'ch', '_', '_']
				{'string': 'e/u/ch/_/_', 'rgx': '((eu)|(e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', 'u', 'ch', '_', '_']
				version split: ['e', 'u', 'ch', '_', '_']
				{'string': 'e/u/ch/_/_', 'rgx': '((eu)|(e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', 'u', 'ch', '_', '_']
				version split: ['eu', 'c', 'h', '_', '_']
				{'string': 'eu/c/h/_/_', 'rgx': '((eu)|(e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['eu', 'c', 'h', '_', '_']
				version split: ['eu', 'ch', '_', '_']
				{'string': 'eu/ch/_/_', 'rgx': '((eu)|(e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['eu', 'ch', '_', '_']
				version split: ['e', '_', 'u', '_', '_', 'c', 'h']
				{'string': 'e/_/u/_/_/c/h', 'rgx': '((eu)|(e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', '_', 'u', '_', '_', 'c', 'h']
				version split: ['e', '_', 'u', '_', '_', 'c', 'h']
				{'string': 'e/_/u/_/_/c/h', 'rgx': '((eu)|(e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', '_', 'u', '_', '_', 'c', 'h']
				version split: ['e', '_', 'u', '_', '_', 'ch']
				{'string': 'e/_/u/_/_/ch', 'rgx': '((eu)|(e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', '_', 'u', '_', '_', 'ch']
				version split: ['e', '_', 'u', '_', '_', 'ch']
				{'string': 'e/_/u/_/_/ch', 'rgx': '((eu)|(e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', '_', 'u', '_', '_', 'ch']
				version split: ['eu', '_', 'c', '_', '_', 'h']
				{'string': 'eu/_/c/_/_/h', 'rgx': '((eu)|(e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['eu', '_', 'c', '_', '_', 'h']
				version split: ['eu', '_', 'ch', '_', '_']
				{'string': 'eu/_/ch/_/_', 'rgx': '((eu)|(e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['eu', '_', 'ch', '_', '_']
				version split: ['e', 'u', 'c', 'h', '_']
				{'string': 'e/u/c/h/_', 'rgx': '((eu)|(e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', 'u', 'c', 'h', '_']
				version split: ['e', 'u', 'c', 'h', '_']
				{'string': 'e/u/c/h/_', 'rgx': '((eu)|(e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', 'u', 'c', 'h', '_']
				version split: ['e', 'u', 'ch', '_']
				{'string': 'e/u/ch/_', 'rgx': '((eu)|(e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', 'u', 'ch', '_']
				version split: ['e', 'u', 'ch', '_']
				{'string': 'e/u/ch/_', 'rgx': '((eu)|(e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', 'u', 'ch', '_']
				version split: ['eu', 'c', 'h', '_']
				{'string': 'eu/c/h/_', 'rgx': '((eu)|(e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['eu', 'c', 'h', '_']
				version split: ['eu', 'ch', '_']
				{'string': 'eu/ch/_', 'rgx': '((eu)|(e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['eu', 'ch', '_']
				version split: ['e', '_', 'u', 'c', 'h', '_']
				{'string': 'e/_/u/c/h/_', 'rgx': '((eu)|(e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', '_', 'u', 'c', 'h', '_']
				version split: ['e', '_', 'u', 'c', 'h', '_']
				{'string': 'e/_/u/c/h/_', 'rgx': '((eu)|(e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', '_', 'u', 'c', 'h', '_']
				version split: ['e', '_', 'u', 'ch', '_']
				{'string': 'e/_/u/ch/_', 'rgx': '((eu)|(e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', '_', 'u', 'ch', '_']
				version split: ['e', '_', 'u', 'ch', '_']
				{'string': 'e/_/u/ch/_', 'rgx': '((eu)|(e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', '_', 'u', 'ch', '_']
				version split: ['eu', '_', 'c', 'h', '_']
				{'string': 'eu/_/c/h/_', 'rgx': '((eu)|(e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['eu', '_', 'c', 'h', '_']
				version split: ['eu', '_', 'ch', '_']
				{'string': 'eu/_/ch/_', 'rgx': '((eu)|(e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['eu', '_', 'ch', '_']
				version split: ['e', 'u', 'c', '_', 'h', '_']
				{'string': 'e/u/c/_/h/_', 'rgx': '((eu)|(e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', 'u', 'c', '_', 'h', '_']
				version split: ['e', 'u', 'c', '_', 'h', '_']
				{'string': 'e/u/c/_/h/_', 'rgx': '((eu)|(e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', 'u', 'c', '_', 'h', '_']
				version split: ['e', 'u', 'ch', '_', '_']
				{'string': 'e/u/ch/_/_', 'rgx': '((eu)|(e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', 'u', 'ch', '_', '_']
				version split: ['e', 'u', 'ch', '_', '_']
				{'string': 'e/u/ch/_/_', 'rgx': '((eu)|(e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', 'u', 'ch', '_', '_']
				version split: ['eu', 'c', 'h', '_', '_']
				{'string': 'eu/c/h/_/_', 'rgx': '((eu)|(e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['eu', 'c', 'h', '_', '_']
				version split: ['eu', 'ch', '_', '_']
				{'string': 'eu/ch/_/_', 'rgx': '((eu)|(e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['eu', 'ch', '_', '_']
				version split: ['e', '_', 'u', '_', 'c', '_', 'h']
				{'string': 'e/_/u/_/c/_/h', 'rgx': '((eu)|(e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', '_', 'u', '_', 'c', '_', 'h']
				version split: ['e', '_', 'u', '_', 'c', '_', 'h']
				{'string': 'e/_/u/_/c/_/h', 'rgx': '((eu)|(e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', '_', 'u', '_', 'c', '_', 'h']
				version split: ['e', '_', 'u', '_', 'ch', '_']
				{'string': 'e/_/u/_/ch/_', 'rgx': '((eu)|(e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', '_', 'u', '_', 'ch', '_']
				version split: ['e', '_', 'u', '_', 'ch', '_']
				{'string': 'e/_/u/_/ch/_', 'rgx': '((eu)|(e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', '_', 'u', '_', 'ch', '_']
				version split: ['eu', '_', 'c', '_', 'h', '_']
				{'string': 'eu/_/c/_/h/_', 'rgx': '((eu)|(e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['eu', '_', 'c', '_', 'h', '_']
				version split: ['eu', '_', 'ch', '_', '_']
				{'string': 'eu/_/ch/_/_', 'rgx': '((eu)|(e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['eu', '_', 'ch', '_', '_']
				version split: ['e', 'u', 'c', 'h', '_', '_']
				{'string': 'e/u/c/h/_/_', 'rgx': '((eu)|(e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', 'u', 'c', 'h', '_', '_']
				version split: ['e', 'u', 'c', 'h', '_', '_']
				{'string': 'e/u/c/h/_/_', 'rgx': '((eu)|(e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', 'u', 'c', 'h', '_', '_']
				version split: ['e', 'u', 'ch', '_', '_']
				{'string': 'e/u/ch/_/_', 'rgx': '((eu)|(e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', 'u', 'ch', '_', '_']
				version split: ['e', 'u', 'ch', '_', '_']
				{'string': 'e/u/ch/_/_', 'rgx': '((eu)|(e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', 'u', 'ch', '_', '_']
				version split: ['eu', 'c', 'h', '_', '_']
				{'string': 'eu/c/h/_/_', 'rgx': '((eu)|(e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['eu', 'c', 'h', '_', '_']
				version split: ['eu', 'ch', '_', '_']
				{'string': 'eu/ch/_/_', 'rgx': '((eu)|(e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['eu', 'ch', '_', '_']
				version split: ['e', '_', 'u', 'c', '_', '_', 'h']
				{'string': 'e/_/u/c/_/_/h', 'rgx': '((eu)|(e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', '_', 'u', 'c', '_', '_', 'h']
				version split: ['e', '_', 'u', 'c', '_', '_', 'h']
				{'string': 'e/_/u/c/_/_/h', 'rgx': '((eu)|(e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', '_', 'u', 'c', '_', '_', 'h']
				version split: ['e', '_', 'u', 'ch', '_', '_']
				{'string': 'e/_/u/ch/_/_', 'rgx': '((eu)|(e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', '_', 'u', 'ch', '_', '_']
				version split: ['e', '_', 'u', 'ch', '_', '_']
				{'string': 'e/_/u/ch/_/_', 'rgx': '((eu)|(e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', '_', 'u', 'ch', '_', '_']
				version split: ['eu', '_', 'c', 'h', '_', '_']
				{'string': 'eu/_/c/h/_/_', 'rgx': '((eu)|(e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['eu', '_', 'c', 'h', '_', '_']
				version split: ['eu', '_', 'ch', '_', '_']
				{'string': 'eu/_/ch/_/_', 'rgx': '((eu)|(e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['eu', '_', 'ch', '_', '_']
				version split: ['e', 'u', 'c', '_', '_', '_', 'h']
				{'string': 'e/u/c/_/_/_/h', 'rgx': '((eu)|(e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', 'u', 'c', '_', '_', '_', 'h']
				version split: ['e', 'u', 'c', '_', '_', '_', 'h']
				{'string': 'e/u/c/_/_/_/h', 'rgx': '((eu)|(e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', 'u', 'c', '_', '_', '_', 'h']
				version split: ['e', 'u', 'ch', '_', '_', '_']
				{'string': 'e/u/ch/_/_/_', 'rgx': '((eu)|(e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', 'u', 'ch', '_', '_', '_']
				version split: ['e', 'u', 'ch', '_', '_', '_']
				{'string': 'e/u/ch/_/_/_', 'rgx': '((eu)|(e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', 'u', 'ch', '_', '_', '_']
				version split: ['eu', 'c', 'h', '_', '_', '_']
				{'string': 'eu/c/h/_/_/_', 'rgx': '((eu)|(e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['eu', 'c', 'h', '_', '_', '_']
				version split: ['eu', 'ch', '_', '_', '_']
				{'string': 'eu/ch/_/_/_', 'rgx': '((eu)|(e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['eu', 'ch', '_', '_', '_']
				version split: ['e', '_', 'u', '_', '_', '_', 'c', 'h']
				{'string': 'e/_/u/_/_/_/c', 'rgx': '((eu)|(e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', '_', 'u', '_', '_', '_', 'c', 'h']
				version split: ['e', '_', 'u', '_', '_', '_', 'c', 'h']
				{'string': 'e/_/u/_/_/_/c', 'rgx': '((eu)|(e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', '_', 'u', '_', '_', '_', 'c', 'h']
				version split: ['e', '_', 'u', '_', '_', '_', 'ch']
				{'string': 'e/_/u/_/_/_/ch', 'rgx': '((eu)|(e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', '_', 'u', '_', '_', '_', 'ch']
				version split: ['e', '_', 'u', '_', '_', '_', 'ch']
				{'string': 'e/_/u/_/_/_/ch', 'rgx': '((eu)|(e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['e', '_', 'u', '_', '_', '_', 'ch']
				version split: ['eu', '_', 'c', '_', '_', '_', 'h']
				{'string': 'eu/_/c/_/_/_/h', 'rgx': '((eu)|(e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['eu', '_', 'c', '_', '_', '_', 'h']
				version split: ['eu', '_', 'ch', '_', '_', '_']
				{'string': 'eu/_/ch/_/_/_', 'rgx': '((eu)|(e))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				ANALYSING: ich
					resolving (32)
					> version: i/c/h
					> version: i/c/h
					> version: i/ch
					> version: i/ch
					> version: i/_/c/h
					> version: i/_/c/h
					> version: i/_/ch
					> version: i/_/ch
					> version: i/c/h/_
					> version: i/c/h/_
					> version: i/ch/_
					> version: i/ch/_
					> version: i/_/c/_/h
					> version: i/_/c/_/h
					> version: i/_/ch/_
					> version: i/_/ch/_
					> version: i/c/h/_
					> version: i/c/h/_
					> version: i/ch/_
					> version: i/ch/_
					> version: i/_/c/h/_
					> version: i/_/c/h/_
					> version: i/_/ch/_
					> version: i/_/ch/_
					> version: i/c/h/_/_
					> version: i/c/h/_/_
					> version: i/ch/_/_
					> version: i/ch/_/_
					> version: i/_/c/_/_/h
					TRYING: h
					> version: i/_/c/_/_/h
					TRYING: h
					> version: i/_/ch/_/_
					> version: i/_/ch/_/_
					RESULT:  ['_']
				adding dashed alternative: ['i', 'c', 'h', '_']
				adding dashed alternative: ['i', 'c', 'h', '_']
				adding dashed alternative: ['i', 'ch', '_']
				adding dashed alternative: ['i', 'ch', '_']
				adding dashed alternative: ['i', '_', 'c', 'h', '_']
				adding dashed alternative: ['i', '_', 'c', 'h', '_']
				adding dashed alternative: ['i', '_', 'ch', '_']
				adding dashed alternative: ['i', '_', 'ch', '_']
				adding dashed alternative: ['i', 'c', 'h', '_', '_']
				adding dashed alternative: ['i', 'c', 'h', '_', '_']
				adding dashed alternative: ['i', 'ch', '_', '_']
				adding dashed alternative: ['i', 'ch', '_', '_']
				adding dashed alternative: ['i', '_', 'c', '_', 'h', '_']
				adding dashed alternative: ['i', '_', 'c', '_', 'h', '_']
				adding dashed alternative: ['i', '_', 'ch', '_', '_']
				adding dashed alternative: ['i', '_', 'ch', '_', '_']
				adding dashed alternative: ['i', 'c', 'h', '_', '_']
				adding dashed alternative: ['i', 'c', 'h', '_', '_']
				adding dashed alternative: ['i', 'ch', '_', '_']
				adding dashed alternative: ['i', 'ch', '_', '_']
				adding dashed alternative: ['i', '_', 'c', 'h', '_', '_']
				adding dashed alternative: ['i', '_', 'c', 'h', '_', '_']
				adding dashed alternative: ['i', '_', 'ch', '_', '_']
				adding dashed alternative: ['i', '_', 'ch', '_', '_']
				adding dashed alternative: ['i', 'c', 'h', '_', '_', '_']
				adding dashed alternative: ['i', 'c', 'h', '_', '_', '_']
				adding dashed alternative: ['i', 'ch', '_', '_', '_']
				adding dashed alternative: ['i', 'ch', '_', '_', '_']
				adding dashed alternative: ['i', '_', 'c', '_', '_', '_', 'h']
				adding dashed alternative: ['i', '_', 'c', '_', '_', '_', 'h']
				adding dashed alternative: ['i', '_', 'ch', '_', '_', '_']
				adding dashed alternative: ['i', '_', 'ch', '_', '_', '_']
				i/c/h(CCC)
i/c/h(VCC)
i/ch(CC)
i/ch(VC)
i/_/c/h(AACC)
i/_/c/h(AACC)
i/_/ch(AAC)
i/_/ch(AAC)
i/c/h/_(ACCA)
i/c/h/_(ACCA)
i/ch/_(ACA)
i/ch/_(ACA)
i/_/c/_/h(AACAC)
i/_/c/_/h(AACAC)
i/_/ch/_(AACA)
i/_/ch/_(AACA)
i/c/h/_(ACCA)
i/c/h/_(ACCA)
i/ch/_(ACA)
i/ch/_(ACA)
i/_/c/h/_(AACCA)
i/_/c/h/_(AACCA)
i/_/ch/_(AACA)
i/_/ch/_(AACA)
i/c/h/_/_(ACCAA)
i/c/h/_/_(ACCAA)
i/ch/_/_(ACAA)
i/ch/_/_(ACAA)
i/_/c/_/_/h(AACAAC)
i/_/c/_/_/h(AACAAC)
i/_/ch/_/_(AACAA)
i/_/ch/_/_(AACAA)
i/c/h/_(ACCA)
i/c/h/_(ACCA)
i/ch/_(ACA)
i/ch/_(ACA)
i/_/c/h/_(AACCA)
i/_/c/h/_(AACCA)
i/_/ch/_(AACA)
i/_/ch/_(AACA)
i/c/h/_/_(ACCAA)
i/c/h/_/_(ACCAA)
i/ch/_/_(ACAA)
i/ch/_/_(ACAA)
i/_/c/_/h/_(AACACA)
i/_/c/_/h/_(AACACA)
i/_/ch/_/_(AACAA)
i/_/ch/_/_(AACAA)
i/c/h/_/_(ACCAA)
i/c/h/_/_(ACCAA)
i/ch/_/_(ACAA)
i/ch/_/_(ACAA)
i/_/c/h/_/_(AACCAA)
i/_/c/h/_/_(AACCAA)
i/_/ch/_/_(AACAA)
i/_/ch/_/_(AACAA)
i/c/h/_/_/_(ACCAAA)
i/c/h/_/_/_(ACCAAA)
i/ch/_/_/_(ACAAA)
i/ch/_/_/_(ACAAA)
i/_/c/_/_/_/h(AACAAAC)
i/_/c/_/_/_/h(AACAAAC)
i/_/ch/_/_/_(AACAAA)
i/_/ch/_/_/_(AACAAA)
				version split: ['i', 'c', 'h']
				{'string': 'i/c/h', 'rgx': '((i))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'c', 'h']
				version split: ['i', 'c', 'h']
				{'string': 'i/c/h', 'rgx': '((i))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'c', 'h']
				version split: ['i', 'ch']
				{'string': 'i/ch', 'rgx': '((i))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'ch']
				version split: ['i', 'ch']
				{'string': 'i/ch', 'rgx': '((i))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'ch']
				version split: ['i', '_', 'c', 'h']
				{'string': 'i/_/c/h', 'rgx': '((i))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['i', '_', 'c', 'h']
				version split: ['i', '_', 'c', 'h']
				{'string': 'i/_/c/h', 'rgx': '((i))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['i', '_', 'c', 'h']
				version split: ['i', '_', 'ch']
				{'string': 'i/_/ch', 'rgx': '((i))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['i', '_', 'ch']
				version split: ['i', '_', 'ch']
				{'string': 'i/_/ch', 'rgx': '((i))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['i', '_', 'ch']
				version split: ['i', 'c', 'h', '_']
				{'string': 'i/c/h/_', 'rgx': '((i))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'c', 'h', '_']
				version split: ['i', 'c', 'h', '_']
				{'string': 'i/c/h/_', 'rgx': '((i))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'c', 'h', '_']
				version split: ['i', 'ch', '_']
				{'string': 'i/ch/_', 'rgx': '((i))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'ch', '_']
				version split: ['i', 'ch', '_']
				{'string': 'i/ch/_', 'rgx': '((i))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'ch', '_']
				version split: ['i', '_', 'c', '_', 'h']
				{'string': 'i/_/c/_/h', 'rgx': '((i))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['i', '_', 'c', '_', 'h']
				version split: ['i', '_', 'c', '_', 'h']
				{'string': 'i/_/c/_/h', 'rgx': '((i))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['i', '_', 'c', '_', 'h']
				version split: ['i', '_', 'ch', '_']
				{'string': 'i/_/ch/_', 'rgx': '((i))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['i', '_', 'ch', '_']
				version split: ['i', '_', 'ch', '_']
				{'string': 'i/_/ch/_', 'rgx': '((i))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['i', '_', 'ch', '_']
				version split: ['i', 'c', 'h', '_']
				{'string': 'i/c/h/_', 'rgx': '((i))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'c', 'h', '_']
				version split: ['i', 'c', 'h', '_']
				{'string': 'i/c/h/_', 'rgx': '((i))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'c', 'h', '_']
				version split: ['i', 'ch', '_']
				{'string': 'i/ch/_', 'rgx': '((i))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'ch', '_']
				version split: ['i', 'ch', '_']
				{'string': 'i/ch/_', 'rgx': '((i))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'ch', '_']
				version split: ['i', '_', 'c', 'h', '_']
				{'string': 'i/_/c/h/_', 'rgx': '((i))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['i', '_', 'c', 'h', '_']
				version split: ['i', '_', 'c', 'h', '_']
				{'string': 'i/_/c/h/_', 'rgx': '((i))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['i', '_', 'c', 'h', '_']
				version split: ['i', '_', 'ch', '_']
				{'string': 'i/_/ch/_', 'rgx': '((i))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['i', '_', 'ch', '_']
				version split: ['i', '_', 'ch', '_']
				{'string': 'i/_/ch/_', 'rgx': '((i))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['i', '_', 'ch', '_']
				version split: ['i', 'c', 'h', '_', '_']
				{'string': 'i/c/h/_/_', 'rgx': '((i))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'c', 'h', '_', '_']
				version split: ['i', 'c', 'h', '_', '_']
				{'string': 'i/c/h/_/_', 'rgx': '((i))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'c', 'h', '_', '_']
				version split: ['i', 'ch', '_', '_']
				{'string': 'i/ch/_/_', 'rgx': '((i))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'ch', '_', '_']
				version split: ['i', 'ch', '_', '_']
				{'string': 'i/ch/_/_', 'rgx': '((i))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'ch', '_', '_']
				version split: ['i', '_', 'c', '_', '_', 'h']
				{'string': 'i/_/c/_/_/h', 'rgx': '((i))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['i', '_', 'c', '_', '_', 'h']
				version split: ['i', '_', 'c', '_', '_', 'h']
				{'string': 'i/_/c/_/_/h', 'rgx': '((i))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['i', '_', 'c', '_', '_', 'h']
				version split: ['i', '_', 'ch', '_', '_']
				{'string': 'i/_/ch/_/_', 'rgx': '((i))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['i', '_', 'ch', '_', '_']
				version split: ['i', '_', 'ch', '_', '_']
				{'string': 'i/_/ch/_/_', 'rgx': '((i))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['i', '_', 'ch', '_', '_']
				version split: ['i', 'c', 'h', '_']
				{'string': 'i/c/h/_', 'rgx': '((i))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'c', 'h', '_']
				version split: ['i', 'c', 'h', '_']
				{'string': 'i/c/h/_', 'rgx': '((i))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'c', 'h', '_']
				version split: ['i', 'ch', '_']
				{'string': 'i/ch/_', 'rgx': '((i))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'ch', '_']
				version split: ['i', 'ch', '_']
				{'string': 'i/ch/_', 'rgx': '((i))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'ch', '_']
				version split: ['i', '_', 'c', 'h', '_']
				{'string': 'i/_/c/h/_', 'rgx': '((i))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['i', '_', 'c', 'h', '_']
				version split: ['i', '_', 'c', 'h', '_']
				{'string': 'i/_/c/h/_', 'rgx': '((i))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['i', '_', 'c', 'h', '_']
				version split: ['i', '_', 'ch', '_']
				{'string': 'i/_/ch/_', 'rgx': '((i))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['i', '_', 'ch', '_']
				version split: ['i', '_', 'ch', '_']
				{'string': 'i/_/ch/_', 'rgx': '((i))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['i', '_', 'ch', '_']
				version split: ['i', 'c', 'h', '_', '_']
				{'string': 'i/c/h/_/_', 'rgx': '((i))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'c', 'h', '_', '_']
				version split: ['i', 'c', 'h', '_', '_']
				{'string': 'i/c/h/_/_', 'rgx': '((i))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'c', 'h', '_', '_']
				version split: ['i', 'ch', '_', '_']
				{'string': 'i/ch/_/_', 'rgx': '((i))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'ch', '_', '_']
				version split: ['i', 'ch', '_', '_']
				{'string': 'i/ch/_/_', 'rgx': '((i))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'ch', '_', '_']
				version split: ['i', '_', 'c', '_', 'h', '_']
				{'string': 'i/_/c/_/h/_', 'rgx': '((i))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['i', '_', 'c', '_', 'h', '_']
				version split: ['i', '_', 'c', '_', 'h', '_']
				{'string': 'i/_/c/_/h/_', 'rgx': '((i))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['i', '_', 'c', '_', 'h', '_']
				version split: ['i', '_', 'ch', '_', '_']
				{'string': 'i/_/ch/_/_', 'rgx': '((i))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['i', '_', 'ch', '_', '_']
				version split: ['i', '_', 'ch', '_', '_']
				{'string': 'i/_/ch/_/_', 'rgx': '((i))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['i', '_', 'ch', '_', '_']
				version split: ['i', 'c', 'h', '_', '_']
				{'string': 'i/c/h/_/_', 'rgx': '((i))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'c', 'h', '_', '_']
				version split: ['i', 'c', 'h', '_', '_']
				{'string': 'i/c/h/_/_', 'rgx': '((i))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'c', 'h', '_', '_']
				version split: ['i', 'ch', '_', '_']
				{'string': 'i/ch/_/_', 'rgx': '((i))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'ch', '_', '_']
				version split: ['i', 'ch', '_', '_']
				{'string': 'i/ch/_/_', 'rgx': '((i))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'ch', '_', '_']
				version split: ['i', '_', 'c', 'h', '_', '_']
				{'string': 'i/_/c/h/_/_', 'rgx': '((i))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['i', '_', 'c', 'h', '_', '_']
				version split: ['i', '_', 'c', 'h', '_', '_']
				{'string': 'i/_/c/h/_/_', 'rgx': '((i))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['i', '_', 'c', 'h', '_', '_']
				version split: ['i', '_', 'ch', '_', '_']
				{'string': 'i/_/ch/_/_', 'rgx': '((i))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['i', '_', 'ch', '_', '_']
				version split: ['i', '_', 'ch', '_', '_']
				{'string': 'i/_/ch/_/_', 'rgx': '((i))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['i', '_', 'ch', '_', '_']
				version split: ['i', 'c', 'h', '_', '_', '_']
				{'string': 'i/c/h/_/_/_', 'rgx': '((i))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'c', 'h', '_', '_', '_']
				version split: ['i', 'c', 'h', '_', '_', '_']
				{'string': 'i/c/h/_/_/_', 'rgx': '((i))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'c', 'h', '_', '_', '_']
				version split: ['i', 'ch', '_', '_', '_']
				{'string': 'i/ch/_/_/_', 'rgx': '((i))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'ch', '_', '_', '_']
				version split: ['i', 'ch', '_', '_', '_']
				{'string': 'i/ch/_/_/_', 'rgx': '((i))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'ch', '_', '_', '_']
				version split: ['i', '_', 'c', '_', '_', '_', 'h']
				{'string': 'i/_/c/_/_/_/h', 'rgx': '((i))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['i', '_', 'c', '_', '_', '_', 'h']
				version split: ['i', '_', 'c', '_', '_', '_', 'h']
				{'string': 'i/_/c/_/_/_/h', 'rgx': '((i))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['i', '_', 'c', '_', '_', '_', 'h']
				version split: ['i', '_', 'ch', '_', '_', '_']
				{'string': 'i/_/ch/_/_/_', 'rgx': '((i))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				version split: ['i', '_', 'ch', '_', '_', '_']
				{'string': 'i/_/ch/_/_/_', 'rgx': '((i))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				ANALYSING: ilc
					resolving (8)
					> version: i/l/c
					> version: i/l/c
					> version: i/l/c/_
					> version: i/l/c/_
					> version: i/l/c/_
					> version: i/l/c/_
					> version: i/l/c/_/_
					> version: i/l/c/_/_
					RESULT:  ['_']
				adding dashed alternative: ['i', 'l', 'c', '_']
				adding dashed alternative: ['i', 'l', 'c', '_']
				adding dashed alternative: ['i', 'l', 'c', '_', '_']
				adding dashed alternative: ['i', 'l', 'c', '_', '_']
				adding dashed alternative: ['i', 'l', 'c', '_', '_']
				adding dashed alternative: ['i', 'l', 'c', '_', '_']
				adding dashed alternative: ['i', 'l', 'c', '_', '_', '_']
				adding dashed alternative: ['i', 'l', 'c', '_', '_', '_']
				i/l/c(CCC)
i/l/c(VCC)
i/l/c/_(ACCA)
i/l/c/_(ACCA)
i/l/c/_(ACCA)
i/l/c/_(ACCA)
i/l/c/_/_(ACCAA)
i/l/c/_/_(ACCAA)
i/l/c/_(ACCA)
i/l/c/_(ACCA)
i/l/c/_/_(ACCAA)
i/l/c/_/_(ACCAA)
i/l/c/_/_(ACCAA)
i/l/c/_/_(ACCAA)
i/l/c/_/_/_(ACCAAA)
i/l/c/_/_/_(ACCAAA)
				version split: ['i', 'l', 'c']
				{'string': 'i/l/c', 'rgx': '((i))/((l))/((c))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'l', 'c']
				version split: ['i', 'l', 'c']
				{'string': 'i/l/c', 'rgx': '((i))/((l))/((c))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'l', 'c']
				version split: ['i', 'l', 'c', '_']
				{'string': 'i/l/c/_', 'rgx': '((i))/((l))/((c))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'l', 'c', '_']
				version split: ['i', 'l', 'c', '_']
				{'string': 'i/l/c/_', 'rgx': '((i))/((l))/((c))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'l', 'c', '_']
				version split: ['i', 'l', 'c', '_']
				{'string': 'i/l/c/_', 'rgx': '((i))/((l))/((c))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'l', 'c', '_']
				version split: ['i', 'l', 'c', '_']
				{'string': 'i/l/c/_', 'rgx': '((i))/((l))/((c))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'l', 'c', '_']
				version split: ['i', 'l', 'c', '_', '_']
				{'string': 'i/l/c/_/_', 'rgx': '((i))/((l))/((c))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'l', 'c', '_', '_']
				version split: ['i', 'l', 'c', '_', '_']
				{'string': 'i/l/c/_/_', 'rgx': '((i))/((l))/((c))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'l', 'c', '_', '_']
				version split: ['i', 'l', 'c', '_']
				{'string': 'i/l/c/_', 'rgx': '((i))/((l))/((c))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'l', 'c', '_']
				version split: ['i', 'l', 'c', '_']
				{'string': 'i/l/c/_', 'rgx': '((i))/((l))/((c))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'l', 'c', '_']
				version split: ['i', 'l', 'c', '_', '_']
				{'string': 'i/l/c/_/_', 'rgx': '((i))/((l))/((c))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'l', 'c', '_', '_']
				version split: ['i', 'l', 'c', '_', '_']
				{'string': 'i/l/c/_/_', 'rgx': '((i))/((l))/((c))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'l', 'c', '_', '_']
				version split: ['i', 'l', 'c', '_', '_']
				{'string': 'i/l/c/_/_', 'rgx': '((i))/((l))/((c))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'l', 'c', '_', '_']
				version split: ['i', 'l', 'c', '_', '_']
				{'string': 'i/l/c/_/_', 'rgx': '((i))/((l))/((c))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'l', 'c', '_', '_']
				version split: ['i', 'l', 'c', '_', '_', '_']
				{'string': 'i/l/c/_/_/_', 'rgx': '((i))/((l))/((c))/((_))/((_))/((_))$'}
				version split: ['i', 'l', 'c', '_', '_', '_']
				{'string': 'i/l/c/_/_/_', 'rgx': '((i))/((l))/((c))/((_))/((_))/((_))$'}
				ANALYSING: ilk
					resolving (8)
					> version: i/l/k
					> version: i/l/k
					> version: i/l/k/_
					> version: i/l/k/_
					> version: i/l/k/_
					> version: i/l/k/_
					> version: i/l/k/_/_
					> version: i/l/k/_/_
					RESULT:  ['_']
				adding dashed alternative: ['i', 'l', 'k', '_']
				adding dashed alternative: ['i', 'l', 'k', '_']
				adding dashed alternative: ['i', 'l', 'k', '_', '_']
				adding dashed alternative: ['i', 'l', 'k', '_', '_']
				adding dashed alternative: ['i', 'l', 'k', '_', '_']
				adding dashed alternative: ['i', 'l', 'k', '_', '_']
				adding dashed alternative: ['i', 'l', 'k', '_', '_', '_']
				adding dashed alternative: ['i', 'l', 'k', '_', '_', '_']
				i/l/k(CCC)
i/l/k(VCC)
i/l/k/_(ACCA)
i/l/k/_(ACCA)
i/l/k/_(ACCA)
i/l/k/_(ACCA)
i/l/k/_/_(ACCAA)
i/l/k/_/_(ACCAA)
i/l/k/_(ACCA)
i/l/k/_(ACCA)
i/l/k/_/_(ACCAA)
i/l/k/_/_(ACCAA)
i/l/k/_/_(ACCAA)
i/l/k/_/_(ACCAA)
i/l/k/_/_/_(ACCAAA)
i/l/k/_/_/_(ACCAAA)
				version split: ['i', 'l', 'k']
				{'string': 'i/l/k', 'rgx': '((i))/((l))/((k))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'l', 'k']
				version split: ['i', 'l', 'k']
				{'string': 'i/l/k', 'rgx': '((i))/((l))/((k))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'l', 'k']
				version split: ['i', 'l', 'k', '_']
				{'string': 'i/l/k/_', 'rgx': '((i))/((l))/((k))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'l', 'k', '_']
				version split: ['i', 'l', 'k', '_']
				{'string': 'i/l/k/_', 'rgx': '((i))/((l))/((k))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'l', 'k', '_']
				version split: ['i', 'l', 'k', '_']
				{'string': 'i/l/k/_', 'rgx': '((i))/((l))/((k))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'l', 'k', '_']
				version split: ['i', 'l', 'k', '_']
				{'string': 'i/l/k/_', 'rgx': '((i))/((l))/((k))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'l', 'k', '_']
				version split: ['i', 'l', 'k', '_', '_']
				{'string': 'i/l/k/_/_', 'rgx': '((i))/((l))/((k))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'l', 'k', '_', '_']
				version split: ['i', 'l', 'k', '_', '_']
				{'string': 'i/l/k/_/_', 'rgx': '((i))/((l))/((k))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'l', 'k', '_', '_']
				version split: ['i', 'l', 'k', '_']
				{'string': 'i/l/k/_', 'rgx': '((i))/((l))/((k))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'l', 'k', '_']
				version split: ['i', 'l', 'k', '_']
				{'string': 'i/l/k/_', 'rgx': '((i))/((l))/((k))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'l', 'k', '_']
				version split: ['i', 'l', 'k', '_', '_']
				{'string': 'i/l/k/_/_', 'rgx': '((i))/((l))/((k))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'l', 'k', '_', '_']
				version split: ['i', 'l', 'k', '_', '_']
				{'string': 'i/l/k/_/_', 'rgx': '((i))/((l))/((k))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'l', 'k', '_', '_']
				version split: ['i', 'l', 'k', '_', '_']
				{'string': 'i/l/k/_/_', 'rgx': '((i))/((l))/((k))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'l', 'k', '_', '_']
				version split: ['i', 'l', 'k', '_', '_']
				{'string': 'i/l/k/_/_', 'rgx': '((i))/((l))/((k))/((_))/((_))/((_))$'}
				_____REMOVING________['i', 'l', 'k', '_', '_']
				version split: ['i', 'l', 'k', '_', '_', '_']
				{'string': 'i/l/k/_/_/_', 'rgx': '((i))/((l))/((k))/((_))/((_))/((_))$'}
				version split: ['i', 'l', 'k', '_', '_', '_']
				{'string': 'i/l/k/_/_/_', 'rgx': '((i))/((l))/((k))/((_))/((_))/((_))$'}
				ANALYSING: uch
					resolving (32)
					> version: u/c/h
					> version: u/c/h
					> version: u/ch
					> version: u/ch
					> version: u/_/c/h
					> version: u/_/c/h
					> version: u/_/ch
					> version: u/_/ch
					> version: u/c/h/_
					> version: u/c/h/_
					> version: u/ch/_
					> version: u/ch/_
					> version: u/_/c/_/h
					> version: u/_/c/_/h
					> version: u/_/ch/_
					> version: u/_/ch/_
					> version: u/c/h/_
					> version: u/c/h/_
					> version: u/ch/_
					> version: u/ch/_
					> version: u/_/c/h/_
					> version: u/_/c/h/_
					> version: u/_/ch/_
					> version: u/_/ch/_
					> version: u/c/h/_/_
					> version: u/c/h/_/_
					> version: u/ch/_/_
					> version: u/ch/_/_
					> version: u/_/c/_/_/h
					TRYING: h
					> version: u/_/c/_/_/h
					TRYING: h
					> version: u/_/ch/_/_
					> version: u/_/ch/_/_
					RESULT:  ['_']
				adding dashed alternative: ['u', 'c', 'h', '_']
				adding dashed alternative: ['u', 'c', 'h', '_']
				adding dashed alternative: ['u', 'ch', '_']
				adding dashed alternative: ['u', 'ch', '_']
				adding dashed alternative: ['u', '_', 'c', 'h', '_']
				adding dashed alternative: ['u', '_', 'c', 'h', '_']
				adding dashed alternative: ['u', '_', 'ch', '_']
				adding dashed alternative: ['u', '_', 'ch', '_']
				adding dashed alternative: ['u', 'c', 'h', '_', '_']
				adding dashed alternative: ['u', 'c', 'h', '_', '_']
				adding dashed alternative: ['u', 'ch', '_', '_']
				adding dashed alternative: ['u', 'ch', '_', '_']
				adding dashed alternative: ['u', '_', 'c', '_', 'h', '_']
				adding dashed alternative: ['u', '_', 'c', '_', 'h', '_']
				adding dashed alternative: ['u', '_', 'ch', '_', '_']
				adding dashed alternative: ['u', '_', 'ch', '_', '_']
				adding dashed alternative: ['u', 'c', 'h', '_', '_']
				adding dashed alternative: ['u', 'c', 'h', '_', '_']
				adding dashed alternative: ['u', 'ch', '_', '_']
				adding dashed alternative: ['u', 'ch', '_', '_']
				adding dashed alternative: ['u', '_', 'c', 'h', '_', '_']
				adding dashed alternative: ['u', '_', 'c', 'h', '_', '_']
				adding dashed alternative: ['u', '_', 'ch', '_', '_']
				adding dashed alternative: ['u', '_', 'ch', '_', '_']
				adding dashed alternative: ['u', 'c', 'h', '_', '_', '_']
				adding dashed alternative: ['u', 'c', 'h', '_', '_', '_']
				adding dashed alternative: ['u', 'ch', '_', '_', '_']
				adding dashed alternative: ['u', 'ch', '_', '_', '_']
				adding dashed alternative: ['u', '_', 'c', '_', '_', '_', 'h']
				adding dashed alternative: ['u', '_', 'c', '_', '_', '_', 'h']
				adding dashed alternative: ['u', '_', 'ch', '_', '_', '_']
				adding dashed alternative: ['u', '_', 'ch', '_', '_', '_']
				u/c/h(CCC)
u/c/h(VCC)
u/ch(CC)
u/ch(VC)
u/_/c/h(AACC)
u/_/c/h(AACC)
u/_/ch(AAC)
u/_/ch(AAC)
u/c/h/_(ACCA)
u/c/h/_(ACCA)
u/ch/_(ACA)
u/ch/_(ACA)
u/_/c/_/h(AACAC)
u/_/c/_/h(AACAC)
u/_/ch/_(AACA)
u/_/ch/_(AACA)
u/c/h/_(ACCA)
u/c/h/_(ACCA)
u/ch/_(ACA)
u/ch/_(ACA)
u/_/c/h/_(AACCA)
u/_/c/h/_(AACCA)
u/_/ch/_(AACA)
u/_/ch/_(AACA)
u/c/h/_/_(ACCAA)
u/c/h/_/_(ACCAA)
u/ch/_/_(ACAA)
u/ch/_/_(ACAA)
u/_/c/_/_/h(AACAAC)
u/_/c/_/_/h(AACAAC)
u/_/ch/_/_(AACAA)
u/_/ch/_/_(AACAA)
u/c/h/_(ACCA)
u/c/h/_(ACCA)
u/ch/_(ACA)
u/ch/_(ACA)
u/_/c/h/_(AACCA)
u/_/c/h/_(AACCA)
u/_/ch/_(AACA)
u/_/ch/_(AACA)
u/c/h/_/_(ACCAA)
u/c/h/_/_(ACCAA)
u/ch/_/_(ACAA)
u/ch/_/_(ACAA)
u/_/c/_/h/_(AACACA)
u/_/c/_/h/_(AACACA)
u/_/ch/_/_(AACAA)
u/_/ch/_/_(AACAA)
u/c/h/_/_(ACCAA)
u/c/h/_/_(ACCAA)
u/ch/_/_(ACAA)
u/ch/_/_(ACAA)
u/_/c/h/_/_(AACCAA)
u/_/c/h/_/_(AACCAA)
u/_/ch/_/_(AACAA)
u/_/ch/_/_(AACAA)
u/c/h/_/_/_(ACCAAA)
u/c/h/_/_/_(ACCAAA)
u/ch/_/_/_(ACAAA)
u/ch/_/_/_(ACAAA)
u/_/c/_/_/_/h(AACAAAC)
u/_/c/_/_/_/h(AACAAAC)
u/_/ch/_/_/_(AACAAA)
u/_/ch/_/_/_(AACAAA)
				version split: ['u', 'c', 'h']
				{'string': 'u/c/h', 'rgx': '((u))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['u', 'c', 'h']
				version split: ['u', 'c', 'h']
				{'string': 'u/c/h', 'rgx': '((u))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['u', 'c', 'h']
				version split: ['u', 'ch']
				{'string': 'u/ch', 'rgx': '((u))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['u', 'ch']
				version split: ['u', 'ch']
				{'string': 'u/ch', 'rgx': '((u))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['u', 'ch']
				version split: ['u', '_', 'c', 'h']
				{'string': 'u/_/c/h', 'rgx': '((u))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['u', '_', 'c', 'h']
				version split: ['u', '_', 'c', 'h']
				{'string': 'u/_/c/h', 'rgx': '((u))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['u', '_', 'c', 'h']
				version split: ['u', '_', 'ch']
				{'string': 'u/_/ch', 'rgx': '((u))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['u', '_', 'ch']
				version split: ['u', '_', 'ch']
				{'string': 'u/_/ch', 'rgx': '((u))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['u', '_', 'ch']
				version split: ['u', 'c', 'h', '_']
				{'string': 'u/c/h/_', 'rgx': '((u))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['u', 'c', 'h', '_']
				version split: ['u', 'c', 'h', '_']
				{'string': 'u/c/h/_', 'rgx': '((u))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['u', 'c', 'h', '_']
				version split: ['u', 'ch', '_']
				{'string': 'u/ch/_', 'rgx': '((u))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['u', 'ch', '_']
				version split: ['u', 'ch', '_']
				{'string': 'u/ch/_', 'rgx': '((u))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['u', 'ch', '_']
				version split: ['u', '_', 'c', '_', 'h']
				{'string': 'u/_/c/_/h', 'rgx': '((u))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['u', '_', 'c', '_', 'h']
				version split: ['u', '_', 'c', '_', 'h']
				{'string': 'u/_/c/_/h', 'rgx': '((u))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['u', '_', 'c', '_', 'h']
				version split: ['u', '_', 'ch', '_']
				{'string': 'u/_/ch/_', 'rgx': '((u))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['u', '_', 'ch', '_']
				version split: ['u', '_', 'ch', '_']
				{'string': 'u/_/ch/_', 'rgx': '((u))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['u', '_', 'ch', '_']
				version split: ['u', 'c', 'h', '_']
				{'string': 'u/c/h/_', 'rgx': '((u))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['u', 'c', 'h', '_']
				version split: ['u', 'c', 'h', '_']
				{'string': 'u/c/h/_', 'rgx': '((u))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['u', 'c', 'h', '_']
				version split: ['u', 'ch', '_']
				{'string': 'u/ch/_', 'rgx': '((u))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['u', 'ch', '_']
				version split: ['u', 'ch', '_']
				{'string': 'u/ch/_', 'rgx': '((u))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['u', 'ch', '_']
				version split: ['u', '_', 'c', 'h', '_']
				{'string': 'u/_/c/h/_', 'rgx': '((u))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['u', '_', 'c', 'h', '_']
				version split: ['u', '_', 'c', 'h', '_']
				{'string': 'u/_/c/h/_', 'rgx': '((u))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['u', '_', 'c', 'h', '_']
				version split: ['u', '_', 'ch', '_']
				{'string': 'u/_/ch/_', 'rgx': '((u))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['u', '_', 'ch', '_']
				version split: ['u', '_', 'ch', '_']
				{'string': 'u/_/ch/_', 'rgx': '((u))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['u', '_', 'ch', '_']
				version split: ['u', 'c', 'h', '_', '_']
				{'string': 'u/c/h/_/_', 'rgx': '((u))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['u', 'c', 'h', '_', '_']
				version split: ['u', 'c', 'h', '_', '_']
				{'string': 'u/c/h/_/_', 'rgx': '((u))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['u', 'c', 'h', '_', '_']
				version split: ['u', 'ch', '_', '_']
				{'string': 'u/ch/_/_', 'rgx': '((u))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['u', 'ch', '_', '_']
				version split: ['u', 'ch', '_', '_']
				{'string': 'u/ch/_/_', 'rgx': '((u))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['u', 'ch', '_', '_']
				version split: ['u', '_', 'c', '_', '_', 'h']
				{'string': 'u/_/c/_/_/h', 'rgx': '((u))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['u', '_', 'c', '_', '_', 'h']
				version split: ['u', '_', 'c', '_', '_', 'h']
				{'string': 'u/_/c/_/_/h', 'rgx': '((u))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['u', '_', 'c', '_', '_', 'h']
				version split: ['u', '_', 'ch', '_', '_']
				{'string': 'u/_/ch/_/_', 'rgx': '((u))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['u', '_', 'ch', '_', '_']
				version split: ['u', '_', 'ch', '_', '_']
				{'string': 'u/_/ch/_/_', 'rgx': '((u))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['u', '_', 'ch', '_', '_']
				version split: ['u', 'c', 'h', '_']
				{'string': 'u/c/h/_', 'rgx': '((u))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['u', 'c', 'h', '_']
				version split: ['u', 'c', 'h', '_']
				{'string': 'u/c/h/_', 'rgx': '((u))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['u', 'c', 'h', '_']
				version split: ['u', 'ch', '_']
				{'string': 'u/ch/_', 'rgx': '((u))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['u', 'ch', '_']
				version split: ['u', 'ch', '_']
				{'string': 'u/ch/_', 'rgx': '((u))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['u', 'ch', '_']
				version split: ['u', '_', 'c', 'h', '_']
				{'string': 'u/_/c/h/_', 'rgx': '((u))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['u', '_', 'c', 'h', '_']
				version split: ['u', '_', 'c', 'h', '_']
				{'string': 'u/_/c/h/_', 'rgx': '((u))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['u', '_', 'c', 'h', '_']
				version split: ['u', '_', 'ch', '_']
				{'string': 'u/_/ch/_', 'rgx': '((u))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['u', '_', 'ch', '_']
				version split: ['u', '_', 'ch', '_']
				{'string': 'u/_/ch/_', 'rgx': '((u))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['u', '_', 'ch', '_']
				version split: ['u', 'c', 'h', '_', '_']
				{'string': 'u/c/h/_/_', 'rgx': '((u))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['u', 'c', 'h', '_', '_']
				version split: ['u', 'c', 'h', '_', '_']
				{'string': 'u/c/h/_/_', 'rgx': '((u))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['u', 'c', 'h', '_', '_']
				version split: ['u', 'ch', '_', '_']
				{'string': 'u/ch/_/_', 'rgx': '((u))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['u', 'ch', '_', '_']
				version split: ['u', 'ch', '_', '_']
				{'string': 'u/ch/_/_', 'rgx': '((u))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['u', 'ch', '_', '_']
				version split: ['u', '_', 'c', '_', 'h', '_']
				{'string': 'u/_/c/_/h/_', 'rgx': '((u))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['u', '_', 'c', '_', 'h', '_']
				version split: ['u', '_', 'c', '_', 'h', '_']
				{'string': 'u/_/c/_/h/_', 'rgx': '((u))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['u', '_', 'c', '_', 'h', '_']
				version split: ['u', '_', 'ch', '_', '_']
				{'string': 'u/_/ch/_/_', 'rgx': '((u))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['u', '_', 'ch', '_', '_']
				version split: ['u', '_', 'ch', '_', '_']
				{'string': 'u/_/ch/_/_', 'rgx': '((u))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['u', '_', 'ch', '_', '_']
				version split: ['u', 'c', 'h', '_', '_']
				{'string': 'u/c/h/_/_', 'rgx': '((u))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['u', 'c', 'h', '_', '_']
				version split: ['u', 'c', 'h', '_', '_']
				{'string': 'u/c/h/_/_', 'rgx': '((u))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['u', 'c', 'h', '_', '_']
				version split: ['u', 'ch', '_', '_']
				{'string': 'u/ch/_/_', 'rgx': '((u))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['u', 'ch', '_', '_']
				version split: ['u', 'ch', '_', '_']
				{'string': 'u/ch/_/_', 'rgx': '((u))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['u', 'ch', '_', '_']
				version split: ['u', '_', 'c', 'h', '_', '_']
				{'string': 'u/_/c/h/_/_', 'rgx': '((u))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['u', '_', 'c', 'h', '_', '_']
				version split: ['u', '_', 'c', 'h', '_', '_']
				{'string': 'u/_/c/h/_/_', 'rgx': '((u))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['u', '_', 'c', 'h', '_', '_']
				version split: ['u', '_', 'ch', '_', '_']
				{'string': 'u/_/ch/_/_', 'rgx': '((u))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['u', '_', 'ch', '_', '_']
				version split: ['u', '_', 'ch', '_', '_']
				{'string': 'u/_/ch/_/_', 'rgx': '((u))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['u', '_', 'ch', '_', '_']
				version split: ['u', 'c', 'h', '_', '_', '_']
				{'string': 'u/c/h/_/_/_', 'rgx': '((u))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['u', 'c', 'h', '_', '_', '_']
				version split: ['u', 'c', 'h', '_', '_', '_']
				{'string': 'u/c/h/_/_/_', 'rgx': '((u))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['u', 'c', 'h', '_', '_', '_']
				version split: ['u', 'ch', '_', '_', '_']
				{'string': 'u/ch/_/_/_', 'rgx': '((u))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['u', 'ch', '_', '_', '_']
				version split: ['u', 'ch', '_', '_', '_']
				{'string': 'u/ch/_/_/_', 'rgx': '((u))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['u', 'ch', '_', '_', '_']
				version split: ['u', '_', 'c', '_', '_', '_', 'h']
				{'string': 'u/_/c/_/_/_/h', 'rgx': '((u))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['u', '_', 'c', '_', '_', '_', 'h']
				version split: ['u', '_', 'c', '_', '_', '_', 'h']
				{'string': 'u/_/c/_/_/_/h', 'rgx': '((u))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['u', '_', 'c', '_', '_', '_', 'h']
				version split: ['u', '_', 'ch', '_', '_', '_']
				{'string': 'u/_/ch/_/_/_', 'rgx': '((u))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				version split: ['u', '_', 'ch', '_', '_', '_']
				{'string': 'u/_/ch/_/_/_', 'rgx': '((u))/((_))/((h)|(ch)|(c))/((_))/((_))/((_))$'}
				ANALYSING: vych
					resolving (32)
					> version: v/y/c/h
					> version: v/y/c/h
					> version: v/y/ch
					> version: v/y/ch
					> version: v/_/y/c/h
					> version: v/_/y/c/h
					> version: v/_/y/ch
					> version: v/_/y/ch
					> version: v/y/c/_/h
					> version: v/y/c/_/h
					> version: v/y/ch/_
					> version: v/y/ch/_
					> version: v/_/y/_/c/h
					TRYING: h
					> version: v/_/y/_/c/h
					TRYING: h
					> version: v/_/y/_/ch
					> version: v/_/y/_/ch
					> version: v/y/c/h/_
					> version: v/y/c/h/_
					> version: v/y/ch/_
					> version: v/y/ch/_
					> version: v/_/y/c/_/h
					TRYING: h
					> version: v/_/y/c/_/h
					TRYING: h
					> version: v/_/y/ch/_
					> version: v/_/y/ch/_
					> version: v/y/c/_/_/h
					TRYING: h
					> version: v/y/c/_/_/h
					TRYING: h
					> version: v/y/ch/_/_
					> version: v/y/ch/_/_
					> version: v/_/y/_/_/c/h
					TRYING: c
					> version: v/_/y/_/_/c/h
					TRYING: c
					> version: v/_/y/_/_/ch
					TRYING: ch
					> version: v/_/y/_/_/ch
					TRYING: ch
					RESULT:  ['_']
				adding dashed alternative: ['v', 'y', 'c', 'h', '_']
				adding dashed alternative: ['v', 'y', 'c', 'h', '_']
				adding dashed alternative: ['v', 'y', 'ch', '_']
				adding dashed alternative: ['v', 'y', 'ch', '_']
				adding dashed alternative: ['v', '_', 'y', 'c', 'h', '_']
				adding dashed alternative: ['v', '_', 'y', 'c', 'h', '_']
				adding dashed alternative: ['v', '_', 'y', 'ch', '_']
				adding dashed alternative: ['v', '_', 'y', 'ch', '_']
				adding dashed alternative: ['v', 'y', 'c', '_', 'h', '_']
				adding dashed alternative: ['v', 'y', 'c', '_', 'h', '_']
				adding dashed alternative: ['v', 'y', 'ch', '_', '_']
				adding dashed alternative: ['v', 'y', 'ch', '_', '_']
				adding dashed alternative: ['v', '_', 'y', '_', 'c', '_', 'h']
				adding dashed alternative: ['v', '_', 'y', '_', 'c', '_', 'h']
				adding dashed alternative: ['v', '_', 'y', '_', 'ch', '_']
				adding dashed alternative: ['v', '_', 'y', '_', 'ch', '_']
				adding dashed alternative: ['v', 'y', 'c', 'h', '_', '_']
				adding dashed alternative: ['v', 'y', 'c', 'h', '_', '_']
				adding dashed alternative: ['v', 'y', 'ch', '_', '_']
				adding dashed alternative: ['v', 'y', 'ch', '_', '_']
				adding dashed alternative: ['v', '_', 'y', 'c', '_', '_', 'h']
				adding dashed alternative: ['v', '_', 'y', 'c', '_', '_', 'h']
				adding dashed alternative: ['v', '_', 'y', 'ch', '_', '_']
				adding dashed alternative: ['v', '_', 'y', 'ch', '_', '_']
				adding dashed alternative: ['v', 'y', 'c', '_', '_', '_', 'h']
				adding dashed alternative: ['v', 'y', 'c', '_', '_', '_', 'h']
				adding dashed alternative: ['v', 'y', 'ch', '_', '_', '_']
				adding dashed alternative: ['v', 'y', 'ch', '_', '_', '_']
				adding dashed alternative: ['v', '_', 'y', '_', '_', '_', 'c', 'h']
				adding dashed alternative: ['v', '_', 'y', '_', '_', '_', 'c', 'h']
				adding dashed alternative: ['v', '_', 'y', '_', '_', '_', 'ch']
				adding dashed alternative: ['v', '_', 'y', '_', '_', '_', 'ch']
				v/y/c/h(CCCC)
v/y/c/h(VVCC)
v/y/ch(CCC)
v/y/ch(VVC)
v/_/y/c/h(AAACC)
v/_/y/c/h(AAACC)
v/_/y/ch(AAAC)
v/_/y/ch(AAAC)
v/y/c/_/h(AACAC)
v/y/c/_/h(AACAC)
v/y/ch/_(AACA)
v/y/ch/_(AACA)
v/_/y/_/c/h(AAAACC)
v/_/y/_/c/h(AAAACC)
v/_/y/_/ch(AAAAC)
v/_/y/_/ch(AAAAC)
v/y/c/h/_(AACCA)
v/y/c/h/_(AACCA)
v/y/ch/_(AACA)
v/y/ch/_(AACA)
v/_/y/c/_/h(AAACAC)
v/_/y/c/_/h(AAACAC)
v/_/y/ch/_(AAACA)
v/_/y/ch/_(AAACA)
v/y/c/_/_/h(AACAAC)
v/y/c/_/_/h(AACAAC)
v/y/ch/_/_(AACAA)
v/y/ch/_/_(AACAA)
v/_/y/_/_/c/h(AAAAACC)
v/_/y/_/_/c/h(AAAAACC)
v/_/y/_/_/ch(AAAAAC)
v/_/y/_/_/ch(AAAAAC)
v/y/c/h/_(AACCA)
v/y/c/h/_(AACCA)
v/y/ch/_(AACA)
v/y/ch/_(AACA)
v/_/y/c/h/_(AAACCA)
v/_/y/c/h/_(AAACCA)
v/_/y/ch/_(AAACA)
v/_/y/ch/_(AAACA)
v/y/c/_/h/_(AACACA)
v/y/c/_/h/_(AACACA)
v/y/ch/_/_(AACAA)
v/y/ch/_/_(AACAA)
v/_/y/_/c/_/h(AAAACAC)
v/_/y/_/c/_/h(AAAACAC)
v/_/y/_/ch/_(AAAACA)
v/_/y/_/ch/_(AAAACA)
v/y/c/h/_/_(AACCAA)
v/y/c/h/_/_(AACCAA)
v/y/ch/_/_(AACAA)
v/y/ch/_/_(AACAA)
v/_/y/c/_/_/h(AAACAAC)
v/_/y/c/_/_/h(AAACAAC)
v/_/y/ch/_/_(AAACAA)
v/_/y/ch/_/_(AAACAA)
v/y/c/_/_/_/h(AACAAAC)
v/y/c/_/_/_/h(AACAAAC)
v/y/ch/_/_/_(AACAAA)
v/y/ch/_/_/_(AACAAA)
v/_/y/_/_/_/c/h(AAAAAACC)
v/_/y/_/_/_/c/h(AAAAAACC)
v/_/y/_/_/_/ch(AAAAAAC)
v/_/y/_/_/_/ch(AAAAAAC)
				version split: ['v', 'y', 'c', 'h']
				{'string': 'v/y/c/h', 'rgx': '((v))/((_))/((ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['v', 'y', 'c', 'h']
				version split: ['v', 'y', 'c', 'h']
				{'string': 'v/y/c/h', 'rgx': '((v))/((_))/((ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['v', 'y', 'c', 'h']
				version split: ['v', 'y', 'ch']
				{'string': 'v/y/ch', 'rgx': '((v))/((_))/((ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['v', 'y', 'ch']
				version split: ['v', 'y', 'ch']
				{'string': 'v/y/ch', 'rgx': '((v))/((_))/((ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['v', 'y', 'ch']
				version split: ['v', '_', 'y', 'c', 'h']
				{'string': 'v/_/y/c/h', 'rgx': '((v))/((_))/((ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['v', '_', 'y', 'c', 'h']
				version split: ['v', '_', 'y', 'c', 'h']
				{'string': 'v/_/y/c/h', 'rgx': '((v))/((_))/((ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['v', '_', 'y', 'c', 'h']
				version split: ['v', '_', 'y', 'ch']
				{'string': 'v/_/y/ch', 'rgx': '((v))/((_))/((ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['v', '_', 'y', 'ch']
				version split: ['v', '_', 'y', 'ch']
				{'string': 'v/_/y/ch', 'rgx': '((v))/((_))/((ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['v', '_', 'y', 'ch']
				version split: ['v', 'y', 'c', '_', 'h']
				{'string': 'v/y/c/_/h', 'rgx': '((v))/((_))/((ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['v', 'y', 'c', '_', 'h']
				version split: ['v', 'y', 'c', '_', 'h']
				{'string': 'v/y/c/_/h', 'rgx': '((v))/((_))/((ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['v', 'y', 'c', '_', 'h']
				version split: ['v', 'y', 'ch', '_']
				{'string': 'v/y/ch/_', 'rgx': '((v))/((_))/((ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['v', 'y', 'ch', '_']
				version split: ['v', 'y', 'ch', '_']
				{'string': 'v/y/ch/_', 'rgx': '((v))/((_))/((ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['v', 'y', 'ch', '_']
				version split: ['v', '_', 'y', '_', 'c', 'h']
				{'string': 'v/_/y/_/c/h', 'rgx': '((v))/((_))/((ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['v', '_', 'y', '_', 'c', 'h']
				version split: ['v', '_', 'y', '_', 'c', 'h']
				{'string': 'v/_/y/_/c/h', 'rgx': '((v))/((_))/((ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['v', '_', 'y', '_', 'c', 'h']
				version split: ['v', '_', 'y', '_', 'ch']
				{'string': 'v/_/y/_/ch', 'rgx': '((v))/((_))/((ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['v', '_', 'y', '_', 'ch']
				version split: ['v', '_', 'y', '_', 'ch']
				{'string': 'v/_/y/_/ch', 'rgx': '((v))/((_))/((ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['v', '_', 'y', '_', 'ch']
				version split: ['v', 'y', 'c', 'h', '_']
				{'string': 'v/y/c/h/_', 'rgx': '((v))/((_))/((ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['v', 'y', 'c', 'h', '_']
				version split: ['v', 'y', 'c', 'h', '_']
				{'string': 'v/y/c/h/_', 'rgx': '((v))/((_))/((ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['v', 'y', 'c', 'h', '_']
				version split: ['v', 'y', 'ch', '_']
				{'string': 'v/y/ch/_', 'rgx': '((v))/((_))/((ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['v', 'y', 'ch', '_']
				version split: ['v', 'y', 'ch', '_']
				{'string': 'v/y/ch/_', 'rgx': '((v))/((_))/((ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['v', 'y', 'ch', '_']
				version split: ['v', '_', 'y', 'c', '_', 'h']
				{'string': 'v/_/y/c/_/h', 'rgx': '((v))/((_))/((ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['v', '_', 'y', 'c', '_', 'h']
				version split: ['v', '_', 'y', 'c', '_', 'h']
				{'string': 'v/_/y/c/_/h', 'rgx': '((v))/((_))/((ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['v', '_', 'y', 'c', '_', 'h']
				version split: ['v', '_', 'y', 'ch', '_']
				{'string': 'v/_/y/ch/_', 'rgx': '((v))/((_))/((ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['v', '_', 'y', 'ch', '_']
				version split: ['v', '_', 'y', 'ch', '_']
				{'string': 'v/_/y/ch/_', 'rgx': '((v))/((_))/((ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['v', '_', 'y', 'ch', '_']
				version split: ['v', 'y', 'c', '_', '_', 'h']
				{'string': 'v/y/c/_/_/h', 'rgx': '((v))/((_))/((ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['v', 'y', 'c', '_', '_', 'h']
				version split: ['v', 'y', 'c', '_', '_', 'h']
				{'string': 'v/y/c/_/_/h', 'rgx': '((v))/((_))/((ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['v', 'y', 'c', '_', '_', 'h']
				version split: ['v', 'y', 'ch', '_', '_']
				{'string': 'v/y/ch/_/_', 'rgx': '((v))/((_))/((ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['v', 'y', 'ch', '_', '_']
				version split: ['v', 'y', 'ch', '_', '_']
				{'string': 'v/y/ch/_/_', 'rgx': '((v))/((_))/((ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['v', 'y', 'ch', '_', '_']
				version split: ['v', '_', 'y', '_', '_', 'c', 'h']
				{'string': 'v/_/y/_/_/c/h', 'rgx': '((v))/((_))/((ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['v', '_', 'y', '_', '_', 'c', 'h']
				version split: ['v', '_', 'y', '_', '_', 'c', 'h']
				{'string': 'v/_/y/_/_/c/h', 'rgx': '((v))/((_))/((ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['v', '_', 'y', '_', '_', 'c', 'h']
				version split: ['v', '_', 'y', '_', '_', 'ch']
				{'string': 'v/_/y/_/_/ch', 'rgx': '((v))/((_))/((ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['v', '_', 'y', '_', '_', 'ch']
				version split: ['v', '_', 'y', '_', '_', 'ch']
				{'string': 'v/_/y/_/_/ch', 'rgx': '((v))/((_))/((ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['v', '_', 'y', '_', '_', 'ch']
				version split: ['v', 'y', 'c', 'h', '_']
				{'string': 'v/y/c/h/_', 'rgx': '((v))/((_))/((ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['v', 'y', 'c', 'h', '_']
				version split: ['v', 'y', 'c', 'h', '_']
				{'string': 'v/y/c/h/_', 'rgx': '((v))/((_))/((ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['v', 'y', 'c', 'h', '_']
				version split: ['v', 'y', 'ch', '_']
				{'string': 'v/y/ch/_', 'rgx': '((v))/((_))/((ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['v', 'y', 'ch', '_']
				version split: ['v', 'y', 'ch', '_']
				{'string': 'v/y/ch/_', 'rgx': '((v))/((_))/((ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['v', 'y', 'ch', '_']
				version split: ['v', '_', 'y', 'c', 'h', '_']
				{'string': 'v/_/y/c/h/_', 'rgx': '((v))/((_))/((ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['v', '_', 'y', 'c', 'h', '_']
				version split: ['v', '_', 'y', 'c', 'h', '_']
				{'string': 'v/_/y/c/h/_', 'rgx': '((v))/((_))/((ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['v', '_', 'y', 'c', 'h', '_']
				version split: ['v', '_', 'y', 'ch', '_']
				{'string': 'v/_/y/ch/_', 'rgx': '((v))/((_))/((ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['v', '_', 'y', 'ch', '_']
				version split: ['v', '_', 'y', 'ch', '_']
				{'string': 'v/_/y/ch/_', 'rgx': '((v))/((_))/((ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['v', '_', 'y', 'ch', '_']
				version split: ['v', 'y', 'c', '_', 'h', '_']
				{'string': 'v/y/c/_/h/_', 'rgx': '((v))/((_))/((ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['v', 'y', 'c', '_', 'h', '_']
				version split: ['v', 'y', 'c', '_', 'h', '_']
				{'string': 'v/y/c/_/h/_', 'rgx': '((v))/((_))/((ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['v', 'y', 'c', '_', 'h', '_']
				version split: ['v', 'y', 'ch', '_', '_']
				{'string': 'v/y/ch/_/_', 'rgx': '((v))/((_))/((ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['v', 'y', 'ch', '_', '_']
				version split: ['v', 'y', 'ch', '_', '_']
				{'string': 'v/y/ch/_/_', 'rgx': '((v))/((_))/((ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['v', 'y', 'ch', '_', '_']
				version split: ['v', '_', 'y', '_', 'c', '_', 'h']
				{'string': 'v/_/y/_/c/_/h', 'rgx': '((v))/((_))/((ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['v', '_', 'y', '_', 'c', '_', 'h']
				version split: ['v', '_', 'y', '_', 'c', '_', 'h']
				{'string': 'v/_/y/_/c/_/h', 'rgx': '((v))/((_))/((ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['v', '_', 'y', '_', 'c', '_', 'h']
				version split: ['v', '_', 'y', '_', 'ch', '_']
				{'string': 'v/_/y/_/ch/_', 'rgx': '((v))/((_))/((ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['v', '_', 'y', '_', 'ch', '_']
				version split: ['v', '_', 'y', '_', 'ch', '_']
				{'string': 'v/_/y/_/ch/_', 'rgx': '((v))/((_))/((ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['v', '_', 'y', '_', 'ch', '_']
				version split: ['v', 'y', 'c', 'h', '_', '_']
				{'string': 'v/y/c/h/_/_', 'rgx': '((v))/((_))/((ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['v', 'y', 'c', 'h', '_', '_']
				version split: ['v', 'y', 'c', 'h', '_', '_']
				{'string': 'v/y/c/h/_/_', 'rgx': '((v))/((_))/((ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['v', 'y', 'c', 'h', '_', '_']
				version split: ['v', 'y', 'ch', '_', '_']
				{'string': 'v/y/ch/_/_', 'rgx': '((v))/((_))/((ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['v', 'y', 'ch', '_', '_']
				version split: ['v', 'y', 'ch', '_', '_']
				{'string': 'v/y/ch/_/_', 'rgx': '((v))/((_))/((ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['v', 'y', 'ch', '_', '_']
				version split: ['v', '_', 'y', 'c', '_', '_', 'h']
				{'string': 'v/_/y/c/_/_/h', 'rgx': '((v))/((_))/((ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['v', '_', 'y', 'c', '_', '_', 'h']
				version split: ['v', '_', 'y', 'c', '_', '_', 'h']
				{'string': 'v/_/y/c/_/_/h', 'rgx': '((v))/((_))/((ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['v', '_', 'y', 'c', '_', '_', 'h']
				version split: ['v', '_', 'y', 'ch', '_', '_']
				{'string': 'v/_/y/ch/_/_', 'rgx': '((v))/((_))/((ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['v', '_', 'y', 'ch', '_', '_']
				version split: ['v', '_', 'y', 'ch', '_', '_']
				{'string': 'v/_/y/ch/_/_', 'rgx': '((v))/((_))/((ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['v', '_', 'y', 'ch', '_', '_']
				version split: ['v', 'y', 'c', '_', '_', '_', 'h']
				{'string': 'v/y/c/_/_/_/h', 'rgx': '((v))/((_))/((ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['v', 'y', 'c', '_', '_', '_', 'h']
				version split: ['v', 'y', 'c', '_', '_', '_', 'h']
				{'string': 'v/y/c/_/_/_/h', 'rgx': '((v))/((_))/((ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['v', 'y', 'c', '_', '_', '_', 'h']
				version split: ['v', 'y', 'ch', '_', '_', '_']
				{'string': 'v/y/ch/_/_/_', 'rgx': '((v))/((_))/((ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['v', 'y', 'ch', '_', '_', '_']
				version split: ['v', 'y', 'ch', '_', '_', '_']
				{'string': 'v/y/ch/_/_/_', 'rgx': '((v))/((_))/((ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['v', 'y', 'ch', '_', '_', '_']
				version split: ['v', '_', 'y', '_', '_', '_', 'c', 'h']
				{'string': 'v/_/y/_/_/_/c', 'rgx': '((v))/((_))/((ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['v', '_', 'y', '_', '_', '_', 'c', 'h']
				version split: ['v', '_', 'y', '_', '_', '_', 'c', 'h']
				{'string': 'v/_/y/_/_/_/c', 'rgx': '((v))/((_))/((ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['v', '_', 'y', '_', '_', '_', 'c', 'h']
				version split: ['v', '_', 'y', '_', '_', '_', 'ch']
				{'string': 'v/_/y/_/_/_/ch', 'rgx': '((v))/((_))/((ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['v', '_', 'y', '_', '_', '_', 'ch']
				version split: ['v', '_', 'y', '_', '_', '_', 'ch']
				{'string': 'v/_/y/_/_/_/ch', 'rgx': '((v))/((_))/((ch)|(c))/((_))/((_))/((_))$'}
				_____REMOVING________['v', '_', 'y', '_', '_', '_', 'ch']
		FAIL: 
		only one version left: ['æ', '_', 'ch', '_', '_', '_']
		only one version left: ['æ', 'l', 'c', '_', '_', '_']
		only one version left: ['a', 'l', 'c', '_', '_', '_']
		only one version left: ['a', 'l', 'ch', '_', '_', '_']
		only one version left: ['e', '_', 'ch', '_', '_', '_']
		FAIL: 
		FAIL: 
		only one version left: ['e', 'l', 'c', '_', '_', '_']
		only one version left: ['e', 'l', 'ch', '_', '_', '_']
		FAIL: 
		only one version left: ['eu', '_', 'ch', '_', '_', '_']
		only one version left: ['i', '_', 'ch', '_', '_', '_']
		only one version left: ['i', 'l', 'c', '_', '_', '_']
		only one version left: ['i', 'l', 'k', '_', '_', '_']
		only one version left: ['u', '_', 'ch', '_', '_', '_']
		FAIL: 
		SPLIT: ['a', 'l', 'k', 'e', 'r', 'e']
		SPLIT: ['æ', '_', 'h.c', '_', '_', '_', '----!']
		SPLIT: ['æ', '_', 'ch', '_', '_', '_']
		['æ', '_', 'ch', '_', '_', '_']
		SPLIT: ['æ', 'l', 'c', '_', '_', '_']
		['æ', 'l', 'c', '_', '_', '_']
		SPLIT: ['a', 'l', 'c', '_', '_', '_']
		['a', 'l', 'c', '_', '_', '_']
		SPLIT: ['a', 'l', 'ch', '_', '_', '_']
		['a', 'l', 'ch', '_', '_', '_']
		SPLIT: ['e', '_', 'ch', '_', '_', '_']
		['e', '_', 'ch', '_', '_', '_']
		SPLIT: ['e', '_', 'h.ch.c', 'e', '_', 'e', '----!']
		SPLIT: ['e', '_', 'h.ch.c', 'e', '_', 'e', '----!']
		SPLIT: ['e', 'l', 'c', '_', '_', '_']
		['e', 'l', 'c', '_', '_', '_']
		SPLIT: ['e', 'l', 'ch', '_', '_', '_']
		['e', 'l', 'ch', '_', '_', '_']
		SPLIT: ['e', 'l', 'ch.c', 'e', '_', 'e', '----!']
		SPLIT: ['eu', '_', 'ch', '_', '_', '_']
		['eu', '_', 'ch', '_', '_', '_']
		SPLIT: ['i', '_', 'ch', '_', '_', '_']
		['i', '_', 'ch', '_', '_', '_']
		['i', '_', 'ch', '_', '_', '_']
		SPLIT: ['i', 'l', 'c', '_', '_', '_']
		['i', 'l', 'c', '_', '_', '_']
		['i', 'l', 'c', '_', '_', '_']
		SPLIT: ['i', 'l', 'k', '_', '_', '_']
		['i', 'l', 'k', '_', '_', '_']
		['i', 'l', 'k', '_', '_', '_']
		SPLIT: ['u', '_', 'ch', '_', '_', '_']
		['u', '_', 'ch', '_', '_', '_']
		['u', '_', 'ch', '_', '_', '_']
		SPLIT: ['v', '_', 'ch.c', '_', '_', '_', '----!']
		version for pattern VCCVCV is INVALID
		[{'æ', 'eu', 'v', 'u', 'a', 'i', 'e'}]
		5
		POSSIBLE CHANGE: 1 : Palatal Vicinity l-deletion
		OVERVIEW: version for pattern VCCVCV
{'æ', 'eu', 'v', 'u', 'a', 'i', 'e'}
faulty splits: 5
æh.c----! <-! æhc
eh.ch.cee----! <-! eche
eh.ch.cee----! <-! echen
elch.cee----! <-! elche
vch.c----! <-! vych
a | l | k | e | r | e
æ | _ | h.c | _ | _ | _ | ----!
æ | _ | ch | _ | _ | _
æ | l | c | _ | _ | _
a | l | c | _ | _ | _
a | l | ch | _ | _ | _
e | _ | ch | _ | _ | _
e | _ | h.ch.c | e | _ | e | ----!
e | _ | h.ch.c | e | _ | e | ----!
e | l | c | _ | _ | _
e | l | ch | _ | _ | _
e | l | ch.c | e | _ | e | ----!
eu | _ | ch | _ | _ | _
i | _ | ch | _ | _ | _
i | l | c | _ | _ | _
i | l | k | _ | _ | _
u | _ | ch | _ | _ | _
v | _ | ch.c | _ | _ | _ | ----!
1 : {'h', 'l'},{'u', 'l', '_'},{'c', 'l', '_'},{'ch', 'l', '_'},{'y', 'l', '_'}
4 : {'h', 'r', '_'},{'n', 'r', '_'},{'ch', 'r', '_'},{'c', 'r', '_'},{'c', 'r'}
	FOUND __ 0 __ VALID VERSION(S)
	POSSIBLE CHANGE: 1 : Palatal Vicinity l-deletion
	OVERVIEW: version for pattern VCCVCV
{'æ', 'eu', 'v', 'u', 'a', 'i', 'e'}
faulty splits: 5
æh.c----! <-! æhc
eh.ch.cee----! <-! eche
eh.ch.cee----! <-! echen
elch.cee----! <-! elche
vch.c----! <-! vych
a | l | k | e | r | e
æ | _ | h.c | _ | _ | _ | ----!
æ | _ | ch | _ | _ | _
æ | l | c | _ | _ | _
a | l | c | _ | _ | _
a | l | ch | _ | _ | _
e | _ | ch | _ | _ | _
e | _ | h.ch.c | e | _ | e | ----!
e | _ | h.ch.c | e | _ | e | ----!
e | l | c | _ | _ | _
e | l | ch | _ | _ | _
e | l | ch.c | e | _ | e | ----!
eu | _ | ch | _ | _ | _
i | _ | ch | _ | _ | _
i | l | c | _ | _ | _
i | l | k | _ | _ | _
u | _ | ch | _ | _ | _
v | _ | ch.c | _ | _ | _ | ----!
1 : {'h', 'l'},{'u', 'l', '_'},{'c', 'l', '_'},{'ch', 'l', '_'},{'y', 'l', '_'}
4 : {'h', 'r', '_'},{'n', 'r', '_'},{'ch', 'r', '_'},{'c', 'r', '_'},{'c', 'r'}
		[[{'lit': 'ch', 'ln': 2, 'index': 1}]]
		[[{'lit': 'ch', 'ln': 2, 'index': 2}]]
		[[{'lit': 'ch', 'ln': 2, 'index': 1}]]
		[[{'lit': 'ch', 'ln': 2, 'index': 1}]]
		[[{'lit': 'ch', 'ln': 2, 'index': 1}]]
		[[{'lit': 'ch', 'ln': 2, 'index': 2}]]
		[[{'lit': 'ch', 'ln': 2, 'index': 2}]]
		[[{'lit': 'ch', 'ln': 2, 'index': 2}], [{'lit': 'eu', 'ln': 2, 'index': 0}]]
		[[{'lit': 'ch', 'ln': 2, 'index': 2}], [{'lit': 'eu', 'ln': 2, 'index': 0}], [{'lit': 'ch', 'ln': 2, 'index': 2}, {'lit': 'eu', 'ln': 2, 'index': 0}]]
		[[{'lit': 'ch', 'ln': 2, 'index': 1}]]
		[[{'lit': 'ch', 'ln': 2, 'index': 1}]]
		[[{'lit': 'ch', 'ln': 2, 'index': 2}]]
		MIN pattern length=6
		Pattern VCVC is invalid
		Pattern VCC is invalid
		Pattern VVCC is invalid
		Pattern CC is invalid
		Pattern CCCC is invalid
		Pattern VCCV is invalid
		Pattern VCV is invalid
		Pattern VCCVC is invalid
		Pattern VC is invalid
		Pattern VVC is invalid
		Pattern CCC is invalid
		Pattern VCCCV is invalid
		Pattern VCCVCV is valid
		Pattern VCCC is invalid
		Making the selection for pattern: CVCCVCV
		Selection for pattern: CVCCVCV completed
		Making a version for pattern: CVCCVCV
				___CVCCVCV : 0___
					ANALYSING: æhc
						resolving (1)
						> version: æ/h/c
						TRYING: æ
						RESULT:  ['æ']
					ANALYSING: æch
						resolving (2)
						> version: æ/c/h
						TRYING: æ
						> version: æ/ch
						TRYING: æ
						RESULT:  ['æ']
					ANALYSING: ælc
						resolving (1)
						> version: æ/l/c
						TRYING: æ
						RESULT:  ['æ']
					ANALYSING: alc
						resolving (1)
						> version: a/l/c
						TRYING: a
						RESULT:  ['a']
					ANALYSING: alch
						resolving (2)
						> version: a/l/c/h
						TRYING: a
						> version: a/l/ch
						TRYING: a
						RESULT:  ['a']
					ANALYSING: alkere
						resolving (1)
						> version: a/l/k/e/r/e
						TRYING: a
						RESULT:  ['a']
					ANALYSING: ech
						resolving (2)
						> version: e/c/h
						TRYING: e
						> version: e/ch
						TRYING: e
						RESULT:  ['e']
					ANALYSING: eche
						resolving (2)
						> version: e/c/h/e
						TRYING: e
						> version: e/ch/e
						TRYING: e
						RESULT:  ['e']
					ANALYSING: echen
						resolving (2)
						> version: e/c/h/e/n
						TRYING: e
						> version: e/ch/e/n
						TRYING: e
						RESULT:  ['e']
					ANALYSING: elc
						resolving (1)
						> version: e/l/c
						TRYING: e
						RESULT:  ['e']
					ANALYSING: elch
						resolving (2)
						> version: e/l/c/h
						TRYING: e
						> version: e/l/ch
						TRYING: e
						RESULT:  ['e']
					ANALYSING: elche
						resolving (2)
						> version: e/l/c/h/e
						TRYING: e
						> version: e/l/ch/e
						TRYING: e
						RESULT:  ['e']
					ANALYSING: euch
						resolving (6)
						> version: e/u/c/h
						TRYING: e
						> version: e/u/c/h
						TRYING: e
						> version: e/u/ch
						TRYING: e
						> version: e/u/ch
						TRYING: e
						> version: eu/c/h
						TRYING: eu
						> version: eu/ch
						TRYING: eu
						RESULT:  ['e']
					ANALYSING: ich
						resolving (4)
						> version: i/c/h
						TRYING: i
						> version: i/c/h
						TRYING: i
						> version: i/ch
						TRYING: i
						> version: i/ch
						TRYING: i
						RESULT:  ['_']
					adding dashed alternative: ['_', 'i', 'c', 'h']
					adding dashed alternative: ['_', 'i', 'c', 'h']
					adding dashed alternative: ['_', 'i', 'ch']
					adding dashed alternative: ['_', 'i', 'ch']
					i/c/h(CCC)
i/c/h(VCC)
i/ch(CC)
i/ch(VC)
_/i/c/h(AACC)
_/i/c/h(AACC)
_/i/ch(AAC)
_/i/ch(AAC)
					ANALYSING: ilc
						resolving (2)
						> version: i/l/c
						TRYING: i
						> version: i/l/c
						TRYING: i
						RESULT:  ['_']
					adding dashed alternative: ['_', 'i', 'l', 'c']
					adding dashed alternative: ['_', 'i', 'l', 'c']
					i/l/c(CCC)
i/l/c(VCC)
_/i/l/c(AACC)
_/i/l/c(AACC)
					ANALYSING: ilk
						resolving (2)
						> version: i/l/k
						TRYING: i
						> version: i/l/k
						TRYING: i
						RESULT:  ['_']
					adding dashed alternative: ['_', 'i', 'l', 'k']
					adding dashed alternative: ['_', 'i', 'l', 'k']
					i/l/k(CCC)
i/l/k(VCC)
_/i/l/k(AACC)
_/i/l/k(AACC)
					ANALYSING: uch
						resolving (4)
						> version: u/c/h
						TRYING: u
						> version: u/c/h
						TRYING: u
						> version: u/ch
						TRYING: u
						> version: u/ch
						TRYING: u
						RESULT:  ['_']
					adding dashed alternative: ['_', 'u', 'c', 'h']
					adding dashed alternative: ['_', 'u', 'c', 'h']
					adding dashed alternative: ['_', 'u', 'ch']
					adding dashed alternative: ['_', 'u', 'ch']
					u/c/h(CCC)
u/c/h(VCC)
u/ch(CC)
u/ch(VC)
_/u/c/h(AACC)
_/u/c/h(AACC)
_/u/ch(AAC)
_/u/ch(AAC)
					ANALYSING: vych
						resolving (4)
						> version: v/y/c/h
						TRYING: v
						> version: v/y/c/h
						TRYING: v
						> version: v/y/ch
						TRYING: v
						> version: v/y/ch
						TRYING: v
						RESULT:  ['_']
					adding dashed alternative: ['_', 'v', 'y', 'c', 'h']
					adding dashed alternative: ['_', 'v', 'y', 'c', 'h']
					adding dashed alternative: ['_', 'v', 'y', 'ch']
					adding dashed alternative: ['_', 'v', 'y', 'ch']
					v/y/c/h(CCCC)
v/y/c/h(VVCC)
v/y/ch(CCC)
v/y/ch(VVC)
_/v/y/c/h(AAACC)
_/v/y/c/h(AAACC)
_/v/y/ch(AAAC)
_/v/y/ch(AAAC)
				___CVCCVCV : 1___
					ANALYSING: æhc
						resolving (1)
						> version: æ/h/c
						TRYING: h
						RESULT:  ['h']
					ANALYSING: æch
						resolving (2)
						> version: æ/c/h
						TRYING: c
						> version: æ/ch
						TRYING: ch
						>>> MULTIPLE RESOLVE OPTIONS: {'ch', 'c'}
						RESULT:  ['ch', 'c']
					ANALYSING: ælc
						resolving (1)
						> version: æ/l/c
						TRYING: l
						RESULT:  ['_']
					adding dashed alternative: ['æ', '_', 'l', 'c']
					æ/l/c(VCC)
æ/_/l/c(VACC)
					ANALYSING: alc
						resolving (1)
						> version: a/l/c
						TRYING: l
						RESULT:  ['_']
					adding dashed alternative: ['a', '_', 'l', 'c']
					a/l/c(VCC)
a/_/l/c(VACC)
					ANALYSING: alch
						resolving (2)
						> version: a/l/c/h
						TRYING: l
						> version: a/l/ch
						TRYING: l
						RESULT:  ['_']
					adding dashed alternative: ['a', '_', 'l', 'c', 'h']
					adding dashed alternative: ['a', '_', 'l', 'ch']
					a/l/c/h(VCCC)
a/l/ch(VCC)
a/_/l/c/h(VACCC)
a/_/l/ch(VACC)
					ANALYSING: alkere
						resolving (1)
						> version: a/l/k/e/r/e
						TRYING: l
						RESULT:  ['_']
					adding dashed alternative: ['a', '_', 'l', 'k', 'e', 'r', 'e']
					a/l/k/e/r/e(VCCVCV)
a/_/l/k/e/r/e(VACCVCV)
					ANALYSING: ech
						resolving (2)
						> version: e/c/h
						TRYING: c
						> version: e/ch
						TRYING: ch
						>>> MULTIPLE RESOLVE OPTIONS: {'ch', 'c'}
						RESULT:  ['ch', 'c']
					ANALYSING: eche
						resolving (2)
						> version: e/c/h/e
						TRYING: c
						> version: e/ch/e
						TRYING: ch
						>>> MULTIPLE RESOLVE OPTIONS: {'ch', 'c'}
						RESULT:  ['ch', 'c']
					ANALYSING: echen
						resolving (2)
						> version: e/c/h/e/n
						TRYING: c
						> version: e/ch/e/n
						TRYING: ch
						>>> MULTIPLE RESOLVE OPTIONS: {'ch', 'c'}
						RESULT:  ['ch', 'c']
					ANALYSING: elc
						resolving (1)
						> version: e/l/c
						TRYING: l
						RESULT:  ['_']
					adding dashed alternative: ['e', '_', 'l', 'c']
					e/l/c(VCC)
e/_/l/c(VACC)
					ANALYSING: elch
						resolving (2)
						> version: e/l/c/h
						TRYING: l
						> version: e/l/ch
						TRYING: l
						RESULT:  ['_']
					adding dashed alternative: ['e', '_', 'l', 'c', 'h']
					adding dashed alternative: ['e', '_', 'l', 'ch']
					e/l/c/h(VCCC)
e/l/ch(VCC)
e/_/l/c/h(VACCC)
e/_/l/ch(VACC)
					ANALYSING: elche
						resolving (2)
						> version: e/l/c/h/e
						TRYING: l
						> version: e/l/ch/e
						TRYING: l
						RESULT:  ['_']
					adding dashed alternative: ['e', '_', 'l', 'c', 'h', 'e']
					adding dashed alternative: ['e', '_', 'l', 'ch', 'e']
					e/l/c/h/e(VCCCV)
e/l/ch/e(VCCV)
e/_/l/c/h/e(VACCCV)
e/_/l/ch/e(VACCV)
					ANALYSING: euch
						resolving (6)
						> version: e/u/c/h
						TRYING: u
						> version: e/u/c/h
						TRYING: u
						> version: e/u/ch
						TRYING: u
						> version: e/u/ch
						TRYING: u
						> version: eu/c/h
						TRYING: c
						> version: eu/ch
						TRYING: ch
						>>> MULTIPLE RESOLVE OPTIONS: {'ch', 'c'}
						RESULT:  ['ch', 'c']
					ANALYSING: ich
						resolving (8)
						> version: i/c/h
						TRYING: c
						> version: i/c/h
						TRYING: c
						> version: i/ch
						TRYING: ch
						>>> MULTIPLE RESOLVE OPTIONS: {'ch', 'c'}
						> version: i/ch
						TRYING: ch
						>>> MULTIPLE RESOLVE OPTIONS: {'ch', 'c'}
						> version: _/i/c/h
						TRYING: i
						>>> MULTIPLE RESOLVE OPTIONS: {'ch', 'c'}
						> version: _/i/c/h
						TRYING: i
						>>> MULTIPLE RESOLVE OPTIONS: {'ch', 'c'}
						> version: _/i/ch
						TRYING: i
						>>> MULTIPLE RESOLVE OPTIONS: {'ch', 'c'}
						> version: _/i/ch
						TRYING: i
						>>> MULTIPLE RESOLVE OPTIONS: {'ch', 'c'}
						RESULT:  ['ch', 'c']
					ANALYSING: ilc
						resolving (4)
						> version: i/l/c
						TRYING: l
						> version: i/l/c
						TRYING: l
						> version: _/i/l/c
						TRYING: i
						> version: _/i/l/c
						TRYING: i
						RESULT:  ['_']
					adding dashed alternative: ['i', '_', 'l', 'c']
					adding dashed alternative: ['i', '_', 'l', 'c']
					adding dashed alternative: ['_', '_', 'i', 'l', 'c']
					adding dashed alternative: ['_', '_', 'i', 'l', 'c']
					i/l/c(CCC)
i/l/c(VCC)
_/i/l/c(AACC)
_/i/l/c(AACC)
i/_/l/c(AACC)
i/_/l/c(AACC)
_/_/i/l/c(AAACC)
_/_/i/l/c(AAACC)
					ANALYSING: ilk
						resolving (4)
						> version: i/l/k
						TRYING: l
						> version: i/l/k
						TRYING: l
						> version: _/i/l/k
						TRYING: i
						> version: _/i/l/k
						TRYING: i
						RESULT:  ['_']
					adding dashed alternative: ['i', '_', 'l', 'k']
					adding dashed alternative: ['i', '_', 'l', 'k']
					adding dashed alternative: ['_', '_', 'i', 'l', 'k']
					adding dashed alternative: ['_', '_', 'i', 'l', 'k']
					i/l/k(CCC)
i/l/k(VCC)
_/i/l/k(AACC)
_/i/l/k(AACC)
i/_/l/k(AACC)
i/_/l/k(AACC)
_/_/i/l/k(AAACC)
_/_/i/l/k(AAACC)
					ANALYSING: uch
						resolving (8)
						> version: u/c/h
						TRYING: c
						> version: u/c/h
						TRYING: c
						> version: u/ch
						TRYING: ch
						>>> MULTIPLE RESOLVE OPTIONS: {'ch', 'c'}
						> version: u/ch
						TRYING: ch
						>>> MULTIPLE RESOLVE OPTIONS: {'ch', 'c'}
						> version: _/u/c/h
						TRYING: u
						>>> MULTIPLE RESOLVE OPTIONS: {'ch', 'c'}
						> version: _/u/c/h
						TRYING: u
						>>> MULTIPLE RESOLVE OPTIONS: {'ch', 'c'}
						> version: _/u/ch
						TRYING: u
						>>> MULTIPLE RESOLVE OPTIONS: {'ch', 'c'}
						> version: _/u/ch
						TRYING: u
						>>> MULTIPLE RESOLVE OPTIONS: {'ch', 'c'}
						RESULT:  ['ch', 'c']
					ANALYSING: vych
						resolving (8)
						> version: v/y/c/h
						TRYING: y
						> version: v/y/c/h
						TRYING: y
						> version: v/y/ch
						TRYING: y
						> version: v/y/ch
						TRYING: y
						> version: _/v/y/c/h
						TRYING: v
						> version: _/v/y/c/h
						TRYING: v
						> version: _/v/y/ch
						TRYING: v
						> version: _/v/y/ch
						TRYING: v
						RESULT:  ['_']
					adding dashed alternative: ['v', '_', 'y', 'c', 'h']
					adding dashed alternative: ['v', '_', 'y', 'c', 'h']
					adding dashed alternative: ['v', '_', 'y', 'ch']
					adding dashed alternative: ['v', '_', 'y', 'ch']
					adding dashed alternative: ['_', '_', 'v', 'y', 'c', 'h']
					adding dashed alternative: ['_', '_', 'v', 'y', 'c', 'h']
					adding dashed alternative: ['_', '_', 'v', 'y', 'ch']
					adding dashed alternative: ['_', '_', 'v', 'y', 'ch']
					v/y/c/h(CCCC)
v/y/c/h(VVCC)
v/y/ch(CCC)
v/y/ch(VVC)
_/v/y/c/h(AAACC)
_/v/y/c/h(AAACC)
_/v/y/ch(AAAC)
_/v/y/ch(AAAC)
v/_/y/c/h(AAACC)
v/_/y/c/h(AAACC)
v/_/y/ch(AAAC)
v/_/y/ch(AAAC)
_/_/v/y/c/h(AAAACC)
_/_/v/y/c/h(AAAACC)
_/_/v/y/ch(AAAAC)
_/_/v/y/ch(AAAAC)
				___CVCCVCV : 2___
					ANALYSING: æhc
						resolving (1)
						> version: æ/h/c
						TRYING: c
						RESULT:  ['c']
					ANALYSING: æch
						resolving (2)
						> version: æ/c/h
						TRYING: h
						> version: æ/ch
						RESULT:  ['h']
					ANALYSING: ælc
						resolving (2)
						> version: æ/l/c
						TRYING: c
						> version: æ/_/l/c
						TRYING: l
						adding blocked set: C = C >> h, c, l
						RESULT:  ['c']
					ANALYSING: alc
						resolving (2)
						> version: a/l/c
						TRYING: c
						> version: a/_/l/c
						TRYING: l
						adding blocked set: C = C >> h, c, l
						RESULT:  ['c']
					ANALYSING: alch
						resolving (4)
						> version: a/l/c/h
						TRYING: c
						> version: a/l/ch
						TRYING: ch
						>>> MULTIPLE RESOLVE OPTIONS: {'ch', 'c'}
						> version: a/_/l/c/h
						TRYING: l
						adding blocked set: C = C >> h, c, l
						>>> MULTIPLE RESOLVE OPTIONS: {'ch', 'c'}
						> version: a/_/l/ch
						TRYING: l
						adding blocked set: C = C >> h, c, l
						>>> MULTIPLE RESOLVE OPTIONS: {'ch', 'c'}
						RESULT:  ['ch', 'c']
					ANALYSING: alkere
						resolving (2)
						> version: a/l/k/e/r/e
						TRYING: k
						> version: a/_/l/k/e/r/e
						TRYING: l
						adding blocked set: C = C >> h, c, ch, l
						RESULT:  ['k']
					ANALYSING: ech
						resolving (2)
						> version: e/c/h
						TRYING: h
						> version: e/ch
						RESULT:  ['h']
					ANALYSING: eche
						resolving (2)
						> version: e/c/h/e
						TRYING: h
						> version: e/ch/e
						TRYING: e
						RESULT:  ['h']
					ANALYSING: echen
						resolving (2)
						> version: e/c/h/e/n
						TRYING: h
						> version: e/ch/e/n
						TRYING: e
						RESULT:  ['h']
					ANALYSING: elc
						resolving (2)
						> version: e/l/c
						TRYING: c
						> version: e/_/l/c
						TRYING: l
						adding blocked set: C = C >> k, c, h, l, ch
						RESULT:  ['c']
					ANALYSING: elch
						resolving (4)
						> version: e/l/c/h
						TRYING: c
						> version: e/l/ch
						TRYING: ch
						>>> MULTIPLE RESOLVE OPTIONS: {'ch', 'c'}
						> version: e/_/l/c/h
						TRYING: l
						adding blocked set: C = C >> k, c, h, l, ch
						>>> MULTIPLE RESOLVE OPTIONS: {'ch', 'c'}
						> version: e/_/l/ch
						TRYING: l
						adding blocked set: C = C >> k, c, h, l, ch
						>>> MULTIPLE RESOLVE OPTIONS: {'ch', 'c'}
						RESULT:  ['ch', 'c']
					ANALYSING: elche
						resolving (4)
						> version: e/l/c/h/e
						TRYING: c
						> version: e/l/ch/e
						TRYING: ch
						>>> MULTIPLE RESOLVE OPTIONS: {'ch', 'c'}
						> version: e/_/l/c/h/e
						TRYING: l
						adding blocked set: C = C >> k, c, h, l, ch
						>>> MULTIPLE RESOLVE OPTIONS: {'ch', 'c'}
						> version: e/_/l/ch/e
						TRYING: l
						adding blocked set: C = C >> k, c, h, l, ch
						>>> MULTIPLE RESOLVE OPTIONS: {'ch', 'c'}
						RESULT:  ['ch', 'c']
					ANALYSING: euch
						resolving (6)
						> version: e/u/c/h
						TRYING: c
						> version: e/u/c/h
						TRYING: c
						> version: e/u/ch
						TRYING: ch
						>>> MULTIPLE RESOLVE OPTIONS: {'ch', 'c'}
						> version: e/u/ch
						TRYING: ch
						>>> MULTIPLE RESOLVE OPTIONS: {'ch', 'c'}
						> version: eu/c/h
						TRYING: h
						>>> MULTIPLE RESOLVE OPTIONS: {'h', 'ch', 'c'}
						> version: eu/ch
						>>> MULTIPLE RESOLVE OPTIONS: {'h', 'ch', 'c'}
						RESULT:  ['h', 'ch', 'c']
					ANALYSING: ich
						resolving (8)
						> version: i/c/h
						TRYING: h
						> version: i/c/h
						TRYING: h
						> version: i/ch
						> version: i/ch
						> version: _/i/c/h
						TRYING: c
						>>> MULTIPLE RESOLVE OPTIONS: {'h', 'c'}
						> version: _/i/c/h
						TRYING: c
						>>> MULTIPLE RESOLVE OPTIONS: {'h', 'c'}
						> version: _/i/ch
						TRYING: ch
						>>> MULTIPLE RESOLVE OPTIONS: {'h', 'ch', 'c'}
						> version: _/i/ch
						TRYING: ch
						>>> MULTIPLE RESOLVE OPTIONS: {'h', 'ch', 'c'}
						RESULT:  ['h', 'ch', 'c']
					ANALYSING: ilc
						resolving (8)
						> version: i/l/c
						TRYING: c
						> version: i/l/c
						TRYING: c
						> version: _/i/l/c
						TRYING: l
						adding blocked set: C = C >> k, c, h, l, ch
						> version: _/i/l/c
						TRYING: l
						adding blocked set: C = C >> k, c, h, l, ch
						> version: i/_/l/c
						TRYING: l
						adding blocked set: C = C >> k, c, h, l, ch
						> version: i/_/l/c
						TRYING: l
						adding blocked set: C = C >> k, c, h, l, ch
						> version: _/_/i/l/c
						TRYING: i
						adding blocked set: C = C >> k, c, h, i, ch
						> version: _/_/i/l/c
						TRYING: i
						adding blocked set: C = C >> k, c, h, i, ch
						RESULT:  ['c']
					ANALYSING: ilk
						resolving (8)
						> version: i/l/k
						TRYING: k
						> version: i/l/k
						TRYING: k
						> version: _/i/l/k
						TRYING: l
						adding blocked set: C = C >> k, c, h, l, ch
						> version: _/i/l/k
						TRYING: l
						adding blocked set: C = C >> k, c, h, l, ch
						> version: i/_/l/k
						TRYING: l
						adding blocked set: C = C >> k, c, h, l, ch
						> version: i/_/l/k
						TRYING: l
						adding blocked set: C = C >> k, c, h, l, ch
						> version: _/_/i/l/k
						TRYING: i
						adding blocked set: C = C >> k, c, h, i, ch
						> version: _/_/i/l/k
						TRYING: i
						adding blocked set: C = C >> k, c, h, i, ch
						RESULT:  ['k']
					ANALYSING: uch
						resolving (8)
						> version: u/c/h
						TRYING: h
						> version: u/c/h
						TRYING: h
						> version: u/ch
						> version: u/ch
						> version: _/u/c/h
						TRYING: c
						>>> MULTIPLE RESOLVE OPTIONS: {'h', 'c'}
						> version: _/u/c/h
						TRYING: c
						>>> MULTIPLE RESOLVE OPTIONS: {'h', 'c'}
						> version: _/u/ch
						TRYING: ch
						>>> MULTIPLE RESOLVE OPTIONS: {'h', 'ch', 'c'}
						> version: _/u/ch
						TRYING: ch
						>>> MULTIPLE RESOLVE OPTIONS: {'h', 'ch', 'c'}
						RESULT:  ['h', 'ch', 'c']
					ANALYSING: vych
						resolving (16)
						> version: v/y/c/h
						TRYING: c
						> version: v/y/c/h
						TRYING: c
						> version: v/y/ch
						TRYING: ch
						>>> MULTIPLE RESOLVE OPTIONS: {'ch', 'c'}
						> version: v/y/ch
						TRYING: ch
						>>> MULTIPLE RESOLVE OPTIONS: {'ch', 'c'}
						> version: _/v/y/c/h
						TRYING: y
						adding blocked set: C = C >> y, k, c, h, ch
						>>> MULTIPLE RESOLVE OPTIONS: {'ch', 'c'}
						> version: _/v/y/c/h
						TRYING: y
						adding blocked set: C = C >> y, k, c, h, ch
						>>> MULTIPLE RESOLVE OPTIONS: {'ch', 'c'}
						> version: _/v/y/ch
						TRYING: y
						adding blocked set: C = C >> y, k, c, h, ch
						>>> MULTIPLE RESOLVE OPTIONS: {'ch', 'c'}
						> version: _/v/y/ch
						TRYING: y
						adding blocked set: C = C >> y, k, c, h, ch
						>>> MULTIPLE RESOLVE OPTIONS: {'ch', 'c'}
						> version: v/_/y/c/h
						TRYING: y
						adding blocked set: C = C >> y, k, c, h, ch
						>>> MULTIPLE RESOLVE OPTIONS: {'ch', 'c'}
						> version: v/_/y/c/h
						TRYING: y
						adding blocked set: C = C >> y, k, c, h, ch
						>>> MULTIPLE RESOLVE OPTIONS: {'ch', 'c'}
						> version: v/_/y/ch
						TRYING: y
						adding blocked set: C = C >> y, k, c, h, ch
						>>> MULTIPLE RESOLVE OPTIONS: {'ch', 'c'}
						> version: v/_/y/ch
						TRYING: y
						adding blocked set: C = C >> y, k, c, h, ch
						>>> MULTIPLE RESOLVE OPTIONS: {'ch', 'c'}
						> version: _/_/v/y/c/h
						TRYING: v
						adding blocked set: C = C >> v, k, c, h, ch
						>>> MULTIPLE RESOLVE OPTIONS: {'ch', 'c'}
						> version: _/_/v/y/c/h
						TRYING: v
						adding blocked set: C = C >> v, k, c, h, ch
						>>> MULTIPLE RESOLVE OPTIONS: {'ch', 'c'}
						> version: _/_/v/y/ch
						TRYING: v
						adding blocked set: C = C >> v, k, c, h, ch
						>>> MULTIPLE RESOLVE OPTIONS: {'ch', 'c'}
						> version: _/_/v/y/ch
						TRYING: v
						adding blocked set: C = C >> v, k, c, h, ch
						>>> MULTIPLE RESOLVE OPTIONS: {'ch', 'c'}
						RESULT:  ['ch', 'c']
				___CVCCVCV : 3___
					ANALYSING: æhc
						resolving (1)
						> version: æ/h/c
						RESULT:  ['_']
					adding dashed alternative: ['æ', 'h', 'c', '_']
					æ/h/c(VCC)
æ/h/c/_(VCCA)
					ANALYSING: æch
						resolving (2)
						> version: æ/c/h
						> version: æ/ch
						RESULT:  ['_']
					adding dashed alternative: ['æ', 'c', 'h', '_']
					adding dashed alternative: ['æ', 'ch', '_']
					æ/c/h(VCC)
æ/ch(VC)
æ/c/h/_(VCCA)
æ/ch/_(VCA)
					ANALYSING: ælc
						resolving (2)
						> version: æ/l/c
						> version: æ/_/l/c
						TRYING: c
						RESULT:  ['c']
					ANALYSING: alc
						resolving (2)
						> version: a/l/c
						> version: a/_/l/c
						TRYING: c
						RESULT:  ['c']
					ANALYSING: alch
						resolving (4)
						> version: a/l/c/h
						TRYING: h
						> version: a/l/ch
						> version: a/_/l/c/h
						TRYING: c
						>>> MULTIPLE RESOLVE OPTIONS: {'h', 'c'}
						> version: a/_/l/ch
						TRYING: ch
						>>> MULTIPLE RESOLVE OPTIONS: {'h', 'ch', 'c'}
						RESULT:  ['h', 'ch', 'c']
					ANALYSING: alkere
						resolving (2)
						> version: a/l/k/e/r/e
						TRYING: e
						> version: a/_/l/k/e/r/e
						TRYING: k
						RESULT:  ['k']
					ANALYSING: ech
						resolving (2)
						> version: e/c/h
						> version: e/ch
						RESULT:  ['_']
					adding dashed alternative: ['e', 'c', 'h', '_']
					adding dashed alternative: ['e', 'ch', '_']
					e/c/h(VCC)
e/ch(VC)
e/c/h/_(VCCA)
e/ch/_(VCA)
					ANALYSING: eche
						resolving (2)
						> version: e/c/h/e
						TRYING: e
						> version: e/ch/e
						RESULT:  ['_']
					adding dashed alternative: ['e', 'c', 'h', '_', 'e']
					adding dashed alternative: ['e', 'ch', 'e', '_']
					e/c/h/e(VCCV)
e/ch/e(VCV)
e/c/h/_/e(VCCAV)
e/ch/e/_(VCVA)
					ANALYSING: echen
						resolving (2)
						> version: e/c/h/e/n
						TRYING: e
						> version: e/ch/e/n
						TRYING: n
						adding blocked set: C = C >> k, c, h, n, ch, _
						RESULT:  ['_']
					adding dashed alternative: ['e', 'c', 'h', '_', 'e', 'n']
					adding dashed alternative: ['e', 'ch', 'e', '_', 'n']
					e/c/h/e/n(VCCVC)
e/ch/e/n(VCVC)
e/c/h/_/e/n(VCCAVC)
e/ch/e/_/n(VCVAC)
					ANALYSING: elc
						resolving (2)
						> version: e/l/c
						> version: e/_/l/c
						TRYING: c
						RESULT:  ['c']
					ANALYSING: elch
						resolving (4)
						> version: e/l/c/h
						TRYING: h
						> version: e/l/ch
						> version: e/_/l/c/h
						TRYING: c
						>>> MULTIPLE RESOLVE OPTIONS: {'h', 'c'}
						> version: e/_/l/ch
						TRYING: ch
						>>> MULTIPLE RESOLVE OPTIONS: {'h', 'ch', 'c'}
						RESULT:  ['h', 'ch', 'c']
					ANALYSING: elche
						resolving (4)
						> version: e/l/c/h/e
						TRYING: h
						> version: e/l/ch/e
						TRYING: e
						> version: e/_/l/c/h/e
						TRYING: c
						>>> MULTIPLE RESOLVE OPTIONS: {'h', 'c'}
						> version: e/_/l/ch/e
						TRYING: ch
						>>> MULTIPLE RESOLVE OPTIONS: {'h', 'ch', 'c'}
						RESULT:  ['h', 'ch', 'c']
					ANALYSING: euch
						resolving (6)
						> version: e/u/c/h
						TRYING: h
						> version: e/u/c/h
						TRYING: h
						> version: e/u/ch
						> version: e/u/ch
						> version: eu/c/h
						> version: eu/ch
						RESULT:  ['h']
					ANALYSING: ich
						resolving (8)
						> version: i/c/h
						> version: i/c/h
						> version: i/ch
						> version: i/ch
						> version: _/i/c/h
						TRYING: h
						> version: _/i/c/h
						TRYING: h
						> version: _/i/ch
						> version: _/i/ch
						RESULT:  ['h']
					ANALYSING: ilc
						resolving (8)
						> version: i/l/c
						> version: i/l/c
						> version: _/i/l/c
						TRYING: c
						> version: _/i/l/c
						TRYING: c
						> version: i/_/l/c
						TRYING: c
						> version: i/_/l/c
						TRYING: c
						> version: _/_/i/l/c
						TRYING: l
						adding blocked set: C = C >> k, c, h, l, ch, _
						> version: _/_/i/l/c
						TRYING: l
						adding blocked set: C = C >> k, c, h, l, ch, _
						RESULT:  ['c']
					ANALYSING: ilk
						resolving (8)
						> version: i/l/k
						> version: i/l/k
						> version: _/i/l/k
						TRYING: k
						> version: _/i/l/k
						TRYING: k
						> version: i/_/l/k
						TRYING: k
						> version: i/_/l/k
						TRYING: k
						> version: _/_/i/l/k
						TRYING: l
						adding blocked set: C = C >> k, c, h, l, ch, _
						> version: _/_/i/l/k
						TRYING: l
						adding blocked set: C = C >> k, c, h, l, ch, _
						RESULT:  ['k']
					ANALYSING: uch
						resolving (8)
						> version: u/c/h
						> version: u/c/h
						> version: u/ch
						> version: u/ch
						> version: _/u/c/h
						TRYING: h
						> version: _/u/c/h
						TRYING: h
						> version: _/u/ch
						> version: _/u/ch
						RESULT:  ['h']
					ANALYSING: vych
						resolving (16)
						> version: v/y/c/h
						TRYING: h
						> version: v/y/c/h
						TRYING: h
						> version: v/y/ch
						> version: v/y/ch
						> version: _/v/y/c/h
						TRYING: c
						>>> MULTIPLE RESOLVE OPTIONS: {'h', 'c'}
						> version: _/v/y/c/h
						TRYING: c
						>>> MULTIPLE RESOLVE OPTIONS: {'h', 'c'}
						> version: _/v/y/ch
						TRYING: ch
						>>> MULTIPLE RESOLVE OPTIONS: {'h', 'ch', 'c'}
						> version: _/v/y/ch
						TRYING: ch
						>>> MULTIPLE RESOLVE OPTIONS: {'h', 'ch', 'c'}
						> version: v/_/y/c/h
						TRYING: c
						>>> MULTIPLE RESOLVE OPTIONS: {'h', 'ch', 'c'}
						> version: v/_/y/c/h
						TRYING: c
						>>> MULTIPLE RESOLVE OPTIONS: {'h', 'ch', 'c'}
						> version: v/_/y/ch
						TRYING: ch
						>>> MULTIPLE RESOLVE OPTIONS: {'h', 'ch', 'c'}
						> version: v/_/y/ch
						TRYING: ch
						>>> MULTIPLE RESOLVE OPTIONS: {'h', 'ch', 'c'}
						> version: _/_/v/y/c/h
						TRYING: y
						adding blocked set: C = C >> k, y, c, h, ch, _
						>>> MULTIPLE RESOLVE OPTIONS: {'h', 'ch', 'c'}
						> version: _/_/v/y/c/h
						TRYING: y
						adding blocked set: C = C >> k, y, c, h, ch, _
						>>> MULTIPLE RESOLVE OPTIONS: {'h', 'ch', 'c'}
						> version: _/_/v/y/ch
						TRYING: y
						adding blocked set: C = C >> k, y, c, h, ch, _
						>>> MULTIPLE RESOLVE OPTIONS: {'h', 'ch', 'c'}
						> version: _/_/v/y/ch
						TRYING: y
						adding blocked set: C = C >> k, y, c, h, ch, _
						>>> MULTIPLE RESOLVE OPTIONS: {'h', 'ch', 'c'}
						RESULT:  ['h', 'ch', 'c']
				___CVCCVCV : 4___
					ANALYSING: æhc
						resolving (2)
						> version: æ/h/c
						> version: æ/h/c/_
						RESULT:  ['_']
					adding dashed alternative: ['æ', 'h', 'c', '_']
					adding dashed alternative: ['æ', 'h', 'c', '_', '_']
					æ/h/c(VCC)
æ/h/c/_(VCCA)
æ/h/c/_(VCCA)
æ/h/c/_/_(VCCAA)
					ANALYSING: æch
						resolving (4)
						> version: æ/c/h
						> version: æ/ch
						> version: æ/c/h/_
						> version: æ/ch/_
						RESULT:  ['_']
					adding dashed alternative: ['æ', 'c', 'h', '_']
					adding dashed alternative: ['æ', 'ch', '_']
					adding dashed alternative: ['æ', 'c', 'h', '_', '_']
					adding dashed alternative: ['æ', 'ch', '_', '_']
					æ/c/h(VCC)
æ/ch(VC)
æ/c/h/_(VCCA)
æ/ch/_(VCA)
æ/c/h/_(VCCA)
æ/ch/_(VCA)
æ/c/h/_/_(VCCAA)
æ/ch/_/_(VCAA)
					ANALYSING: ælc
						resolving (2)
						> version: æ/l/c
						> version: æ/_/l/c
						RESULT:  ['_']
					adding dashed alternative: ['æ', 'l', 'c', '_']
					adding dashed alternative: ['æ', '_', 'l', 'c', '_']
					æ/l/c(VCC)
æ/_/l/c(VACC)
æ/l/c/_(VCCA)
æ/_/l/c/_(VACCA)
					ANALYSING: alc
						resolving (2)
						> version: a/l/c
						> version: a/_/l/c
						RESULT:  ['_']
					adding dashed alternative: ['a', 'l', 'c', '_']
					adding dashed alternative: ['a', '_', 'l', 'c', '_']
					a/l/c(VCC)
a/_/l/c(VACC)
a/l/c/_(VCCA)
a/_/l/c/_(VACCA)
					ANALYSING: alch
						resolving (4)
						> version: a/l/c/h
						> version: a/l/ch
						> version: a/_/l/c/h
						TRYING: h
						> version: a/_/l/ch
						RESULT:  ['h']
					ANALYSING: alkere
						resolving (2)
						> version: a/l/k/e/r/e
						TRYING: r
						> version: a/_/l/k/e/r/e
						TRYING: e
						RESULT:  ['_']
					adding dashed alternative: ['a', 'l', 'k', 'e', '_', 'r', 'e']
					adding dashed alternative: ['a', '_', 'l', 'k', '_', 'e', 'r', 'e']
					a/l/k/e/r/e(VCCVCV)
a/_/l/k/e/r/e(VACCVCV)
a/l/k/e/_/r/e(VCCVACV)
a/_/l/k/_/e/r/e(VACCAVCV)
					ANALYSING: ech
						resolving (4)
						> version: e/c/h
						> version: e/ch
						> version: e/c/h/_
						> version: e/ch/_
						RESULT:  ['_']
					adding dashed alternative: ['e', 'c', 'h', '_']
					adding dashed alternative: ['e', 'ch', '_']
					adding dashed alternative: ['e', 'c', 'h', '_', '_']
					adding dashed alternative: ['e', 'ch', '_', '_']
					e/c/h(VCC)
e/ch(VC)
e/c/h/_(VCCA)
e/ch/_(VCA)
e/c/h/_(VCCA)
e/ch/_(VCA)
e/c/h/_/_(VCCAA)
e/ch/_/_(VCAA)
					ANALYSING: eche
						resolving (4)
						> version: e/c/h/e
						> version: e/ch/e
						> version: e/c/h/_/e
						TRYING: e
						> version: e/ch/e/_
						RESULT:  ['_']
					adding dashed alternative: ['e', 'c', 'h', 'e', '_']
					adding dashed alternative: ['e', 'ch', 'e', '_']
					adding dashed alternative: ['e', 'c', 'h', '_', '_', 'e']
					adding dashed alternative: ['e', 'ch', 'e', '_', '_']
					e/c/h/e(VCCV)
e/ch/e(VCV)
e/c/h/_/e(VCCAV)
e/ch/e/_(VCVA)
e/c/h/e/_(VCCVA)
e/ch/e/_(VCVA)
e/c/h/_/_/e(VCCAAV)
e/ch/e/_/_(VCVAA)
					ANALYSING: echen
						resolving (4)
						> version: e/c/h/e/n
						TRYING: n
						> version: e/ch/e/n
						> version: e/c/h/_/e/n
						TRYING: e
						> version: e/ch/e/_/n
						TRYING: n
						RESULT:  ['_']
					adding dashed alternative: ['e', 'c', 'h', 'e', '_', 'n']
					adding dashed alternative: ['e', 'ch', 'e', 'n', '_']
					adding dashed alternative: ['e', 'c', 'h', '_', '_', 'e', 'n']
					adding dashed alternative: ['e', 'ch', 'e', '_', '_', 'n']
					e/c/h/e/n(VCCVC)
e/ch/e/n(VCVC)
e/c/h/_/e/n(VCCAVC)
e/ch/e/_/n(VCVAC)
e/c/h/e/_/n(VCCVAC)
e/ch/e/n/_(VCVCA)
e/c/h/_/_/e/n(VCCAAVC)
e/ch/e/_/_/n(VCVAAC)
					ANALYSING: elc
						resolving (2)
						> version: e/l/c
						> version: e/_/l/c
						RESULT:  ['_']
					adding dashed alternative: ['e', 'l', 'c', '_']
					adding dashed alternative: ['e', '_', 'l', 'c', '_']
					e/l/c(VCC)
e/_/l/c(VACC)
e/l/c/_(VCCA)
e/_/l/c/_(VACCA)
					ANALYSING: elch
						resolving (4)
						> version: e/l/c/h
						> version: e/l/ch
						> version: e/_/l/c/h
						TRYING: h
						> version: e/_/l/ch
						RESULT:  ['h']
					ANALYSING: elche
						resolving (4)
						> version: e/l/c/h/e
						TRYING: e
						> version: e/l/ch/e
						> version: e/_/l/c/h/e
						TRYING: h
						> version: e/_/l/ch/e
						TRYING: e
						RESULT:  ['h']
					ANALYSING: euch
						resolving (6)
						> version: e/u/c/h
						> version: e/u/c/h
						> version: e/u/ch
						> version: e/u/ch
						> version: eu/c/h
						> version: eu/ch
						RESULT:  ['_']
					adding dashed alternative: ['e', 'u', 'c', 'h', '_']
					adding dashed alternative: ['e', 'u', 'c', 'h', '_']
					adding dashed alternative: ['e', 'u', 'ch', '_']
					adding dashed alternative: ['e', 'u', 'ch', '_']
					adding dashed alternative: ['eu', 'c', 'h', '_']
					adding dashed alternative: ['eu', 'ch', '_']
					e/u/c/h(VCCC)
e/u/c/h(VVCC)
e/u/ch(VCC)
e/u/ch(VVC)
eu/c/h(VCC)
eu/ch(VC)
e/u/c/h/_(VACCA)
e/u/c/h/_(VACCA)
e/u/ch/_(VACA)
e/u/ch/_(VACA)
eu/c/h/_(VCCA)
eu/ch/_(VCA)
					ANALYSING: ich
						resolving (8)
						> version: i/c/h
						> version: i/c/h
						> version: i/ch
						> version: i/ch
						> version: _/i/c/h
						> version: _/i/c/h
						> version: _/i/ch
						> version: _/i/ch
						RESULT:  ['_']
					adding dashed alternative: ['i', 'c', 'h', '_']
					adding dashed alternative: ['i', 'c', 'h', '_']
					adding dashed alternative: ['i', 'ch', '_']
					adding dashed alternative: ['i', 'ch', '_']
					adding dashed alternative: ['_', 'i', 'c', 'h', '_']
					adding dashed alternative: ['_', 'i', 'c', 'h', '_']
					adding dashed alternative: ['_', 'i', 'ch', '_']
					adding dashed alternative: ['_', 'i', 'ch', '_']
					i/c/h(CCC)
i/c/h(VCC)
i/ch(CC)
i/ch(VC)
_/i/c/h(AACC)
_/i/c/h(AACC)
_/i/ch(AAC)
_/i/ch(AAC)
i/c/h/_(ACCA)
i/c/h/_(ACCA)
i/ch/_(ACA)
i/ch/_(ACA)
_/i/c/h/_(AACCA)
_/i/c/h/_(AACCA)
_/i/ch/_(AACA)
_/i/ch/_(AACA)
					ANALYSING: ilc
						resolving (8)
						> version: i/l/c
						> version: i/l/c
						> version: _/i/l/c
						> version: _/i/l/c
						> version: i/_/l/c
						> version: i/_/l/c
						> version: _/_/i/l/c
						TRYING: c
						> version: _/_/i/l/c
						TRYING: c
						RESULT:  ['c']
					ANALYSING: ilk
						resolving (8)
						> version: i/l/k
						> version: i/l/k
						> version: _/i/l/k
						> version: _/i/l/k
						> version: i/_/l/k
						> version: i/_/l/k
						> version: _/_/i/l/k
						TRYING: k
						> version: _/_/i/l/k
						TRYING: k
						RESULT:  ['k']
					ANALYSING: uch
						resolving (8)
						> version: u/c/h
						> version: u/c/h
						> version: u/ch
						> version: u/ch
						> version: _/u/c/h
						> version: _/u/c/h
						> version: _/u/ch
						> version: _/u/ch
						RESULT:  ['_']
					adding dashed alternative: ['u', 'c', 'h', '_']
					adding dashed alternative: ['u', 'c', 'h', '_']
					adding dashed alternative: ['u', 'ch', '_']
					adding dashed alternative: ['u', 'ch', '_']
					adding dashed alternative: ['_', 'u', 'c', 'h', '_']
					adding dashed alternative: ['_', 'u', 'c', 'h', '_']
					adding dashed alternative: ['_', 'u', 'ch', '_']
					adding dashed alternative: ['_', 'u', 'ch', '_']
					u/c/h(CCC)
u/c/h(VCC)
u/ch(CC)
u/ch(VC)
_/u/c/h(AACC)
_/u/c/h(AACC)
_/u/ch(AAC)
_/u/ch(AAC)
u/c/h/_(ACCA)
u/c/h/_(ACCA)
u/ch/_(ACA)
u/ch/_(ACA)
_/u/c/h/_(AACCA)
_/u/c/h/_(AACCA)
_/u/ch/_(AACA)
_/u/ch/_(AACA)
					ANALYSING: vych
						resolving (16)
						> version: v/y/c/h
						> version: v/y/c/h
						> version: v/y/ch
						> version: v/y/ch
						> version: _/v/y/c/h
						TRYING: h
						> version: _/v/y/c/h
						TRYING: h
						> version: _/v/y/ch
						> version: _/v/y/ch
						> version: v/_/y/c/h
						TRYING: h
						> version: v/_/y/c/h
						TRYING: h
						> version: v/_/y/ch
						> version: v/_/y/ch
						> version: _/_/v/y/c/h
						TRYING: c
						>>> MULTIPLE RESOLVE OPTIONS: {'h', 'c'}
						> version: _/_/v/y/c/h
						TRYING: c
						>>> MULTIPLE RESOLVE OPTIONS: {'h', 'c'}
						> version: _/_/v/y/ch
						TRYING: ch
						>>> MULTIPLE RESOLVE OPTIONS: {'h', 'ch', 'c'}
						> version: _/_/v/y/ch
						TRYING: ch
						>>> MULTIPLE RESOLVE OPTIONS: {'h', 'ch', 'c'}
						RESULT:  ['h', 'ch', 'c']
				___CVCCVCV : 5___
					ANALYSING: æhc
						resolving (4)
						> version: æ/h/c
						> version: æ/h/c/_
						> version: æ/h/c/_
						> version: æ/h/c/_/_
						RESULT:  ['_']
					adding dashed alternative: ['æ', 'h', 'c', '_']
					adding dashed alternative: ['æ', 'h', 'c', '_', '_']
					adding dashed alternative: ['æ', 'h', 'c', '_', '_']
					adding dashed alternative: ['æ', 'h', 'c', '_', '_', '_']
					æ/h/c(VCC)
æ/h/c/_(VCCA)
æ/h/c/_(VCCA)
æ/h/c/_/_(VCCAA)
æ/h/c/_(VCCA)
æ/h/c/_/_(VCCAA)
æ/h/c/_/_(VCCAA)
æ/h/c/_/_/_(VCCAAA)
					ANALYSING: æch
						resolving (8)
						> version: æ/c/h
						> version: æ/ch
						> version: æ/c/h/_
						> version: æ/ch/_
						> version: æ/c/h/_
						> version: æ/ch/_
						> version: æ/c/h/_/_
						> version: æ/ch/_/_
						RESULT:  ['_']
					adding dashed alternative: ['æ', 'c', 'h', '_']
					adding dashed alternative: ['æ', 'ch', '_']
					adding dashed alternative: ['æ', 'c', 'h', '_', '_']
					adding dashed alternative: ['æ', 'ch', '_', '_']
					adding dashed alternative: ['æ', 'c', 'h', '_', '_']
					adding dashed alternative: ['æ', 'ch', '_', '_']
					adding dashed alternative: ['æ', 'c', 'h', '_', '_', '_']
					adding dashed alternative: ['æ', 'ch', '_', '_', '_']
					æ/c/h(VCC)
æ/ch(VC)
æ/c/h/_(VCCA)
æ/ch/_(VCA)
æ/c/h/_(VCCA)
æ/ch/_(VCA)
æ/c/h/_/_(VCCAA)
æ/ch/_/_(VCAA)
æ/c/h/_(VCCA)
æ/ch/_(VCA)
æ/c/h/_/_(VCCAA)
æ/ch/_/_(VCAA)
æ/c/h/_/_(VCCAA)
æ/ch/_/_(VCAA)
æ/c/h/_/_/_(VCCAAA)
æ/ch/_/_/_(VCAAA)
					ANALYSING: ælc
						resolving (4)
						> version: æ/l/c
						> version: æ/_/l/c
						> version: æ/l/c/_
						> version: æ/_/l/c/_
						RESULT:  ['_']
					adding dashed alternative: ['æ', 'l', 'c', '_']
					adding dashed alternative: ['æ', '_', 'l', 'c', '_']
					adding dashed alternative: ['æ', 'l', 'c', '_', '_']
					adding dashed alternative: ['æ', '_', 'l', 'c', '_', '_']
					æ/l/c(VCC)
æ/_/l/c(VACC)
æ/l/c/_(VCCA)
æ/_/l/c/_(VACCA)
æ/l/c/_(VCCA)
æ/_/l/c/_(VACCA)
æ/l/c/_/_(VCCAA)
æ/_/l/c/_/_(VACCAA)
					ANALYSING: alc
						resolving (4)
						> version: a/l/c
						> version: a/_/l/c
						> version: a/l/c/_
						> version: a/_/l/c/_
						RESULT:  ['_']
					adding dashed alternative: ['a', 'l', 'c', '_']
					adding dashed alternative: ['a', '_', 'l', 'c', '_']
					adding dashed alternative: ['a', 'l', 'c', '_', '_']
					adding dashed alternative: ['a', '_', 'l', 'c', '_', '_']
					a/l/c(VCC)
a/_/l/c(VACC)
a/l/c/_(VCCA)
a/_/l/c/_(VACCA)
a/l/c/_(VCCA)
a/_/l/c/_(VACCA)
a/l/c/_/_(VCCAA)
a/_/l/c/_/_(VACCAA)
					ANALYSING: alch
						resolving (4)
						> version: a/l/c/h
						> version: a/l/ch
						> version: a/_/l/c/h
						> version: a/_/l/ch
						RESULT:  ['_']
					adding dashed alternative: ['a', 'l', 'c', 'h', '_']
					adding dashed alternative: ['a', 'l', 'ch', '_']
					adding dashed alternative: ['a', '_', 'l', 'c', 'h', '_']
					adding dashed alternative: ['a', '_', 'l', 'ch', '_']
					a/l/c/h(VCCC)
a/l/ch(VCC)
a/_/l/c/h(VACCC)
a/_/l/ch(VACC)
a/l/c/h/_(VCCCA)
a/l/ch/_(VCCA)
a/_/l/c/h/_(VACCCA)
a/_/l/ch/_(VACCA)
					ANALYSING: alkere
						resolving (4)
						> version: a/l/k/e/r/e
						TRYING: e
						> version: a/_/l/k/e/r/e
						TRYING: r
						>>> MULTIPLE RESOLVE OPTIONS: {'r', 'e'}
						> version: a/l/k/e/_/r/e
						TRYING: r
						>>> MULTIPLE RESOLVE OPTIONS: {'r', 'e'}
						> version: a/_/l/k/_/e/r/e
						TRYING: e
						>>> MULTIPLE RESOLVE OPTIONS: {'r', 'e'}
						RESULT:  ['r', 'e']
					ANALYSING: ech
						resolving (8)
						> version: e/c/h
						> version: e/ch
						> version: e/c/h/_
						> version: e/ch/_
						> version: e/c/h/_
						> version: e/ch/_
						> version: e/c/h/_/_
						> version: e/ch/_/_
						RESULT:  ['_']
					adding dashed alternative: ['e', 'c', 'h', '_']
					adding dashed alternative: ['e', 'ch', '_']
					adding dashed alternative: ['e', 'c', 'h', '_', '_']
					adding dashed alternative: ['e', 'ch', '_', '_']
					adding dashed alternative: ['e', 'c', 'h', '_', '_']
					adding dashed alternative: ['e', 'ch', '_', '_']
					adding dashed alternative: ['e', 'c', 'h', '_', '_', '_']
					adding dashed alternative: ['e', 'ch', '_', '_', '_']
					e/c/h(VCC)
e/ch(VC)
e/c/h/_(VCCA)
e/ch/_(VCA)
e/c/h/_(VCCA)
e/ch/_(VCA)
e/c/h/_/_(VCCAA)
e/ch/_/_(VCAA)
e/c/h/_(VCCA)
e/ch/_(VCA)
e/c/h/_/_(VCCAA)
e/ch/_/_(VCAA)
e/c/h/_/_(VCCAA)
e/ch/_/_(VCAA)
e/c/h/_/_/_(VCCAAA)
e/ch/_/_/_(VCAAA)
					ANALYSING: eche
						resolving (8)
						> version: e/c/h/e
						> version: e/ch/e
						> version: e/c/h/_/e
						> version: e/ch/e/_
						> version: e/c/h/e/_
						> version: e/ch/e/_
						> version: e/c/h/_/_/e
						TRYING: e
						> version: e/ch/e/_/_
						RESULT:  ['_']
					adding dashed alternative: ['e', 'c', 'h', 'e', '_']
					adding dashed alternative: ['e', 'ch', 'e', '_']
					adding dashed alternative: ['e', 'c', 'h', '_', 'e', '_']
					adding dashed alternative: ['e', 'ch', 'e', '_', '_']
					adding dashed alternative: ['e', 'c', 'h', 'e', '_', '_']
					adding dashed alternative: ['e', 'ch', 'e', '_', '_']
					adding dashed alternative: ['e', 'c', 'h', '_', '_', '_', 'e']
					adding dashed alternative: ['e', 'ch', 'e', '_', '_', '_']
					e/c/h/e(VCCV)
e/ch/e(VCV)
e/c/h/_/e(VCCAV)
e/ch/e/_(VCVA)
e/c/h/e/_(VCCVA)
e/ch/e/_(VCVA)
e/c/h/_/_/e(VCCAAV)
e/ch/e/_/_(VCVAA)
e/c/h/e/_(VCCVA)
e/ch/e/_(VCVA)
e/c/h/_/e/_(VCCAVA)
e/ch/e/_/_(VCVAA)
e/c/h/e/_/_(VCCVAA)
e/ch/e/_/_(VCVAA)
e/c/h/_/_/_/e(VCCAAAV)
e/ch/e/_/_/_(VCVAAA)
					ANALYSING: echen
						resolving (8)
						> version: e/c/h/e/n
						> version: e/ch/e/n
						> version: e/c/h/_/e/n
						TRYING: n
						> version: e/ch/e/_/n
						> version: e/c/h/e/_/n
						TRYING: n
						> version: e/ch/e/n/_
						> version: e/c/h/_/_/e/n
						TRYING: e
						> version: e/ch/e/_/_/n
						TRYING: n
						RESULT:  ['_']
					adding dashed alternative: ['e', 'c', 'h', 'e', 'n', '_']
					adding dashed alternative: ['e', 'ch', 'e', 'n', '_']
					adding dashed alternative: ['e', 'c', 'h', '_', 'e', '_', 'n']
					adding dashed alternative: ['e', 'ch', 'e', '_', 'n', '_']
					adding dashed alternative: ['e', 'c', 'h', 'e', '_', '_', 'n']
					adding dashed alternative: ['e', 'ch', 'e', 'n', '_', '_']
					adding dashed alternative: ['e', 'c', 'h', '_', '_', '_', 'e', 'n']
					adding dashed alternative: ['e', 'ch', 'e', '_', '_', '_', 'n']
					e/c/h/e/n(VCCVC)
e/ch/e/n(VCVC)
e/c/h/_/e/n(VCCAVC)
e/ch/e/_/n(VCVAC)
e/c/h/e/_/n(VCCVAC)
e/ch/e/n/_(VCVCA)
e/c/h/_/_/e/n(VCCAAVC)
e/ch/e/_/_/n(VCVAAC)
e/c/h/e/n/_(VCCVCA)
e/ch/e/n/_(VCVCA)
e/c/h/_/e/_/n(VCCAVAC)
e/ch/e/_/n/_(VCVACA)
e/c/h/e/_/_/n(VCCVAAC)
e/ch/e/n/_/_(VCVCAA)
e/c/h/_/_/_/e/n(VCCAAAVC)
e/ch/e/_/_/_/n(VCVAAAC)
					ANALYSING: elc
						resolving (4)
						> version: e/l/c
						> version: e/_/l/c
						> version: e/l/c/_
						> version: e/_/l/c/_
						RESULT:  ['_']
					adding dashed alternative: ['e', 'l', 'c', '_']
					adding dashed alternative: ['e', '_', 'l', 'c', '_']
					adding dashed alternative: ['e', 'l', 'c', '_', '_']
					adding dashed alternative: ['e', '_', 'l', 'c', '_', '_']
					e/l/c(VCC)
e/_/l/c(VACC)
e/l/c/_(VCCA)
e/_/l/c/_(VACCA)
e/l/c/_(VCCA)
e/_/l/c/_(VACCA)
e/l/c/_/_(VCCAA)
e/_/l/c/_/_(VACCAA)
					ANALYSING: elch
						resolving (4)
						> version: e/l/c/h
						> version: e/l/ch
						> version: e/_/l/c/h
						> version: e/_/l/ch
						RESULT:  ['_']
					adding dashed alternative: ['e', 'l', 'c', 'h', '_']
					adding dashed alternative: ['e', 'l', 'ch', '_']
					adding dashed alternative: ['e', '_', 'l', 'c', 'h', '_']
					adding dashed alternative: ['e', '_', 'l', 'ch', '_']
					e/l/c/h(VCCC)
e/l/ch(VCC)
e/_/l/c/h(VACCC)
e/_/l/ch(VACC)
e/l/c/h/_(VCCCA)
e/l/ch/_(VCCA)
e/_/l/c/h/_(VACCCA)
e/_/l/ch/_(VACCA)
					ANALYSING: elche
						resolving (4)
						> version: e/l/c/h/e
						> version: e/l/ch/e
						> version: e/_/l/c/h/e
						TRYING: e
						> version: e/_/l/ch/e
						RESULT:  ['_']
					adding dashed alternative: ['e', 'l', 'c', 'h', 'e', '_']
					adding dashed alternative: ['e', 'l', 'ch', 'e', '_']
					adding dashed alternative: ['e', '_', 'l', 'c', 'h', '_', 'e']
					adding dashed alternative: ['e', '_', 'l', 'ch', 'e', '_']
					e/l/c/h/e(VCCCV)
e/l/ch/e(VCCV)
e/_/l/c/h/e(VACCCV)
e/_/l/ch/e(VACCV)
e/l/c/h/e/_(VCCCVA)
e/l/ch/e/_(VCCVA)
e/_/l/c/h/_/e(VACCCAV)
e/_/l/ch/e/_(VACCVA)
					ANALYSING: euch
						resolving (12)
						> version: e/u/c/h
						> version: e/u/c/h
						> version: e/u/ch
						> version: e/u/ch
						> version: eu/c/h
						> version: eu/ch
						> version: e/u/c/h/_
						> version: e/u/c/h/_
						> version: e/u/ch/_
						> version: e/u/ch/_
						> version: eu/c/h/_
						> version: eu/ch/_
						RESULT:  ['_']
					adding dashed alternative: ['e', 'u', 'c', 'h', '_']
					adding dashed alternative: ['e', 'u', 'c', 'h', '_']
					adding dashed alternative: ['e', 'u', 'ch', '_']
					adding dashed alternative: ['e', 'u', 'ch', '_']
					adding dashed alternative: ['eu', 'c', 'h', '_']
					adding dashed alternative: ['eu', 'ch', '_']
					adding dashed alternative: ['e', 'u', 'c', 'h', '_', '_']
					adding dashed alternative: ['e', 'u', 'c', 'h', '_', '_']
					adding dashed alternative: ['e', 'u', 'ch', '_', '_']
					adding dashed alternative: ['e', 'u', 'ch', '_', '_']
					adding dashed alternative: ['eu', 'c', 'h', '_', '_']
					adding dashed alternative: ['eu', 'ch', '_', '_']
					e/u/c/h(VCCC)
e/u/c/h(VVCC)
e/u/ch(VCC)
e/u/ch(VVC)
eu/c/h(VCC)
eu/ch(VC)
e/u/c/h/_(VACCA)
e/u/c/h/_(VACCA)
e/u/ch/_(VACA)
e/u/ch/_(VACA)
eu/c/h/_(VCCA)
eu/ch/_(VCA)
e/u/c/h/_(VACCA)
e/u/c/h/_(VACCA)
e/u/ch/_(VACA)
e/u/ch/_(VACA)
eu/c/h/_(VCCA)
eu/ch/_(VCA)
e/u/c/h/_/_(VACCAA)
e/u/c/h/_/_(VACCAA)
e/u/ch/_/_(VACAA)
e/u/ch/_/_(VACAA)
eu/c/h/_/_(VCCAA)
eu/ch/_/_(VCAA)
					ANALYSING: ich
						resolving (16)
						> version: i/c/h
						> version: i/c/h
						> version: i/ch
						> version: i/ch
						> version: _/i/c/h
						> version: _/i/c/h
						> version: _/i/ch
						> version: _/i/ch
						> version: i/c/h/_
						> version: i/c/h/_
						> version: i/ch/_
						> version: i/ch/_
						> version: _/i/c/h/_
						> version: _/i/c/h/_
						> version: _/i/ch/_
						> version: _/i/ch/_
						RESULT:  ['_']
					adding dashed alternative: ['i', 'c', 'h', '_']
					adding dashed alternative: ['i', 'c', 'h', '_']
					adding dashed alternative: ['i', 'ch', '_']
					adding dashed alternative: ['i', 'ch', '_']
					adding dashed alternative: ['_', 'i', 'c', 'h', '_']
					adding dashed alternative: ['_', 'i', 'c', 'h', '_']
					adding dashed alternative: ['_', 'i', 'ch', '_']
					adding dashed alternative: ['_', 'i', 'ch', '_']
					adding dashed alternative: ['i', 'c', 'h', '_', '_']
					adding dashed alternative: ['i', 'c', 'h', '_', '_']
					adding dashed alternative: ['i', 'ch', '_', '_']
					adding dashed alternative: ['i', 'ch', '_', '_']
					adding dashed alternative: ['_', 'i', 'c', 'h', '_', '_']
					adding dashed alternative: ['_', 'i', 'c', 'h', '_', '_']
					adding dashed alternative: ['_', 'i', 'ch', '_', '_']
					adding dashed alternative: ['_', 'i', 'ch', '_', '_']
					i/c/h(CCC)
i/c/h(VCC)
i/ch(CC)
i/ch(VC)
_/i/c/h(AACC)
_/i/c/h(AACC)
_/i/ch(AAC)
_/i/ch(AAC)
i/c/h/_(ACCA)
i/c/h/_(ACCA)
i/ch/_(ACA)
i/ch/_(ACA)
_/i/c/h/_(AACCA)
_/i/c/h/_(AACCA)
_/i/ch/_(AACA)
_/i/ch/_(AACA)
i/c/h/_(ACCA)
i/c/h/_(ACCA)
i/ch/_(ACA)
i/ch/_(ACA)
_/i/c/h/_(AACCA)
_/i/c/h/_(AACCA)
_/i/ch/_(AACA)
_/i/ch/_(AACA)
i/c/h/_/_(ACCAA)
i/c/h/_/_(ACCAA)
i/ch/_/_(ACAA)
i/ch/_/_(ACAA)
_/i/c/h/_/_(AACCAA)
_/i/c/h/_/_(AACCAA)
_/i/ch/_/_(AACAA)
_/i/ch/_/_(AACAA)
					ANALYSING: ilc
						resolving (8)
						> version: i/l/c
						> version: i/l/c
						> version: _/i/l/c
						> version: _/i/l/c
						> version: i/_/l/c
						> version: i/_/l/c
						> version: _/_/i/l/c
						> version: _/_/i/l/c
						RESULT:  ['_']
					adding dashed alternative: ['i', 'l', 'c', '_']
					adding dashed alternative: ['i', 'l', 'c', '_']
					adding dashed alternative: ['_', 'i', 'l', 'c', '_']
					adding dashed alternative: ['_', 'i', 'l', 'c', '_']
					adding dashed alternative: ['i', '_', 'l', 'c', '_']
					adding dashed alternative: ['i', '_', 'l', 'c', '_']
					adding dashed alternative: ['_', '_', 'i', 'l', 'c', '_']
					adding dashed alternative: ['_', '_', 'i', 'l', 'c', '_']
					i/l/c(CCC)
i/l/c(VCC)
_/i/l/c(AACC)
_/i/l/c(AACC)
i/_/l/c(AACC)
i/_/l/c(AACC)
_/_/i/l/c(AAACC)
_/_/i/l/c(AAACC)
i/l/c/_(ACCA)
i/l/c/_(ACCA)
_/i/l/c/_(AACCA)
_/i/l/c/_(AACCA)
i/_/l/c/_(AACCA)
i/_/l/c/_(AACCA)
_/_/i/l/c/_(AAACCA)
_/_/i/l/c/_(AAACCA)
					ANALYSING: ilk
						resolving (8)
						> version: i/l/k
						> version: i/l/k
						> version: _/i/l/k
						> version: _/i/l/k
						> version: i/_/l/k
						> version: i/_/l/k
						> version: _/_/i/l/k
						> version: _/_/i/l/k
						RESULT:  ['_']
					adding dashed alternative: ['i', 'l', 'k', '_']
					adding dashed alternative: ['i', 'l', 'k', '_']
					adding dashed alternative: ['_', 'i', 'l', 'k', '_']
					adding dashed alternative: ['_', 'i', 'l', 'k', '_']
					adding dashed alternative: ['i', '_', 'l', 'k', '_']
					adding dashed alternative: ['i', '_', 'l', 'k', '_']
					adding dashed alternative: ['_', '_', 'i', 'l', 'k', '_']
					adding dashed alternative: ['_', '_', 'i', 'l', 'k', '_']
					i/l/k(CCC)
i/l/k(VCC)
_/i/l/k(AACC)
_/i/l/k(AACC)
i/_/l/k(AACC)
i/_/l/k(AACC)
_/_/i/l/k(AAACC)
_/_/i/l/k(AAACC)
i/l/k/_(ACCA)
i/l/k/_(ACCA)
_/i/l/k/_(AACCA)
_/i/l/k/_(AACCA)
i/_/l/k/_(AACCA)
i/_/l/k/_(AACCA)
_/_/i/l/k/_(AAACCA)
_/_/i/l/k/_(AAACCA)
					ANALYSING: uch
						resolving (16)
						> version: u/c/h
						> version: u/c/h
						> version: u/ch
						> version: u/ch
						> version: _/u/c/h
						> version: _/u/c/h
						> version: _/u/ch
						> version: _/u/ch
						> version: u/c/h/_
						> version: u/c/h/_
						> version: u/ch/_
						> version: u/ch/_
						> version: _/u/c/h/_
						> version: _/u/c/h/_
						> version: _/u/ch/_
						> version: _/u/ch/_
						RESULT:  ['_']
					adding dashed alternative: ['u', 'c', 'h', '_']
					adding dashed alternative: ['u', 'c', 'h', '_']
					adding dashed alternative: ['u', 'ch', '_']
					adding dashed alternative: ['u', 'ch', '_']
					adding dashed alternative: ['_', 'u', 'c', 'h', '_']
					adding dashed alternative: ['_', 'u', 'c', 'h', '_']
					adding dashed alternative: ['_', 'u', 'ch', '_']
					adding dashed alternative: ['_', 'u', 'ch', '_']
					adding dashed alternative: ['u', 'c', 'h', '_', '_']
					adding dashed alternative: ['u', 'c', 'h', '_', '_']
					adding dashed alternative: ['u', 'ch', '_', '_']
					adding dashed alternative: ['u', 'ch', '_', '_']
					adding dashed alternative: ['_', 'u', 'c', 'h', '_', '_']
					adding dashed alternative: ['_', 'u', 'c', 'h', '_', '_']
					adding dashed alternative: ['_', 'u', 'ch', '_', '_']
					adding dashed alternative: ['_', 'u', 'ch', '_', '_']
					u/c/h(CCC)
u/c/h(VCC)
u/ch(CC)
u/ch(VC)
_/u/c/h(AACC)
_/u/c/h(AACC)
_/u/ch(AAC)
_/u/ch(AAC)
u/c/h/_(ACCA)
u/c/h/_(ACCA)
u/ch/_(ACA)
u/ch/_(ACA)
_/u/c/h/_(AACCA)
_/u/c/h/_(AACCA)
_/u/ch/_(AACA)
_/u/ch/_(AACA)
u/c/h/_(ACCA)
u/c/h/_(ACCA)
u/ch/_(ACA)
u/ch/_(ACA)
_/u/c/h/_(AACCA)
_/u/c/h/_(AACCA)
_/u/ch/_(AACA)
_/u/ch/_(AACA)
u/c/h/_/_(ACCAA)
u/c/h/_/_(ACCAA)
u/ch/_/_(ACAA)
u/ch/_/_(ACAA)
_/u/c/h/_/_(AACCAA)
_/u/c/h/_/_(AACCAA)
_/u/ch/_/_(AACAA)
_/u/ch/_/_(AACAA)
					ANALYSING: vych
						resolving (16)
						> version: v/y/c/h
						> version: v/y/c/h
						> version: v/y/ch
						> version: v/y/ch
						> version: _/v/y/c/h
						> version: _/v/y/c/h
						> version: _/v/y/ch
						> version: _/v/y/ch
						> version: v/_/y/c/h
						> version: v/_/y/c/h
						> version: v/_/y/ch
						> version: v/_/y/ch
						> version: _/_/v/y/c/h
						TRYING: h
						> version: _/_/v/y/c/h
						TRYING: h
						> version: _/_/v/y/ch
						> version: _/_/v/y/ch
						RESULT:  ['_']
					adding dashed alternative: ['v', 'y', 'c', 'h', '_']
					adding dashed alternative: ['v', 'y', 'c', 'h', '_']
					adding dashed alternative: ['v', 'y', 'ch', '_']
					adding dashed alternative: ['v', 'y', 'ch', '_']
					adding dashed alternative: ['_', 'v', 'y', 'c', 'h', '_']
					adding dashed alternative: ['_', 'v', 'y', 'c', 'h', '_']
					adding dashed alternative: ['_', 'v', 'y', 'ch', '_']
					adding dashed alternative: ['_', 'v', 'y', 'ch', '_']
					adding dashed alternative: ['v', '_', 'y', 'c', 'h', '_']
					adding dashed alternative: ['v', '_', 'y', 'c', 'h', '_']
					adding dashed alternative: ['v', '_', 'y', 'ch', '_']
					adding dashed alternative: ['v', '_', 'y', 'ch', '_']
					adding dashed alternative: ['_', '_', 'v', 'y', 'c', '_', 'h']
					adding dashed alternative: ['_', '_', 'v', 'y', 'c', '_', 'h']
					adding dashed alternative: ['_', '_', 'v', 'y', 'ch', '_']
					adding dashed alternative: ['_', '_', 'v', 'y', 'ch', '_']
					v/y/c/h(CCCC)
v/y/c/h(VVCC)
v/y/ch(CCC)
v/y/ch(VVC)
_/v/y/c/h(AAACC)
_/v/y/c/h(AAACC)
_/v/y/ch(AAAC)
_/v/y/ch(AAAC)
v/_/y/c/h(AAACC)
v/_/y/c/h(AAACC)
v/_/y/ch(AAAC)
v/_/y/ch(AAAC)
_/_/v/y/c/h(AAAACC)
_/_/v/y/c/h(AAAACC)
_/_/v/y/ch(AAAAC)
_/_/v/y/ch(AAAAC)
v/y/c/h/_(AACCA)
v/y/c/h/_(AACCA)
v/y/ch/_(AACA)
v/y/ch/_(AACA)
_/v/y/c/h/_(AAACCA)
_/v/y/c/h/_(AAACCA)
_/v/y/ch/_(AAACA)
_/v/y/ch/_(AAACA)
v/_/y/c/h/_(AAACCA)
v/_/y/c/h/_(AAACCA)
v/_/y/ch/_(AAACA)
v/_/y/ch/_(AAACA)
_/_/v/y/c/_/h(AAAACAC)
_/_/v/y/c/_/h(AAAACAC)
_/_/v/y/ch/_(AAAACA)
_/_/v/y/ch/_(AAAACA)
				___CVCCVCV : 6___
					ANALYSING: æhc
						resolving (8)
						> version: æ/h/c
						> version: æ/h/c/_
						> version: æ/h/c/_
						> version: æ/h/c/_/_
						> version: æ/h/c/_
						> version: æ/h/c/_/_
						> version: æ/h/c/_/_
						> version: æ/h/c/_/_/_
						RESULT:  ['_']
					adding dashed alternative: ['æ', 'h', 'c', '_']
					adding dashed alternative: ['æ', 'h', 'c', '_', '_']
					adding dashed alternative: ['æ', 'h', 'c', '_', '_']
					adding dashed alternative: ['æ', 'h', 'c', '_', '_', '_']
					adding dashed alternative: ['æ', 'h', 'c', '_', '_']
					adding dashed alternative: ['æ', 'h', 'c', '_', '_', '_']
					adding dashed alternative: ['æ', 'h', 'c', '_', '_', '_']
					adding dashed alternative: ['æ', 'h', 'c', '_', '_', '_', '_']
					æ/h/c(VCC)
æ/h/c/_(VCCA)
æ/h/c/_(VCCA)
æ/h/c/_/_(VCCAA)
æ/h/c/_(VCCA)
æ/h/c/_/_(VCCAA)
æ/h/c/_/_(VCCAA)
æ/h/c/_/_/_(VCCAAA)
æ/h/c/_(VCCA)
æ/h/c/_/_(VCCAA)
æ/h/c/_/_(VCCAA)
æ/h/c/_/_/_(VCCAAA)
æ/h/c/_/_(VCCAA)
æ/h/c/_/_/_(VCCAAA)
æ/h/c/_/_/_(VCCAAA)
æ/h/c/_/_/_/_(VCCAAAA)
					version split: ['æ', 'h', 'c']
					{'string': 'æ/h/c', 'rgx': '((æ))/((h))/((c))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['æ', 'h', 'c']
					version split: ['æ', 'h', 'c', '_']
					{'string': 'æ/h/c/_', 'rgx': '((æ))/((h))/((c))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['æ', 'h', 'c', '_']
					version split: ['æ', 'h', 'c', '_']
					{'string': 'æ/h/c/_', 'rgx': '((æ))/((h))/((c))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['æ', 'h', 'c', '_']
					version split: ['æ', 'h', 'c', '_', '_']
					{'string': 'æ/h/c/_/_', 'rgx': '((æ))/((h))/((c))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['æ', 'h', 'c', '_', '_']
					version split: ['æ', 'h', 'c', '_']
					{'string': 'æ/h/c/_', 'rgx': '((æ))/((h))/((c))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['æ', 'h', 'c', '_']
					version split: ['æ', 'h', 'c', '_', '_']
					{'string': 'æ/h/c/_/_', 'rgx': '((æ))/((h))/((c))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['æ', 'h', 'c', '_', '_']
					version split: ['æ', 'h', 'c', '_', '_']
					{'string': 'æ/h/c/_/_', 'rgx': '((æ))/((h))/((c))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['æ', 'h', 'c', '_', '_']
					version split: ['æ', 'h', 'c', '_', '_', '_']
					{'string': 'æ/h/c/_/_/_', 'rgx': '((æ))/((h))/((c))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['æ', 'h', 'c', '_', '_', '_']
					version split: ['æ', 'h', 'c', '_']
					{'string': 'æ/h/c/_', 'rgx': '((æ))/((h))/((c))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['æ', 'h', 'c', '_']
					version split: ['æ', 'h', 'c', '_', '_']
					{'string': 'æ/h/c/_/_', 'rgx': '((æ))/((h))/((c))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['æ', 'h', 'c', '_', '_']
					version split: ['æ', 'h', 'c', '_', '_']
					{'string': 'æ/h/c/_/_', 'rgx': '((æ))/((h))/((c))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['æ', 'h', 'c', '_', '_']
					version split: ['æ', 'h', 'c', '_', '_', '_']
					{'string': 'æ/h/c/_/_/_', 'rgx': '((æ))/((h))/((c))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['æ', 'h', 'c', '_', '_', '_']
					version split: ['æ', 'h', 'c', '_', '_']
					{'string': 'æ/h/c/_/_', 'rgx': '((æ))/((h))/((c))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['æ', 'h', 'c', '_', '_']
					version split: ['æ', 'h', 'c', '_', '_', '_']
					{'string': 'æ/h/c/_/_/_', 'rgx': '((æ))/((h))/((c))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['æ', 'h', 'c', '_', '_', '_']
					version split: ['æ', 'h', 'c', '_', '_', '_']
					{'string': 'æ/h/c/_/_/_', 'rgx': '((æ))/((h))/((c))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['æ', 'h', 'c', '_', '_', '_']
					version split: ['æ', 'h', 'c', '_', '_', '_', '_']
					{'string': 'æ/h/c/_/_/_/_', 'rgx': '((æ))/((h))/((c))/((_))/((_))/((_))/((_))$'}
					ANALYSING: æch
						resolving (16)
						> version: æ/c/h
						> version: æ/ch
						> version: æ/c/h/_
						> version: æ/ch/_
						> version: æ/c/h/_
						> version: æ/ch/_
						> version: æ/c/h/_/_
						> version: æ/ch/_/_
						> version: æ/c/h/_
						> version: æ/ch/_
						> version: æ/c/h/_/_
						> version: æ/ch/_/_
						> version: æ/c/h/_/_
						> version: æ/ch/_/_
						> version: æ/c/h/_/_/_
						> version: æ/ch/_/_/_
						RESULT:  ['_']
					adding dashed alternative: ['æ', 'c', 'h', '_']
					adding dashed alternative: ['æ', 'ch', '_']
					adding dashed alternative: ['æ', 'c', 'h', '_', '_']
					adding dashed alternative: ['æ', 'ch', '_', '_']
					adding dashed alternative: ['æ', 'c', 'h', '_', '_']
					adding dashed alternative: ['æ', 'ch', '_', '_']
					adding dashed alternative: ['æ', 'c', 'h', '_', '_', '_']
					adding dashed alternative: ['æ', 'ch', '_', '_', '_']
					adding dashed alternative: ['æ', 'c', 'h', '_', '_']
					adding dashed alternative: ['æ', 'ch', '_', '_']
					adding dashed alternative: ['æ', 'c', 'h', '_', '_', '_']
					adding dashed alternative: ['æ', 'ch', '_', '_', '_']
					adding dashed alternative: ['æ', 'c', 'h', '_', '_', '_']
					adding dashed alternative: ['æ', 'ch', '_', '_', '_']
					adding dashed alternative: ['æ', 'c', 'h', '_', '_', '_', '_']
					adding dashed alternative: ['æ', 'ch', '_', '_', '_', '_']
					æ/c/h(VCC)
æ/ch(VC)
æ/c/h/_(VCCA)
æ/ch/_(VCA)
æ/c/h/_(VCCA)
æ/ch/_(VCA)
æ/c/h/_/_(VCCAA)
æ/ch/_/_(VCAA)
æ/c/h/_(VCCA)
æ/ch/_(VCA)
æ/c/h/_/_(VCCAA)
æ/ch/_/_(VCAA)
æ/c/h/_/_(VCCAA)
æ/ch/_/_(VCAA)
æ/c/h/_/_/_(VCCAAA)
æ/ch/_/_/_(VCAAA)
æ/c/h/_(VCCA)
æ/ch/_(VCA)
æ/c/h/_/_(VCCAA)
æ/ch/_/_(VCAA)
æ/c/h/_/_(VCCAA)
æ/ch/_/_(VCAA)
æ/c/h/_/_/_(VCCAAA)
æ/ch/_/_/_(VCAAA)
æ/c/h/_/_(VCCAA)
æ/ch/_/_(VCAA)
æ/c/h/_/_/_(VCCAAA)
æ/ch/_/_/_(VCAAA)
æ/c/h/_/_/_(VCCAAA)
æ/ch/_/_/_(VCAAA)
æ/c/h/_/_/_/_(VCCAAAA)
æ/ch/_/_/_/_(VCAAAA)
					version split: ['æ', 'c', 'h']
					{'string': 'æ/c/h', 'rgx': '((æ))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['æ', 'c', 'h']
					version split: ['æ', 'ch']
					{'string': 'æ/ch', 'rgx': '((æ))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['æ', 'ch']
					version split: ['æ', 'c', 'h', '_']
					{'string': 'æ/c/h/_', 'rgx': '((æ))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['æ', 'c', 'h', '_']
					version split: ['æ', 'ch', '_']
					{'string': 'æ/ch/_', 'rgx': '((æ))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['æ', 'ch', '_']
					version split: ['æ', 'c', 'h', '_']
					{'string': 'æ/c/h/_', 'rgx': '((æ))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['æ', 'c', 'h', '_']
					version split: ['æ', 'ch', '_']
					{'string': 'æ/ch/_', 'rgx': '((æ))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['æ', 'ch', '_']
					version split: ['æ', 'c', 'h', '_', '_']
					{'string': 'æ/c/h/_/_', 'rgx': '((æ))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['æ', 'c', 'h', '_', '_']
					version split: ['æ', 'ch', '_', '_']
					{'string': 'æ/ch/_/_', 'rgx': '((æ))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['æ', 'ch', '_', '_']
					version split: ['æ', 'c', 'h', '_']
					{'string': 'æ/c/h/_', 'rgx': '((æ))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['æ', 'c', 'h', '_']
					version split: ['æ', 'ch', '_']
					{'string': 'æ/ch/_', 'rgx': '((æ))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['æ', 'ch', '_']
					version split: ['æ', 'c', 'h', '_', '_']
					{'string': 'æ/c/h/_/_', 'rgx': '((æ))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['æ', 'c', 'h', '_', '_']
					version split: ['æ', 'ch', '_', '_']
					{'string': 'æ/ch/_/_', 'rgx': '((æ))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['æ', 'ch', '_', '_']
					version split: ['æ', 'c', 'h', '_', '_']
					{'string': 'æ/c/h/_/_', 'rgx': '((æ))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['æ', 'c', 'h', '_', '_']
					version split: ['æ', 'ch', '_', '_']
					{'string': 'æ/ch/_/_', 'rgx': '((æ))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['æ', 'ch', '_', '_']
					version split: ['æ', 'c', 'h', '_', '_', '_']
					{'string': 'æ/c/h/_/_/_', 'rgx': '((æ))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['æ', 'c', 'h', '_', '_', '_']
					version split: ['æ', 'ch', '_', '_', '_']
					{'string': 'æ/ch/_/_/_', 'rgx': '((æ))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['æ', 'ch', '_', '_', '_']
					version split: ['æ', 'c', 'h', '_']
					{'string': 'æ/c/h/_', 'rgx': '((æ))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['æ', 'c', 'h', '_']
					version split: ['æ', 'ch', '_']
					{'string': 'æ/ch/_', 'rgx': '((æ))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['æ', 'ch', '_']
					version split: ['æ', 'c', 'h', '_', '_']
					{'string': 'æ/c/h/_/_', 'rgx': '((æ))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['æ', 'c', 'h', '_', '_']
					version split: ['æ', 'ch', '_', '_']
					{'string': 'æ/ch/_/_', 'rgx': '((æ))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['æ', 'ch', '_', '_']
					version split: ['æ', 'c', 'h', '_', '_']
					{'string': 'æ/c/h/_/_', 'rgx': '((æ))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['æ', 'c', 'h', '_', '_']
					version split: ['æ', 'ch', '_', '_']
					{'string': 'æ/ch/_/_', 'rgx': '((æ))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['æ', 'ch', '_', '_']
					version split: ['æ', 'c', 'h', '_', '_', '_']
					{'string': 'æ/c/h/_/_/_', 'rgx': '((æ))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['æ', 'c', 'h', '_', '_', '_']
					version split: ['æ', 'ch', '_', '_', '_']
					{'string': 'æ/ch/_/_/_', 'rgx': '((æ))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['æ', 'ch', '_', '_', '_']
					version split: ['æ', 'c', 'h', '_', '_']
					{'string': 'æ/c/h/_/_', 'rgx': '((æ))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['æ', 'c', 'h', '_', '_']
					version split: ['æ', 'ch', '_', '_']
					{'string': 'æ/ch/_/_', 'rgx': '((æ))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['æ', 'ch', '_', '_']
					version split: ['æ', 'c', 'h', '_', '_', '_']
					{'string': 'æ/c/h/_/_/_', 'rgx': '((æ))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['æ', 'c', 'h', '_', '_', '_']
					version split: ['æ', 'ch', '_', '_', '_']
					{'string': 'æ/ch/_/_/_', 'rgx': '((æ))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['æ', 'ch', '_', '_', '_']
					version split: ['æ', 'c', 'h', '_', '_', '_']
					{'string': 'æ/c/h/_/_/_', 'rgx': '((æ))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['æ', 'c', 'h', '_', '_', '_']
					version split: ['æ', 'ch', '_', '_', '_']
					{'string': 'æ/ch/_/_/_', 'rgx': '((æ))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['æ', 'ch', '_', '_', '_']
					version split: ['æ', 'c', 'h', '_', '_', '_', '_']
					{'string': 'æ/c/h/_/_/_/_', 'rgx': '((æ))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					version split: ['æ', 'ch', '_', '_', '_', '_']
					{'string': 'æ/ch/_/_/_/_', 'rgx': '((æ))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['æ', 'ch', '_', '_', '_', '_']
					ANALYSING: ælc
						resolving (8)
						> version: æ/l/c
						> version: æ/_/l/c
						> version: æ/l/c/_
						> version: æ/_/l/c/_
						> version: æ/l/c/_
						> version: æ/_/l/c/_
						> version: æ/l/c/_/_
						> version: æ/_/l/c/_/_
						RESULT:  ['_']
					adding dashed alternative: ['æ', 'l', 'c', '_']
					adding dashed alternative: ['æ', '_', 'l', 'c', '_']
					adding dashed alternative: ['æ', 'l', 'c', '_', '_']
					adding dashed alternative: ['æ', '_', 'l', 'c', '_', '_']
					adding dashed alternative: ['æ', 'l', 'c', '_', '_']
					adding dashed alternative: ['æ', '_', 'l', 'c', '_', '_']
					adding dashed alternative: ['æ', 'l', 'c', '_', '_', '_']
					adding dashed alternative: ['æ', '_', 'l', 'c', '_', '_', '_']
					æ/l/c(VCC)
æ/_/l/c(VACC)
æ/l/c/_(VCCA)
æ/_/l/c/_(VACCA)
æ/l/c/_(VCCA)
æ/_/l/c/_(VACCA)
æ/l/c/_/_(VCCAA)
æ/_/l/c/_/_(VACCAA)
æ/l/c/_(VCCA)
æ/_/l/c/_(VACCA)
æ/l/c/_/_(VCCAA)
æ/_/l/c/_/_(VACCAA)
æ/l/c/_/_(VCCAA)
æ/_/l/c/_/_(VACCAA)
æ/l/c/_/_/_(VCCAAA)
æ/_/l/c/_/_/_(VACCAAA)
					version split: ['æ', 'l', 'c']
					{'string': 'æ/l/c', 'rgx': '((æ))/((_))/((c))/((c))/((_))/((_))/((_))$'}
					_____REMOVING________['æ', 'l', 'c']
					version split: ['æ', '_', 'l', 'c']
					{'string': 'æ/_/l/c', 'rgx': '((æ))/((_))/((c))/((c))/((_))/((_))/((_))$'}
					_____REMOVING________['æ', '_', 'l', 'c']
					version split: ['æ', 'l', 'c', '_']
					{'string': 'æ/l/c/_', 'rgx': '((æ))/((_))/((c))/((c))/((_))/((_))/((_))$'}
					_____REMOVING________['æ', 'l', 'c', '_']
					version split: ['æ', '_', 'l', 'c', '_']
					{'string': 'æ/_/l/c/_', 'rgx': '((æ))/((_))/((c))/((c))/((_))/((_))/((_))$'}
					_____REMOVING________['æ', '_', 'l', 'c', '_']
					version split: ['æ', 'l', 'c', '_']
					{'string': 'æ/l/c/_', 'rgx': '((æ))/((_))/((c))/((c))/((_))/((_))/((_))$'}
					_____REMOVING________['æ', 'l', 'c', '_']
					version split: ['æ', '_', 'l', 'c', '_']
					{'string': 'æ/_/l/c/_', 'rgx': '((æ))/((_))/((c))/((c))/((_))/((_))/((_))$'}
					_____REMOVING________['æ', '_', 'l', 'c', '_']
					version split: ['æ', 'l', 'c', '_', '_']
					{'string': 'æ/l/c/_/_', 'rgx': '((æ))/((_))/((c))/((c))/((_))/((_))/((_))$'}
					_____REMOVING________['æ', 'l', 'c', '_', '_']
					version split: ['æ', '_', 'l', 'c', '_', '_']
					{'string': 'æ/_/l/c/_/_', 'rgx': '((æ))/((_))/((c))/((c))/((_))/((_))/((_))$'}
					_____REMOVING________['æ', '_', 'l', 'c', '_', '_']
					version split: ['æ', 'l', 'c', '_']
					{'string': 'æ/l/c/_', 'rgx': '((æ))/((_))/((c))/((c))/((_))/((_))/((_))$'}
					_____REMOVING________['æ', 'l', 'c', '_']
					version split: ['æ', '_', 'l', 'c', '_']
					{'string': 'æ/_/l/c/_', 'rgx': '((æ))/((_))/((c))/((c))/((_))/((_))/((_))$'}
					_____REMOVING________['æ', '_', 'l', 'c', '_']
					version split: ['æ', 'l', 'c', '_', '_']
					{'string': 'æ/l/c/_/_', 'rgx': '((æ))/((_))/((c))/((c))/((_))/((_))/((_))$'}
					_____REMOVING________['æ', 'l', 'c', '_', '_']
					version split: ['æ', '_', 'l', 'c', '_', '_']
					{'string': 'æ/_/l/c/_/_', 'rgx': '((æ))/((_))/((c))/((c))/((_))/((_))/((_))$'}
					_____REMOVING________['æ', '_', 'l', 'c', '_', '_']
					version split: ['æ', 'l', 'c', '_', '_']
					{'string': 'æ/l/c/_/_', 'rgx': '((æ))/((_))/((c))/((c))/((_))/((_))/((_))$'}
					_____REMOVING________['æ', 'l', 'c', '_', '_']
					version split: ['æ', '_', 'l', 'c', '_', '_']
					{'string': 'æ/_/l/c/_/_', 'rgx': '((æ))/((_))/((c))/((c))/((_))/((_))/((_))$'}
					_____REMOVING________['æ', '_', 'l', 'c', '_', '_']
					version split: ['æ', 'l', 'c', '_', '_', '_']
					{'string': 'æ/l/c/_/_/_', 'rgx': '((æ))/((_))/((c))/((c))/((_))/((_))/((_))$'}
					_____REMOVING________['æ', 'l', 'c', '_', '_', '_']
					version split: ['æ', '_', 'l', 'c', '_', '_', '_']
					{'string': 'æ/_/l/c/_/_/_', 'rgx': '((æ))/((_))/((c))/((c))/((_))/((_))/((_))$'}
					_____REMOVING________['æ', '_', 'l', 'c', '_', '_', '_']
					ANALYSING: alc
						resolving (8)
						> version: a/l/c
						> version: a/_/l/c
						> version: a/l/c/_
						> version: a/_/l/c/_
						> version: a/l/c/_
						> version: a/_/l/c/_
						> version: a/l/c/_/_
						> version: a/_/l/c/_/_
						RESULT:  ['_']
					adding dashed alternative: ['a', 'l', 'c', '_']
					adding dashed alternative: ['a', '_', 'l', 'c', '_']
					adding dashed alternative: ['a', 'l', 'c', '_', '_']
					adding dashed alternative: ['a', '_', 'l', 'c', '_', '_']
					adding dashed alternative: ['a', 'l', 'c', '_', '_']
					adding dashed alternative: ['a', '_', 'l', 'c', '_', '_']
					adding dashed alternative: ['a', 'l', 'c', '_', '_', '_']
					adding dashed alternative: ['a', '_', 'l', 'c', '_', '_', '_']
					a/l/c(VCC)
a/_/l/c(VACC)
a/l/c/_(VCCA)
a/_/l/c/_(VACCA)
a/l/c/_(VCCA)
a/_/l/c/_(VACCA)
a/l/c/_/_(VCCAA)
a/_/l/c/_/_(VACCAA)
a/l/c/_(VCCA)
a/_/l/c/_(VACCA)
a/l/c/_/_(VCCAA)
a/_/l/c/_/_(VACCAA)
a/l/c/_/_(VCCAA)
a/_/l/c/_/_(VACCAA)
a/l/c/_/_/_(VCCAAA)
a/_/l/c/_/_/_(VACCAAA)
					version split: ['a', 'l', 'c']
					{'string': 'a/l/c', 'rgx': '((a))/((_))/((c))/((c))/((_))/((_))/((_))$'}
					_____REMOVING________['a', 'l', 'c']
					version split: ['a', '_', 'l', 'c']
					{'string': 'a/_/l/c', 'rgx': '((a))/((_))/((c))/((c))/((_))/((_))/((_))$'}
					_____REMOVING________['a', '_', 'l', 'c']
					version split: ['a', 'l', 'c', '_']
					{'string': 'a/l/c/_', 'rgx': '((a))/((_))/((c))/((c))/((_))/((_))/((_))$'}
					_____REMOVING________['a', 'l', 'c', '_']
					version split: ['a', '_', 'l', 'c', '_']
					{'string': 'a/_/l/c/_', 'rgx': '((a))/((_))/((c))/((c))/((_))/((_))/((_))$'}
					_____REMOVING________['a', '_', 'l', 'c', '_']
					version split: ['a', 'l', 'c', '_']
					{'string': 'a/l/c/_', 'rgx': '((a))/((_))/((c))/((c))/((_))/((_))/((_))$'}
					_____REMOVING________['a', 'l', 'c', '_']
					version split: ['a', '_', 'l', 'c', '_']
					{'string': 'a/_/l/c/_', 'rgx': '((a))/((_))/((c))/((c))/((_))/((_))/((_))$'}
					_____REMOVING________['a', '_', 'l', 'c', '_']
					version split: ['a', 'l', 'c', '_', '_']
					{'string': 'a/l/c/_/_', 'rgx': '((a))/((_))/((c))/((c))/((_))/((_))/((_))$'}
					_____REMOVING________['a', 'l', 'c', '_', '_']
					version split: ['a', '_', 'l', 'c', '_', '_']
					{'string': 'a/_/l/c/_/_', 'rgx': '((a))/((_))/((c))/((c))/((_))/((_))/((_))$'}
					_____REMOVING________['a', '_', 'l', 'c', '_', '_']
					version split: ['a', 'l', 'c', '_']
					{'string': 'a/l/c/_', 'rgx': '((a))/((_))/((c))/((c))/((_))/((_))/((_))$'}
					_____REMOVING________['a', 'l', 'c', '_']
					version split: ['a', '_', 'l', 'c', '_']
					{'string': 'a/_/l/c/_', 'rgx': '((a))/((_))/((c))/((c))/((_))/((_))/((_))$'}
					_____REMOVING________['a', '_', 'l', 'c', '_']
					version split: ['a', 'l', 'c', '_', '_']
					{'string': 'a/l/c/_/_', 'rgx': '((a))/((_))/((c))/((c))/((_))/((_))/((_))$'}
					_____REMOVING________['a', 'l', 'c', '_', '_']
					version split: ['a', '_', 'l', 'c', '_', '_']
					{'string': 'a/_/l/c/_/_', 'rgx': '((a))/((_))/((c))/((c))/((_))/((_))/((_))$'}
					_____REMOVING________['a', '_', 'l', 'c', '_', '_']
					version split: ['a', 'l', 'c', '_', '_']
					{'string': 'a/l/c/_/_', 'rgx': '((a))/((_))/((c))/((c))/((_))/((_))/((_))$'}
					_____REMOVING________['a', 'l', 'c', '_', '_']
					version split: ['a', '_', 'l', 'c', '_', '_']
					{'string': 'a/_/l/c/_/_', 'rgx': '((a))/((_))/((c))/((c))/((_))/((_))/((_))$'}
					_____REMOVING________['a', '_', 'l', 'c', '_', '_']
					version split: ['a', 'l', 'c', '_', '_', '_']
					{'string': 'a/l/c/_/_/_', 'rgx': '((a))/((_))/((c))/((c))/((_))/((_))/((_))$'}
					_____REMOVING________['a', 'l', 'c', '_', '_', '_']
					version split: ['a', '_', 'l', 'c', '_', '_', '_']
					{'string': 'a/_/l/c/_/_/_', 'rgx': '((a))/((_))/((c))/((c))/((_))/((_))/((_))$'}
					_____REMOVING________['a', '_', 'l', 'c', '_', '_', '_']
					ANALYSING: alch
						resolving (8)
						> version: a/l/c/h
						> version: a/l/ch
						> version: a/_/l/c/h
						> version: a/_/l/ch
						> version: a/l/c/h/_
						> version: a/l/ch/_
						> version: a/_/l/c/h/_
						> version: a/_/l/ch/_
						RESULT:  ['_']
					adding dashed alternative: ['a', 'l', 'c', 'h', '_']
					adding dashed alternative: ['a', 'l', 'ch', '_']
					adding dashed alternative: ['a', '_', 'l', 'c', 'h', '_']
					adding dashed alternative: ['a', '_', 'l', 'ch', '_']
					adding dashed alternative: ['a', 'l', 'c', 'h', '_', '_']
					adding dashed alternative: ['a', 'l', 'ch', '_', '_']
					adding dashed alternative: ['a', '_', 'l', 'c', 'h', '_', '_']
					adding dashed alternative: ['a', '_', 'l', 'ch', '_', '_']
					a/l/c/h(VCCC)
a/l/ch(VCC)
a/_/l/c/h(VACCC)
a/_/l/ch(VACC)
a/l/c/h/_(VCCCA)
a/l/ch/_(VCCA)
a/_/l/c/h/_(VACCCA)
a/_/l/ch/_(VACCA)
a/l/c/h/_(VCCCA)
a/l/ch/_(VCCA)
a/_/l/c/h/_(VACCCA)
a/_/l/ch/_(VACCA)
a/l/c/h/_/_(VCCCAA)
a/l/ch/_/_(VCCAA)
a/_/l/c/h/_/_(VACCCAA)
a/_/l/ch/_/_(VACCAA)
					version split: ['a', 'l', 'c', 'h']
					{'string': 'a/l/c/h', 'rgx': '((a))/((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))$'}
					_____REMOVING________['a', 'l', 'c', 'h']
					version split: ['a', 'l', 'ch']
					{'string': 'a/l/ch', 'rgx': '((a))/((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))$'}
					_____REMOVING________['a', 'l', 'ch']
					version split: ['a', '_', 'l', 'c', 'h']
					{'string': 'a/_/l/c/h', 'rgx': '((a))/((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))$'}
					_____REMOVING________['a', '_', 'l', 'c', 'h']
					version split: ['a', '_', 'l', 'ch']
					{'string': 'a/_/l/ch', 'rgx': '((a))/((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))$'}
					_____REMOVING________['a', '_', 'l', 'ch']
					version split: ['a', 'l', 'c', 'h', '_']
					{'string': 'a/l/c/h/_', 'rgx': '((a))/((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))$'}
					_____REMOVING________['a', 'l', 'c', 'h', '_']
					version split: ['a', 'l', 'ch', '_']
					{'string': 'a/l/ch/_', 'rgx': '((a))/((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))$'}
					_____REMOVING________['a', 'l', 'ch', '_']
					version split: ['a', '_', 'l', 'c', 'h', '_']
					{'string': 'a/_/l/c/h/_', 'rgx': '((a))/((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))$'}
					_____REMOVING________['a', '_', 'l', 'c', 'h', '_']
					version split: ['a', '_', 'l', 'ch', '_']
					{'string': 'a/_/l/ch/_', 'rgx': '((a))/((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))$'}
					_____REMOVING________['a', '_', 'l', 'ch', '_']
					version split: ['a', 'l', 'c', 'h', '_']
					{'string': 'a/l/c/h/_', 'rgx': '((a))/((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))$'}
					_____REMOVING________['a', 'l', 'c', 'h', '_']
					version split: ['a', 'l', 'ch', '_']
					{'string': 'a/l/ch/_', 'rgx': '((a))/((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))$'}
					_____REMOVING________['a', 'l', 'ch', '_']
					version split: ['a', '_', 'l', 'c', 'h', '_']
					{'string': 'a/_/l/c/h/_', 'rgx': '((a))/((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))$'}
					_____REMOVING________['a', '_', 'l', 'c', 'h', '_']
					version split: ['a', '_', 'l', 'ch', '_']
					{'string': 'a/_/l/ch/_', 'rgx': '((a))/((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))$'}
					_____REMOVING________['a', '_', 'l', 'ch', '_']
					version split: ['a', 'l', 'c', 'h', '_', '_']
					{'string': 'a/l/c/h/_/_', 'rgx': '((a))/((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))$'}
					_____REMOVING________['a', 'l', 'c', 'h', '_', '_']
					version split: ['a', 'l', 'ch', '_', '_']
					{'string': 'a/l/ch/_/_', 'rgx': '((a))/((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))$'}
					_____REMOVING________['a', 'l', 'ch', '_', '_']
					version split: ['a', '_', 'l', 'c', 'h', '_', '_']
					{'string': 'a/_/l/c/h/_/_', 'rgx': '((a))/((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))$'}
					_____REMOVING________['a', '_', 'l', 'c', 'h', '_', '_']
					version split: ['a', '_', 'l', 'ch', '_', '_']
					{'string': 'a/_/l/ch/_/_', 'rgx': '((a))/((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))$'}
					_____REMOVING________['a', '_', 'l', 'ch', '_', '_']
					ANALYSING: alkere
						resolving (4)
						> version: a/l/k/e/r/e
						> version: a/_/l/k/e/r/e
						TRYING: e
						> version: a/l/k/e/_/r/e
						TRYING: e
						> version: a/_/l/k/_/e/r/e
						TRYING: r
						>>> MULTIPLE RESOLVE OPTIONS: {'r', 'e'}
						RESULT:  ['r', 'e']
					version split: ['a', 'l', 'k', 'e', 'r', 'e']
					{'string': 'a/l/k/e/r/e', 'rgx': '((a))/((_))/((k))/((k))/((_))/((r)|(e))/((r)|(e))$'}
					_____REMOVING________['a', 'l', 'k', 'e', 'r', 'e']
					version split: ['a', '_', 'l', 'k', 'e', 'r', 'e']
					{'string': 'a/_/l/k/e/r/e', 'rgx': '((a))/((_))/((k))/((k))/((_))/((r)|(e))/((r)|(e))$'}
					_____REMOVING________['a', '_', 'l', 'k', 'e', 'r', 'e']
					version split: ['a', 'l', 'k', 'e', '_', 'r', 'e']
					{'string': 'a/l/k/e/_/r/e', 'rgx': '((a))/((_))/((k))/((k))/((_))/((r)|(e))/((r)|(e))$'}
					_____REMOVING________['a', 'l', 'k', 'e', '_', 'r', 'e']
					version split: ['a', '_', 'l', 'k', '_', 'e', 'r', 'e']
					{'string': 'a/_/l/k/_/e/r/e', 'rgx': '((a))/((_))/((k))/((k))/((_))/((r)|(e))/((r)|(e))$'}
					_____REMOVING________['a', '_', 'l', 'k', '_', 'e', 'r', 'e']
					ANALYSING: ech
						resolving (16)
						> version: e/c/h
						> version: e/ch
						> version: e/c/h/_
						> version: e/ch/_
						> version: e/c/h/_
						> version: e/ch/_
						> version: e/c/h/_/_
						> version: e/ch/_/_
						> version: e/c/h/_
						> version: e/ch/_
						> version: e/c/h/_/_
						> version: e/ch/_/_
						> version: e/c/h/_/_
						> version: e/ch/_/_
						> version: e/c/h/_/_/_
						> version: e/ch/_/_/_
						RESULT:  ['_']
					adding dashed alternative: ['e', 'c', 'h', '_']
					adding dashed alternative: ['e', 'ch', '_']
					adding dashed alternative: ['e', 'c', 'h', '_', '_']
					adding dashed alternative: ['e', 'ch', '_', '_']
					adding dashed alternative: ['e', 'c', 'h', '_', '_']
					adding dashed alternative: ['e', 'ch', '_', '_']
					adding dashed alternative: ['e', 'c', 'h', '_', '_', '_']
					adding dashed alternative: ['e', 'ch', '_', '_', '_']
					adding dashed alternative: ['e', 'c', 'h', '_', '_']
					adding dashed alternative: ['e', 'ch', '_', '_']
					adding dashed alternative: ['e', 'c', 'h', '_', '_', '_']
					adding dashed alternative: ['e', 'ch', '_', '_', '_']
					adding dashed alternative: ['e', 'c', 'h', '_', '_', '_']
					adding dashed alternative: ['e', 'ch', '_', '_', '_']
					adding dashed alternative: ['e', 'c', 'h', '_', '_', '_', '_']
					adding dashed alternative: ['e', 'ch', '_', '_', '_', '_']
					e/c/h(VCC)
e/ch(VC)
e/c/h/_(VCCA)
e/ch/_(VCA)
e/c/h/_(VCCA)
e/ch/_(VCA)
e/c/h/_/_(VCCAA)
e/ch/_/_(VCAA)
e/c/h/_(VCCA)
e/ch/_(VCA)
e/c/h/_/_(VCCAA)
e/ch/_/_(VCAA)
e/c/h/_/_(VCCAA)
e/ch/_/_(VCAA)
e/c/h/_/_/_(VCCAAA)
e/ch/_/_/_(VCAAA)
e/c/h/_(VCCA)
e/ch/_(VCA)
e/c/h/_/_(VCCAA)
e/ch/_/_(VCAA)
e/c/h/_/_(VCCAA)
e/ch/_/_(VCAA)
e/c/h/_/_/_(VCCAAA)
e/ch/_/_/_(VCAAA)
e/c/h/_/_(VCCAA)
e/ch/_/_(VCAA)
e/c/h/_/_/_(VCCAAA)
e/ch/_/_/_(VCAAA)
e/c/h/_/_/_(VCCAAA)
e/ch/_/_/_(VCAAA)
e/c/h/_/_/_/_(VCCAAAA)
e/ch/_/_/_/_(VCAAAA)
					version split: ['e', 'c', 'h']
					{'string': 'e/c/h', 'rgx': '((e))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'c', 'h']
					version split: ['e', 'ch']
					{'string': 'e/ch', 'rgx': '((e))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'ch']
					version split: ['e', 'c', 'h', '_']
					{'string': 'e/c/h/_', 'rgx': '((e))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'c', 'h', '_']
					version split: ['e', 'ch', '_']
					{'string': 'e/ch/_', 'rgx': '((e))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'ch', '_']
					version split: ['e', 'c', 'h', '_']
					{'string': 'e/c/h/_', 'rgx': '((e))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'c', 'h', '_']
					version split: ['e', 'ch', '_']
					{'string': 'e/ch/_', 'rgx': '((e))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'ch', '_']
					version split: ['e', 'c', 'h', '_', '_']
					{'string': 'e/c/h/_/_', 'rgx': '((e))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'c', 'h', '_', '_']
					version split: ['e', 'ch', '_', '_']
					{'string': 'e/ch/_/_', 'rgx': '((e))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'ch', '_', '_']
					version split: ['e', 'c', 'h', '_']
					{'string': 'e/c/h/_', 'rgx': '((e))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'c', 'h', '_']
					version split: ['e', 'ch', '_']
					{'string': 'e/ch/_', 'rgx': '((e))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'ch', '_']
					version split: ['e', 'c', 'h', '_', '_']
					{'string': 'e/c/h/_/_', 'rgx': '((e))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'c', 'h', '_', '_']
					version split: ['e', 'ch', '_', '_']
					{'string': 'e/ch/_/_', 'rgx': '((e))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'ch', '_', '_']
					version split: ['e', 'c', 'h', '_', '_']
					{'string': 'e/c/h/_/_', 'rgx': '((e))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'c', 'h', '_', '_']
					version split: ['e', 'ch', '_', '_']
					{'string': 'e/ch/_/_', 'rgx': '((e))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'ch', '_', '_']
					version split: ['e', 'c', 'h', '_', '_', '_']
					{'string': 'e/c/h/_/_/_', 'rgx': '((e))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'c', 'h', '_', '_', '_']
					version split: ['e', 'ch', '_', '_', '_']
					{'string': 'e/ch/_/_/_', 'rgx': '((e))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'ch', '_', '_', '_']
					version split: ['e', 'c', 'h', '_']
					{'string': 'e/c/h/_', 'rgx': '((e))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'c', 'h', '_']
					version split: ['e', 'ch', '_']
					{'string': 'e/ch/_', 'rgx': '((e))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'ch', '_']
					version split: ['e', 'c', 'h', '_', '_']
					{'string': 'e/c/h/_/_', 'rgx': '((e))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'c', 'h', '_', '_']
					version split: ['e', 'ch', '_', '_']
					{'string': 'e/ch/_/_', 'rgx': '((e))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'ch', '_', '_']
					version split: ['e', 'c', 'h', '_', '_']
					{'string': 'e/c/h/_/_', 'rgx': '((e))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'c', 'h', '_', '_']
					version split: ['e', 'ch', '_', '_']
					{'string': 'e/ch/_/_', 'rgx': '((e))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'ch', '_', '_']
					version split: ['e', 'c', 'h', '_', '_', '_']
					{'string': 'e/c/h/_/_/_', 'rgx': '((e))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'c', 'h', '_', '_', '_']
					version split: ['e', 'ch', '_', '_', '_']
					{'string': 'e/ch/_/_/_', 'rgx': '((e))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'ch', '_', '_', '_']
					version split: ['e', 'c', 'h', '_', '_']
					{'string': 'e/c/h/_/_', 'rgx': '((e))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'c', 'h', '_', '_']
					version split: ['e', 'ch', '_', '_']
					{'string': 'e/ch/_/_', 'rgx': '((e))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'ch', '_', '_']
					version split: ['e', 'c', 'h', '_', '_', '_']
					{'string': 'e/c/h/_/_/_', 'rgx': '((e))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'c', 'h', '_', '_', '_']
					version split: ['e', 'ch', '_', '_', '_']
					{'string': 'e/ch/_/_/_', 'rgx': '((e))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'ch', '_', '_', '_']
					version split: ['e', 'c', 'h', '_', '_', '_']
					{'string': 'e/c/h/_/_/_', 'rgx': '((e))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'c', 'h', '_', '_', '_']
					version split: ['e', 'ch', '_', '_', '_']
					{'string': 'e/ch/_/_/_', 'rgx': '((e))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'ch', '_', '_', '_']
					version split: ['e', 'c', 'h', '_', '_', '_', '_']
					{'string': 'e/c/h/_/_/_/_', 'rgx': '((e))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					version split: ['e', 'ch', '_', '_', '_', '_']
					{'string': 'e/ch/_/_/_/_', 'rgx': '((e))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'ch', '_', '_', '_', '_']
					ANALYSING: eche
						resolving (16)
						> version: e/c/h/e
						> version: e/ch/e
						> version: e/c/h/_/e
						> version: e/ch/e/_
						> version: e/c/h/e/_
						> version: e/ch/e/_
						> version: e/c/h/_/_/e
						> version: e/ch/e/_/_
						> version: e/c/h/e/_
						> version: e/ch/e/_
						> version: e/c/h/_/e/_
						> version: e/ch/e/_/_
						> version: e/c/h/e/_/_
						> version: e/ch/e/_/_
						> version: e/c/h/_/_/_/e
						TRYING: e
						> version: e/ch/e/_/_/_
						RESULT:  ['_']
					adding dashed alternative: ['e', 'c', 'h', 'e', '_']
					adding dashed alternative: ['e', 'ch', 'e', '_']
					adding dashed alternative: ['e', 'c', 'h', '_', 'e', '_']
					adding dashed alternative: ['e', 'ch', 'e', '_', '_']
					adding dashed alternative: ['e', 'c', 'h', 'e', '_', '_']
					adding dashed alternative: ['e', 'ch', 'e', '_', '_']
					adding dashed alternative: ['e', 'c', 'h', '_', '_', 'e', '_']
					adding dashed alternative: ['e', 'ch', 'e', '_', '_', '_']
					adding dashed alternative: ['e', 'c', 'h', 'e', '_', '_']
					adding dashed alternative: ['e', 'ch', 'e', '_', '_']
					adding dashed alternative: ['e', 'c', 'h', '_', 'e', '_', '_']
					adding dashed alternative: ['e', 'ch', 'e', '_', '_', '_']
					adding dashed alternative: ['e', 'c', 'h', 'e', '_', '_', '_']
					adding dashed alternative: ['e', 'ch', 'e', '_', '_', '_']
					adding dashed alternative: ['e', 'c', 'h', '_', '_', '_', '_', 'e']
					adding dashed alternative: ['e', 'ch', 'e', '_', '_', '_', '_']
					e/c/h/e(VCCV)
e/ch/e(VCV)
e/c/h/_/e(VCCAV)
e/ch/e/_(VCVA)
e/c/h/e/_(VCCVA)
e/ch/e/_(VCVA)
e/c/h/_/_/e(VCCAAV)
e/ch/e/_/_(VCVAA)
e/c/h/e/_(VCCVA)
e/ch/e/_(VCVA)
e/c/h/_/e/_(VCCAVA)
e/ch/e/_/_(VCVAA)
e/c/h/e/_/_(VCCVAA)
e/ch/e/_/_(VCVAA)
e/c/h/_/_/_/e(VCCAAAV)
e/ch/e/_/_/_(VCVAAA)
e/c/h/e/_(VCCVA)
e/ch/e/_(VCVA)
e/c/h/_/e/_(VCCAVA)
e/ch/e/_/_(VCVAA)
e/c/h/e/_/_(VCCVAA)
e/ch/e/_/_(VCVAA)
e/c/h/_/_/e/_(VCCAAVA)
e/ch/e/_/_/_(VCVAAA)
e/c/h/e/_/_(VCCVAA)
e/ch/e/_/_(VCVAA)
e/c/h/_/e/_/_(VCCAVAA)
e/ch/e/_/_/_(VCVAAA)
e/c/h/e/_/_/_(VCCVAAA)
e/ch/e/_/_/_(VCVAAA)
e/c/h/_/_/_/_/e(VCCAAAAV)
e/ch/e/_/_/_/_(VCVAAAA)
					version split: ['e', 'c', 'h', 'e']
					{'string': 'e/c/h/e', 'rgx': '((e))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'c', 'h', 'e']
					version split: ['e', 'ch', 'e']
					{'string': 'e/ch/e', 'rgx': '((e))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'ch', 'e']
					version split: ['e', 'c', 'h', '_', 'e']
					{'string': 'e/c/h/_/e', 'rgx': '((e))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'c', 'h', '_', 'e']
					version split: ['e', 'ch', 'e', '_']
					{'string': 'e/ch/e/_', 'rgx': '((e))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'ch', 'e', '_']
					version split: ['e', 'c', 'h', 'e', '_']
					{'string': 'e/c/h/e/_', 'rgx': '((e))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'c', 'h', 'e', '_']
					version split: ['e', 'ch', 'e', '_']
					{'string': 'e/ch/e/_', 'rgx': '((e))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'ch', 'e', '_']
					version split: ['e', 'c', 'h', '_', '_', 'e']
					{'string': 'e/c/h/_/_/e', 'rgx': '((e))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'c', 'h', '_', '_', 'e']
					version split: ['e', 'ch', 'e', '_', '_']
					{'string': 'e/ch/e/_/_', 'rgx': '((e))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'ch', 'e', '_', '_']
					version split: ['e', 'c', 'h', 'e', '_']
					{'string': 'e/c/h/e/_', 'rgx': '((e))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'c', 'h', 'e', '_']
					version split: ['e', 'ch', 'e', '_']
					{'string': 'e/ch/e/_', 'rgx': '((e))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'ch', 'e', '_']
					version split: ['e', 'c', 'h', '_', 'e', '_']
					{'string': 'e/c/h/_/e/_', 'rgx': '((e))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'c', 'h', '_', 'e', '_']
					version split: ['e', 'ch', 'e', '_', '_']
					{'string': 'e/ch/e/_/_', 'rgx': '((e))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'ch', 'e', '_', '_']
					version split: ['e', 'c', 'h', 'e', '_', '_']
					{'string': 'e/c/h/e/_/_', 'rgx': '((e))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'c', 'h', 'e', '_', '_']
					version split: ['e', 'ch', 'e', '_', '_']
					{'string': 'e/ch/e/_/_', 'rgx': '((e))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'ch', 'e', '_', '_']
					version split: ['e', 'c', 'h', '_', '_', '_', 'e']
					{'string': 'e/c/h/_/_/_/e', 'rgx': '((e))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'c', 'h', '_', '_', '_', 'e']
					version split: ['e', 'ch', 'e', '_', '_', '_']
					{'string': 'e/ch/e/_/_/_', 'rgx': '((e))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'ch', 'e', '_', '_', '_']
					version split: ['e', 'c', 'h', 'e', '_']
					{'string': 'e/c/h/e/_', 'rgx': '((e))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'c', 'h', 'e', '_']
					version split: ['e', 'ch', 'e', '_']
					{'string': 'e/ch/e/_', 'rgx': '((e))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'ch', 'e', '_']
					version split: ['e', 'c', 'h', '_', 'e', '_']
					{'string': 'e/c/h/_/e/_', 'rgx': '((e))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'c', 'h', '_', 'e', '_']
					version split: ['e', 'ch', 'e', '_', '_']
					{'string': 'e/ch/e/_/_', 'rgx': '((e))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'ch', 'e', '_', '_']
					version split: ['e', 'c', 'h', 'e', '_', '_']
					{'string': 'e/c/h/e/_/_', 'rgx': '((e))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'c', 'h', 'e', '_', '_']
					version split: ['e', 'ch', 'e', '_', '_']
					{'string': 'e/ch/e/_/_', 'rgx': '((e))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'ch', 'e', '_', '_']
					version split: ['e', 'c', 'h', '_', '_', 'e', '_']
					{'string': 'e/c/h/_/_/e/_', 'rgx': '((e))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'c', 'h', '_', '_', 'e', '_']
					version split: ['e', 'ch', 'e', '_', '_', '_']
					{'string': 'e/ch/e/_/_/_', 'rgx': '((e))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'ch', 'e', '_', '_', '_']
					version split: ['e', 'c', 'h', 'e', '_', '_']
					{'string': 'e/c/h/e/_/_', 'rgx': '((e))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'c', 'h', 'e', '_', '_']
					version split: ['e', 'ch', 'e', '_', '_']
					{'string': 'e/ch/e/_/_', 'rgx': '((e))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'ch', 'e', '_', '_']
					version split: ['e', 'c', 'h', '_', 'e', '_', '_']
					{'string': 'e/c/h/_/e/_/_', 'rgx': '((e))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'c', 'h', '_', 'e', '_', '_']
					version split: ['e', 'ch', 'e', '_', '_', '_']
					{'string': 'e/ch/e/_/_/_', 'rgx': '((e))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'ch', 'e', '_', '_', '_']
					version split: ['e', 'c', 'h', 'e', '_', '_', '_']
					{'string': 'e/c/h/e/_/_/_', 'rgx': '((e))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'c', 'h', 'e', '_', '_', '_']
					version split: ['e', 'ch', 'e', '_', '_', '_']
					{'string': 'e/ch/e/_/_/_', 'rgx': '((e))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'ch', 'e', '_', '_', '_']
					version split: ['e', 'c', 'h', '_', '_', '_', '_', 'e']
					{'string': 'e/c/h/_/_/_/_/e', 'rgx': '((e))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'c', 'h', '_', '_', '_', '_', 'e']
					version split: ['e', 'ch', 'e', '_', '_', '_', '_']
					{'string': 'e/ch/e/_/_/_/_', 'rgx': '((e))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'ch', 'e', '_', '_', '_', '_']
					ANALYSING: echen
						resolving (16)
						> version: e/c/h/e/n
						> version: e/ch/e/n
						> version: e/c/h/_/e/n
						> version: e/ch/e/_/n
						> version: e/c/h/e/_/n
						> version: e/ch/e/n/_
						> version: e/c/h/_/_/e/n
						TRYING: n
						> version: e/ch/e/_/_/n
						> version: e/c/h/e/n/_
						> version: e/ch/e/n/_
						> version: e/c/h/_/e/_/n
						TRYING: n
						> version: e/ch/e/_/n/_
						> version: e/c/h/e/_/_/n
						TRYING: n
						> version: e/ch/e/n/_/_
						> version: e/c/h/_/_/_/e/n
						TRYING: e
						> version: e/ch/e/_/_/_/n
						TRYING: n
						RESULT:  ['_']
					adding dashed alternative: ['e', 'c', 'h', 'e', 'n', '_']
					adding dashed alternative: ['e', 'ch', 'e', 'n', '_']
					adding dashed alternative: ['e', 'c', 'h', '_', 'e', 'n', '_']
					adding dashed alternative: ['e', 'ch', 'e', '_', 'n', '_']
					adding dashed alternative: ['e', 'c', 'h', 'e', '_', 'n', '_']
					adding dashed alternative: ['e', 'ch', 'e', 'n', '_', '_']
					adding dashed alternative: ['e', 'c', 'h', '_', '_', 'e', '_', 'n']
					adding dashed alternative: ['e', 'ch', 'e', '_', '_', 'n', '_']
					adding dashed alternative: ['e', 'c', 'h', 'e', 'n', '_', '_']
					adding dashed alternative: ['e', 'ch', 'e', 'n', '_', '_']
					adding dashed alternative: ['e', 'c', 'h', '_', 'e', '_', '_', 'n']
					adding dashed alternative: ['e', 'ch', 'e', '_', 'n', '_', '_']
					adding dashed alternative: ['e', 'c', 'h', 'e', '_', '_', '_', 'n']
					adding dashed alternative: ['e', 'ch', 'e', 'n', '_', '_', '_']
					adding dashed alternative: ['e', 'c', 'h', '_', '_', '_', '_', 'e', 'n']
					adding dashed alternative: ['e', 'ch', 'e', '_', '_', '_', '_', 'n']
					e/c/h/e/n(VCCVC)
e/ch/e/n(VCVC)
e/c/h/_/e/n(VCCAVC)
e/ch/e/_/n(VCVAC)
e/c/h/e/_/n(VCCVAC)
e/ch/e/n/_(VCVCA)
e/c/h/_/_/e/n(VCCAAVC)
e/ch/e/_/_/n(VCVAAC)
e/c/h/e/n/_(VCCVCA)
e/ch/e/n/_(VCVCA)
e/c/h/_/e/_/n(VCCAVAC)
e/ch/e/_/n/_(VCVACA)
e/c/h/e/_/_/n(VCCVAAC)
e/ch/e/n/_/_(VCVCAA)
e/c/h/_/_/_/e/n(VCCAAAVC)
e/ch/e/_/_/_/n(VCVAAAC)
e/c/h/e/n/_(VCCVCA)
e/ch/e/n/_(VCVCA)
e/c/h/_/e/n/_(VCCAVCA)
e/ch/e/_/n/_(VCVACA)
e/c/h/e/_/n/_(VCCVACA)
e/ch/e/n/_/_(VCVCAA)
e/c/h/_/_/e/_/n(VCCAAVAC)
e/ch/e/_/_/n/_(VCVAACA)
e/c/h/e/n/_/_(VCCVCAA)
e/ch/e/n/_/_(VCVCAA)
e/c/h/_/e/_/_/n(VCCAVAAC)
e/ch/e/_/n/_/_(VCVACAA)
e/c/h/e/_/_/_/n(VCCVAAAC)
e/ch/e/n/_/_/_(VCVCAAA)
e/c/h/_/_/_/_/e/n(VCCAAAAVC)
e/ch/e/_/_/_/_/n(VCVAAAAC)
					version split: ['e', 'c', 'h', 'e', 'n']
					{'string': 'e/c/h/e/n', 'rgx': '((e))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'c', 'h', 'e', 'n']
					version split: ['e', 'ch', 'e', 'n']
					{'string': 'e/ch/e/n', 'rgx': '((e))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'ch', 'e', 'n']
					version split: ['e', 'c', 'h', '_', 'e', 'n']
					{'string': 'e/c/h/_/e/n', 'rgx': '((e))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'c', 'h', '_', 'e', 'n']
					version split: ['e', 'ch', 'e', '_', 'n']
					{'string': 'e/ch/e/_/n', 'rgx': '((e))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'ch', 'e', '_', 'n']
					version split: ['e', 'c', 'h', 'e', '_', 'n']
					{'string': 'e/c/h/e/_/n', 'rgx': '((e))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'c', 'h', 'e', '_', 'n']
					version split: ['e', 'ch', 'e', 'n', '_']
					{'string': 'e/ch/e/n/_', 'rgx': '((e))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'ch', 'e', 'n', '_']
					version split: ['e', 'c', 'h', '_', '_', 'e', 'n']
					{'string': 'e/c/h/_/_/e/n', 'rgx': '((e))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'c', 'h', '_', '_', 'e', 'n']
					version split: ['e', 'ch', 'e', '_', '_', 'n']
					{'string': 'e/ch/e/_/_/n', 'rgx': '((e))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'ch', 'e', '_', '_', 'n']
					version split: ['e', 'c', 'h', 'e', 'n', '_']
					{'string': 'e/c/h/e/n/_', 'rgx': '((e))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'c', 'h', 'e', 'n', '_']
					version split: ['e', 'ch', 'e', 'n', '_']
					{'string': 'e/ch/e/n/_', 'rgx': '((e))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'ch', 'e', 'n', '_']
					version split: ['e', 'c', 'h', '_', 'e', '_', 'n']
					{'string': 'e/c/h/_/e/_/n', 'rgx': '((e))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'c', 'h', '_', 'e', '_', 'n']
					version split: ['e', 'ch', 'e', '_', 'n', '_']
					{'string': 'e/ch/e/_/n/_', 'rgx': '((e))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'ch', 'e', '_', 'n', '_']
					version split: ['e', 'c', 'h', 'e', '_', '_', 'n']
					{'string': 'e/c/h/e/_/_/n', 'rgx': '((e))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'c', 'h', 'e', '_', '_', 'n']
					version split: ['e', 'ch', 'e', 'n', '_', '_']
					{'string': 'e/ch/e/n/_/_', 'rgx': '((e))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'ch', 'e', 'n', '_', '_']
					version split: ['e', 'c', 'h', '_', '_', '_', 'e', 'n']
					{'string': 'e/c/h/_/_/_/e/n', 'rgx': '((e))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'c', 'h', '_', '_', '_', 'e', 'n']
					version split: ['e', 'ch', 'e', '_', '_', '_', 'n']
					{'string': 'e/ch/e/_/_/_/n', 'rgx': '((e))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'ch', 'e', '_', '_', '_', 'n']
					version split: ['e', 'c', 'h', 'e', 'n', '_']
					{'string': 'e/c/h/e/n/_', 'rgx': '((e))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'c', 'h', 'e', 'n', '_']
					version split: ['e', 'ch', 'e', 'n', '_']
					{'string': 'e/ch/e/n/_', 'rgx': '((e))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'ch', 'e', 'n', '_']
					version split: ['e', 'c', 'h', '_', 'e', 'n', '_']
					{'string': 'e/c/h/_/e/n/_', 'rgx': '((e))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'c', 'h', '_', 'e', 'n', '_']
					version split: ['e', 'ch', 'e', '_', 'n', '_']
					{'string': 'e/ch/e/_/n/_', 'rgx': '((e))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'ch', 'e', '_', 'n', '_']
					version split: ['e', 'c', 'h', 'e', '_', 'n', '_']
					{'string': 'e/c/h/e/_/n/_', 'rgx': '((e))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'c', 'h', 'e', '_', 'n', '_']
					version split: ['e', 'ch', 'e', 'n', '_', '_']
					{'string': 'e/ch/e/n/_/_', 'rgx': '((e))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'ch', 'e', 'n', '_', '_']
					version split: ['e', 'c', 'h', '_', '_', 'e', '_', 'n']
					{'string': 'e/c/h/_/_/e/_/n', 'rgx': '((e))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'c', 'h', '_', '_', 'e', '_', 'n']
					version split: ['e', 'ch', 'e', '_', '_', 'n', '_']
					{'string': 'e/ch/e/_/_/n/_', 'rgx': '((e))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'ch', 'e', '_', '_', 'n', '_']
					version split: ['e', 'c', 'h', 'e', 'n', '_', '_']
					{'string': 'e/c/h/e/n/_/_', 'rgx': '((e))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'c', 'h', 'e', 'n', '_', '_']
					version split: ['e', 'ch', 'e', 'n', '_', '_']
					{'string': 'e/ch/e/n/_/_', 'rgx': '((e))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'ch', 'e', 'n', '_', '_']
					version split: ['e', 'c', 'h', '_', 'e', '_', '_', 'n']
					{'string': 'e/c/h/_/e/_/_/n', 'rgx': '((e))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'c', 'h', '_', 'e', '_', '_', 'n']
					version split: ['e', 'ch', 'e', '_', 'n', '_', '_']
					{'string': 'e/ch/e/_/n/_/_', 'rgx': '((e))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'ch', 'e', '_', 'n', '_', '_']
					version split: ['e', 'c', 'h', 'e', '_', '_', '_', 'n']
					{'string': 'e/c/h/e/_/_/_/n', 'rgx': '((e))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'c', 'h', 'e', '_', '_', '_', 'n']
					version split: ['e', 'ch', 'e', 'n', '_', '_', '_']
					{'string': 'e/ch/e/n/_/_/_', 'rgx': '((e))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'ch', 'e', 'n', '_', '_', '_']
					version split: ['e', 'c', 'h', '_', '_', '_', '_', 'e', 'n']
					{'string': 'e/c/h/_/_/_/_/e', 'rgx': '((e))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'c', 'h', '_', '_', '_', '_', 'e', 'n']
					version split: ['e', 'ch', 'e', '_', '_', '_', '_', 'n']
					{'string': 'e/ch/e/_/_/_/_/n', 'rgx': '((e))/((ch)|(c))/((h))/((_))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'ch', 'e', '_', '_', '_', '_', 'n']
					ANALYSING: elc
						resolving (8)
						> version: e/l/c
						> version: e/_/l/c
						> version: e/l/c/_
						> version: e/_/l/c/_
						> version: e/l/c/_
						> version: e/_/l/c/_
						> version: e/l/c/_/_
						> version: e/_/l/c/_/_
						RESULT:  ['_']
					adding dashed alternative: ['e', 'l', 'c', '_']
					adding dashed alternative: ['e', '_', 'l', 'c', '_']
					adding dashed alternative: ['e', 'l', 'c', '_', '_']
					adding dashed alternative: ['e', '_', 'l', 'c', '_', '_']
					adding dashed alternative: ['e', 'l', 'c', '_', '_']
					adding dashed alternative: ['e', '_', 'l', 'c', '_', '_']
					adding dashed alternative: ['e', 'l', 'c', '_', '_', '_']
					adding dashed alternative: ['e', '_', 'l', 'c', '_', '_', '_']
					e/l/c(VCC)
e/_/l/c(VACC)
e/l/c/_(VCCA)
e/_/l/c/_(VACCA)
e/l/c/_(VCCA)
e/_/l/c/_(VACCA)
e/l/c/_/_(VCCAA)
e/_/l/c/_/_(VACCAA)
e/l/c/_(VCCA)
e/_/l/c/_(VACCA)
e/l/c/_/_(VCCAA)
e/_/l/c/_/_(VACCAA)
e/l/c/_/_(VCCAA)
e/_/l/c/_/_(VACCAA)
e/l/c/_/_/_(VCCAAA)
e/_/l/c/_/_/_(VACCAAA)
					version split: ['e', 'l', 'c']
					{'string': 'e/l/c', 'rgx': '((e))/((_))/((c))/((c))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'l', 'c']
					version split: ['e', '_', 'l', 'c']
					{'string': 'e/_/l/c', 'rgx': '((e))/((_))/((c))/((c))/((_))/((_))/((_))$'}
					_____REMOVING________['e', '_', 'l', 'c']
					version split: ['e', 'l', 'c', '_']
					{'string': 'e/l/c/_', 'rgx': '((e))/((_))/((c))/((c))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'l', 'c', '_']
					version split: ['e', '_', 'l', 'c', '_']
					{'string': 'e/_/l/c/_', 'rgx': '((e))/((_))/((c))/((c))/((_))/((_))/((_))$'}
					_____REMOVING________['e', '_', 'l', 'c', '_']
					version split: ['e', 'l', 'c', '_']
					{'string': 'e/l/c/_', 'rgx': '((e))/((_))/((c))/((c))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'l', 'c', '_']
					version split: ['e', '_', 'l', 'c', '_']
					{'string': 'e/_/l/c/_', 'rgx': '((e))/((_))/((c))/((c))/((_))/((_))/((_))$'}
					_____REMOVING________['e', '_', 'l', 'c', '_']
					version split: ['e', 'l', 'c', '_', '_']
					{'string': 'e/l/c/_/_', 'rgx': '((e))/((_))/((c))/((c))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'l', 'c', '_', '_']
					version split: ['e', '_', 'l', 'c', '_', '_']
					{'string': 'e/_/l/c/_/_', 'rgx': '((e))/((_))/((c))/((c))/((_))/((_))/((_))$'}
					_____REMOVING________['e', '_', 'l', 'c', '_', '_']
					version split: ['e', 'l', 'c', '_']
					{'string': 'e/l/c/_', 'rgx': '((e))/((_))/((c))/((c))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'l', 'c', '_']
					version split: ['e', '_', 'l', 'c', '_']
					{'string': 'e/_/l/c/_', 'rgx': '((e))/((_))/((c))/((c))/((_))/((_))/((_))$'}
					_____REMOVING________['e', '_', 'l', 'c', '_']
					version split: ['e', 'l', 'c', '_', '_']
					{'string': 'e/l/c/_/_', 'rgx': '((e))/((_))/((c))/((c))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'l', 'c', '_', '_']
					version split: ['e', '_', 'l', 'c', '_', '_']
					{'string': 'e/_/l/c/_/_', 'rgx': '((e))/((_))/((c))/((c))/((_))/((_))/((_))$'}
					_____REMOVING________['e', '_', 'l', 'c', '_', '_']
					version split: ['e', 'l', 'c', '_', '_']
					{'string': 'e/l/c/_/_', 'rgx': '((e))/((_))/((c))/((c))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'l', 'c', '_', '_']
					version split: ['e', '_', 'l', 'c', '_', '_']
					{'string': 'e/_/l/c/_/_', 'rgx': '((e))/((_))/((c))/((c))/((_))/((_))/((_))$'}
					_____REMOVING________['e', '_', 'l', 'c', '_', '_']
					version split: ['e', 'l', 'c', '_', '_', '_']
					{'string': 'e/l/c/_/_/_', 'rgx': '((e))/((_))/((c))/((c))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'l', 'c', '_', '_', '_']
					version split: ['e', '_', 'l', 'c', '_', '_', '_']
					{'string': 'e/_/l/c/_/_/_', 'rgx': '((e))/((_))/((c))/((c))/((_))/((_))/((_))$'}
					_____REMOVING________['e', '_', 'l', 'c', '_', '_', '_']
					ANALYSING: elch
						resolving (8)
						> version: e/l/c/h
						> version: e/l/ch
						> version: e/_/l/c/h
						> version: e/_/l/ch
						> version: e/l/c/h/_
						> version: e/l/ch/_
						> version: e/_/l/c/h/_
						> version: e/_/l/ch/_
						RESULT:  ['_']
					adding dashed alternative: ['e', 'l', 'c', 'h', '_']
					adding dashed alternative: ['e', 'l', 'ch', '_']
					adding dashed alternative: ['e', '_', 'l', 'c', 'h', '_']
					adding dashed alternative: ['e', '_', 'l', 'ch', '_']
					adding dashed alternative: ['e', 'l', 'c', 'h', '_', '_']
					adding dashed alternative: ['e', 'l', 'ch', '_', '_']
					adding dashed alternative: ['e', '_', 'l', 'c', 'h', '_', '_']
					adding dashed alternative: ['e', '_', 'l', 'ch', '_', '_']
					e/l/c/h(VCCC)
e/l/ch(VCC)
e/_/l/c/h(VACCC)
e/_/l/ch(VACC)
e/l/c/h/_(VCCCA)
e/l/ch/_(VCCA)
e/_/l/c/h/_(VACCCA)
e/_/l/ch/_(VACCA)
e/l/c/h/_(VCCCA)
e/l/ch/_(VCCA)
e/_/l/c/h/_(VACCCA)
e/_/l/ch/_(VACCA)
e/l/c/h/_/_(VCCCAA)
e/l/ch/_/_(VCCAA)
e/_/l/c/h/_/_(VACCCAA)
e/_/l/ch/_/_(VACCAA)
					version split: ['e', 'l', 'c', 'h']
					{'string': 'e/l/c/h', 'rgx': '((e))/((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))$'}
					_____REMOVING________['e', 'l', 'c', 'h']
					version split: ['e', 'l', 'ch']
					{'string': 'e/l/ch', 'rgx': '((e))/((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))$'}
					_____REMOVING________['e', 'l', 'ch']
					version split: ['e', '_', 'l', 'c', 'h']
					{'string': 'e/_/l/c/h', 'rgx': '((e))/((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))$'}
					_____REMOVING________['e', '_', 'l', 'c', 'h']
					version split: ['e', '_', 'l', 'ch']
					{'string': 'e/_/l/ch', 'rgx': '((e))/((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))$'}
					_____REMOVING________['e', '_', 'l', 'ch']
					version split: ['e', 'l', 'c', 'h', '_']
					{'string': 'e/l/c/h/_', 'rgx': '((e))/((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))$'}
					_____REMOVING________['e', 'l', 'c', 'h', '_']
					version split: ['e', 'l', 'ch', '_']
					{'string': 'e/l/ch/_', 'rgx': '((e))/((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))$'}
					_____REMOVING________['e', 'l', 'ch', '_']
					version split: ['e', '_', 'l', 'c', 'h', '_']
					{'string': 'e/_/l/c/h/_', 'rgx': '((e))/((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))$'}
					_____REMOVING________['e', '_', 'l', 'c', 'h', '_']
					version split: ['e', '_', 'l', 'ch', '_']
					{'string': 'e/_/l/ch/_', 'rgx': '((e))/((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))$'}
					_____REMOVING________['e', '_', 'l', 'ch', '_']
					version split: ['e', 'l', 'c', 'h', '_']
					{'string': 'e/l/c/h/_', 'rgx': '((e))/((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))$'}
					_____REMOVING________['e', 'l', 'c', 'h', '_']
					version split: ['e', 'l', 'ch', '_']
					{'string': 'e/l/ch/_', 'rgx': '((e))/((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))$'}
					_____REMOVING________['e', 'l', 'ch', '_']
					version split: ['e', '_', 'l', 'c', 'h', '_']
					{'string': 'e/_/l/c/h/_', 'rgx': '((e))/((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))$'}
					_____REMOVING________['e', '_', 'l', 'c', 'h', '_']
					version split: ['e', '_', 'l', 'ch', '_']
					{'string': 'e/_/l/ch/_', 'rgx': '((e))/((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))$'}
					_____REMOVING________['e', '_', 'l', 'ch', '_']
					version split: ['e', 'l', 'c', 'h', '_', '_']
					{'string': 'e/l/c/h/_/_', 'rgx': '((e))/((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))$'}
					_____REMOVING________['e', 'l', 'c', 'h', '_', '_']
					version split: ['e', 'l', 'ch', '_', '_']
					{'string': 'e/l/ch/_/_', 'rgx': '((e))/((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))$'}
					_____REMOVING________['e', 'l', 'ch', '_', '_']
					version split: ['e', '_', 'l', 'c', 'h', '_', '_']
					{'string': 'e/_/l/c/h/_/_', 'rgx': '((e))/((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))$'}
					_____REMOVING________['e', '_', 'l', 'c', 'h', '_', '_']
					version split: ['e', '_', 'l', 'ch', '_', '_']
					{'string': 'e/_/l/ch/_/_', 'rgx': '((e))/((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))$'}
					_____REMOVING________['e', '_', 'l', 'ch', '_', '_']
					ANALYSING: elche
						resolving (8)
						> version: e/l/c/h/e
						> version: e/l/ch/e
						> version: e/_/l/c/h/e
						> version: e/_/l/ch/e
						> version: e/l/c/h/e/_
						> version: e/l/ch/e/_
						> version: e/_/l/c/h/_/e
						TRYING: e
						> version: e/_/l/ch/e/_
						RESULT:  ['_']
					adding dashed alternative: ['e', 'l', 'c', 'h', 'e', '_']
					adding dashed alternative: ['e', 'l', 'ch', 'e', '_']
					adding dashed alternative: ['e', '_', 'l', 'c', 'h', 'e', '_']
					adding dashed alternative: ['e', '_', 'l', 'ch', 'e', '_']
					adding dashed alternative: ['e', 'l', 'c', 'h', 'e', '_', '_']
					adding dashed alternative: ['e', 'l', 'ch', 'e', '_', '_']
					adding dashed alternative: ['e', '_', 'l', 'c', 'h', '_', '_', 'e']
					adding dashed alternative: ['e', '_', 'l', 'ch', 'e', '_', '_']
					e/l/c/h/e(VCCCV)
e/l/ch/e(VCCV)
e/_/l/c/h/e(VACCCV)
e/_/l/ch/e(VACCV)
e/l/c/h/e/_(VCCCVA)
e/l/ch/e/_(VCCVA)
e/_/l/c/h/_/e(VACCCAV)
e/_/l/ch/e/_(VACCVA)
e/l/c/h/e/_(VCCCVA)
e/l/ch/e/_(VCCVA)
e/_/l/c/h/e/_(VACCCVA)
e/_/l/ch/e/_(VACCVA)
e/l/c/h/e/_/_(VCCCVAA)
e/l/ch/e/_/_(VCCVAA)
e/_/l/c/h/_/_/e(VACCCAAV)
e/_/l/ch/e/_/_(VACCVAA)
					version split: ['e', 'l', 'c', 'h', 'e']
					{'string': 'e/l/c/h/e', 'rgx': '((e))/((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))$'}
					_____REMOVING________['e', 'l', 'c', 'h', 'e']
					version split: ['e', 'l', 'ch', 'e']
					{'string': 'e/l/ch/e', 'rgx': '((e))/((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))$'}
					_____REMOVING________['e', 'l', 'ch', 'e']
					version split: ['e', '_', 'l', 'c', 'h', 'e']
					{'string': 'e/_/l/c/h/e', 'rgx': '((e))/((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))$'}
					_____REMOVING________['e', '_', 'l', 'c', 'h', 'e']
					version split: ['e', '_', 'l', 'ch', 'e']
					{'string': 'e/_/l/ch/e', 'rgx': '((e))/((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))$'}
					_____REMOVING________['e', '_', 'l', 'ch', 'e']
					version split: ['e', 'l', 'c', 'h', 'e', '_']
					{'string': 'e/l/c/h/e/_', 'rgx': '((e))/((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))$'}
					_____REMOVING________['e', 'l', 'c', 'h', 'e', '_']
					version split: ['e', 'l', 'ch', 'e', '_']
					{'string': 'e/l/ch/e/_', 'rgx': '((e))/((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))$'}
					_____REMOVING________['e', 'l', 'ch', 'e', '_']
					version split: ['e', '_', 'l', 'c', 'h', '_', 'e']
					{'string': 'e/_/l/c/h/_/e', 'rgx': '((e))/((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))$'}
					_____REMOVING________['e', '_', 'l', 'c', 'h', '_', 'e']
					version split: ['e', '_', 'l', 'ch', 'e', '_']
					{'string': 'e/_/l/ch/e/_', 'rgx': '((e))/((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))$'}
					_____REMOVING________['e', '_', 'l', 'ch', 'e', '_']
					version split: ['e', 'l', 'c', 'h', 'e', '_']
					{'string': 'e/l/c/h/e/_', 'rgx': '((e))/((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))$'}
					_____REMOVING________['e', 'l', 'c', 'h', 'e', '_']
					version split: ['e', 'l', 'ch', 'e', '_']
					{'string': 'e/l/ch/e/_', 'rgx': '((e))/((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))$'}
					_____REMOVING________['e', 'l', 'ch', 'e', '_']
					version split: ['e', '_', 'l', 'c', 'h', 'e', '_']
					{'string': 'e/_/l/c/h/e/_', 'rgx': '((e))/((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))$'}
					_____REMOVING________['e', '_', 'l', 'c', 'h', 'e', '_']
					version split: ['e', '_', 'l', 'ch', 'e', '_']
					{'string': 'e/_/l/ch/e/_', 'rgx': '((e))/((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))$'}
					_____REMOVING________['e', '_', 'l', 'ch', 'e', '_']
					version split: ['e', 'l', 'c', 'h', 'e', '_', '_']
					{'string': 'e/l/c/h/e/_/_', 'rgx': '((e))/((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))$'}
					_____REMOVING________['e', 'l', 'c', 'h', 'e', '_', '_']
					version split: ['e', 'l', 'ch', 'e', '_', '_']
					{'string': 'e/l/ch/e/_/_', 'rgx': '((e))/((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))$'}
					_____REMOVING________['e', 'l', 'ch', 'e', '_', '_']
					version split: ['e', '_', 'l', 'c', 'h', '_', '_', 'e']
					{'string': 'e/_/l/c/h/_/_/e', 'rgx': '((e))/((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))$'}
					_____REMOVING________['e', '_', 'l', 'c', 'h', '_', '_', 'e']
					version split: ['e', '_', 'l', 'ch', 'e', '_', '_']
					{'string': 'e/_/l/ch/e/_/_', 'rgx': '((e))/((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))$'}
					_____REMOVING________['e', '_', 'l', 'ch', 'e', '_', '_']
					ANALYSING: euch
						resolving (24)
						> version: e/u/c/h
						> version: e/u/c/h
						> version: e/u/ch
						> version: e/u/ch
						> version: eu/c/h
						> version: eu/ch
						> version: e/u/c/h/_
						> version: e/u/c/h/_
						> version: e/u/ch/_
						> version: e/u/ch/_
						> version: eu/c/h/_
						> version: eu/ch/_
						> version: e/u/c/h/_
						> version: e/u/c/h/_
						> version: e/u/ch/_
						> version: e/u/ch/_
						> version: eu/c/h/_
						> version: eu/ch/_
						> version: e/u/c/h/_/_
						> version: e/u/c/h/_/_
						> version: e/u/ch/_/_
						> version: e/u/ch/_/_
						> version: eu/c/h/_/_
						> version: eu/ch/_/_
						RESULT:  ['_']
					adding dashed alternative: ['e', 'u', 'c', 'h', '_']
					adding dashed alternative: ['e', 'u', 'c', 'h', '_']
					adding dashed alternative: ['e', 'u', 'ch', '_']
					adding dashed alternative: ['e', 'u', 'ch', '_']
					adding dashed alternative: ['eu', 'c', 'h', '_']
					adding dashed alternative: ['eu', 'ch', '_']
					adding dashed alternative: ['e', 'u', 'c', 'h', '_', '_']
					adding dashed alternative: ['e', 'u', 'c', 'h', '_', '_']
					adding dashed alternative: ['e', 'u', 'ch', '_', '_']
					adding dashed alternative: ['e', 'u', 'ch', '_', '_']
					adding dashed alternative: ['eu', 'c', 'h', '_', '_']
					adding dashed alternative: ['eu', 'ch', '_', '_']
					adding dashed alternative: ['e', 'u', 'c', 'h', '_', '_']
					adding dashed alternative: ['e', 'u', 'c', 'h', '_', '_']
					adding dashed alternative: ['e', 'u', 'ch', '_', '_']
					adding dashed alternative: ['e', 'u', 'ch', '_', '_']
					adding dashed alternative: ['eu', 'c', 'h', '_', '_']
					adding dashed alternative: ['eu', 'ch', '_', '_']
					adding dashed alternative: ['e', 'u', 'c', 'h', '_', '_', '_']
					adding dashed alternative: ['e', 'u', 'c', 'h', '_', '_', '_']
					adding dashed alternative: ['e', 'u', 'ch', '_', '_', '_']
					adding dashed alternative: ['e', 'u', 'ch', '_', '_', '_']
					adding dashed alternative: ['eu', 'c', 'h', '_', '_', '_']
					adding dashed alternative: ['eu', 'ch', '_', '_', '_']
					e/u/c/h(VCCC)
e/u/c/h(VVCC)
e/u/ch(VCC)
e/u/ch(VVC)
eu/c/h(VCC)
eu/ch(VC)
e/u/c/h/_(VACCA)
e/u/c/h/_(VACCA)
e/u/ch/_(VACA)
e/u/ch/_(VACA)
eu/c/h/_(VCCA)
eu/ch/_(VCA)
e/u/c/h/_(VACCA)
e/u/c/h/_(VACCA)
e/u/ch/_(VACA)
e/u/ch/_(VACA)
eu/c/h/_(VCCA)
eu/ch/_(VCA)
e/u/c/h/_/_(VACCAA)
e/u/c/h/_/_(VACCAA)
e/u/ch/_/_(VACAA)
e/u/ch/_/_(VACAA)
eu/c/h/_/_(VCCAA)
eu/ch/_/_(VCAA)
e/u/c/h/_(VACCA)
e/u/c/h/_(VACCA)
e/u/ch/_(VACA)
e/u/ch/_(VACA)
eu/c/h/_(VCCA)
eu/ch/_(VCA)
e/u/c/h/_/_(VACCAA)
e/u/c/h/_/_(VACCAA)
e/u/ch/_/_(VACAA)
e/u/ch/_/_(VACAA)
eu/c/h/_/_(VCCAA)
eu/ch/_/_(VCAA)
e/u/c/h/_/_(VACCAA)
e/u/c/h/_/_(VACCAA)
e/u/ch/_/_(VACAA)
e/u/ch/_/_(VACAA)
eu/c/h/_/_(VCCAA)
eu/ch/_/_(VCAA)
e/u/c/h/_/_/_(VACCAAA)
e/u/c/h/_/_/_(VACCAAA)
e/u/ch/_/_/_(VACAAA)
e/u/ch/_/_/_(VACAAA)
eu/c/h/_/_/_(VCCAAA)
eu/ch/_/_/_(VCAAA)
					version split: ['e', 'u', 'c', 'h']
					{'string': 'e/u/c/h', 'rgx': '((e))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'u', 'c', 'h']
					version split: ['e', 'u', 'c', 'h']
					{'string': 'e/u/c/h', 'rgx': '((e))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'u', 'c', 'h']
					version split: ['e', 'u', 'ch']
					{'string': 'e/u/ch', 'rgx': '((e))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'u', 'ch']
					version split: ['e', 'u', 'ch']
					{'string': 'e/u/ch', 'rgx': '((e))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'u', 'ch']
					version split: ['eu', 'c', 'h']
					{'string': 'eu/c/h', 'rgx': '((e))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['eu', 'c', 'h']
					version split: ['eu', 'ch']
					{'string': 'eu/ch', 'rgx': '((e))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['eu', 'ch']
					version split: ['e', 'u', 'c', 'h', '_']
					{'string': 'e/u/c/h/_', 'rgx': '((e))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'u', 'c', 'h', '_']
					version split: ['e', 'u', 'c', 'h', '_']
					{'string': 'e/u/c/h/_', 'rgx': '((e))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'u', 'c', 'h', '_']
					version split: ['e', 'u', 'ch', '_']
					{'string': 'e/u/ch/_', 'rgx': '((e))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'u', 'ch', '_']
					version split: ['e', 'u', 'ch', '_']
					{'string': 'e/u/ch/_', 'rgx': '((e))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'u', 'ch', '_']
					version split: ['eu', 'c', 'h', '_']
					{'string': 'eu/c/h/_', 'rgx': '((e))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['eu', 'c', 'h', '_']
					version split: ['eu', 'ch', '_']
					{'string': 'eu/ch/_', 'rgx': '((e))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['eu', 'ch', '_']
					version split: ['e', 'u', 'c', 'h', '_']
					{'string': 'e/u/c/h/_', 'rgx': '((e))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'u', 'c', 'h', '_']
					version split: ['e', 'u', 'c', 'h', '_']
					{'string': 'e/u/c/h/_', 'rgx': '((e))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'u', 'c', 'h', '_']
					version split: ['e', 'u', 'ch', '_']
					{'string': 'e/u/ch/_', 'rgx': '((e))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'u', 'ch', '_']
					version split: ['e', 'u', 'ch', '_']
					{'string': 'e/u/ch/_', 'rgx': '((e))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'u', 'ch', '_']
					version split: ['eu', 'c', 'h', '_']
					{'string': 'eu/c/h/_', 'rgx': '((e))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['eu', 'c', 'h', '_']
					version split: ['eu', 'ch', '_']
					{'string': 'eu/ch/_', 'rgx': '((e))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['eu', 'ch', '_']
					version split: ['e', 'u', 'c', 'h', '_', '_']
					{'string': 'e/u/c/h/_/_', 'rgx': '((e))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'u', 'c', 'h', '_', '_']
					version split: ['e', 'u', 'c', 'h', '_', '_']
					{'string': 'e/u/c/h/_/_', 'rgx': '((e))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'u', 'c', 'h', '_', '_']
					version split: ['e', 'u', 'ch', '_', '_']
					{'string': 'e/u/ch/_/_', 'rgx': '((e))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'u', 'ch', '_', '_']
					version split: ['e', 'u', 'ch', '_', '_']
					{'string': 'e/u/ch/_/_', 'rgx': '((e))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'u', 'ch', '_', '_']
					version split: ['eu', 'c', 'h', '_', '_']
					{'string': 'eu/c/h/_/_', 'rgx': '((e))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['eu', 'c', 'h', '_', '_']
					version split: ['eu', 'ch', '_', '_']
					{'string': 'eu/ch/_/_', 'rgx': '((e))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['eu', 'ch', '_', '_']
					version split: ['e', 'u', 'c', 'h', '_']
					{'string': 'e/u/c/h/_', 'rgx': '((e))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'u', 'c', 'h', '_']
					version split: ['e', 'u', 'c', 'h', '_']
					{'string': 'e/u/c/h/_', 'rgx': '((e))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'u', 'c', 'h', '_']
					version split: ['e', 'u', 'ch', '_']
					{'string': 'e/u/ch/_', 'rgx': '((e))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'u', 'ch', '_']
					version split: ['e', 'u', 'ch', '_']
					{'string': 'e/u/ch/_', 'rgx': '((e))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'u', 'ch', '_']
					version split: ['eu', 'c', 'h', '_']
					{'string': 'eu/c/h/_', 'rgx': '((e))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['eu', 'c', 'h', '_']
					version split: ['eu', 'ch', '_']
					{'string': 'eu/ch/_', 'rgx': '((e))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['eu', 'ch', '_']
					version split: ['e', 'u', 'c', 'h', '_', '_']
					{'string': 'e/u/c/h/_/_', 'rgx': '((e))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'u', 'c', 'h', '_', '_']
					version split: ['e', 'u', 'c', 'h', '_', '_']
					{'string': 'e/u/c/h/_/_', 'rgx': '((e))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'u', 'c', 'h', '_', '_']
					version split: ['e', 'u', 'ch', '_', '_']
					{'string': 'e/u/ch/_/_', 'rgx': '((e))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'u', 'ch', '_', '_']
					version split: ['e', 'u', 'ch', '_', '_']
					{'string': 'e/u/ch/_/_', 'rgx': '((e))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'u', 'ch', '_', '_']
					version split: ['eu', 'c', 'h', '_', '_']
					{'string': 'eu/c/h/_/_', 'rgx': '((e))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['eu', 'c', 'h', '_', '_']
					version split: ['eu', 'ch', '_', '_']
					{'string': 'eu/ch/_/_', 'rgx': '((e))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['eu', 'ch', '_', '_']
					version split: ['e', 'u', 'c', 'h', '_', '_']
					{'string': 'e/u/c/h/_/_', 'rgx': '((e))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'u', 'c', 'h', '_', '_']
					version split: ['e', 'u', 'c', 'h', '_', '_']
					{'string': 'e/u/c/h/_/_', 'rgx': '((e))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'u', 'c', 'h', '_', '_']
					version split: ['e', 'u', 'ch', '_', '_']
					{'string': 'e/u/ch/_/_', 'rgx': '((e))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'u', 'ch', '_', '_']
					version split: ['e', 'u', 'ch', '_', '_']
					{'string': 'e/u/ch/_/_', 'rgx': '((e))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'u', 'ch', '_', '_']
					version split: ['eu', 'c', 'h', '_', '_']
					{'string': 'eu/c/h/_/_', 'rgx': '((e))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['eu', 'c', 'h', '_', '_']
					version split: ['eu', 'ch', '_', '_']
					{'string': 'eu/ch/_/_', 'rgx': '((e))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['eu', 'ch', '_', '_']
					version split: ['e', 'u', 'c', 'h', '_', '_', '_']
					{'string': 'e/u/c/h/_/_/_', 'rgx': '((e))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'u', 'c', 'h', '_', '_', '_']
					version split: ['e', 'u', 'c', 'h', '_', '_', '_']
					{'string': 'e/u/c/h/_/_/_', 'rgx': '((e))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'u', 'c', 'h', '_', '_', '_']
					version split: ['e', 'u', 'ch', '_', '_', '_']
					{'string': 'e/u/ch/_/_/_', 'rgx': '((e))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'u', 'ch', '_', '_', '_']
					version split: ['e', 'u', 'ch', '_', '_', '_']
					{'string': 'e/u/ch/_/_/_', 'rgx': '((e))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['e', 'u', 'ch', '_', '_', '_']
					version split: ['eu', 'c', 'h', '_', '_', '_']
					{'string': 'eu/c/h/_/_/_', 'rgx': '((e))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['eu', 'c', 'h', '_', '_', '_']
					version split: ['eu', 'ch', '_', '_', '_']
					{'string': 'eu/ch/_/_/_', 'rgx': '((e))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['eu', 'ch', '_', '_', '_']
					ANALYSING: ich
						resolving (32)
						> version: i/c/h
						> version: i/c/h
						> version: i/ch
						> version: i/ch
						> version: _/i/c/h
						> version: _/i/c/h
						> version: _/i/ch
						> version: _/i/ch
						> version: i/c/h/_
						> version: i/c/h/_
						> version: i/ch/_
						> version: i/ch/_
						> version: _/i/c/h/_
						> version: _/i/c/h/_
						> version: _/i/ch/_
						> version: _/i/ch/_
						> version: i/c/h/_
						> version: i/c/h/_
						> version: i/ch/_
						> version: i/ch/_
						> version: _/i/c/h/_
						> version: _/i/c/h/_
						> version: _/i/ch/_
						> version: _/i/ch/_
						> version: i/c/h/_/_
						> version: i/c/h/_/_
						> version: i/ch/_/_
						> version: i/ch/_/_
						> version: _/i/c/h/_/_
						> version: _/i/c/h/_/_
						> version: _/i/ch/_/_
						> version: _/i/ch/_/_
						RESULT:  ['_']
					adding dashed alternative: ['i', 'c', 'h', '_']
					adding dashed alternative: ['i', 'c', 'h', '_']
					adding dashed alternative: ['i', 'ch', '_']
					adding dashed alternative: ['i', 'ch', '_']
					adding dashed alternative: ['_', 'i', 'c', 'h', '_']
					adding dashed alternative: ['_', 'i', 'c', 'h', '_']
					adding dashed alternative: ['_', 'i', 'ch', '_']
					adding dashed alternative: ['_', 'i', 'ch', '_']
					adding dashed alternative: ['i', 'c', 'h', '_', '_']
					adding dashed alternative: ['i', 'c', 'h', '_', '_']
					adding dashed alternative: ['i', 'ch', '_', '_']
					adding dashed alternative: ['i', 'ch', '_', '_']
					adding dashed alternative: ['_', 'i', 'c', 'h', '_', '_']
					adding dashed alternative: ['_', 'i', 'c', 'h', '_', '_']
					adding dashed alternative: ['_', 'i', 'ch', '_', '_']
					adding dashed alternative: ['_', 'i', 'ch', '_', '_']
					adding dashed alternative: ['i', 'c', 'h', '_', '_']
					adding dashed alternative: ['i', 'c', 'h', '_', '_']
					adding dashed alternative: ['i', 'ch', '_', '_']
					adding dashed alternative: ['i', 'ch', '_', '_']
					adding dashed alternative: ['_', 'i', 'c', 'h', '_', '_']
					adding dashed alternative: ['_', 'i', 'c', 'h', '_', '_']
					adding dashed alternative: ['_', 'i', 'ch', '_', '_']
					adding dashed alternative: ['_', 'i', 'ch', '_', '_']
					adding dashed alternative: ['i', 'c', 'h', '_', '_', '_']
					adding dashed alternative: ['i', 'c', 'h', '_', '_', '_']
					adding dashed alternative: ['i', 'ch', '_', '_', '_']
					adding dashed alternative: ['i', 'ch', '_', '_', '_']
					adding dashed alternative: ['_', 'i', 'c', 'h', '_', '_', '_']
					adding dashed alternative: ['_', 'i', 'c', 'h', '_', '_', '_']
					adding dashed alternative: ['_', 'i', 'ch', '_', '_', '_']
					adding dashed alternative: ['_', 'i', 'ch', '_', '_', '_']
					i/c/h(CCC)
i/c/h(VCC)
i/ch(CC)
i/ch(VC)
_/i/c/h(AACC)
_/i/c/h(AACC)
_/i/ch(AAC)
_/i/ch(AAC)
i/c/h/_(ACCA)
i/c/h/_(ACCA)
i/ch/_(ACA)
i/ch/_(ACA)
_/i/c/h/_(AACCA)
_/i/c/h/_(AACCA)
_/i/ch/_(AACA)
_/i/ch/_(AACA)
i/c/h/_(ACCA)
i/c/h/_(ACCA)
i/ch/_(ACA)
i/ch/_(ACA)
_/i/c/h/_(AACCA)
_/i/c/h/_(AACCA)
_/i/ch/_(AACA)
_/i/ch/_(AACA)
i/c/h/_/_(ACCAA)
i/c/h/_/_(ACCAA)
i/ch/_/_(ACAA)
i/ch/_/_(ACAA)
_/i/c/h/_/_(AACCAA)
_/i/c/h/_/_(AACCAA)
_/i/ch/_/_(AACAA)
_/i/ch/_/_(AACAA)
i/c/h/_(ACCA)
i/c/h/_(ACCA)
i/ch/_(ACA)
i/ch/_(ACA)
_/i/c/h/_(AACCA)
_/i/c/h/_(AACCA)
_/i/ch/_(AACA)
_/i/ch/_(AACA)
i/c/h/_/_(ACCAA)
i/c/h/_/_(ACCAA)
i/ch/_/_(ACAA)
i/ch/_/_(ACAA)
_/i/c/h/_/_(AACCAA)
_/i/c/h/_/_(AACCAA)
_/i/ch/_/_(AACAA)
_/i/ch/_/_(AACAA)
i/c/h/_/_(ACCAA)
i/c/h/_/_(ACCAA)
i/ch/_/_(ACAA)
i/ch/_/_(ACAA)
_/i/c/h/_/_(AACCAA)
_/i/c/h/_/_(AACCAA)
_/i/ch/_/_(AACAA)
_/i/ch/_/_(AACAA)
i/c/h/_/_/_(ACCAAA)
i/c/h/_/_/_(ACCAAA)
i/ch/_/_/_(ACAAA)
i/ch/_/_/_(ACAAA)
_/i/c/h/_/_/_(AACCAAA)
_/i/c/h/_/_/_(AACCAAA)
_/i/ch/_/_/_(AACAAA)
_/i/ch/_/_/_(AACAAA)
					version split: ['i', 'c', 'h']
					{'string': 'i/c/h', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['i', 'c', 'h']
					version split: ['i', 'c', 'h']
					{'string': 'i/c/h', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['i', 'c', 'h']
					version split: ['i', 'ch']
					{'string': 'i/ch', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['i', 'ch']
					version split: ['i', 'ch']
					{'string': 'i/ch', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['i', 'ch']
					version split: ['_', 'i', 'c', 'h']
					{'string': '_/i/c/h', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['_', 'i', 'c', 'h']
					version split: ['_', 'i', 'c', 'h']
					{'string': '_/i/c/h', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['_', 'i', 'c', 'h']
					version split: ['_', 'i', 'ch']
					{'string': '_/i/ch', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['_', 'i', 'ch']
					version split: ['_', 'i', 'ch']
					{'string': '_/i/ch', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['_', 'i', 'ch']
					version split: ['i', 'c', 'h', '_']
					{'string': 'i/c/h/_', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['i', 'c', 'h', '_']
					version split: ['i', 'c', 'h', '_']
					{'string': 'i/c/h/_', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['i', 'c', 'h', '_']
					version split: ['i', 'ch', '_']
					{'string': 'i/ch/_', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['i', 'ch', '_']
					version split: ['i', 'ch', '_']
					{'string': 'i/ch/_', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['i', 'ch', '_']
					version split: ['_', 'i', 'c', 'h', '_']
					{'string': '_/i/c/h/_', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['_', 'i', 'c', 'h', '_']
					version split: ['_', 'i', 'c', 'h', '_']
					{'string': '_/i/c/h/_', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['_', 'i', 'c', 'h', '_']
					version split: ['_', 'i', 'ch', '_']
					{'string': '_/i/ch/_', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['_', 'i', 'ch', '_']
					version split: ['_', 'i', 'ch', '_']
					{'string': '_/i/ch/_', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['_', 'i', 'ch', '_']
					version split: ['i', 'c', 'h', '_']
					{'string': 'i/c/h/_', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['i', 'c', 'h', '_']
					version split: ['i', 'c', 'h', '_']
					{'string': 'i/c/h/_', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['i', 'c', 'h', '_']
					version split: ['i', 'ch', '_']
					{'string': 'i/ch/_', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['i', 'ch', '_']
					version split: ['i', 'ch', '_']
					{'string': 'i/ch/_', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['i', 'ch', '_']
					version split: ['_', 'i', 'c', 'h', '_']
					{'string': '_/i/c/h/_', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['_', 'i', 'c', 'h', '_']
					version split: ['_', 'i', 'c', 'h', '_']
					{'string': '_/i/c/h/_', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['_', 'i', 'c', 'h', '_']
					version split: ['_', 'i', 'ch', '_']
					{'string': '_/i/ch/_', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['_', 'i', 'ch', '_']
					version split: ['_', 'i', 'ch', '_']
					{'string': '_/i/ch/_', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['_', 'i', 'ch', '_']
					version split: ['i', 'c', 'h', '_', '_']
					{'string': 'i/c/h/_/_', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['i', 'c', 'h', '_', '_']
					version split: ['i', 'c', 'h', '_', '_']
					{'string': 'i/c/h/_/_', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['i', 'c', 'h', '_', '_']
					version split: ['i', 'ch', '_', '_']
					{'string': 'i/ch/_/_', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['i', 'ch', '_', '_']
					version split: ['i', 'ch', '_', '_']
					{'string': 'i/ch/_/_', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['i', 'ch', '_', '_']
					version split: ['_', 'i', 'c', 'h', '_', '_']
					{'string': '_/i/c/h/_/_', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['_', 'i', 'c', 'h', '_', '_']
					version split: ['_', 'i', 'c', 'h', '_', '_']
					{'string': '_/i/c/h/_/_', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['_', 'i', 'c', 'h', '_', '_']
					version split: ['_', 'i', 'ch', '_', '_']
					{'string': '_/i/ch/_/_', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['_', 'i', 'ch', '_', '_']
					version split: ['_', 'i', 'ch', '_', '_']
					{'string': '_/i/ch/_/_', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['_', 'i', 'ch', '_', '_']
					version split: ['i', 'c', 'h', '_']
					{'string': 'i/c/h/_', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['i', 'c', 'h', '_']
					version split: ['i', 'c', 'h', '_']
					{'string': 'i/c/h/_', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['i', 'c', 'h', '_']
					version split: ['i', 'ch', '_']
					{'string': 'i/ch/_', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['i', 'ch', '_']
					version split: ['i', 'ch', '_']
					{'string': 'i/ch/_', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['i', 'ch', '_']
					version split: ['_', 'i', 'c', 'h', '_']
					{'string': '_/i/c/h/_', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['_', 'i', 'c', 'h', '_']
					version split: ['_', 'i', 'c', 'h', '_']
					{'string': '_/i/c/h/_', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['_', 'i', 'c', 'h', '_']
					version split: ['_', 'i', 'ch', '_']
					{'string': '_/i/ch/_', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['_', 'i', 'ch', '_']
					version split: ['_', 'i', 'ch', '_']
					{'string': '_/i/ch/_', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['_', 'i', 'ch', '_']
					version split: ['i', 'c', 'h', '_', '_']
					{'string': 'i/c/h/_/_', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['i', 'c', 'h', '_', '_']
					version split: ['i', 'c', 'h', '_', '_']
					{'string': 'i/c/h/_/_', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['i', 'c', 'h', '_', '_']
					version split: ['i', 'ch', '_', '_']
					{'string': 'i/ch/_/_', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['i', 'ch', '_', '_']
					version split: ['i', 'ch', '_', '_']
					{'string': 'i/ch/_/_', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['i', 'ch', '_', '_']
					version split: ['_', 'i', 'c', 'h', '_', '_']
					{'string': '_/i/c/h/_/_', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['_', 'i', 'c', 'h', '_', '_']
					version split: ['_', 'i', 'c', 'h', '_', '_']
					{'string': '_/i/c/h/_/_', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['_', 'i', 'c', 'h', '_', '_']
					version split: ['_', 'i', 'ch', '_', '_']
					{'string': '_/i/ch/_/_', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['_', 'i', 'ch', '_', '_']
					version split: ['_', 'i', 'ch', '_', '_']
					{'string': '_/i/ch/_/_', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['_', 'i', 'ch', '_', '_']
					version split: ['i', 'c', 'h', '_', '_']
					{'string': 'i/c/h/_/_', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['i', 'c', 'h', '_', '_']
					version split: ['i', 'c', 'h', '_', '_']
					{'string': 'i/c/h/_/_', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['i', 'c', 'h', '_', '_']
					version split: ['i', 'ch', '_', '_']
					{'string': 'i/ch/_/_', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['i', 'ch', '_', '_']
					version split: ['i', 'ch', '_', '_']
					{'string': 'i/ch/_/_', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['i', 'ch', '_', '_']
					version split: ['_', 'i', 'c', 'h', '_', '_']
					{'string': '_/i/c/h/_/_', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['_', 'i', 'c', 'h', '_', '_']
					version split: ['_', 'i', 'c', 'h', '_', '_']
					{'string': '_/i/c/h/_/_', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['_', 'i', 'c', 'h', '_', '_']
					version split: ['_', 'i', 'ch', '_', '_']
					{'string': '_/i/ch/_/_', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['_', 'i', 'ch', '_', '_']
					version split: ['_', 'i', 'ch', '_', '_']
					{'string': '_/i/ch/_/_', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['_', 'i', 'ch', '_', '_']
					version split: ['i', 'c', 'h', '_', '_', '_']
					{'string': 'i/c/h/_/_/_', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['i', 'c', 'h', '_', '_', '_']
					version split: ['i', 'c', 'h', '_', '_', '_']
					{'string': 'i/c/h/_/_/_', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['i', 'c', 'h', '_', '_', '_']
					version split: ['i', 'ch', '_', '_', '_']
					{'string': 'i/ch/_/_/_', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['i', 'ch', '_', '_', '_']
					version split: ['i', 'ch', '_', '_', '_']
					{'string': 'i/ch/_/_/_', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['i', 'ch', '_', '_', '_']
					version split: ['_', 'i', 'c', 'h', '_', '_', '_']
					{'string': '_/i/c/h/_/_/_', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['_', 'i', 'c', 'h', '_', '_', '_']
					version split: ['_', 'i', 'c', 'h', '_', '_', '_']
					{'string': '_/i/c/h/_/_/_', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['_', 'i', 'c', 'h', '_', '_', '_']
					version split: ['_', 'i', 'ch', '_', '_', '_']
					{'string': '_/i/ch/_/_/_', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['_', 'i', 'ch', '_', '_', '_']
					version split: ['_', 'i', 'ch', '_', '_', '_']
					{'string': '_/i/ch/_/_/_', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['_', 'i', 'ch', '_', '_', '_']
					ANALYSING: ilc
						resolving (16)
						> version: i/l/c
						> version: i/l/c
						> version: _/i/l/c
						> version: _/i/l/c
						> version: i/_/l/c
						> version: i/_/l/c
						> version: _/_/i/l/c
						> version: _/_/i/l/c
						> version: i/l/c/_
						> version: i/l/c/_
						> version: _/i/l/c/_
						> version: _/i/l/c/_
						> version: i/_/l/c/_
						> version: i/_/l/c/_
						> version: _/_/i/l/c/_
						> version: _/_/i/l/c/_
						RESULT:  ['_']
					adding dashed alternative: ['i', 'l', 'c', '_']
					adding dashed alternative: ['i', 'l', 'c', '_']
					adding dashed alternative: ['_', 'i', 'l', 'c', '_']
					adding dashed alternative: ['_', 'i', 'l', 'c', '_']
					adding dashed alternative: ['i', '_', 'l', 'c', '_']
					adding dashed alternative: ['i', '_', 'l', 'c', '_']
					adding dashed alternative: ['_', '_', 'i', 'l', 'c', '_']
					adding dashed alternative: ['_', '_', 'i', 'l', 'c', '_']
					adding dashed alternative: ['i', 'l', 'c', '_', '_']
					adding dashed alternative: ['i', 'l', 'c', '_', '_']
					adding dashed alternative: ['_', 'i', 'l', 'c', '_', '_']
					adding dashed alternative: ['_', 'i', 'l', 'c', '_', '_']
					adding dashed alternative: ['i', '_', 'l', 'c', '_', '_']
					adding dashed alternative: ['i', '_', 'l', 'c', '_', '_']
					adding dashed alternative: ['_', '_', 'i', 'l', 'c', '_', '_']
					adding dashed alternative: ['_', '_', 'i', 'l', 'c', '_', '_']
					i/l/c(CCC)
i/l/c(VCC)
_/i/l/c(AACC)
_/i/l/c(AACC)
i/_/l/c(AACC)
i/_/l/c(AACC)
_/_/i/l/c(AAACC)
_/_/i/l/c(AAACC)
i/l/c/_(ACCA)
i/l/c/_(ACCA)
_/i/l/c/_(AACCA)
_/i/l/c/_(AACCA)
i/_/l/c/_(AACCA)
i/_/l/c/_(AACCA)
_/_/i/l/c/_(AAACCA)
_/_/i/l/c/_(AAACCA)
i/l/c/_(ACCA)
i/l/c/_(ACCA)
_/i/l/c/_(AACCA)
_/i/l/c/_(AACCA)
i/_/l/c/_(AACCA)
i/_/l/c/_(AACCA)
_/_/i/l/c/_(AAACCA)
_/_/i/l/c/_(AAACCA)
i/l/c/_/_(ACCAA)
i/l/c/_/_(ACCAA)
_/i/l/c/_/_(AACCAA)
_/i/l/c/_/_(AACCAA)
i/_/l/c/_/_(AACCAA)
i/_/l/c/_/_(AACCAA)
_/_/i/l/c/_/_(AAACCAA)
_/_/i/l/c/_/_(AAACCAA)
					version split: ['i', 'l', 'c']
					{'string': 'i/l/c', 'rgx': '((_))/((_))/((c))/((c))/((c))/((_))/((_))$'}
					_____REMOVING________['i', 'l', 'c']
					version split: ['i', 'l', 'c']
					{'string': 'i/l/c', 'rgx': '((_))/((_))/((c))/((c))/((c))/((_))/((_))$'}
					_____REMOVING________['i', 'l', 'c']
					version split: ['_', 'i', 'l', 'c']
					{'string': '_/i/l/c', 'rgx': '((_))/((_))/((c))/((c))/((c))/((_))/((_))$'}
					_____REMOVING________['_', 'i', 'l', 'c']
					version split: ['_', 'i', 'l', 'c']
					{'string': '_/i/l/c', 'rgx': '((_))/((_))/((c))/((c))/((c))/((_))/((_))$'}
					_____REMOVING________['_', 'i', 'l', 'c']
					version split: ['i', '_', 'l', 'c']
					{'string': 'i/_/l/c', 'rgx': '((_))/((_))/((c))/((c))/((c))/((_))/((_))$'}
					_____REMOVING________['i', '_', 'l', 'c']
					version split: ['i', '_', 'l', 'c']
					{'string': 'i/_/l/c', 'rgx': '((_))/((_))/((c))/((c))/((c))/((_))/((_))$'}
					_____REMOVING________['i', '_', 'l', 'c']
					version split: ['_', '_', 'i', 'l', 'c']
					{'string': '_/_/i/l/c', 'rgx': '((_))/((_))/((c))/((c))/((c))/((_))/((_))$'}
					_____REMOVING________['_', '_', 'i', 'l', 'c']
					version split: ['_', '_', 'i', 'l', 'c']
					{'string': '_/_/i/l/c', 'rgx': '((_))/((_))/((c))/((c))/((c))/((_))/((_))$'}
					_____REMOVING________['_', '_', 'i', 'l', 'c']
					version split: ['i', 'l', 'c', '_']
					{'string': 'i/l/c/_', 'rgx': '((_))/((_))/((c))/((c))/((c))/((_))/((_))$'}
					_____REMOVING________['i', 'l', 'c', '_']
					version split: ['i', 'l', 'c', '_']
					{'string': 'i/l/c/_', 'rgx': '((_))/((_))/((c))/((c))/((c))/((_))/((_))$'}
					_____REMOVING________['i', 'l', 'c', '_']
					version split: ['_', 'i', 'l', 'c', '_']
					{'string': '_/i/l/c/_', 'rgx': '((_))/((_))/((c))/((c))/((c))/((_))/((_))$'}
					_____REMOVING________['_', 'i', 'l', 'c', '_']
					version split: ['_', 'i', 'l', 'c', '_']
					{'string': '_/i/l/c/_', 'rgx': '((_))/((_))/((c))/((c))/((c))/((_))/((_))$'}
					_____REMOVING________['_', 'i', 'l', 'c', '_']
					version split: ['i', '_', 'l', 'c', '_']
					{'string': 'i/_/l/c/_', 'rgx': '((_))/((_))/((c))/((c))/((c))/((_))/((_))$'}
					_____REMOVING________['i', '_', 'l', 'c', '_']
					version split: ['i', '_', 'l', 'c', '_']
					{'string': 'i/_/l/c/_', 'rgx': '((_))/((_))/((c))/((c))/((c))/((_))/((_))$'}
					_____REMOVING________['i', '_', 'l', 'c', '_']
					version split: ['_', '_', 'i', 'l', 'c', '_']
					{'string': '_/_/i/l/c/_', 'rgx': '((_))/((_))/((c))/((c))/((c))/((_))/((_))$'}
					_____REMOVING________['_', '_', 'i', 'l', 'c', '_']
					version split: ['_', '_', 'i', 'l', 'c', '_']
					{'string': '_/_/i/l/c/_', 'rgx': '((_))/((_))/((c))/((c))/((c))/((_))/((_))$'}
					_____REMOVING________['_', '_', 'i', 'l', 'c', '_']
					version split: ['i', 'l', 'c', '_']
					{'string': 'i/l/c/_', 'rgx': '((_))/((_))/((c))/((c))/((c))/((_))/((_))$'}
					_____REMOVING________['i', 'l', 'c', '_']
					version split: ['i', 'l', 'c', '_']
					{'string': 'i/l/c/_', 'rgx': '((_))/((_))/((c))/((c))/((c))/((_))/((_))$'}
					_____REMOVING________['i', 'l', 'c', '_']
					version split: ['_', 'i', 'l', 'c', '_']
					{'string': '_/i/l/c/_', 'rgx': '((_))/((_))/((c))/((c))/((c))/((_))/((_))$'}
					_____REMOVING________['_', 'i', 'l', 'c', '_']
					version split: ['_', 'i', 'l', 'c', '_']
					{'string': '_/i/l/c/_', 'rgx': '((_))/((_))/((c))/((c))/((c))/((_))/((_))$'}
					_____REMOVING________['_', 'i', 'l', 'c', '_']
					version split: ['i', '_', 'l', 'c', '_']
					{'string': 'i/_/l/c/_', 'rgx': '((_))/((_))/((c))/((c))/((c))/((_))/((_))$'}
					_____REMOVING________['i', '_', 'l', 'c', '_']
					version split: ['i', '_', 'l', 'c', '_']
					{'string': 'i/_/l/c/_', 'rgx': '((_))/((_))/((c))/((c))/((c))/((_))/((_))$'}
					_____REMOVING________['i', '_', 'l', 'c', '_']
					version split: ['_', '_', 'i', 'l', 'c', '_']
					{'string': '_/_/i/l/c/_', 'rgx': '((_))/((_))/((c))/((c))/((c))/((_))/((_))$'}
					_____REMOVING________['_', '_', 'i', 'l', 'c', '_']
					version split: ['_', '_', 'i', 'l', 'c', '_']
					{'string': '_/_/i/l/c/_', 'rgx': '((_))/((_))/((c))/((c))/((c))/((_))/((_))$'}
					_____REMOVING________['_', '_', 'i', 'l', 'c', '_']
					version split: ['i', 'l', 'c', '_', '_']
					{'string': 'i/l/c/_/_', 'rgx': '((_))/((_))/((c))/((c))/((c))/((_))/((_))$'}
					_____REMOVING________['i', 'l', 'c', '_', '_']
					version split: ['i', 'l', 'c', '_', '_']
					{'string': 'i/l/c/_/_', 'rgx': '((_))/((_))/((c))/((c))/((c))/((_))/((_))$'}
					_____REMOVING________['i', 'l', 'c', '_', '_']
					version split: ['_', 'i', 'l', 'c', '_', '_']
					{'string': '_/i/l/c/_/_', 'rgx': '((_))/((_))/((c))/((c))/((c))/((_))/((_))$'}
					_____REMOVING________['_', 'i', 'l', 'c', '_', '_']
					version split: ['_', 'i', 'l', 'c', '_', '_']
					{'string': '_/i/l/c/_/_', 'rgx': '((_))/((_))/((c))/((c))/((c))/((_))/((_))$'}
					_____REMOVING________['_', 'i', 'l', 'c', '_', '_']
					version split: ['i', '_', 'l', 'c', '_', '_']
					{'string': 'i/_/l/c/_/_', 'rgx': '((_))/((_))/((c))/((c))/((c))/((_))/((_))$'}
					_____REMOVING________['i', '_', 'l', 'c', '_', '_']
					version split: ['i', '_', 'l', 'c', '_', '_']
					{'string': 'i/_/l/c/_/_', 'rgx': '((_))/((_))/((c))/((c))/((c))/((_))/((_))$'}
					_____REMOVING________['i', '_', 'l', 'c', '_', '_']
					version split: ['_', '_', 'i', 'l', 'c', '_', '_']
					{'string': '_/_/i/l/c/_/_', 'rgx': '((_))/((_))/((c))/((c))/((c))/((_))/((_))$'}
					_____REMOVING________['_', '_', 'i', 'l', 'c', '_', '_']
					version split: ['_', '_', 'i', 'l', 'c', '_', '_']
					{'string': '_/_/i/l/c/_/_', 'rgx': '((_))/((_))/((c))/((c))/((c))/((_))/((_))$'}
					_____REMOVING________['_', '_', 'i', 'l', 'c', '_', '_']
					ANALYSING: ilk
						resolving (16)
						> version: i/l/k
						> version: i/l/k
						> version: _/i/l/k
						> version: _/i/l/k
						> version: i/_/l/k
						> version: i/_/l/k
						> version: _/_/i/l/k
						> version: _/_/i/l/k
						> version: i/l/k/_
						> version: i/l/k/_
						> version: _/i/l/k/_
						> version: _/i/l/k/_
						> version: i/_/l/k/_
						> version: i/_/l/k/_
						> version: _/_/i/l/k/_
						> version: _/_/i/l/k/_
						RESULT:  ['_']
					adding dashed alternative: ['i', 'l', 'k', '_']
					adding dashed alternative: ['i', 'l', 'k', '_']
					adding dashed alternative: ['_', 'i', 'l', 'k', '_']
					adding dashed alternative: ['_', 'i', 'l', 'k', '_']
					adding dashed alternative: ['i', '_', 'l', 'k', '_']
					adding dashed alternative: ['i', '_', 'l', 'k', '_']
					adding dashed alternative: ['_', '_', 'i', 'l', 'k', '_']
					adding dashed alternative: ['_', '_', 'i', 'l', 'k', '_']
					adding dashed alternative: ['i', 'l', 'k', '_', '_']
					adding dashed alternative: ['i', 'l', 'k', '_', '_']
					adding dashed alternative: ['_', 'i', 'l', 'k', '_', '_']
					adding dashed alternative: ['_', 'i', 'l', 'k', '_', '_']
					adding dashed alternative: ['i', '_', 'l', 'k', '_', '_']
					adding dashed alternative: ['i', '_', 'l', 'k', '_', '_']
					adding dashed alternative: ['_', '_', 'i', 'l', 'k', '_', '_']
					adding dashed alternative: ['_', '_', 'i', 'l', 'k', '_', '_']
					i/l/k(CCC)
i/l/k(VCC)
_/i/l/k(AACC)
_/i/l/k(AACC)
i/_/l/k(AACC)
i/_/l/k(AACC)
_/_/i/l/k(AAACC)
_/_/i/l/k(AAACC)
i/l/k/_(ACCA)
i/l/k/_(ACCA)
_/i/l/k/_(AACCA)
_/i/l/k/_(AACCA)
i/_/l/k/_(AACCA)
i/_/l/k/_(AACCA)
_/_/i/l/k/_(AAACCA)
_/_/i/l/k/_(AAACCA)
i/l/k/_(ACCA)
i/l/k/_(ACCA)
_/i/l/k/_(AACCA)
_/i/l/k/_(AACCA)
i/_/l/k/_(AACCA)
i/_/l/k/_(AACCA)
_/_/i/l/k/_(AAACCA)
_/_/i/l/k/_(AAACCA)
i/l/k/_/_(ACCAA)
i/l/k/_/_(ACCAA)
_/i/l/k/_/_(AACCAA)
_/i/l/k/_/_(AACCAA)
i/_/l/k/_/_(AACCAA)
i/_/l/k/_/_(AACCAA)
_/_/i/l/k/_/_(AAACCAA)
_/_/i/l/k/_/_(AAACCAA)
					version split: ['i', 'l', 'k']
					{'string': 'i/l/k', 'rgx': '((_))/((_))/((k))/((k))/((k))/((_))/((_))$'}
					_____REMOVING________['i', 'l', 'k']
					version split: ['i', 'l', 'k']
					{'string': 'i/l/k', 'rgx': '((_))/((_))/((k))/((k))/((k))/((_))/((_))$'}
					_____REMOVING________['i', 'l', 'k']
					version split: ['_', 'i', 'l', 'k']
					{'string': '_/i/l/k', 'rgx': '((_))/((_))/((k))/((k))/((k))/((_))/((_))$'}
					_____REMOVING________['_', 'i', 'l', 'k']
					version split: ['_', 'i', 'l', 'k']
					{'string': '_/i/l/k', 'rgx': '((_))/((_))/((k))/((k))/((k))/((_))/((_))$'}
					_____REMOVING________['_', 'i', 'l', 'k']
					version split: ['i', '_', 'l', 'k']
					{'string': 'i/_/l/k', 'rgx': '((_))/((_))/((k))/((k))/((k))/((_))/((_))$'}
					_____REMOVING________['i', '_', 'l', 'k']
					version split: ['i', '_', 'l', 'k']
					{'string': 'i/_/l/k', 'rgx': '((_))/((_))/((k))/((k))/((k))/((_))/((_))$'}
					_____REMOVING________['i', '_', 'l', 'k']
					version split: ['_', '_', 'i', 'l', 'k']
					{'string': '_/_/i/l/k', 'rgx': '((_))/((_))/((k))/((k))/((k))/((_))/((_))$'}
					_____REMOVING________['_', '_', 'i', 'l', 'k']
					version split: ['_', '_', 'i', 'l', 'k']
					{'string': '_/_/i/l/k', 'rgx': '((_))/((_))/((k))/((k))/((k))/((_))/((_))$'}
					_____REMOVING________['_', '_', 'i', 'l', 'k']
					version split: ['i', 'l', 'k', '_']
					{'string': 'i/l/k/_', 'rgx': '((_))/((_))/((k))/((k))/((k))/((_))/((_))$'}
					_____REMOVING________['i', 'l', 'k', '_']
					version split: ['i', 'l', 'k', '_']
					{'string': 'i/l/k/_', 'rgx': '((_))/((_))/((k))/((k))/((k))/((_))/((_))$'}
					_____REMOVING________['i', 'l', 'k', '_']
					version split: ['_', 'i', 'l', 'k', '_']
					{'string': '_/i/l/k/_', 'rgx': '((_))/((_))/((k))/((k))/((k))/((_))/((_))$'}
					_____REMOVING________['_', 'i', 'l', 'k', '_']
					version split: ['_', 'i', 'l', 'k', '_']
					{'string': '_/i/l/k/_', 'rgx': '((_))/((_))/((k))/((k))/((k))/((_))/((_))$'}
					_____REMOVING________['_', 'i', 'l', 'k', '_']
					version split: ['i', '_', 'l', 'k', '_']
					{'string': 'i/_/l/k/_', 'rgx': '((_))/((_))/((k))/((k))/((k))/((_))/((_))$'}
					_____REMOVING________['i', '_', 'l', 'k', '_']
					version split: ['i', '_', 'l', 'k', '_']
					{'string': 'i/_/l/k/_', 'rgx': '((_))/((_))/((k))/((k))/((k))/((_))/((_))$'}
					_____REMOVING________['i', '_', 'l', 'k', '_']
					version split: ['_', '_', 'i', 'l', 'k', '_']
					{'string': '_/_/i/l/k/_', 'rgx': '((_))/((_))/((k))/((k))/((k))/((_))/((_))$'}
					_____REMOVING________['_', '_', 'i', 'l', 'k', '_']
					version split: ['_', '_', 'i', 'l', 'k', '_']
					{'string': '_/_/i/l/k/_', 'rgx': '((_))/((_))/((k))/((k))/((k))/((_))/((_))$'}
					_____REMOVING________['_', '_', 'i', 'l', 'k', '_']
					version split: ['i', 'l', 'k', '_']
					{'string': 'i/l/k/_', 'rgx': '((_))/((_))/((k))/((k))/((k))/((_))/((_))$'}
					_____REMOVING________['i', 'l', 'k', '_']
					version split: ['i', 'l', 'k', '_']
					{'string': 'i/l/k/_', 'rgx': '((_))/((_))/((k))/((k))/((k))/((_))/((_))$'}
					_____REMOVING________['i', 'l', 'k', '_']
					version split: ['_', 'i', 'l', 'k', '_']
					{'string': '_/i/l/k/_', 'rgx': '((_))/((_))/((k))/((k))/((k))/((_))/((_))$'}
					_____REMOVING________['_', 'i', 'l', 'k', '_']
					version split: ['_', 'i', 'l', 'k', '_']
					{'string': '_/i/l/k/_', 'rgx': '((_))/((_))/((k))/((k))/((k))/((_))/((_))$'}
					_____REMOVING________['_', 'i', 'l', 'k', '_']
					version split: ['i', '_', 'l', 'k', '_']
					{'string': 'i/_/l/k/_', 'rgx': '((_))/((_))/((k))/((k))/((k))/((_))/((_))$'}
					_____REMOVING________['i', '_', 'l', 'k', '_']
					version split: ['i', '_', 'l', 'k', '_']
					{'string': 'i/_/l/k/_', 'rgx': '((_))/((_))/((k))/((k))/((k))/((_))/((_))$'}
					_____REMOVING________['i', '_', 'l', 'k', '_']
					version split: ['_', '_', 'i', 'l', 'k', '_']
					{'string': '_/_/i/l/k/_', 'rgx': '((_))/((_))/((k))/((k))/((k))/((_))/((_))$'}
					_____REMOVING________['_', '_', 'i', 'l', 'k', '_']
					version split: ['_', '_', 'i', 'l', 'k', '_']
					{'string': '_/_/i/l/k/_', 'rgx': '((_))/((_))/((k))/((k))/((k))/((_))/((_))$'}
					_____REMOVING________['_', '_', 'i', 'l', 'k', '_']
					version split: ['i', 'l', 'k', '_', '_']
					{'string': 'i/l/k/_/_', 'rgx': '((_))/((_))/((k))/((k))/((k))/((_))/((_))$'}
					_____REMOVING________['i', 'l', 'k', '_', '_']
					version split: ['i', 'l', 'k', '_', '_']
					{'string': 'i/l/k/_/_', 'rgx': '((_))/((_))/((k))/((k))/((k))/((_))/((_))$'}
					_____REMOVING________['i', 'l', 'k', '_', '_']
					version split: ['_', 'i', 'l', 'k', '_', '_']
					{'string': '_/i/l/k/_/_', 'rgx': '((_))/((_))/((k))/((k))/((k))/((_))/((_))$'}
					_____REMOVING________['_', 'i', 'l', 'k', '_', '_']
					version split: ['_', 'i', 'l', 'k', '_', '_']
					{'string': '_/i/l/k/_/_', 'rgx': '((_))/((_))/((k))/((k))/((k))/((_))/((_))$'}
					_____REMOVING________['_', 'i', 'l', 'k', '_', '_']
					version split: ['i', '_', 'l', 'k', '_', '_']
					{'string': 'i/_/l/k/_/_', 'rgx': '((_))/((_))/((k))/((k))/((k))/((_))/((_))$'}
					_____REMOVING________['i', '_', 'l', 'k', '_', '_']
					version split: ['i', '_', 'l', 'k', '_', '_']
					{'string': 'i/_/l/k/_/_', 'rgx': '((_))/((_))/((k))/((k))/((k))/((_))/((_))$'}
					_____REMOVING________['i', '_', 'l', 'k', '_', '_']
					version split: ['_', '_', 'i', 'l', 'k', '_', '_']
					{'string': '_/_/i/l/k/_/_', 'rgx': '((_))/((_))/((k))/((k))/((k))/((_))/((_))$'}
					_____REMOVING________['_', '_', 'i', 'l', 'k', '_', '_']
					version split: ['_', '_', 'i', 'l', 'k', '_', '_']
					{'string': '_/_/i/l/k/_/_', 'rgx': '((_))/((_))/((k))/((k))/((k))/((_))/((_))$'}
					_____REMOVING________['_', '_', 'i', 'l', 'k', '_', '_']
					ANALYSING: uch
						resolving (32)
						> version: u/c/h
						> version: u/c/h
						> version: u/ch
						> version: u/ch
						> version: _/u/c/h
						> version: _/u/c/h
						> version: _/u/ch
						> version: _/u/ch
						> version: u/c/h/_
						> version: u/c/h/_
						> version: u/ch/_
						> version: u/ch/_
						> version: _/u/c/h/_
						> version: _/u/c/h/_
						> version: _/u/ch/_
						> version: _/u/ch/_
						> version: u/c/h/_
						> version: u/c/h/_
						> version: u/ch/_
						> version: u/ch/_
						> version: _/u/c/h/_
						> version: _/u/c/h/_
						> version: _/u/ch/_
						> version: _/u/ch/_
						> version: u/c/h/_/_
						> version: u/c/h/_/_
						> version: u/ch/_/_
						> version: u/ch/_/_
						> version: _/u/c/h/_/_
						> version: _/u/c/h/_/_
						> version: _/u/ch/_/_
						> version: _/u/ch/_/_
						RESULT:  ['_']
					adding dashed alternative: ['u', 'c', 'h', '_']
					adding dashed alternative: ['u', 'c', 'h', '_']
					adding dashed alternative: ['u', 'ch', '_']
					adding dashed alternative: ['u', 'ch', '_']
					adding dashed alternative: ['_', 'u', 'c', 'h', '_']
					adding dashed alternative: ['_', 'u', 'c', 'h', '_']
					adding dashed alternative: ['_', 'u', 'ch', '_']
					adding dashed alternative: ['_', 'u', 'ch', '_']
					adding dashed alternative: ['u', 'c', 'h', '_', '_']
					adding dashed alternative: ['u', 'c', 'h', '_', '_']
					adding dashed alternative: ['u', 'ch', '_', '_']
					adding dashed alternative: ['u', 'ch', '_', '_']
					adding dashed alternative: ['_', 'u', 'c', 'h', '_', '_']
					adding dashed alternative: ['_', 'u', 'c', 'h', '_', '_']
					adding dashed alternative: ['_', 'u', 'ch', '_', '_']
					adding dashed alternative: ['_', 'u', 'ch', '_', '_']
					adding dashed alternative: ['u', 'c', 'h', '_', '_']
					adding dashed alternative: ['u', 'c', 'h', '_', '_']
					adding dashed alternative: ['u', 'ch', '_', '_']
					adding dashed alternative: ['u', 'ch', '_', '_']
					adding dashed alternative: ['_', 'u', 'c', 'h', '_', '_']
					adding dashed alternative: ['_', 'u', 'c', 'h', '_', '_']
					adding dashed alternative: ['_', 'u', 'ch', '_', '_']
					adding dashed alternative: ['_', 'u', 'ch', '_', '_']
					adding dashed alternative: ['u', 'c', 'h', '_', '_', '_']
					adding dashed alternative: ['u', 'c', 'h', '_', '_', '_']
					adding dashed alternative: ['u', 'ch', '_', '_', '_']
					adding dashed alternative: ['u', 'ch', '_', '_', '_']
					adding dashed alternative: ['_', 'u', 'c', 'h', '_', '_', '_']
					adding dashed alternative: ['_', 'u', 'c', 'h', '_', '_', '_']
					adding dashed alternative: ['_', 'u', 'ch', '_', '_', '_']
					adding dashed alternative: ['_', 'u', 'ch', '_', '_', '_']
					u/c/h(CCC)
u/c/h(VCC)
u/ch(CC)
u/ch(VC)
_/u/c/h(AACC)
_/u/c/h(AACC)
_/u/ch(AAC)
_/u/ch(AAC)
u/c/h/_(ACCA)
u/c/h/_(ACCA)
u/ch/_(ACA)
u/ch/_(ACA)
_/u/c/h/_(AACCA)
_/u/c/h/_(AACCA)
_/u/ch/_(AACA)
_/u/ch/_(AACA)
u/c/h/_(ACCA)
u/c/h/_(ACCA)
u/ch/_(ACA)
u/ch/_(ACA)
_/u/c/h/_(AACCA)
_/u/c/h/_(AACCA)
_/u/ch/_(AACA)
_/u/ch/_(AACA)
u/c/h/_/_(ACCAA)
u/c/h/_/_(ACCAA)
u/ch/_/_(ACAA)
u/ch/_/_(ACAA)
_/u/c/h/_/_(AACCAA)
_/u/c/h/_/_(AACCAA)
_/u/ch/_/_(AACAA)
_/u/ch/_/_(AACAA)
u/c/h/_(ACCA)
u/c/h/_(ACCA)
u/ch/_(ACA)
u/ch/_(ACA)
_/u/c/h/_(AACCA)
_/u/c/h/_(AACCA)
_/u/ch/_(AACA)
_/u/ch/_(AACA)
u/c/h/_/_(ACCAA)
u/c/h/_/_(ACCAA)
u/ch/_/_(ACAA)
u/ch/_/_(ACAA)
_/u/c/h/_/_(AACCAA)
_/u/c/h/_/_(AACCAA)
_/u/ch/_/_(AACAA)
_/u/ch/_/_(AACAA)
u/c/h/_/_(ACCAA)
u/c/h/_/_(ACCAA)
u/ch/_/_(ACAA)
u/ch/_/_(ACAA)
_/u/c/h/_/_(AACCAA)
_/u/c/h/_/_(AACCAA)
_/u/ch/_/_(AACAA)
_/u/ch/_/_(AACAA)
u/c/h/_/_/_(ACCAAA)
u/c/h/_/_/_(ACCAAA)
u/ch/_/_/_(ACAAA)
u/ch/_/_/_(ACAAA)
_/u/c/h/_/_/_(AACCAAA)
_/u/c/h/_/_/_(AACCAAA)
_/u/ch/_/_/_(AACAAA)
_/u/ch/_/_/_(AACAAA)
					version split: ['u', 'c', 'h']
					{'string': 'u/c/h', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['u', 'c', 'h']
					version split: ['u', 'c', 'h']
					{'string': 'u/c/h', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['u', 'c', 'h']
					version split: ['u', 'ch']
					{'string': 'u/ch', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['u', 'ch']
					version split: ['u', 'ch']
					{'string': 'u/ch', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['u', 'ch']
					version split: ['_', 'u', 'c', 'h']
					{'string': '_/u/c/h', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['_', 'u', 'c', 'h']
					version split: ['_', 'u', 'c', 'h']
					{'string': '_/u/c/h', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['_', 'u', 'c', 'h']
					version split: ['_', 'u', 'ch']
					{'string': '_/u/ch', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['_', 'u', 'ch']
					version split: ['_', 'u', 'ch']
					{'string': '_/u/ch', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['_', 'u', 'ch']
					version split: ['u', 'c', 'h', '_']
					{'string': 'u/c/h/_', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['u', 'c', 'h', '_']
					version split: ['u', 'c', 'h', '_']
					{'string': 'u/c/h/_', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['u', 'c', 'h', '_']
					version split: ['u', 'ch', '_']
					{'string': 'u/ch/_', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['u', 'ch', '_']
					version split: ['u', 'ch', '_']
					{'string': 'u/ch/_', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['u', 'ch', '_']
					version split: ['_', 'u', 'c', 'h', '_']
					{'string': '_/u/c/h/_', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['_', 'u', 'c', 'h', '_']
					version split: ['_', 'u', 'c', 'h', '_']
					{'string': '_/u/c/h/_', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['_', 'u', 'c', 'h', '_']
					version split: ['_', 'u', 'ch', '_']
					{'string': '_/u/ch/_', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['_', 'u', 'ch', '_']
					version split: ['_', 'u', 'ch', '_']
					{'string': '_/u/ch/_', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['_', 'u', 'ch', '_']
					version split: ['u', 'c', 'h', '_']
					{'string': 'u/c/h/_', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['u', 'c', 'h', '_']
					version split: ['u', 'c', 'h', '_']
					{'string': 'u/c/h/_', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['u', 'c', 'h', '_']
					version split: ['u', 'ch', '_']
					{'string': 'u/ch/_', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['u', 'ch', '_']
					version split: ['u', 'ch', '_']
					{'string': 'u/ch/_', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['u', 'ch', '_']
					version split: ['_', 'u', 'c', 'h', '_']
					{'string': '_/u/c/h/_', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['_', 'u', 'c', 'h', '_']
					version split: ['_', 'u', 'c', 'h', '_']
					{'string': '_/u/c/h/_', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['_', 'u', 'c', 'h', '_']
					version split: ['_', 'u', 'ch', '_']
					{'string': '_/u/ch/_', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['_', 'u', 'ch', '_']
					version split: ['_', 'u', 'ch', '_']
					{'string': '_/u/ch/_', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['_', 'u', 'ch', '_']
					version split: ['u', 'c', 'h', '_', '_']
					{'string': 'u/c/h/_/_', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['u', 'c', 'h', '_', '_']
					version split: ['u', 'c', 'h', '_', '_']
					{'string': 'u/c/h/_/_', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['u', 'c', 'h', '_', '_']
					version split: ['u', 'ch', '_', '_']
					{'string': 'u/ch/_/_', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['u', 'ch', '_', '_']
					version split: ['u', 'ch', '_', '_']
					{'string': 'u/ch/_/_', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['u', 'ch', '_', '_']
					version split: ['_', 'u', 'c', 'h', '_', '_']
					{'string': '_/u/c/h/_/_', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['_', 'u', 'c', 'h', '_', '_']
					version split: ['_', 'u', 'c', 'h', '_', '_']
					{'string': '_/u/c/h/_/_', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['_', 'u', 'c', 'h', '_', '_']
					version split: ['_', 'u', 'ch', '_', '_']
					{'string': '_/u/ch/_/_', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['_', 'u', 'ch', '_', '_']
					version split: ['_', 'u', 'ch', '_', '_']
					{'string': '_/u/ch/_/_', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['_', 'u', 'ch', '_', '_']
					version split: ['u', 'c', 'h', '_']
					{'string': 'u/c/h/_', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['u', 'c', 'h', '_']
					version split: ['u', 'c', 'h', '_']
					{'string': 'u/c/h/_', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['u', 'c', 'h', '_']
					version split: ['u', 'ch', '_']
					{'string': 'u/ch/_', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['u', 'ch', '_']
					version split: ['u', 'ch', '_']
					{'string': 'u/ch/_', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['u', 'ch', '_']
					version split: ['_', 'u', 'c', 'h', '_']
					{'string': '_/u/c/h/_', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['_', 'u', 'c', 'h', '_']
					version split: ['_', 'u', 'c', 'h', '_']
					{'string': '_/u/c/h/_', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['_', 'u', 'c', 'h', '_']
					version split: ['_', 'u', 'ch', '_']
					{'string': '_/u/ch/_', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['_', 'u', 'ch', '_']
					version split: ['_', 'u', 'ch', '_']
					{'string': '_/u/ch/_', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['_', 'u', 'ch', '_']
					version split: ['u', 'c', 'h', '_', '_']
					{'string': 'u/c/h/_/_', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['u', 'c', 'h', '_', '_']
					version split: ['u', 'c', 'h', '_', '_']
					{'string': 'u/c/h/_/_', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['u', 'c', 'h', '_', '_']
					version split: ['u', 'ch', '_', '_']
					{'string': 'u/ch/_/_', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['u', 'ch', '_', '_']
					version split: ['u', 'ch', '_', '_']
					{'string': 'u/ch/_/_', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['u', 'ch', '_', '_']
					version split: ['_', 'u', 'c', 'h', '_', '_']
					{'string': '_/u/c/h/_/_', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['_', 'u', 'c', 'h', '_', '_']
					version split: ['_', 'u', 'c', 'h', '_', '_']
					{'string': '_/u/c/h/_/_', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['_', 'u', 'c', 'h', '_', '_']
					version split: ['_', 'u', 'ch', '_', '_']
					{'string': '_/u/ch/_/_', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['_', 'u', 'ch', '_', '_']
					version split: ['_', 'u', 'ch', '_', '_']
					{'string': '_/u/ch/_/_', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['_', 'u', 'ch', '_', '_']
					version split: ['u', 'c', 'h', '_', '_']
					{'string': 'u/c/h/_/_', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['u', 'c', 'h', '_', '_']
					version split: ['u', 'c', 'h', '_', '_']
					{'string': 'u/c/h/_/_', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['u', 'c', 'h', '_', '_']
					version split: ['u', 'ch', '_', '_']
					{'string': 'u/ch/_/_', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['u', 'ch', '_', '_']
					version split: ['u', 'ch', '_', '_']
					{'string': 'u/ch/_/_', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['u', 'ch', '_', '_']
					version split: ['_', 'u', 'c', 'h', '_', '_']
					{'string': '_/u/c/h/_/_', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['_', 'u', 'c', 'h', '_', '_']
					version split: ['_', 'u', 'c', 'h', '_', '_']
					{'string': '_/u/c/h/_/_', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['_', 'u', 'c', 'h', '_', '_']
					version split: ['_', 'u', 'ch', '_', '_']
					{'string': '_/u/ch/_/_', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['_', 'u', 'ch', '_', '_']
					version split: ['_', 'u', 'ch', '_', '_']
					{'string': '_/u/ch/_/_', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['_', 'u', 'ch', '_', '_']
					version split: ['u', 'c', 'h', '_', '_', '_']
					{'string': 'u/c/h/_/_/_', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['u', 'c', 'h', '_', '_', '_']
					version split: ['u', 'c', 'h', '_', '_', '_']
					{'string': 'u/c/h/_/_/_', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['u', 'c', 'h', '_', '_', '_']
					version split: ['u', 'ch', '_', '_', '_']
					{'string': 'u/ch/_/_/_', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['u', 'ch', '_', '_', '_']
					version split: ['u', 'ch', '_', '_', '_']
					{'string': 'u/ch/_/_/_', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['u', 'ch', '_', '_', '_']
					version split: ['_', 'u', 'c', 'h', '_', '_', '_']
					{'string': '_/u/c/h/_/_/_', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['_', 'u', 'c', 'h', '_', '_', '_']
					version split: ['_', 'u', 'c', 'h', '_', '_', '_']
					{'string': '_/u/c/h/_/_/_', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['_', 'u', 'c', 'h', '_', '_', '_']
					version split: ['_', 'u', 'ch', '_', '_', '_']
					{'string': '_/u/ch/_/_/_', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['_', 'u', 'ch', '_', '_', '_']
					version split: ['_', 'u', 'ch', '_', '_', '_']
					{'string': '_/u/ch/_/_/_', 'rgx': '((_))/((ch)|(c))/((h)|(ch)|(c))/((h))/((_))/((_))/((_))$'}
					_____REMOVING________['_', 'u', 'ch', '_', '_', '_']
					ANALYSING: vych
						resolving (32)
						> version: v/y/c/h
						> version: v/y/c/h
						> version: v/y/ch
						> version: v/y/ch
						> version: _/v/y/c/h
						> version: _/v/y/c/h
						> version: _/v/y/ch
						> version: _/v/y/ch
						> version: v/_/y/c/h
						> version: v/_/y/c/h
						> version: v/_/y/ch
						> version: v/_/y/ch
						> version: _/_/v/y/c/h
						> version: _/_/v/y/c/h
						> version: _/_/v/y/ch
						> version: _/_/v/y/ch
						> version: v/y/c/h/_
						> version: v/y/c/h/_
						> version: v/y/ch/_
						> version: v/y/ch/_
						> version: _/v/y/c/h/_
						> version: _/v/y/c/h/_
						> version: _/v/y/ch/_
						> version: _/v/y/ch/_
						> version: v/_/y/c/h/_
						> version: v/_/y/c/h/_
						> version: v/_/y/ch/_
						> version: v/_/y/ch/_
						> version: _/_/v/y/c/_/h
						TRYING: h
						> version: _/_/v/y/c/_/h
						TRYING: h
						> version: _/_/v/y/ch/_
						> version: _/_/v/y/ch/_
						RESULT:  ['_']
					adding dashed alternative: ['v', 'y', 'c', 'h', '_']
					adding dashed alternative: ['v', 'y', 'c', 'h', '_']
					adding dashed alternative: ['v', 'y', 'ch', '_']
					adding dashed alternative: ['v', 'y', 'ch', '_']
					adding dashed alternative: ['_', 'v', 'y', 'c', 'h', '_']
					adding dashed alternative: ['_', 'v', 'y', 'c', 'h', '_']
					adding dashed alternative: ['_', 'v', 'y', 'ch', '_']
					adding dashed alternative: ['_', 'v', 'y', 'ch', '_']
					adding dashed alternative: ['v', '_', 'y', 'c', 'h', '_']
					adding dashed alternative: ['v', '_', 'y', 'c', 'h', '_']
					adding dashed alternative: ['v', '_', 'y', 'ch', '_']
					adding dashed alternative: ['v', '_', 'y', 'ch', '_']
					adding dashed alternative: ['_', '_', 'v', 'y', 'c', 'h', '_']
					adding dashed alternative: ['_', '_', 'v', 'y', 'c', 'h', '_']
					adding dashed alternative: ['_', '_', 'v', 'y', 'ch', '_']
					adding dashed alternative: ['_', '_', 'v', 'y', 'ch', '_']
					adding dashed alternative: ['v', 'y', 'c', 'h', '_', '_']
					adding dashed alternative: ['v', 'y', 'c', 'h', '_', '_']
					adding dashed alternative: ['v', 'y', 'ch', '_', '_']
					adding dashed alternative: ['v', 'y', 'ch', '_', '_']
					adding dashed alternative: ['_', 'v', 'y', 'c', 'h', '_', '_']
					adding dashed alternative: ['_', 'v', 'y', 'c', 'h', '_', '_']
					adding dashed alternative: ['_', 'v', 'y', 'ch', '_', '_']
					adding dashed alternative: ['_', 'v', 'y', 'ch', '_', '_']
					adding dashed alternative: ['v', '_', 'y', 'c', 'h', '_', '_']
					adding dashed alternative: ['v', '_', 'y', 'c', 'h', '_', '_']
					adding dashed alternative: ['v', '_', 'y', 'ch', '_', '_']
					adding dashed alternative: ['v', '_', 'y', 'ch', '_', '_']
					adding dashed alternative: ['_', '_', 'v', 'y', 'c', '_', '_', 'h']
					adding dashed alternative: ['_', '_', 'v', 'y', 'c', '_', '_', 'h']
					adding dashed alternative: ['_', '_', 'v', 'y', 'ch', '_', '_']
					adding dashed alternative: ['_', '_', 'v', 'y', 'ch', '_', '_']
					v/y/c/h(CCCC)
v/y/c/h(VVCC)
v/y/ch(CCC)
v/y/ch(VVC)
_/v/y/c/h(AAACC)
_/v/y/c/h(AAACC)
_/v/y/ch(AAAC)
_/v/y/ch(AAAC)
v/_/y/c/h(AAACC)
v/_/y/c/h(AAACC)
v/_/y/ch(AAAC)
v/_/y/ch(AAAC)
_/_/v/y/c/h(AAAACC)
_/_/v/y/c/h(AAAACC)
_/_/v/y/ch(AAAAC)
_/_/v/y/ch(AAAAC)
v/y/c/h/_(AACCA)
v/y/c/h/_(AACCA)
v/y/ch/_(AACA)
v/y/ch/_(AACA)
_/v/y/c/h/_(AAACCA)
_/v/y/c/h/_(AAACCA)
_/v/y/ch/_(AAACA)
_/v/y/ch/_(AAACA)
v/_/y/c/h/_(AAACCA)
v/_/y/c/h/_(AAACCA)
v/_/y/ch/_(AAACA)
v/_/y/ch/_(AAACA)
_/_/v/y/c/_/h(AAAACAC)
_/_/v/y/c/_/h(AAAACAC)
_/_/v/y/ch/_(AAAACA)
_/_/v/y/ch/_(AAAACA)
v/y/c/h/_(AACCA)
v/y/c/h/_(AACCA)
v/y/ch/_(AACA)
v/y/ch/_(AACA)
_/v/y/c/h/_(AAACCA)
_/v/y/c/h/_(AAACCA)
_/v/y/ch/_(AAACA)
_/v/y/ch/_(AAACA)
v/_/y/c/h/_(AAACCA)
v/_/y/c/h/_(AAACCA)
v/_/y/ch/_(AAACA)
v/_/y/ch/_(AAACA)
_/_/v/y/c/h/_(AAAACCA)
_/_/v/y/c/h/_(AAAACCA)
_/_/v/y/ch/_(AAAACA)
_/_/v/y/ch/_(AAAACA)
v/y/c/h/_/_(AACCAA)
v/y/c/h/_/_(AACCAA)
v/y/ch/_/_(AACAA)
v/y/ch/_/_(AACAA)
_/v/y/c/h/_/_(AAACCAA)
_/v/y/c/h/_/_(AAACCAA)
_/v/y/ch/_/_(AAACAA)
_/v/y/ch/_/_(AAACAA)
v/_/y/c/h/_/_(AAACCAA)
v/_/y/c/h/_/_(AAACCAA)
v/_/y/ch/_/_(AAACAA)
v/_/y/ch/_/_(AAACAA)
_/_/v/y/c/_/_/h(AAAACAAC)
_/_/v/y/c/_/_/h(AAAACAAC)
_/_/v/y/ch/_/_(AAAACAA)
_/_/v/y/ch/_/_(AAAACAA)
					version split: ['v', 'y', 'c', 'h']
					{'string': 'v/y/c/h', 'rgx': '((_))/((_))/((ch)|(c))/((h)|(ch)|(c))/((h)|(ch)|(c))/((_))/((_))$'}
					_____REMOVING________['v', 'y', 'c', 'h']
					version split: ['v', 'y', 'c', 'h']
					{'string': 'v/y/c/h', 'rgx': '((_))/((_))/((ch)|(c))/((h)|(ch)|(c))/((h)|(ch)|(c))/((_))/((_))$'}
					_____REMOVING________['v', 'y', 'c', 'h']
					version split: ['v', 'y', 'ch']
					{'string': 'v/y/ch', 'rgx': '((_))/((_))/((ch)|(c))/((h)|(ch)|(c))/((h)|(ch)|(c))/((_))/((_))$'}
					_____REMOVING________['v', 'y', 'ch']
					version split: ['v', 'y', 'ch']
					{'string': 'v/y/ch', 'rgx': '((_))/((_))/((ch)|(c))/((h)|(ch)|(c))/((h)|(ch)|(c))/((_))/((_))$'}
					_____REMOVING________['v', 'y', 'ch']
					version split: ['_', 'v', 'y', 'c', 'h']
					{'string': '_/v/y/c/h', 'rgx': '((_))/((_))/((ch)|(c))/((h)|(ch)|(c))/((h)|(ch)|(c))/((_))/((_))$'}
					_____REMOVING________['_', 'v', 'y', 'c', 'h']
					version split: ['_', 'v', 'y', 'c', 'h']
					{'string': '_/v/y/c/h', 'rgx': '((_))/((_))/((ch)|(c))/((h)|(ch)|(c))/((h)|(ch)|(c))/((_))/((_))$'}
					_____REMOVING________['_', 'v', 'y', 'c', 'h']
					version split: ['_', 'v', 'y', 'ch']
					{'string': '_/v/y/ch', 'rgx': '((_))/((_))/((ch)|(c))/((h)|(ch)|(c))/((h)|(ch)|(c))/((_))/((_))$'}
					_____REMOVING________['_', 'v', 'y', 'ch']
					version split: ['_', 'v', 'y', 'ch']
					{'string': '_/v/y/ch', 'rgx': '((_))/((_))/((ch)|(c))/((h)|(ch)|(c))/((h)|(ch)|(c))/((_))/((_))$'}
					_____REMOVING________['_', 'v', 'y', 'ch']
					version split: ['v', '_', 'y', 'c', 'h']
					{'string': 'v/_/y/c/h', 'rgx': '((_))/((_))/((ch)|(c))/((h)|(ch)|(c))/((h)|(ch)|(c))/((_))/((_))$'}
					_____REMOVING________['v', '_', 'y', 'c', 'h']
					version split: ['v', '_', 'y', 'c', 'h']
					{'string': 'v/_/y/c/h', 'rgx': '((_))/((_))/((ch)|(c))/((h)|(ch)|(c))/((h)|(ch)|(c))/((_))/((_))$'}
					_____REMOVING________['v', '_', 'y', 'c', 'h']
					version split: ['v', '_', 'y', 'ch']
					{'string': 'v/_/y/ch', 'rgx': '((_))/((_))/((ch)|(c))/((h)|(ch)|(c))/((h)|(ch)|(c))/((_))/((_))$'}
					_____REMOVING________['v', '_', 'y', 'ch']
					version split: ['v', '_', 'y', 'ch']
					{'string': 'v/_/y/ch', 'rgx': '((_))/((_))/((ch)|(c))/((h)|(ch)|(c))/((h)|(ch)|(c))/((_))/((_))$'}
					_____REMOVING________['v', '_', 'y', 'ch']
					version split: ['_', '_', 'v', 'y', 'c', 'h']
					{'string': '_/_/v/y/c/h', 'rgx': '((_))/((_))/((ch)|(c))/((h)|(ch)|(c))/((h)|(ch)|(c))/((_))/((_))$'}
					_____REMOVING________['_', '_', 'v', 'y', 'c', 'h']
					version split: ['_', '_', 'v', 'y', 'c', 'h']
					{'string': '_/_/v/y/c/h', 'rgx': '((_))/((_))/((ch)|(c))/((h)|(ch)|(c))/((h)|(ch)|(c))/((_))/((_))$'}
					_____REMOVING________['_', '_', 'v', 'y', 'c', 'h']
					version split: ['_', '_', 'v', 'y', 'ch']
					{'string': '_/_/v/y/ch', 'rgx': '((_))/((_))/((ch)|(c))/((h)|(ch)|(c))/((h)|(ch)|(c))/((_))/((_))$'}
					_____REMOVING________['_', '_', 'v', 'y', 'ch']
					version split: ['_', '_', 'v', 'y', 'ch']
					{'string': '_/_/v/y/ch', 'rgx': '((_))/((_))/((ch)|(c))/((h)|(ch)|(c))/((h)|(ch)|(c))/((_))/((_))$'}
					_____REMOVING________['_', '_', 'v', 'y', 'ch']
					version split: ['v', 'y', 'c', 'h', '_']
					{'string': 'v/y/c/h/_', 'rgx': '((_))/((_))/((ch)|(c))/((h)|(ch)|(c))/((h)|(ch)|(c))/((_))/((_))$'}
					_____REMOVING________['v', 'y', 'c', 'h', '_']
					version split: ['v', 'y', 'c', 'h', '_']
					{'string': 'v/y/c/h/_', 'rgx': '((_))/((_))/((ch)|(c))/((h)|(ch)|(c))/((h)|(ch)|(c))/((_))/((_))$'}
					_____REMOVING________['v', 'y', 'c', 'h', '_']
					version split: ['v', 'y', 'ch', '_']
					{'string': 'v/y/ch/_', 'rgx': '((_))/((_))/((ch)|(c))/((h)|(ch)|(c))/((h)|(ch)|(c))/((_))/((_))$'}
					_____REMOVING________['v', 'y', 'ch', '_']
					version split: ['v', 'y', 'ch', '_']
					{'string': 'v/y/ch/_', 'rgx': '((_))/((_))/((ch)|(c))/((h)|(ch)|(c))/((h)|(ch)|(c))/((_))/((_))$'}
					_____REMOVING________['v', 'y', 'ch', '_']
					version split: ['_', 'v', 'y', 'c', 'h', '_']
					{'string': '_/v/y/c/h/_', 'rgx': '((_))/((_))/((ch)|(c))/((h)|(ch)|(c))/((h)|(ch)|(c))/((_))/((_))$'}
					_____REMOVING________['_', 'v', 'y', 'c', 'h', '_']
					version split: ['_', 'v', 'y', 'c', 'h', '_']
					{'string': '_/v/y/c/h/_', 'rgx': '((_))/((_))/((ch)|(c))/((h)|(ch)|(c))/((h)|(ch)|(c))/((_))/((_))$'}
					_____REMOVING________['_', 'v', 'y', 'c', 'h', '_']
					version split: ['_', 'v', 'y', 'ch', '_']
					{'string': '_/v/y/ch/_', 'rgx': '((_))/((_))/((ch)|(c))/((h)|(ch)|(c))/((h)|(ch)|(c))/((_))/((_))$'}
					_____REMOVING________['_', 'v', 'y', 'ch', '_']
					version split: ['_', 'v', 'y', 'ch', '_']
					{'string': '_/v/y/ch/_', 'rgx': '((_))/((_))/((ch)|(c))/((h)|(ch)|(c))/((h)|(ch)|(c))/((_))/((_))$'}
					_____REMOVING________['_', 'v', 'y', 'ch', '_']
					version split: ['v', '_', 'y', 'c', 'h', '_']
					{'string': 'v/_/y/c/h/_', 'rgx': '((_))/((_))/((ch)|(c))/((h)|(ch)|(c))/((h)|(ch)|(c))/((_))/((_))$'}
					_____REMOVING________['v', '_', 'y', 'c', 'h', '_']
					version split: ['v', '_', 'y', 'c', 'h', '_']
					{'string': 'v/_/y/c/h/_', 'rgx': '((_))/((_))/((ch)|(c))/((h)|(ch)|(c))/((h)|(ch)|(c))/((_))/((_))$'}
					_____REMOVING________['v', '_', 'y', 'c', 'h', '_']
					version split: ['v', '_', 'y', 'ch', '_']
					{'string': 'v/_/y/ch/_', 'rgx': '((_))/((_))/((ch)|(c))/((h)|(ch)|(c))/((h)|(ch)|(c))/((_))/((_))$'}
					_____REMOVING________['v', '_', 'y', 'ch', '_']
					version split: ['v', '_', 'y', 'ch', '_']
					{'string': 'v/_/y/ch/_', 'rgx': '((_))/((_))/((ch)|(c))/((h)|(ch)|(c))/((h)|(ch)|(c))/((_))/((_))$'}
					_____REMOVING________['v', '_', 'y', 'ch', '_']
					version split: ['_', '_', 'v', 'y', 'c', '_', 'h']
					{'string': '_/_/v/y/c/_/h', 'rgx': '((_))/((_))/((ch)|(c))/((h)|(ch)|(c))/((h)|(ch)|(c))/((_))/((_))$'}
					_____REMOVING________['_', '_', 'v', 'y', 'c', '_', 'h']
					version split: ['_', '_', 'v', 'y', 'c', '_', 'h']
					{'string': '_/_/v/y/c/_/h', 'rgx': '((_))/((_))/((ch)|(c))/((h)|(ch)|(c))/((h)|(ch)|(c))/((_))/((_))$'}
					_____REMOVING________['_', '_', 'v', 'y', 'c', '_', 'h']
					version split: ['_', '_', 'v', 'y', 'ch', '_']
					{'string': '_/_/v/y/ch/_', 'rgx': '((_))/((_))/((ch)|(c))/((h)|(ch)|(c))/((h)|(ch)|(c))/((_))/((_))$'}
					_____REMOVING________['_', '_', 'v', 'y', 'ch', '_']
					version split: ['_', '_', 'v', 'y', 'ch', '_']
					{'string': '_/_/v/y/ch/_', 'rgx': '((_))/((_))/((ch)|(c))/((h)|(ch)|(c))/((h)|(ch)|(c))/((_))/((_))$'}
					_____REMOVING________['_', '_', 'v', 'y', 'ch', '_']
					version split: ['v', 'y', 'c', 'h', '_']
					{'string': 'v/y/c/h/_', 'rgx': '((_))/((_))/((ch)|(c))/((h)|(ch)|(c))/((h)|(ch)|(c))/((_))/((_))$'}
					_____REMOVING________['v', 'y', 'c', 'h', '_']
					version split: ['v', 'y', 'c', 'h', '_']
					{'string': 'v/y/c/h/_', 'rgx': '((_))/((_))/((ch)|(c))/((h)|(ch)|(c))/((h)|(ch)|(c))/((_))/((_))$'}
					_____REMOVING________['v', 'y', 'c', 'h', '_']
					version split: ['v', 'y', 'ch', '_']
					{'string': 'v/y/ch/_', 'rgx': '((_))/((_))/((ch)|(c))/((h)|(ch)|(c))/((h)|(ch)|(c))/((_))/((_))$'}
					_____REMOVING________['v', 'y', 'ch', '_']
					version split: ['v', 'y', 'ch', '_']
					{'string': 'v/y/ch/_', 'rgx': '((_))/((_))/((ch)|(c))/((h)|(ch)|(c))/((h)|(ch)|(c))/((_))/((_))$'}
					_____REMOVING________['v', 'y', 'ch', '_']
					version split: ['_', 'v', 'y', 'c', 'h', '_']
					{'string': '_/v/y/c/h/_', 'rgx': '((_))/((_))/((ch)|(c))/((h)|(ch)|(c))/((h)|(ch)|(c))/((_))/((_))$'}
					_____REMOVING________['_', 'v', 'y', 'c', 'h', '_']
					version split: ['_', 'v', 'y', 'c', 'h', '_']
					{'string': '_/v/y/c/h/_', 'rgx': '((_))/((_))/((ch)|(c))/((h)|(ch)|(c))/((h)|(ch)|(c))/((_))/((_))$'}
					_____REMOVING________['_', 'v', 'y', 'c', 'h', '_']
					version split: ['_', 'v', 'y', 'ch', '_']
					{'string': '_/v/y/ch/_', 'rgx': '((_))/((_))/((ch)|(c))/((h)|(ch)|(c))/((h)|(ch)|(c))/((_))/((_))$'}
					_____REMOVING________['_', 'v', 'y', 'ch', '_']
					version split: ['_', 'v', 'y', 'ch', '_']
					{'string': '_/v/y/ch/_', 'rgx': '((_))/((_))/((ch)|(c))/((h)|(ch)|(c))/((h)|(ch)|(c))/((_))/((_))$'}
					_____REMOVING________['_', 'v', 'y', 'ch', '_']
					version split: ['v', '_', 'y', 'c', 'h', '_']
					{'string': 'v/_/y/c/h/_', 'rgx': '((_))/((_))/((ch)|(c))/((h)|(ch)|(c))/((h)|(ch)|(c))/((_))/((_))$'}
					_____REMOVING________['v', '_', 'y', 'c', 'h', '_']
					version split: ['v', '_', 'y', 'c', 'h', '_']
					{'string': 'v/_/y/c/h/_', 'rgx': '((_))/((_))/((ch)|(c))/((h)|(ch)|(c))/((h)|(ch)|(c))/((_))/((_))$'}
					_____REMOVING________['v', '_', 'y', 'c', 'h', '_']
					version split: ['v', '_', 'y', 'ch', '_']
					{'string': 'v/_/y/ch/_', 'rgx': '((_))/((_))/((ch)|(c))/((h)|(ch)|(c))/((h)|(ch)|(c))/((_))/((_))$'}
					_____REMOVING________['v', '_', 'y', 'ch', '_']
					version split: ['v', '_', 'y', 'ch', '_']
					{'string': 'v/_/y/ch/_', 'rgx': '((_))/((_))/((ch)|(c))/((h)|(ch)|(c))/((h)|(ch)|(c))/((_))/((_))$'}
					_____REMOVING________['v', '_', 'y', 'ch', '_']
					version split: ['_', '_', 'v', 'y', 'c', 'h', '_']
					{'string': '_/_/v/y/c/h/_', 'rgx': '((_))/((_))/((ch)|(c))/((h)|(ch)|(c))/((h)|(ch)|(c))/((_))/((_))$'}
					_____REMOVING________['_', '_', 'v', 'y', 'c', 'h', '_']
					version split: ['_', '_', 'v', 'y', 'c', 'h', '_']
					{'string': '_/_/v/y/c/h/_', 'rgx': '((_))/((_))/((ch)|(c))/((h)|(ch)|(c))/((h)|(ch)|(c))/((_))/((_))$'}
					_____REMOVING________['_', '_', 'v', 'y', 'c', 'h', '_']
					version split: ['_', '_', 'v', 'y', 'ch', '_']
					{'string': '_/_/v/y/ch/_', 'rgx': '((_))/((_))/((ch)|(c))/((h)|(ch)|(c))/((h)|(ch)|(c))/((_))/((_))$'}
					_____REMOVING________['_', '_', 'v', 'y', 'ch', '_']
					version split: ['_', '_', 'v', 'y', 'ch', '_']
					{'string': '_/_/v/y/ch/_', 'rgx': '((_))/((_))/((ch)|(c))/((h)|(ch)|(c))/((h)|(ch)|(c))/((_))/((_))$'}
					_____REMOVING________['_', '_', 'v', 'y', 'ch', '_']
					version split: ['v', 'y', 'c', 'h', '_', '_']
					{'string': 'v/y/c/h/_/_', 'rgx': '((_))/((_))/((ch)|(c))/((h)|(ch)|(c))/((h)|(ch)|(c))/((_))/((_))$'}
					_____REMOVING________['v', 'y', 'c', 'h', '_', '_']
					version split: ['v', 'y', 'c', 'h', '_', '_']
					{'string': 'v/y/c/h/_/_', 'rgx': '((_))/((_))/((ch)|(c))/((h)|(ch)|(c))/((h)|(ch)|(c))/((_))/((_))$'}
					_____REMOVING________['v', 'y', 'c', 'h', '_', '_']
					version split: ['v', 'y', 'ch', '_', '_']
					{'string': 'v/y/ch/_/_', 'rgx': '((_))/((_))/((ch)|(c))/((h)|(ch)|(c))/((h)|(ch)|(c))/((_))/((_))$'}
					_____REMOVING________['v', 'y', 'ch', '_', '_']
					version split: ['v', 'y', 'ch', '_', '_']
					{'string': 'v/y/ch/_/_', 'rgx': '((_))/((_))/((ch)|(c))/((h)|(ch)|(c))/((h)|(ch)|(c))/((_))/((_))$'}
					_____REMOVING________['v', 'y', 'ch', '_', '_']
					version split: ['_', 'v', 'y', 'c', 'h', '_', '_']
					{'string': '_/v/y/c/h/_/_', 'rgx': '((_))/((_))/((ch)|(c))/((h)|(ch)|(c))/((h)|(ch)|(c))/((_))/((_))$'}
					_____REMOVING________['_', 'v', 'y', 'c', 'h', '_', '_']
					version split: ['_', 'v', 'y', 'c', 'h', '_', '_']
					{'string': '_/v/y/c/h/_/_', 'rgx': '((_))/((_))/((ch)|(c))/((h)|(ch)|(c))/((h)|(ch)|(c))/((_))/((_))$'}
					_____REMOVING________['_', 'v', 'y', 'c', 'h', '_', '_']
					version split: ['_', 'v', 'y', 'ch', '_', '_']
					{'string': '_/v/y/ch/_/_', 'rgx': '((_))/((_))/((ch)|(c))/((h)|(ch)|(c))/((h)|(ch)|(c))/((_))/((_))$'}
					_____REMOVING________['_', 'v', 'y', 'ch', '_', '_']
					version split: ['_', 'v', 'y', 'ch', '_', '_']
					{'string': '_/v/y/ch/_/_', 'rgx': '((_))/((_))/((ch)|(c))/((h)|(ch)|(c))/((h)|(ch)|(c))/((_))/((_))$'}
					_____REMOVING________['_', 'v', 'y', 'ch', '_', '_']
					version split: ['v', '_', 'y', 'c', 'h', '_', '_']
					{'string': 'v/_/y/c/h/_/_', 'rgx': '((_))/((_))/((ch)|(c))/((h)|(ch)|(c))/((h)|(ch)|(c))/((_))/((_))$'}
					_____REMOVING________['v', '_', 'y', 'c', 'h', '_', '_']
					version split: ['v', '_', 'y', 'c', 'h', '_', '_']
					{'string': 'v/_/y/c/h/_/_', 'rgx': '((_))/((_))/((ch)|(c))/((h)|(ch)|(c))/((h)|(ch)|(c))/((_))/((_))$'}
					_____REMOVING________['v', '_', 'y', 'c', 'h', '_', '_']
					version split: ['v', '_', 'y', 'ch', '_', '_']
					{'string': 'v/_/y/ch/_/_', 'rgx': '((_))/((_))/((ch)|(c))/((h)|(ch)|(c))/((h)|(ch)|(c))/((_))/((_))$'}
					_____REMOVING________['v', '_', 'y', 'ch', '_', '_']
					version split: ['v', '_', 'y', 'ch', '_', '_']
					{'string': 'v/_/y/ch/_/_', 'rgx': '((_))/((_))/((ch)|(c))/((h)|(ch)|(c))/((h)|(ch)|(c))/((_))/((_))$'}
					_____REMOVING________['v', '_', 'y', 'ch', '_', '_']
					version split: ['_', '_', 'v', 'y', 'c', '_', '_', 'h']
					{'string': '_/_/v/y/c/_/_/h', 'rgx': '((_))/((_))/((ch)|(c))/((h)|(ch)|(c))/((h)|(ch)|(c))/((_))/((_))$'}
					_____REMOVING________['_', '_', 'v', 'y', 'c', '_', '_', 'h']
					version split: ['_', '_', 'v', 'y', 'c', '_', '_', 'h']
					{'string': '_/_/v/y/c/_/_/h', 'rgx': '((_))/((_))/((ch)|(c))/((h)|(ch)|(c))/((h)|(ch)|(c))/((_))/((_))$'}
					_____REMOVING________['_', '_', 'v', 'y', 'c', '_', '_', 'h']
					version split: ['_', '_', 'v', 'y', 'ch', '_', '_']
					{'string': '_/_/v/y/ch/_/_', 'rgx': '((_))/((_))/((ch)|(c))/((h)|(ch)|(c))/((h)|(ch)|(c))/((_))/((_))$'}
					_____REMOVING________['_', '_', 'v', 'y', 'ch', '_', '_']
					version split: ['_', '_', 'v', 'y', 'ch', '_', '_']
					{'string': '_/_/v/y/ch/_/_', 'rgx': '((_))/((_))/((ch)|(c))/((h)|(ch)|(c))/((h)|(ch)|(c))/((_))/((_))$'}
					_____REMOVING________['_', '_', 'v', 'y', 'ch', '_', '_']
			only one version left: ['æ', 'h', 'c', '_', '_', '_', '_']
			only one version left: ['æ', 'c', 'h', '_', '_', '_', '_']
			FAIL: 
			FAIL: 
			FAIL: 
			FAIL: 
			only one version left: ['e', 'c', 'h', '_', '_', '_', '_']
			FAIL: 
			FAIL: 
			FAIL: 
			FAIL: 
			FAIL: 
			FAIL: 
			FAIL: 
			FAIL: 
			FAIL: 
			FAIL: 
			FAIL: 
			SPLIT: ['æ', 'h', 'c', '_', '_', '_', '_']
			['æ', 'h', 'c', '_', '_', '_', '_']
			SPLIT: ['æ', 'c', 'h', '_', '_', '_', '_']
			['æ', 'c', 'h', '_', '_', '_', '_']
			SPLIT: ['æ', '_', 'c', 'c', '_', '_', '_', '----!']
			SPLIT: ['a', '_', 'c', 'c', '_', '_', '_', '----!']
			SPLIT: ['a', '_', 'ch.c', 'h.ch.c', 'h', '_', '_', '----!']
			SPLIT: ['a', '_', 'k', 'k', '_', 'r.e', 'r.e', '----!']
			SPLIT: ['e', 'c', 'h', '_', '_', '_', '_']
			['e', 'c', 'h', '_', '_', '_', '_']
			SPLIT: ['e', 'ch.c', 'h', '_', '_', '_', '_', '----!']
			SPLIT: ['e', 'ch.c', 'h', '_', '_', '_', '_', '----!']
			SPLIT: ['e', '_', 'c', 'c', '_', '_', '_', '----!']
			SPLIT: ['e', '_', 'ch.c', 'h.ch.c', 'h', '_', '_', '----!']
			SPLIT: ['e', '_', 'ch.c', 'h.ch.c', 'h', '_', '_', '----!']
			SPLIT: ['e', 'ch.c', 'h.ch.c', 'h', '_', '_', '_', '----!']
			SPLIT: ['_', 'ch.c', 'h.ch.c', 'h', '_', '_', '_', '----!']
			SPLIT: ['_', '_', 'c', 'c', 'c', '_', '_', '----!']
			SPLIT: ['_', '_', 'k', 'k', 'k', '_', '_', '----!']
			SPLIT: ['_', 'ch.c', 'h.ch.c', 'h', '_', '_', '_', '----!']
			SPLIT: ['_', '_', 'ch.c', 'h.ch.c', 'h.ch.c', '_', '_', '----!']
			version for pattern CVCCVCV is INVALID
			[{'e', 'r', '_'}, {'e', 'r', '_'}]
			15
			OVERVIEW: version for pattern CVCCVCV
{'e', 'r', '_'}, {'e', 'r', '_'}
faulty splits: 15
æcc----! <-! ælc
acc----! <-! alc
ach.ch.ch.ch----! <-! alch
akkr.er.e----! <-! alkere
ech.ch----! <-! eche
ech.ch----! <-! echen
ecc----! <-! elc
ech.ch.ch.ch----! <-! elch
ech.ch.ch.ch----! <-! elche
ech.ch.ch.ch----! <-! euch
ch.ch.ch.ch----! <-! ich
ccc----! <-! ilc
kkk----! <-! ilk
ch.ch.ch.ch----! <-! uch
ch.ch.ch.ch.ch.c----! <-! vych
æ | h | c | _ | _ | _ | _
æ | c | h | _ | _ | _ | _
æ | _ | c | c | _ | _ | _ | ----!
a | _ | c | c | _ | _ | _ | ----!
a | _ | ch.c | h.ch.c | h | _ | _ | ----!
a | _ | k | k | _ | r.e | r.e | ----!
e | c | h | _ | _ | _ | _
e | ch.c | h | _ | _ | _ | _ | ----!
e | ch.c | h | _ | _ | _ | _ | ----!
e | _ | c | c | _ | _ | _ | ----!
e | _ | ch.c | h.ch.c | h | _ | _ | ----!
e | _ | ch.c | h.ch.c | h | _ | _ | ----!
e | ch.c | h.ch.c | h | _ | _ | _ | ----!
_ | ch.c | h.ch.c | h | _ | _ | _ | ----!
_ | _ | c | c | c | _ | _ | ----!
_ | _ | k | k | k | _ | _ | ----!
_ | ch.c | h.ch.c | h | _ | _ | _ | ----!
_ | _ | ch.c | h.ch.c | h.ch.c | _ | _ | ----!
3 : {'k', 'c', 'h', 'n', 'ch', '_'}
		FOUND __ 0 __ VALID VERSION(S)
		OVERVIEW: version for pattern CVCCVCV
{'e', 'r', '_'}, {'e', 'r', '_'}
faulty splits: 15
æcc----! <-! ælc
acc----! <-! alc
ach.ch.ch.ch----! <-! alch
akkr.er.e----! <-! alkere
ech.ch----! <-! eche
ech.ch----! <-! echen
ecc----! <-! elc
ech.ch.ch.ch----! <-! elch
ech.ch.ch.ch----! <-! elche
ech.ch.ch.ch----! <-! euch
ch.ch.ch.ch----! <-! ich
ccc----! <-! ilc
kkk----! <-! ilk
ch.ch.ch.ch----! <-! uch
ch.ch.ch.ch.ch.c----! <-! vych
æ | h | c | _ | _ | _ | _
æ | c | h | _ | _ | _ | _
æ | _ | c | c | _ | _ | _ | ----!
a | _ | c | c | _ | _ | _ | ----!
a | _ | ch.c | h.ch.c | h | _ | _ | ----!
a | _ | k | k | _ | r.e | r.e | ----!
e | c | h | _ | _ | _ | _
e | ch.c | h | _ | _ | _ | _ | ----!
e | ch.c | h | _ | _ | _ | _ | ----!
e | _ | c | c | _ | _ | _ | ----!
e | _ | ch.c | h.ch.c | h | _ | _ | ----!
e | _ | ch.c | h.ch.c | h | _ | _ | ----!
e | ch.c | h.ch.c | h | _ | _ | _ | ----!
_ | ch.c | h.ch.c | h | _ | _ | _ | ----!
_ | _ | c | c | c | _ | _ | ----!
_ | _ | k | k | k | _ | _ | ----!
_ | ch.c | h.ch.c | h | _ | _ | _ | ----!
_ | _ | ch.c | h.ch.c | h.ch.c | _ | _ | ----!
3 : {'k', 'c', 'h', 'n', 'ch', '_'}
