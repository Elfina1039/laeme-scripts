Analysis object initialized
{'fair': 1, 'far': 1, 'fer': 6, 'fere': 1, 'fier': 10, 'fiere': 5, 'fir': 33, 'fire': 13, 'fires': 1, 'fu': 2, 'fuir': 25, 'fuire': 2, 'fur': 140, 'fure': 22, 'fures': 1, 'fuyr': 5, 'fuyre': 2, 'fyr': 1, 'fyre': 1, 'uer': 7, 'uere': 4, 'ueréé': 1, 'uur': 1, 'ver': 4, 'vur': 1}
Lexel initialized
[[{'lit': 'ai', 'ln': 2, 'index': 1}]]
[[{'lit': 'ie', 'ln': 2, 'index': 1}]]
[[{'lit': 'ie', 'ln': 2, 'index': 1}]]
[[{'lit': 'ui', 'ln': 2, 'index': 1}]]
[[{'lit': 'ui', 'ln': 2, 'index': 1}]]
[[{'lit': 'uy', 'ln': 2, 'index': 1}]]
[[{'lit': 'uy', 'ln': 2, 'index': 1}]]
[[{'lit': 'ue', 'ln': 2, 'index': 0}]]
[[{'lit': 'ue', 'ln': 2, 'index': 0}]]
[[{'lit': 'éé', 'ln': 2, 'index': 3}], [{'lit': 'ue', 'ln': 2, 'index': 0}]]
[[{'lit': 'éé', 'ln': 2, 'index': 3}], [{'lit': 'ue', 'ln': 2, 'index': 0}], [{'lit': 'éé', 'ln': 2, 'index': 3}, {'lit': 'ue', 'ln': 2, 'index': 0}]]
MIN pattern length=3
Pattern CVCV is valid
Pattern VVCV is invalid
Pattern CCCVC is valid
Pattern CVVCV is invalid
Pattern CVCVV is invalid
Pattern CC is invalid
Pattern CCVCV is valid
Pattern VVCVV is invalid
Pattern CCCCV is invalid
Pattern CCC is valid
Pattern CCCC is invalid
Pattern VCVV is invalid
Pattern CV is invalid
Pattern VC is invalid
Pattern CVC is valid
Pattern CVCVC is valid
Pattern VCV is valid
Pattern CVVC is invalid
Pattern VVC is invalid
Pattern CCCV is valid
Pattern CVCC is valid
Pattern CCVC is valid
{'value': 11, 'patterns': ['CVC']}
	[[{'lit': 'ai', 'ln': 2, 'index': 1}]]
	[[{'lit': 'ie', 'ln': 2, 'index': 1}]]
	[[{'lit': 'ie', 'ln': 2, 'index': 1}]]
	[[{'lit': 'ui', 'ln': 2, 'index': 1}]]
	[[{'lit': 'ui', 'ln': 2, 'index': 1}]]
	[[{'lit': 'uy', 'ln': 2, 'index': 1}]]
	[[{'lit': 'uy', 'ln': 2, 'index': 1}]]
	[[{'lit': 'ue', 'ln': 2, 'index': 0}]]
	[[{'lit': 'ue', 'ln': 2, 'index': 0}]]
	[[{'lit': 'éé', 'ln': 2, 'index': 3}], [{'lit': 'ue', 'ln': 2, 'index': 0}]]
	[[{'lit': 'éé', 'ln': 2, 'index': 3}], [{'lit': 'ue', 'ln': 2, 'index': 0}], [{'lit': 'éé', 'ln': 2, 'index': 3}, {'lit': 'ue', 'ln': 2, 'index': 0}]]
	MIN pattern length=3
	Pattern CVCV is valid
	Pattern VVCV is invalid
	Pattern CCCVC is valid
	Pattern CVVCV is invalid
	Pattern CVCVV is invalid
	Pattern CC is invalid
	Pattern CCVCV is valid
	Pattern VVCVV is invalid
	Pattern CCCCV is invalid
	Pattern CCC is valid
	Pattern CCCC is invalid
	Pattern VCVV is invalid
	Pattern CV is invalid
	Pattern VC is invalid
	Pattern CVC is valid
	Pattern CVCVC is valid
	Pattern VCV is valid
	Pattern CVVC is invalid
	Pattern VVC is invalid
	Pattern CCCV is valid
	Pattern CVCC is valid
	Pattern CCVC is valid
	Making the selection for pattern: CVCV
	Selection for pattern: CVCV completed
	Making a version for pattern: CVCV
			___CVCV : 0___
				ANALYSING: fere
				adding littera based on matching pattern
				ANALYSING: fiere
				adding littera based on matching pattern
				ANALYSING: fire
				adding littera based on matching pattern
				ANALYSING: fuire
				adding littera based on matching pattern
				ANALYSING: fure
				adding littera based on matching pattern
				ANALYSING: fuyre
				adding littera based on matching pattern
				ANALYSING: fyre
				adding littera based on matching pattern
				ANALYSING: uere
				adding littera based on matching pattern
				ANALYSING: ueréé
				adding littera based on matching pattern
				ANALYSING: fair
					resolving (3)
					> version: f/a/i/r
					TRYING: f
					> version: f/a/i/r
					TRYING: f
					> version: f/ai/r
					TRYING: f
					RESULT:  ['f']
				ANALYSING: far
					resolving (1)
					> version: f/a/r
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fer
					resolving (1)
					> version: f/e/r
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fier
					resolving (3)
					> version: f/i/e/r
					TRYING: f
					> version: f/i/e/r
					TRYING: f
					> version: f/ie/r
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fir
					resolving (2)
					> version: f/i/r
					TRYING: f
					> version: f/i/r
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fires
					resolving (2)
					> version: f/i/r/e/s
					TRYING: f
					> version: f/i/r/e/s
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fu
					resolving (2)
					> version: f/u
					TRYING: f
					> version: f/u
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fuir
					resolving (3)
					> version: f/u/i/r
					TRYING: f
					> version: f/u/i/r
					TRYING: f
					> version: f/ui/r
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fur
					resolving (2)
					> version: f/u/r
					TRYING: f
					> version: f/u/r
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fures
					resolving (2)
					> version: f/u/r/e/s
					TRYING: f
					> version: f/u/r/e/s
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fuyr
					resolving (3)
					> version: f/u/y/r
					TRYING: f
					> version: f/u/y/r
					TRYING: f
					> version: f/uy/r
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fyr
					resolving (2)
					> version: f/y/r
					TRYING: f
					> version: f/y/r
					TRYING: f
					RESULT:  ['f']
				ANALYSING: uer
					resolving (3)
					> version: u/e/r
					TRYING: u
					> version: u/e/r
					TRYING: u
					> version: ue/r
					TRYING: ue
					RESULT:  ['u']
				ANALYSING: uur
					resolving (2)
					> version: u/u/r
					TRYING: u
					> version: u/u/r
					TRYING: u
					RESULT:  ['u']
				ANALYSING: ver
					resolving (2)
					> version: v/e/r
					TRYING: v
					> version: v/e/r
					TRYING: v
					RESULT:  ['v']
				ANALYSING: vur
					resolving (2)
					> version: v/u/r
					TRYING: v
					> version: v/u/r
					TRYING: v
					RESULT:  ['v']
			___CVCV : 1___
				ANALYSING: fere
				adding littera based on matching pattern
				ANALYSING: fiere
				adding littera based on matching pattern
				ANALYSING: fire
				adding littera based on matching pattern
				ANALYSING: fuire
				adding littera based on matching pattern
				ANALYSING: fure
				adding littera based on matching pattern
				ANALYSING: fuyre
				adding littera based on matching pattern
				ANALYSING: fyre
				adding littera based on matching pattern
				ANALYSING: uere
				adding littera based on matching pattern
				ANALYSING: ueréé
				adding littera based on matching pattern
				ANALYSING: fair
					resolving (3)
					> version: f/a/i/r
					TRYING: a
					> version: f/a/i/r
					TRYING: a
					> version: f/ai/r
					TRYING: ai
					>>> MULTIPLE RESOLVE OPTIONS: {'ai', 'a'}
					RESULT:  ['ai', 'a']
				ANALYSING: far
					resolving (1)
					> version: f/a/r
					TRYING: a
					RESULT:  ['a']
				ANALYSING: fer
					resolving (1)
					> version: f/e/r
					TRYING: e
					RESULT:  ['e']
				ANALYSING: fier
					resolving (3)
					> version: f/i/e/r
					TRYING: i
					> version: f/i/e/r
					TRYING: i
					> version: f/ie/r
					TRYING: ie
					>>> MULTIPLE RESOLVE OPTIONS: {'ie', 'i'}
					RESULT:  ['ie', 'i']
				ANALYSING: fir
					resolving (2)
					> version: f/i/r
					TRYING: i
					> version: f/i/r
					TRYING: i
					RESULT:  ['i']
				ANALYSING: fires
					resolving (2)
					> version: f/i/r/e/s
					TRYING: i
					> version: f/i/r/e/s
					TRYING: i
					RESULT:  ['i']
				ANALYSING: fu
					resolving (2)
					> version: f/u
					TRYING: u
					> version: f/u
					TRYING: u
					RESULT:  ['u']
				ANALYSING: fuir
					resolving (3)
					> version: f/u/i/r
					TRYING: u
					> version: f/u/i/r
					TRYING: u
					> version: f/ui/r
					TRYING: ui
					>>> MULTIPLE RESOLVE OPTIONS: {'ui', 'u'}
					RESULT:  ['ui', 'u']
				ANALYSING: fur
					resolving (2)
					> version: f/u/r
					TRYING: u
					> version: f/u/r
					TRYING: u
					RESULT:  ['u']
				ANALYSING: fures
					resolving (2)
					> version: f/u/r/e/s
					TRYING: u
					> version: f/u/r/e/s
					TRYING: u
					RESULT:  ['u']
				ANALYSING: fuyr
					resolving (3)
					> version: f/u/y/r
					TRYING: u
					> version: f/u/y/r
					TRYING: u
					> version: f/uy/r
					TRYING: uy
					>>> MULTIPLE RESOLVE OPTIONS: {'uy', 'u'}
					RESULT:  ['uy', 'u']
				ANALYSING: fyr
					resolving (2)
					> version: f/y/r
					TRYING: y
					> version: f/y/r
					TRYING: y
					RESULT:  ['y']
				ANALYSING: uer
					resolving (3)
					> version: u/e/r
					TRYING: e
					> version: u/e/r
					TRYING: e
					> version: ue/r
					TRYING: r
					RESULT:  ['e']
				ANALYSING: uur
					resolving (2)
					> version: u/u/r
					TRYING: u
					> version: u/u/r
					TRYING: u
					RESULT:  ['u']
				ANALYSING: ver
					resolving (2)
					> version: v/e/r
					TRYING: e
					> version: v/e/r
					TRYING: e
					RESULT:  ['e']
				ANALYSING: vur
					resolving (2)
					> version: v/u/r
					TRYING: u
					> version: v/u/r
					TRYING: u
					RESULT:  ['u']
			___CVCV : 2___
				ANALYSING: fere
				adding littera based on matching pattern
				ANALYSING: fiere
				adding littera based on matching pattern
				ANALYSING: fire
				adding littera based on matching pattern
				ANALYSING: fuire
				adding littera based on matching pattern
				ANALYSING: fure
				adding littera based on matching pattern
				ANALYSING: fuyre
				adding littera based on matching pattern
				ANALYSING: fyre
				adding littera based on matching pattern
				ANALYSING: uere
				adding littera based on matching pattern
				ANALYSING: ueréé
				adding littera based on matching pattern
				ANALYSING: fair
					resolving (3)
					> version: f/a/i/r
					TRYING: i
					adding blocked set: C = C >> i, r
					> version: f/a/i/r
					TRYING: i
					adding blocked set: C = C >> i, r
					> version: f/ai/r
					TRYING: r
					RESULT:  ['r']
				ANALYSING: far
					resolving (1)
					> version: f/a/r
					TRYING: r
					RESULT:  ['r']
				ANALYSING: fer
					resolving (1)
					> version: f/e/r
					TRYING: r
					RESULT:  ['r']
				ANALYSING: fier
					resolving (3)
					> version: f/i/e/r
					TRYING: e
					> version: f/i/e/r
					TRYING: e
					> version: f/ie/r
					TRYING: r
					RESULT:  ['r']
				ANALYSING: fir
					resolving (2)
					> version: f/i/r
					TRYING: r
					> version: f/i/r
					TRYING: r
					RESULT:  ['r']
				ANALYSING: fires
					resolving (2)
					> version: f/i/r/e/s
					TRYING: r
					> version: f/i/r/e/s
					TRYING: r
					RESULT:  ['r']
				ANALYSING: fu
					resolving (2)
					> version: f/u
					> version: f/u
					RESULT:  ['_']
				adding dashed alternative: ['f', 'u', '_']
				adding dashed alternative: ['f', 'u', '_']
				f/u(CC)
f/u(CV)
f/u/_(CAA)
f/u/_(CAA)
				ANALYSING: fuir
					resolving (3)
					> version: f/u/i/r
					TRYING: i
					adding blocked set: C = C >> r, i, _
					> version: f/u/i/r
					TRYING: i
					adding blocked set: C = C >> r, i, _
					> version: f/ui/r
					TRYING: r
					RESULT:  ['r']
				ANALYSING: fur
					resolving (2)
					> version: f/u/r
					TRYING: r
					> version: f/u/r
					TRYING: r
					RESULT:  ['r']
				ANALYSING: fures
					resolving (2)
					> version: f/u/r/e/s
					TRYING: r
					> version: f/u/r/e/s
					TRYING: r
					RESULT:  ['r']
				ANALYSING: fuyr
					resolving (3)
					> version: f/u/y/r
					TRYING: y
					adding blocked set: C = C >> _, y, r
					> version: f/u/y/r
					TRYING: y
					adding blocked set: C = C >> _, y, r
					> version: f/uy/r
					TRYING: r
					RESULT:  ['r']
				ANALYSING: fyr
					resolving (2)
					> version: f/y/r
					TRYING: r
					> version: f/y/r
					TRYING: r
					RESULT:  ['r']
				ANALYSING: uer
					resolving (3)
					> version: u/e/r
					TRYING: r
					> version: u/e/r
					TRYING: r
					> version: ue/r
					RESULT:  ['r']
				ANALYSING: uur
					resolving (2)
					> version: u/u/r
					TRYING: r
					> version: u/u/r
					TRYING: r
					RESULT:  ['r']
				ANALYSING: ver
					resolving (2)
					> version: v/e/r
					TRYING: r
					> version: v/e/r
					TRYING: r
					RESULT:  ['r']
				ANALYSING: vur
					resolving (2)
					> version: v/u/r
					TRYING: r
					> version: v/u/r
					TRYING: r
					RESULT:  ['r']
			___CVCV : 3___
				ANALYSING: fere
				adding littera based on matching pattern
				ANALYSING: fiere
				adding littera based on matching pattern
				ANALYSING: fire
				adding littera based on matching pattern
				ANALYSING: fuire
				adding littera based on matching pattern
				ANALYSING: fure
				adding littera based on matching pattern
				ANALYSING: fuyre
				adding littera based on matching pattern
				ANALYSING: fyre
				adding littera based on matching pattern
				ANALYSING: uere
				adding littera based on matching pattern
				ANALYSING: ueréé
				adding littera based on matching pattern
				ANALYSING: fair
					resolving (3)
					> version: f/a/i/r
					TRYING: r
					> version: f/a/i/r
					TRYING: r
					> version: f/ai/r
					RESULT:  ['_']
				adding dashed alternative: ['f', 'a', 'i', '_', 'r']
				adding dashed alternative: ['f', 'a', 'i', '_', 'r']
				adding dashed alternative: ['f', 'ai', 'r', '_']
				f/a/i/r(CVCC)
f/a/i/r(CVVC)
f/ai/r(CVC)
f/a/i/_/r(CVAAC)
f/a/i/_/r(CVAAC)
f/ai/r/_(CVCA)
				version split: ['f', 'a', 'i', 'r']
				{'string': 'f/a/i/r', 'rgx': '((f))/((ai)|(a))/((r))/((_))$'}
				_____REMOVING________['f', 'a', 'i', 'r']
				version split: ['f', 'a', 'i', 'r']
				{'string': 'f/a/i/r', 'rgx': '((f))/((ai)|(a))/((r))/((_))$'}
				_____REMOVING________['f', 'a', 'i', 'r']
				version split: ['f', 'ai', 'r']
				{'string': 'f/ai/r', 'rgx': '((f))/((ai)|(a))/((r))/((_))$'}
				_____REMOVING________['f', 'ai', 'r']
				version split: ['f', 'a', 'i', '_', 'r']
				{'string': 'f/a/i/_/r', 'rgx': '((f))/((ai)|(a))/((r))/((_))$'}
				_____REMOVING________['f', 'a', 'i', '_', 'r']
				version split: ['f', 'a', 'i', '_', 'r']
				{'string': 'f/a/i/_/r', 'rgx': '((f))/((ai)|(a))/((r))/((_))$'}
				_____REMOVING________['f', 'a', 'i', '_', 'r']
				version split: ['f', 'ai', 'r', '_']
				{'string': 'f/ai/r/_', 'rgx': '((f))/((ai)|(a))/((r))/((_))$'}
				ANALYSING: far
					resolving (1)
					> version: f/a/r
					RESULT:  ['_']
				adding dashed alternative: ['f', 'a', 'r', '_']
				f/a/r(CVC)
f/a/r/_(CVCA)
				version split: ['f', 'a', 'r']
				{'string': 'f/a/r', 'rgx': '((f))/((a))/((r))/((_))$'}
				_____REMOVING________['f', 'a', 'r']
				version split: ['f', 'a', 'r', '_']
				{'string': 'f/a/r/_', 'rgx': '((f))/((a))/((r))/((_))$'}
				ANALYSING: fer
					resolving (1)
					> version: f/e/r
					RESULT:  ['_']
				adding dashed alternative: ['f', 'e', 'r', '_']
				f/e/r(CVC)
f/e/r/_(CVCA)
				version split: ['f', 'e', 'r']
				{'string': 'f/e/r', 'rgx': '((f))/((e))/((r))/((_))$'}
				_____REMOVING________['f', 'e', 'r']
				version split: ['f', 'e', 'r', '_']
				{'string': 'f/e/r/_', 'rgx': '((f))/((e))/((r))/((_))$'}
				ANALYSING: fier
					resolving (3)
					> version: f/i/e/r
					TRYING: r
					> version: f/i/e/r
					TRYING: r
					> version: f/ie/r
					RESULT:  ['_']
				adding dashed alternative: ['f', 'i', 'e', '_', 'r']
				adding dashed alternative: ['f', 'i', 'e', '_', 'r']
				adding dashed alternative: ['f', 'ie', 'r', '_']
				f/i/e/r(CCVC)
f/i/e/r(CVVC)
f/ie/r(CVC)
f/i/e/_/r(CAVAC)
f/i/e/_/r(CAVAC)
f/ie/r/_(CVCA)
				version split: ['f', 'i', 'e', 'r']
				{'string': 'f/i/e/r', 'rgx': '((f))/((ie)|(i))/((r))/((_))$'}
				_____REMOVING________['f', 'i', 'e', 'r']
				version split: ['f', 'i', 'e', 'r']
				{'string': 'f/i/e/r', 'rgx': '((f))/((ie)|(i))/((r))/((_))$'}
				_____REMOVING________['f', 'i', 'e', 'r']
				version split: ['f', 'ie', 'r']
				{'string': 'f/ie/r', 'rgx': '((f))/((ie)|(i))/((r))/((_))$'}
				_____REMOVING________['f', 'ie', 'r']
				version split: ['f', 'i', 'e', '_', 'r']
				{'string': 'f/i/e/_/r', 'rgx': '((f))/((ie)|(i))/((r))/((_))$'}
				_____REMOVING________['f', 'i', 'e', '_', 'r']
				version split: ['f', 'i', 'e', '_', 'r']
				{'string': 'f/i/e/_/r', 'rgx': '((f))/((ie)|(i))/((r))/((_))$'}
				_____REMOVING________['f', 'i', 'e', '_', 'r']
				version split: ['f', 'ie', 'r', '_']
				{'string': 'f/ie/r/_', 'rgx': '((f))/((ie)|(i))/((r))/((_))$'}
				ANALYSING: fir
					resolving (2)
					> version: f/i/r
					> version: f/i/r
					RESULT:  ['_']
				adding dashed alternative: ['f', 'i', 'r', '_']
				adding dashed alternative: ['f', 'i', 'r', '_']
				f/i/r(CCC)
f/i/r(CVC)
f/i/r/_(CACA)
f/i/r/_(CACA)
				version split: ['f', 'i', 'r']
				{'string': 'f/i/r', 'rgx': '((f))/((i))/((r))/((_))$'}
				_____REMOVING________['f', 'i', 'r']
				version split: ['f', 'i', 'r']
				{'string': 'f/i/r', 'rgx': '((f))/((i))/((r))/((_))$'}
				_____REMOVING________['f', 'i', 'r']
				version split: ['f', 'i', 'r', '_']
				{'string': 'f/i/r/_', 'rgx': '((f))/((i))/((r))/((_))$'}
				version split: ['f', 'i', 'r', '_']
				{'string': 'f/i/r/_', 'rgx': '((f))/((i))/((r))/((_))$'}
				ANALYSING: fires
					resolving (2)
					> version: f/i/r/e/s
					TRYING: e
					> version: f/i/r/e/s
					TRYING: e
					RESULT:  ['e']
				version split: ['f', 'i', 'r', 'e', 's']
				{'string': 'f/i/r/e/s', 'rgx': '((f))/((i))/((r))/((e))$'}
				_____REMOVING________['f', 'i', 'r', 'e', 's']
				version split: ['f', 'i', 'r', 'e', 's']
				{'string': 'f/i/r/e/s', 'rgx': '((f))/((i))/((r))/((e))$'}
				_____REMOVING________['f', 'i', 'r', 'e', 's']
				ANALYSING: fu
					resolving (4)
					> version: f/u
					> version: f/u
					> version: f/u/_
					> version: f/u/_
					RESULT:  ['_']
				adding dashed alternative: ['f', 'u', '_']
				adding dashed alternative: ['f', 'u', '_']
				adding dashed alternative: ['f', 'u', '_', '_']
				adding dashed alternative: ['f', 'u', '_', '_']
				f/u(CC)
f/u(CV)
f/u/_(CAA)
f/u/_(CAA)
f/u/_(CAA)
f/u/_(CAA)
f/u/_/_(CAAA)
f/u/_/_(CAAA)
				version split: ['f', 'u']
				{'string': 'f/u', 'rgx': '((f))/((u))/((_))/((_))$'}
				_____REMOVING________['f', 'u']
				version split: ['f', 'u']
				{'string': 'f/u', 'rgx': '((f))/((u))/((_))/((_))$'}
				_____REMOVING________['f', 'u']
				version split: ['f', 'u', '_']
				{'string': 'f/u/_', 'rgx': '((f))/((u))/((_))/((_))$'}
				_____REMOVING________['f', 'u', '_']
				version split: ['f', 'u', '_']
				{'string': 'f/u/_', 'rgx': '((f))/((u))/((_))/((_))$'}
				_____REMOVING________['f', 'u', '_']
				version split: ['f', 'u', '_']
				{'string': 'f/u/_', 'rgx': '((f))/((u))/((_))/((_))$'}
				_____REMOVING________['f', 'u', '_']
				version split: ['f', 'u', '_']
				{'string': 'f/u/_', 'rgx': '((f))/((u))/((_))/((_))$'}
				_____REMOVING________['f', 'u', '_']
				version split: ['f', 'u', '_', '_']
				{'string': 'f/u/_/_', 'rgx': '((f))/((u))/((_))/((_))$'}
				version split: ['f', 'u', '_', '_']
				{'string': 'f/u/_/_', 'rgx': '((f))/((u))/((_))/((_))$'}
				ANALYSING: fuir
					resolving (3)
					> version: f/u/i/r
					TRYING: r
					> version: f/u/i/r
					TRYING: r
					> version: f/ui/r
					RESULT:  ['_']
				adding dashed alternative: ['f', 'u', 'i', '_', 'r']
				adding dashed alternative: ['f', 'u', 'i', '_', 'r']
				adding dashed alternative: ['f', 'ui', 'r', '_']
				f/u/i/r(CCCC)
f/u/i/r(CVVC)
f/ui/r(CVC)
f/u/i/_/r(CAAAC)
f/u/i/_/r(CAAAC)
f/ui/r/_(CVCA)
				version split: ['f', 'u', 'i', 'r']
				{'string': 'f/u/i/r', 'rgx': '((f))/((ui)|(u))/((r))/((_))$'}
				_____REMOVING________['f', 'u', 'i', 'r']
				version split: ['f', 'u', 'i', 'r']
				{'string': 'f/u/i/r', 'rgx': '((f))/((ui)|(u))/((r))/((_))$'}
				_____REMOVING________['f', 'u', 'i', 'r']
				version split: ['f', 'ui', 'r']
				{'string': 'f/ui/r', 'rgx': '((f))/((ui)|(u))/((r))/((_))$'}
				_____REMOVING________['f', 'ui', 'r']
				version split: ['f', 'u', 'i', '_', 'r']
				{'string': 'f/u/i/_/r', 'rgx': '((f))/((ui)|(u))/((r))/((_))$'}
				_____REMOVING________['f', 'u', 'i', '_', 'r']
				version split: ['f', 'u', 'i', '_', 'r']
				{'string': 'f/u/i/_/r', 'rgx': '((f))/((ui)|(u))/((r))/((_))$'}
				_____REMOVING________['f', 'u', 'i', '_', 'r']
				version split: ['f', 'ui', 'r', '_']
				{'string': 'f/ui/r/_', 'rgx': '((f))/((ui)|(u))/((r))/((_))$'}
				ANALYSING: fur
					resolving (2)
					> version: f/u/r
					> version: f/u/r
					RESULT:  ['_']
				adding dashed alternative: ['f', 'u', 'r', '_']
				adding dashed alternative: ['f', 'u', 'r', '_']
				f/u/r(CCC)
f/u/r(CVC)
f/u/r/_(CACA)
f/u/r/_(CACA)
				version split: ['f', 'u', 'r']
				{'string': 'f/u/r', 'rgx': '((f))/((u))/((r))/((_))$'}
				_____REMOVING________['f', 'u', 'r']
				version split: ['f', 'u', 'r']
				{'string': 'f/u/r', 'rgx': '((f))/((u))/((r))/((_))$'}
				_____REMOVING________['f', 'u', 'r']
				version split: ['f', 'u', 'r', '_']
				{'string': 'f/u/r/_', 'rgx': '((f))/((u))/((r))/((_))$'}
				version split: ['f', 'u', 'r', '_']
				{'string': 'f/u/r/_', 'rgx': '((f))/((u))/((r))/((_))$'}
				ANALYSING: fures
					resolving (2)
					> version: f/u/r/e/s
					TRYING: e
					> version: f/u/r/e/s
					TRYING: e
					RESULT:  ['e']
				version split: ['f', 'u', 'r', 'e', 's']
				{'string': 'f/u/r/e/s', 'rgx': '((f))/((u))/((r))/((e))$'}
				_____REMOVING________['f', 'u', 'r', 'e', 's']
				version split: ['f', 'u', 'r', 'e', 's']
				{'string': 'f/u/r/e/s', 'rgx': '((f))/((u))/((r))/((e))$'}
				_____REMOVING________['f', 'u', 'r', 'e', 's']
				ANALYSING: fuyr
					resolving (3)
					> version: f/u/y/r
					TRYING: r
					> version: f/u/y/r
					TRYING: r
					> version: f/uy/r
					RESULT:  ['_']
				adding dashed alternative: ['f', 'u', 'y', '_', 'r']
				adding dashed alternative: ['f', 'u', 'y', '_', 'r']
				adding dashed alternative: ['f', 'uy', 'r', '_']
				f/u/y/r(CCCC)
f/u/y/r(CVVC)
f/uy/r(CVC)
f/u/y/_/r(CAAAC)
f/u/y/_/r(CAAAC)
f/uy/r/_(CVCA)
				version split: ['f', 'u', 'y', 'r']
				{'string': 'f/u/y/r', 'rgx': '((f))/((uy)|(u))/((r))/((_))$'}
				_____REMOVING________['f', 'u', 'y', 'r']
				version split: ['f', 'u', 'y', 'r']
				{'string': 'f/u/y/r', 'rgx': '((f))/((uy)|(u))/((r))/((_))$'}
				_____REMOVING________['f', 'u', 'y', 'r']
				version split: ['f', 'uy', 'r']
				{'string': 'f/uy/r', 'rgx': '((f))/((uy)|(u))/((r))/((_))$'}
				_____REMOVING________['f', 'uy', 'r']
				version split: ['f', 'u', 'y', '_', 'r']
				{'string': 'f/u/y/_/r', 'rgx': '((f))/((uy)|(u))/((r))/((_))$'}
				_____REMOVING________['f', 'u', 'y', '_', 'r']
				version split: ['f', 'u', 'y', '_', 'r']
				{'string': 'f/u/y/_/r', 'rgx': '((f))/((uy)|(u))/((r))/((_))$'}
				_____REMOVING________['f', 'u', 'y', '_', 'r']
				version split: ['f', 'uy', 'r', '_']
				{'string': 'f/uy/r/_', 'rgx': '((f))/((uy)|(u))/((r))/((_))$'}
				ANALYSING: fyr
					resolving (2)
					> version: f/y/r
					> version: f/y/r
					RESULT:  ['_']
				adding dashed alternative: ['f', 'y', 'r', '_']
				adding dashed alternative: ['f', 'y', 'r', '_']
				f/y/r(CCC)
f/y/r(CVC)
f/y/r/_(CACA)
f/y/r/_(CACA)
				version split: ['f', 'y', 'r']
				{'string': 'f/y/r', 'rgx': '((f))/((y))/((r))/((_))$'}
				_____REMOVING________['f', 'y', 'r']
				version split: ['f', 'y', 'r']
				{'string': 'f/y/r', 'rgx': '((f))/((y))/((r))/((_))$'}
				_____REMOVING________['f', 'y', 'r']
				version split: ['f', 'y', 'r', '_']
				{'string': 'f/y/r/_', 'rgx': '((f))/((y))/((r))/((_))$'}
				version split: ['f', 'y', 'r', '_']
				{'string': 'f/y/r/_', 'rgx': '((f))/((y))/((r))/((_))$'}
				ANALYSING: uer
					resolving (3)
					> version: u/e/r
					> version: u/e/r
					> version: ue/r
					RESULT:  ['_']
				adding dashed alternative: ['u', 'e', 'r', '_']
				adding dashed alternative: ['u', 'e', 'r', '_']
				adding dashed alternative: ['ue', 'r', '_']
				u/e/r(CVC)
u/e/r(VVC)
ue/r(VC)
u/e/r/_(AVCA)
u/e/r/_(AVCA)
ue/r/_(VCA)
				version split: ['u', 'e', 'r']
				{'string': 'u/e/r', 'rgx': '((u))/((e))/((r))/((_))$'}
				_____REMOVING________['u', 'e', 'r']
				version split: ['u', 'e', 'r']
				{'string': 'u/e/r', 'rgx': '((u))/((e))/((r))/((_))$'}
				_____REMOVING________['u', 'e', 'r']
				version split: ['ue', 'r']
				{'string': 'ue/r', 'rgx': '((u))/((e))/((r))/((_))$'}
				_____REMOVING________['ue', 'r']
				version split: ['u', 'e', 'r', '_']
				{'string': 'u/e/r/_', 'rgx': '((u))/((e))/((r))/((_))$'}
				version split: ['u', 'e', 'r', '_']
				{'string': 'u/e/r/_', 'rgx': '((u))/((e))/((r))/((_))$'}
				version split: ['ue', 'r', '_']
				{'string': 'ue/r/_', 'rgx': '((u))/((e))/((r))/((_))$'}
				_____REMOVING________['ue', 'r', '_']
				ANALYSING: uur
					resolving (2)
					> version: u/u/r
					> version: u/u/r
					RESULT:  ['_']
				adding dashed alternative: ['u', 'u', 'r', '_']
				adding dashed alternative: ['u', 'u', 'r', '_']
				u/u/r(CCC)
u/u/r(VVC)
u/u/r/_(AACA)
u/u/r/_(AACA)
				version split: ['u', 'u', 'r']
				{'string': 'u/u/r', 'rgx': '((u))/((u))/((r))/((_))$'}
				_____REMOVING________['u', 'u', 'r']
				version split: ['u', 'u', 'r']
				{'string': 'u/u/r', 'rgx': '((u))/((u))/((r))/((_))$'}
				_____REMOVING________['u', 'u', 'r']
				version split: ['u', 'u', 'r', '_']
				{'string': 'u/u/r/_', 'rgx': '((u))/((u))/((r))/((_))$'}
				version split: ['u', 'u', 'r', '_']
				{'string': 'u/u/r/_', 'rgx': '((u))/((u))/((r))/((_))$'}
				ANALYSING: ver
					resolving (2)
					> version: v/e/r
					> version: v/e/r
					RESULT:  ['_']
				adding dashed alternative: ['v', 'e', 'r', '_']
				adding dashed alternative: ['v', 'e', 'r', '_']
				v/e/r(CVC)
v/e/r(VVC)
v/e/r/_(AVCA)
v/e/r/_(AVCA)
				version split: ['v', 'e', 'r']
				{'string': 'v/e/r', 'rgx': '((v))/((e))/((r))/((_))$'}
				_____REMOVING________['v', 'e', 'r']
				version split: ['v', 'e', 'r']
				{'string': 'v/e/r', 'rgx': '((v))/((e))/((r))/((_))$'}
				_____REMOVING________['v', 'e', 'r']
				version split: ['v', 'e', 'r', '_']
				{'string': 'v/e/r/_', 'rgx': '((v))/((e))/((r))/((_))$'}
				version split: ['v', 'e', 'r', '_']
				{'string': 'v/e/r/_', 'rgx': '((v))/((e))/((r))/((_))$'}
				ANALYSING: vur
					resolving (2)
					> version: v/u/r
					> version: v/u/r
					RESULT:  ['_']
				adding dashed alternative: ['v', 'u', 'r', '_']
				adding dashed alternative: ['v', 'u', 'r', '_']
				v/u/r(CCC)
v/u/r(VVC)
v/u/r/_(AACA)
v/u/r/_(AACA)
				version split: ['v', 'u', 'r']
				{'string': 'v/u/r', 'rgx': '((v))/((u))/((r))/((_))$'}
				_____REMOVING________['v', 'u', 'r']
				version split: ['v', 'u', 'r']
				{'string': 'v/u/r', 'rgx': '((v))/((u))/((r))/((_))$'}
				_____REMOVING________['v', 'u', 'r']
				version split: ['v', 'u', 'r', '_']
				{'string': 'v/u/r/_', 'rgx': '((v))/((u))/((r))/((_))$'}
				version split: ['v', 'u', 'r', '_']
				{'string': 'v/u/r/_', 'rgx': '((v))/((u))/((r))/((_))$'}
		only one version left: ['f', 'ai', 'r', '_']
		only one version left: ['f', 'a', 'r', '_']
		only one version left: ['f', 'e', 'r', '_']
		only one version left: ['f', 'ie', 'r', '_']
		only one version left: ['f', 'i', 'r', '_']
		FAIL: 
		only one version left: ['f', 'u', '_', '_']
		only one version left: ['f', 'ui', 'r', '_']
		only one version left: ['f', 'u', 'r', '_']
		FAIL: 
		only one version left: ['f', 'uy', 'r', '_']
		only one version left: ['f', 'y', 'r', '_']
		only one version left: ['u', 'e', 'r', '_']
		only one version left: ['u', 'u', 'r', '_']
		only one version left: ['v', 'e', 'r', '_']
		only one version left: ['v', 'u', 'r', '_']
		SPLIT: ['f', 'e', 'r', 'e']
		SPLIT: ['f', 'ie', 'r', 'e']
		SPLIT: ['f', 'i', 'r', 'e']
		SPLIT: ['f', 'ui', 'r', 'e']
		SPLIT: ['f', 'u', 'r', 'e']
		SPLIT: ['f', 'uy', 'r', 'e']
		SPLIT: ['f', 'y', 'r', 'e']
		SPLIT: ['u', 'e', 'r', 'e']
		SPLIT: ['u', 'e', 'r', 'éé']
		SPLIT: ['f', 'ai', 'r', '_']
		['f', 'ai', 'r', '_']
		SPLIT: ['f', 'a', 'r', '_']
		['f', 'a', 'r', '_']
		SPLIT: ['f', 'e', 'r', '_']
		['f', 'e', 'r', '_']
		SPLIT: ['f', 'ie', 'r', '_']
		['f', 'ie', 'r', '_']
		SPLIT: ['f', 'i', 'r', '_']
		['f', 'i', 'r', '_']
		['f', 'i', 'r', '_']
		SPLIT: ['f', 'i', 'r', 'e', '----!']
		SPLIT: ['f', 'u', '_', '_']
		['f', 'u', '_', '_']
		['f', 'u', '_', '_']
		SPLIT: ['f', 'ui', 'r', '_']
		['f', 'ui', 'r', '_']
		SPLIT: ['f', 'u', 'r', '_']
		['f', 'u', 'r', '_']
		['f', 'u', 'r', '_']
		SPLIT: ['f', 'u', 'r', 'e', '----!']
		SPLIT: ['f', 'uy', 'r', '_']
		['f', 'uy', 'r', '_']
		SPLIT: ['f', 'y', 'r', '_']
		['f', 'y', 'r', '_']
		['f', 'y', 'r', '_']
		SPLIT: ['u', 'e', 'r', '_']
		['u', 'e', 'r', '_']
		['u', 'e', 'r', '_']
		SPLIT: ['u', 'u', 'r', '_']
		['u', 'u', 'r', '_']
		['u', 'u', 'r', '_']
		SPLIT: ['v', 'e', 'r', '_']
		['v', 'e', 'r', '_']
		['v', 'e', 'r', '_']
		SPLIT: ['v', 'u', 'r', '_']
		['v', 'u', 'r', '_']
		['v', 'u', 'r', '_']
		version for pattern CVCV is INVALID
		[]
		2
		POSSIBLE CHANGE: 0 : Initial Fricative Voicing
		OVERVIEW: version for pattern CVCV

faulty splits: 2
fire----! <-! fires
fure----! <-! fures
f | e | r | e
f | ie | r | e
f | i | r | e
f | ui | r | e
f | u | r | e
f | uy | r | e
f | y | r | e
u | e | r | e
u | e | r | éé
f | ai | r | _
f | a | r | _
f | e | r | _
f | ie | r | _
f | i | r | _
f | i | r | e | ----!
f | u | _ | _
f | ui | r | _
f | u | r | _
f | u | r | e | ----!
f | uy | r | _
f | y | r | _
u | e | r | _
u | u | r | _
v | e | r | _
v | u | r | _
	[[{'lit': 'ai', 'ln': 2, 'index': 1}]]
	[[{'lit': 'ie', 'ln': 2, 'index': 1}]]
	[[{'lit': 'ie', 'ln': 2, 'index': 1}]]
	[[{'lit': 'ui', 'ln': 2, 'index': 1}]]
	[[{'lit': 'ui', 'ln': 2, 'index': 1}]]
	[[{'lit': 'uy', 'ln': 2, 'index': 1}]]
	[[{'lit': 'uy', 'ln': 2, 'index': 1}]]
	[[{'lit': 'ue', 'ln': 2, 'index': 0}]]
	[[{'lit': 'ue', 'ln': 2, 'index': 0}]]
	[[{'lit': 'éé', 'ln': 2, 'index': 3}], [{'lit': 'ue', 'ln': 2, 'index': 0}]]
	[[{'lit': 'éé', 'ln': 2, 'index': 3}], [{'lit': 'ue', 'ln': 2, 'index': 0}], [{'lit': 'éé', 'ln': 2, 'index': 3}, {'lit': 'ue', 'ln': 2, 'index': 0}]]
	MIN pattern length=3
	Pattern CVCV is valid
	Pattern VVCV is invalid
	Pattern CCCVC is valid
	Pattern CVVCV is invalid
	Pattern CVCVV is invalid
	Pattern CC is invalid
	Pattern CCVCV is valid
	Pattern VVCVV is invalid
	Pattern CCCCV is invalid
	Pattern CCC is valid
	Pattern CCCC is invalid
	Pattern VCVV is invalid
	Pattern CV is invalid
	Pattern VC is invalid
	Pattern CVC is valid
	Pattern CVCVC is valid
	Pattern VCV is valid
	Pattern CVVC is invalid
	Pattern VVC is invalid
	Pattern CCCV is valid
	Pattern CVCC is valid
	Pattern CCVC is valid
	Making the selection for pattern: CCCVC
	Selection for pattern: CCCVC completed
	Making a version for pattern: CCCVC
			___CCCVC : 0___
				ANALYSING: fires
				adding littera based on matching pattern
				ANALYSING: fures
				adding littera based on matching pattern
				ANALYSING: fair
					resolving (3)
					> version: f/a/i/r
					TRYING: f
					> version: f/a/i/r
					TRYING: f
					> version: f/ai/r
					TRYING: f
					RESULT:  ['f']
				ANALYSING: far
					resolving (1)
					> version: f/a/r
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fer
					resolving (1)
					> version: f/e/r
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fere
					resolving (1)
					> version: f/e/r/e
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fier
					resolving (3)
					> version: f/i/e/r
					TRYING: f
					> version: f/i/e/r
					TRYING: f
					> version: f/ie/r
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fiere
					resolving (3)
					> version: f/i/e/r/e
					TRYING: f
					> version: f/i/e/r/e
					TRYING: f
					> version: f/ie/r/e
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fir
					resolving (2)
					> version: f/i/r
					TRYING: f
					> version: f/i/r
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fire
					resolving (2)
					> version: f/i/r/e
					TRYING: f
					> version: f/i/r/e
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fu
					resolving (2)
					> version: f/u
					TRYING: f
					> version: f/u
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fuir
					resolving (3)
					> version: f/u/i/r
					TRYING: f
					> version: f/u/i/r
					TRYING: f
					> version: f/ui/r
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fuire
					resolving (3)
					> version: f/u/i/r/e
					TRYING: f
					> version: f/u/i/r/e
					TRYING: f
					> version: f/ui/r/e
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fur
					resolving (2)
					> version: f/u/r
					TRYING: f
					> version: f/u/r
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fure
					resolving (2)
					> version: f/u/r/e
					TRYING: f
					> version: f/u/r/e
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fuyr
					resolving (3)
					> version: f/u/y/r
					TRYING: f
					> version: f/u/y/r
					TRYING: f
					> version: f/uy/r
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fuyre
					resolving (3)
					> version: f/u/y/r/e
					TRYING: f
					> version: f/u/y/r/e
					TRYING: f
					> version: f/uy/r/e
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fyr
					resolving (2)
					> version: f/y/r
					TRYING: f
					> version: f/y/r
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fyre
					resolving (2)
					> version: f/y/r/e
					TRYING: f
					> version: f/y/r/e
					TRYING: f
					RESULT:  ['f']
				ANALYSING: uer
					resolving (3)
					> version: u/e/r
					TRYING: u
					> version: u/e/r
					TRYING: u
					> version: ue/r
					TRYING: ue
					RESULT:  ['u']
				ANALYSING: uere
					resolving (3)
					> version: u/e/r/e
					TRYING: u
					> version: u/e/r/e
					TRYING: u
					> version: ue/r/e
					TRYING: ue
					RESULT:  ['u']
				ANALYSING: ueréé
					resolving (6)
					> version: u/e/r/é/é
					TRYING: u
					> version: u/e/r/é/é
					TRYING: u
					> version: u/e/r/éé
					TRYING: u
					> version: u/e/r/éé
					TRYING: u
					> version: ue/r/é/é
					TRYING: ue
					> version: ue/r/éé
					TRYING: ue
					RESULT:  ['u']
				ANALYSING: uur
					resolving (2)
					> version: u/u/r
					TRYING: u
					> version: u/u/r
					TRYING: u
					RESULT:  ['u']
				ANALYSING: ver
					resolving (2)
					> version: v/e/r
					TRYING: v
					> version: v/e/r
					TRYING: v
					RESULT:  ['v']
				ANALYSING: vur
					resolving (2)
					> version: v/u/r
					TRYING: v
					> version: v/u/r
					TRYING: v
					RESULT:  ['v']
			___CCCVC : 1___
				ANALYSING: fires
				adding littera based on matching pattern
				ANALYSING: fures
				adding littera based on matching pattern
				ANALYSING: fair
					resolving (3)
					> version: f/a/i/r
					TRYING: a
					> version: f/a/i/r
					TRYING: a
					> version: f/ai/r
					TRYING: ai
					>>> MULTIPLE RESOLVE OPTIONS: {'ai', 'a'}
					RESULT:  ['ai', 'a']
				ANALYSING: far
					resolving (1)
					> version: f/a/r
					TRYING: a
					RESULT:  ['a']
				ANALYSING: fer
					resolving (1)
					> version: f/e/r
					TRYING: e
					RESULT:  ['e']
				ANALYSING: fere
					resolving (1)
					> version: f/e/r/e
					TRYING: e
					RESULT:  ['e']
				ANALYSING: fier
					resolving (3)
					> version: f/i/e/r
					TRYING: i
					> version: f/i/e/r
					TRYING: i
					> version: f/ie/r
					TRYING: ie
					>>> MULTIPLE RESOLVE OPTIONS: {'ie', 'i'}
					RESULT:  ['ie', 'i']
				ANALYSING: fiere
					resolving (3)
					> version: f/i/e/r/e
					TRYING: i
					> version: f/i/e/r/e
					TRYING: i
					> version: f/ie/r/e
					TRYING: ie
					>>> MULTIPLE RESOLVE OPTIONS: {'ie', 'i'}
					RESULT:  ['ie', 'i']
				ANALYSING: fir
					resolving (2)
					> version: f/i/r
					TRYING: i
					> version: f/i/r
					TRYING: i
					RESULT:  ['i']
				ANALYSING: fire
					resolving (2)
					> version: f/i/r/e
					TRYING: i
					> version: f/i/r/e
					TRYING: i
					RESULT:  ['i']
				ANALYSING: fu
					resolving (2)
					> version: f/u
					TRYING: u
					> version: f/u
					TRYING: u
					RESULT:  ['u']
				ANALYSING: fuir
					resolving (3)
					> version: f/u/i/r
					TRYING: u
					> version: f/u/i/r
					TRYING: u
					> version: f/ui/r
					TRYING: ui
					>>> MULTIPLE RESOLVE OPTIONS: {'ui', 'u'}
					RESULT:  ['ui', 'u']
				ANALYSING: fuire
					resolving (3)
					> version: f/u/i/r/e
					TRYING: u
					> version: f/u/i/r/e
					TRYING: u
					> version: f/ui/r/e
					TRYING: ui
					>>> MULTIPLE RESOLVE OPTIONS: {'ui', 'u'}
					RESULT:  ['ui', 'u']
				ANALYSING: fur
					resolving (2)
					> version: f/u/r
					TRYING: u
					> version: f/u/r
					TRYING: u
					RESULT:  ['u']
				ANALYSING: fure
					resolving (2)
					> version: f/u/r/e
					TRYING: u
					> version: f/u/r/e
					TRYING: u
					RESULT:  ['u']
				ANALYSING: fuyr
					resolving (3)
					> version: f/u/y/r
					TRYING: u
					> version: f/u/y/r
					TRYING: u
					> version: f/uy/r
					TRYING: uy
					>>> MULTIPLE RESOLVE OPTIONS: {'uy', 'u'}
					RESULT:  ['uy', 'u']
				ANALYSING: fuyre
					resolving (3)
					> version: f/u/y/r/e
					TRYING: u
					> version: f/u/y/r/e
					TRYING: u
					> version: f/uy/r/e
					TRYING: uy
					>>> MULTIPLE RESOLVE OPTIONS: {'uy', 'u'}
					RESULT:  ['uy', 'u']
				ANALYSING: fyr
					resolving (2)
					> version: f/y/r
					TRYING: y
					> version: f/y/r
					TRYING: y
					RESULT:  ['y']
				ANALYSING: fyre
					resolving (2)
					> version: f/y/r/e
					TRYING: y
					> version: f/y/r/e
					TRYING: y
					RESULT:  ['y']
				ANALYSING: uer
					resolving (3)
					> version: u/e/r
					TRYING: e
					> version: u/e/r
					TRYING: e
					> version: ue/r
					TRYING: r
					RESULT:  ['e']
				ANALYSING: uere
					resolving (3)
					> version: u/e/r/e
					TRYING: e
					> version: u/e/r/e
					TRYING: e
					> version: ue/r/e
					TRYING: r
					RESULT:  ['e']
				ANALYSING: ueréé
					resolving (6)
					> version: u/e/r/é/é
					TRYING: e
					> version: u/e/r/é/é
					TRYING: e
					> version: u/e/r/éé
					TRYING: e
					> version: u/e/r/éé
					TRYING: e
					> version: ue/r/é/é
					TRYING: r
					> version: ue/r/éé
					TRYING: r
					RESULT:  ['e']
				ANALYSING: uur
					resolving (2)
					> version: u/u/r
					TRYING: u
					> version: u/u/r
					TRYING: u
					RESULT:  ['u']
				ANALYSING: ver
					resolving (2)
					> version: v/e/r
					TRYING: e
					> version: v/e/r
					TRYING: e
					RESULT:  ['e']
				ANALYSING: vur
					resolving (2)
					> version: v/u/r
					TRYING: u
					> version: v/u/r
					TRYING: u
					RESULT:  ['u']
			___CCCVC : 2___
				ANALYSING: fires
				adding littera based on matching pattern
				ANALYSING: fures
				adding littera based on matching pattern
				ANALYSING: fair
					resolving (3)
					> version: f/a/i/r
					TRYING: i
					adding blocked set: C = C >> i, r
					> version: f/a/i/r
					TRYING: i
					adding blocked set: C = C >> i, r
					> version: f/ai/r
					TRYING: r
					RESULT:  ['r']
				ANALYSING: far
					resolving (1)
					> version: f/a/r
					TRYING: r
					RESULT:  ['r']
				ANALYSING: fer
					resolving (1)
					> version: f/e/r
					TRYING: r
					RESULT:  ['r']
				ANALYSING: fere
					resolving (1)
					> version: f/e/r/e
					TRYING: r
					RESULT:  ['r']
				ANALYSING: fier
					resolving (3)
					> version: f/i/e/r
					TRYING: e
					> version: f/i/e/r
					TRYING: e
					> version: f/ie/r
					TRYING: r
					RESULT:  ['r']
				ANALYSING: fiere
					resolving (3)
					> version: f/i/e/r/e
					TRYING: e
					> version: f/i/e/r/e
					TRYING: e
					> version: f/ie/r/e
					TRYING: r
					RESULT:  ['r']
				ANALYSING: fir
					resolving (2)
					> version: f/i/r
					TRYING: r
					> version: f/i/r
					TRYING: r
					RESULT:  ['r']
				ANALYSING: fire
					resolving (2)
					> version: f/i/r/e
					TRYING: r
					> version: f/i/r/e
					TRYING: r
					RESULT:  ['r']
				ANALYSING: fu
					resolving (2)
					> version: f/u
					> version: f/u
					RESULT:  ['_']
				adding dashed alternative: ['f', 'u', '_']
				adding dashed alternative: ['f', 'u', '_']
				f/u(CC)
f/u(CV)
f/u/_(CAA)
f/u/_(CAA)
				ANALYSING: fuir
					resolving (3)
					> version: f/u/i/r
					TRYING: i
					adding blocked set: C = C >> r, i, _
					> version: f/u/i/r
					TRYING: i
					adding blocked set: C = C >> r, i, _
					> version: f/ui/r
					TRYING: r
					RESULT:  ['r']
				ANALYSING: fuire
					resolving (3)
					> version: f/u/i/r/e
					TRYING: i
					adding blocked set: C = C >> _, i, r
					> version: f/u/i/r/e
					TRYING: i
					adding blocked set: C = C >> _, i, r
					> version: f/ui/r/e
					TRYING: r
					RESULT:  ['r']
				ANALYSING: fur
					resolving (2)
					> version: f/u/r
					TRYING: r
					> version: f/u/r
					TRYING: r
					RESULT:  ['r']
				ANALYSING: fure
					resolving (2)
					> version: f/u/r/e
					TRYING: r
					> version: f/u/r/e
					TRYING: r
					RESULT:  ['r']
				ANALYSING: fuyr
					resolving (3)
					> version: f/u/y/r
					TRYING: y
					adding blocked set: C = C >> r, y, _
					> version: f/u/y/r
					TRYING: y
					adding blocked set: C = C >> r, y, _
					> version: f/uy/r
					TRYING: r
					RESULT:  ['r']
				ANALYSING: fuyre
					resolving (3)
					> version: f/u/y/r/e
					TRYING: y
					adding blocked set: C = C >> _, y, r
					> version: f/u/y/r/e
					TRYING: y
					adding blocked set: C = C >> _, y, r
					> version: f/uy/r/e
					TRYING: r
					RESULT:  ['r']
				ANALYSING: fyr
					resolving (2)
					> version: f/y/r
					TRYING: r
					> version: f/y/r
					TRYING: r
					RESULT:  ['r']
				ANALYSING: fyre
					resolving (2)
					> version: f/y/r/e
					TRYING: r
					> version: f/y/r/e
					TRYING: r
					RESULT:  ['r']
				ANALYSING: uer
					resolving (3)
					> version: u/e/r
					TRYING: r
					> version: u/e/r
					TRYING: r
					> version: ue/r
					RESULT:  ['r']
				ANALYSING: uere
					resolving (3)
					> version: u/e/r/e
					TRYING: r
					> version: u/e/r/e
					TRYING: r
					> version: ue/r/e
					TRYING: e
					RESULT:  ['r']
				ANALYSING: ueréé
					resolving (6)
					> version: u/e/r/é/é
					TRYING: r
					> version: u/e/r/é/é
					TRYING: r
					> version: u/e/r/éé
					TRYING: r
					> version: u/e/r/éé
					TRYING: r
					> version: ue/r/é/é
					TRYING: é
					> version: ue/r/éé
					TRYING: éé
					RESULT:  ['r']
				ANALYSING: uur
					resolving (2)
					> version: u/u/r
					TRYING: r
					> version: u/u/r
					TRYING: r
					RESULT:  ['r']
				ANALYSING: ver
					resolving (2)
					> version: v/e/r
					TRYING: r
					> version: v/e/r
					TRYING: r
					RESULT:  ['r']
				ANALYSING: vur
					resolving (2)
					> version: v/u/r
					TRYING: r
					> version: v/u/r
					TRYING: r
					RESULT:  ['r']
			___CCCVC : 3___
				ANALYSING: fires
				adding littera based on matching pattern
				ANALYSING: fures
				adding littera based on matching pattern
				ANALYSING: fair
					resolving (3)
					> version: f/a/i/r
					TRYING: r
					> version: f/a/i/r
					TRYING: r
					> version: f/ai/r
					RESULT:  ['_']
				adding dashed alternative: ['f', 'a', 'i', '_', 'r']
				adding dashed alternative: ['f', 'a', 'i', '_', 'r']
				adding dashed alternative: ['f', 'ai', 'r', '_']
				f/a/i/r(CVCC)
f/a/i/r(CVVC)
f/ai/r(CVC)
f/a/i/_/r(CVAAC)
f/a/i/_/r(CVAAC)
f/ai/r/_(CVCA)
				ANALYSING: far
					resolving (1)
					> version: f/a/r
					RESULT:  ['_']
				adding dashed alternative: ['f', 'a', 'r', '_']
				f/a/r(CVC)
f/a/r/_(CVCA)
				ANALYSING: fer
					resolving (1)
					> version: f/e/r
					RESULT:  ['_']
				adding dashed alternative: ['f', 'e', 'r', '_']
				f/e/r(CVC)
f/e/r/_(CVCA)
				ANALYSING: fere
					resolving (1)
					> version: f/e/r/e
					TRYING: e
					RESULT:  ['e']
				ANALYSING: fier
					resolving (3)
					> version: f/i/e/r
					TRYING: r
					> version: f/i/e/r
					TRYING: r
					> version: f/ie/r
					RESULT:  ['_']
				adding dashed alternative: ['f', 'i', 'e', '_', 'r']
				adding dashed alternative: ['f', 'i', 'e', '_', 'r']
				adding dashed alternative: ['f', 'ie', 'r', '_']
				f/i/e/r(CCVC)
f/i/e/r(CVVC)
f/ie/r(CVC)
f/i/e/_/r(CAVAC)
f/i/e/_/r(CAVAC)
f/ie/r/_(CVCA)
				ANALYSING: fiere
					resolving (3)
					> version: f/i/e/r/e
					TRYING: r
					> version: f/i/e/r/e
					TRYING: r
					> version: f/ie/r/e
					TRYING: e
					RESULT:  ['e']
				ANALYSING: fir
					resolving (2)
					> version: f/i/r
					> version: f/i/r
					RESULT:  ['_']
				adding dashed alternative: ['f', 'i', 'r', '_']
				adding dashed alternative: ['f', 'i', 'r', '_']
				f/i/r(CCC)
f/i/r(CVC)
f/i/r/_(CACA)
f/i/r/_(CACA)
				ANALYSING: fire
					resolving (2)
					> version: f/i/r/e
					TRYING: e
					> version: f/i/r/e
					TRYING: e
					RESULT:  ['e']
				ANALYSING: fu
					resolving (4)
					> version: f/u
					> version: f/u
					> version: f/u/_
					> version: f/u/_
					RESULT:  ['_']
				adding dashed alternative: ['f', 'u', '_']
				adding dashed alternative: ['f', 'u', '_']
				adding dashed alternative: ['f', 'u', '_', '_']
				adding dashed alternative: ['f', 'u', '_', '_']
				f/u(CC)
f/u(CV)
f/u/_(CAA)
f/u/_(CAA)
f/u/_(CAA)
f/u/_(CAA)
f/u/_/_(CAAA)
f/u/_/_(CAAA)
				ANALYSING: fuir
					resolving (3)
					> version: f/u/i/r
					TRYING: r
					> version: f/u/i/r
					TRYING: r
					> version: f/ui/r
					RESULT:  ['_']
				adding dashed alternative: ['f', 'u', 'i', '_', 'r']
				adding dashed alternative: ['f', 'u', 'i', '_', 'r']
				adding dashed alternative: ['f', 'ui', 'r', '_']
				f/u/i/r(CCCC)
f/u/i/r(CVVC)
f/ui/r(CVC)
f/u/i/_/r(CAAAC)
f/u/i/_/r(CAAAC)
f/ui/r/_(CVCA)
				ANALYSING: fuire
					resolving (3)
					> version: f/u/i/r/e
					TRYING: r
					> version: f/u/i/r/e
					TRYING: r
					> version: f/ui/r/e
					TRYING: e
					RESULT:  ['e']
				ANALYSING: fur
					resolving (2)
					> version: f/u/r
					> version: f/u/r
					RESULT:  ['_']
				adding dashed alternative: ['f', 'u', 'r', '_']
				adding dashed alternative: ['f', 'u', 'r', '_']
				f/u/r(CCC)
f/u/r(CVC)
f/u/r/_(CACA)
f/u/r/_(CACA)
				ANALYSING: fure
					resolving (2)
					> version: f/u/r/e
					TRYING: e
					> version: f/u/r/e
					TRYING: e
					RESULT:  ['e']
				ANALYSING: fuyr
					resolving (3)
					> version: f/u/y/r
					TRYING: r
					> version: f/u/y/r
					TRYING: r
					> version: f/uy/r
					RESULT:  ['_']
				adding dashed alternative: ['f', 'u', 'y', '_', 'r']
				adding dashed alternative: ['f', 'u', 'y', '_', 'r']
				adding dashed alternative: ['f', 'uy', 'r', '_']
				f/u/y/r(CCCC)
f/u/y/r(CVVC)
f/uy/r(CVC)
f/u/y/_/r(CAAAC)
f/u/y/_/r(CAAAC)
f/uy/r/_(CVCA)
				ANALYSING: fuyre
					resolving (3)
					> version: f/u/y/r/e
					TRYING: r
					> version: f/u/y/r/e
					TRYING: r
					> version: f/uy/r/e
					TRYING: e
					RESULT:  ['e']
				ANALYSING: fyr
					resolving (2)
					> version: f/y/r
					> version: f/y/r
					RESULT:  ['_']
				adding dashed alternative: ['f', 'y', 'r', '_']
				adding dashed alternative: ['f', 'y', 'r', '_']
				f/y/r(CCC)
f/y/r(CVC)
f/y/r/_(CACA)
f/y/r/_(CACA)
				ANALYSING: fyre
					resolving (2)
					> version: f/y/r/e
					TRYING: e
					> version: f/y/r/e
					TRYING: e
					RESULT:  ['e']
				ANALYSING: uer
					resolving (3)
					> version: u/e/r
					> version: u/e/r
					> version: ue/r
					RESULT:  ['_']
				adding dashed alternative: ['u', 'e', 'r', '_']
				adding dashed alternative: ['u', 'e', 'r', '_']
				adding dashed alternative: ['ue', 'r', '_']
				u/e/r(CVC)
u/e/r(VVC)
ue/r(VC)
u/e/r/_(AVCA)
u/e/r/_(AVCA)
ue/r/_(VCA)
				ANALYSING: uere
					resolving (3)
					> version: u/e/r/e
					TRYING: e
					> version: u/e/r/e
					TRYING: e
					> version: ue/r/e
					RESULT:  ['e']
				ANALYSING: ueréé
					resolving (6)
					> version: u/e/r/é/é
					TRYING: é
					> version: u/e/r/é/é
					TRYING: é
					> version: u/e/r/éé
					TRYING: éé
					>>> MULTIPLE RESOLVE OPTIONS: {'é', 'éé'}
					> version: u/e/r/éé
					TRYING: éé
					>>> MULTIPLE RESOLVE OPTIONS: {'é', 'éé'}
					> version: ue/r/é/é
					TRYING: é
					>>> MULTIPLE RESOLVE OPTIONS: {'é', 'éé'}
					> version: ue/r/éé
					>>> MULTIPLE RESOLVE OPTIONS: {'é', 'éé'}
					RESULT:  ['é', 'éé']
				ANALYSING: uur
					resolving (2)
					> version: u/u/r
					> version: u/u/r
					RESULT:  ['_']
				adding dashed alternative: ['u', 'u', 'r', '_']
				adding dashed alternative: ['u', 'u', 'r', '_']
				u/u/r(CCC)
u/u/r(VVC)
u/u/r/_(AACA)
u/u/r/_(AACA)
				ANALYSING: ver
					resolving (2)
					> version: v/e/r
					> version: v/e/r
					RESULT:  ['_']
				adding dashed alternative: ['v', 'e', 'r', '_']
				adding dashed alternative: ['v', 'e', 'r', '_']
				v/e/r(CVC)
v/e/r(VVC)
v/e/r/_(AVCA)
v/e/r/_(AVCA)
				ANALYSING: vur
					resolving (2)
					> version: v/u/r
					> version: v/u/r
					RESULT:  ['_']
				adding dashed alternative: ['v', 'u', 'r', '_']
				adding dashed alternative: ['v', 'u', 'r', '_']
				v/u/r(CCC)
v/u/r(VVC)
v/u/r/_(AACA)
v/u/r/_(AACA)
			___CCCVC : 4___
				ANALYSING: fires
				adding littera based on matching pattern
				ANALYSING: fures
				adding littera based on matching pattern
				ANALYSING: fair
					resolving (6)
					> version: f/a/i/r
					> version: f/a/i/r
					> version: f/ai/r
					> version: f/a/i/_/r
					TRYING: r
					adding blocked set: C = C >> s, r
					> version: f/a/i/_/r
					TRYING: r
					adding blocked set: C = C >> s, r
					> version: f/ai/r/_
					RESULT:  ['_']
				adding dashed alternative: ['f', 'a', 'i', 'r', '_']
				adding dashed alternative: ['f', 'a', 'i', 'r', '_']
				adding dashed alternative: ['f', 'ai', 'r', '_']
				adding dashed alternative: ['f', 'a', 'i', '_', '_', 'r']
				adding dashed alternative: ['f', 'a', 'i', '_', '_', 'r']
				adding dashed alternative: ['f', 'ai', 'r', '_', '_']
				f/a/i/r(CVCC)
f/a/i/r(CVVC)
f/ai/r(CVC)
f/a/i/_/r(CVAAC)
f/a/i/_/r(CVAAC)
f/ai/r/_(CVCA)
f/a/i/r/_(CVACA)
f/a/i/r/_(CVACA)
f/ai/r/_(CVCA)
f/a/i/_/_/r(CVAAAC)
f/a/i/_/_/r(CVAAAC)
f/ai/r/_/_(CVCAA)
				version split: ['f', 'a', 'i', 'r']
				{'string': 'f/a/i/r', 'rgx': '((f))/((ai)|(a))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'a', 'i', 'r']
				version split: ['f', 'a', 'i', 'r']
				{'string': 'f/a/i/r', 'rgx': '((f))/((ai)|(a))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'a', 'i', 'r']
				version split: ['f', 'ai', 'r']
				{'string': 'f/ai/r', 'rgx': '((f))/((ai)|(a))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'ai', 'r']
				version split: ['f', 'a', 'i', '_', 'r']
				{'string': 'f/a/i/_/r', 'rgx': '((f))/((ai)|(a))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'a', 'i', '_', 'r']
				version split: ['f', 'a', 'i', '_', 'r']
				{'string': 'f/a/i/_/r', 'rgx': '((f))/((ai)|(a))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'a', 'i', '_', 'r']
				version split: ['f', 'ai', 'r', '_']
				{'string': 'f/ai/r/_', 'rgx': '((f))/((ai)|(a))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'ai', 'r', '_']
				version split: ['f', 'a', 'i', 'r', '_']
				{'string': 'f/a/i/r/_', 'rgx': '((f))/((ai)|(a))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'a', 'i', 'r', '_']
				version split: ['f', 'a', 'i', 'r', '_']
				{'string': 'f/a/i/r/_', 'rgx': '((f))/((ai)|(a))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'a', 'i', 'r', '_']
				version split: ['f', 'ai', 'r', '_']
				{'string': 'f/ai/r/_', 'rgx': '((f))/((ai)|(a))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'ai', 'r', '_']
				version split: ['f', 'a', 'i', '_', '_', 'r']
				{'string': 'f/a/i/_/_/r', 'rgx': '((f))/((ai)|(a))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'a', 'i', '_', '_', 'r']
				version split: ['f', 'a', 'i', '_', '_', 'r']
				{'string': 'f/a/i/_/_/r', 'rgx': '((f))/((ai)|(a))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'a', 'i', '_', '_', 'r']
				version split: ['f', 'ai', 'r', '_', '_']
				{'string': 'f/ai/r/_/_', 'rgx': '((f))/((ai)|(a))/((r))/((_))/((_))$'}
				ANALYSING: far
					resolving (2)
					> version: f/a/r
					> version: f/a/r/_
					RESULT:  ['_']
				adding dashed alternative: ['f', 'a', 'r', '_']
				adding dashed alternative: ['f', 'a', 'r', '_', '_']
				f/a/r(CVC)
f/a/r/_(CVCA)
f/a/r/_(CVCA)
f/a/r/_/_(CVCAA)
				version split: ['f', 'a', 'r']
				{'string': 'f/a/r', 'rgx': '((f))/((a))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'a', 'r']
				version split: ['f', 'a', 'r', '_']
				{'string': 'f/a/r/_', 'rgx': '((f))/((a))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'a', 'r', '_']
				version split: ['f', 'a', 'r', '_']
				{'string': 'f/a/r/_', 'rgx': '((f))/((a))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'a', 'r', '_']
				version split: ['f', 'a', 'r', '_', '_']
				{'string': 'f/a/r/_/_', 'rgx': '((f))/((a))/((r))/((_))/((_))$'}
				ANALYSING: fer
					resolving (2)
					> version: f/e/r
					> version: f/e/r/_
					RESULT:  ['_']
				adding dashed alternative: ['f', 'e', 'r', '_']
				adding dashed alternative: ['f', 'e', 'r', '_', '_']
				f/e/r(CVC)
f/e/r/_(CVCA)
f/e/r/_(CVCA)
f/e/r/_/_(CVCAA)
				version split: ['f', 'e', 'r']
				{'string': 'f/e/r', 'rgx': '((f))/((e))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'e', 'r']
				version split: ['f', 'e', 'r', '_']
				{'string': 'f/e/r/_', 'rgx': '((f))/((e))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'e', 'r', '_']
				version split: ['f', 'e', 'r', '_']
				{'string': 'f/e/r/_', 'rgx': '((f))/((e))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'e', 'r', '_']
				version split: ['f', 'e', 'r', '_', '_']
				{'string': 'f/e/r/_/_', 'rgx': '((f))/((e))/((r))/((_))/((_))$'}
				ANALYSING: fere
					resolving (1)
					> version: f/e/r/e
					RESULT:  ['_']
				adding dashed alternative: ['f', 'e', 'r', 'e', '_']
				f/e/r/e(CVCV)
f/e/r/e/_(CVCVA)
				version split: ['f', 'e', 'r', 'e']
				{'string': 'f/e/r/e', 'rgx': '((f))/((e))/((r))/((e))/((_))$'}
				_____REMOVING________['f', 'e', 'r', 'e']
				version split: ['f', 'e', 'r', 'e', '_']
				{'string': 'f/e/r/e/_', 'rgx': '((f))/((e))/((r))/((e))/((_))$'}
				ANALYSING: fier
					resolving (6)
					> version: f/i/e/r
					> version: f/i/e/r
					> version: f/ie/r
					> version: f/i/e/_/r
					TRYING: r
					adding blocked set: C = C >> r, s, _
					> version: f/i/e/_/r
					TRYING: r
					adding blocked set: C = C >> r, s, _
					> version: f/ie/r/_
					RESULT:  ['_']
				adding dashed alternative: ['f', 'i', 'e', 'r', '_']
				adding dashed alternative: ['f', 'i', 'e', 'r', '_']
				adding dashed alternative: ['f', 'ie', 'r', '_']
				adding dashed alternative: ['f', 'i', 'e', '_', '_', 'r']
				adding dashed alternative: ['f', 'i', 'e', '_', '_', 'r']
				adding dashed alternative: ['f', 'ie', 'r', '_', '_']
				f/i/e/r(CCVC)
f/i/e/r(CVVC)
f/ie/r(CVC)
f/i/e/_/r(CAVAC)
f/i/e/_/r(CAVAC)
f/ie/r/_(CVCA)
f/i/e/r/_(CAVCA)
f/i/e/r/_(CAVCA)
f/ie/r/_(CVCA)
f/i/e/_/_/r(CAVAAC)
f/i/e/_/_/r(CAVAAC)
f/ie/r/_/_(CVCAA)
				version split: ['f', 'i', 'e', 'r']
				{'string': 'f/i/e/r', 'rgx': '((f))/((ie)|(i))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'i', 'e', 'r']
				version split: ['f', 'i', 'e', 'r']
				{'string': 'f/i/e/r', 'rgx': '((f))/((ie)|(i))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'i', 'e', 'r']
				version split: ['f', 'ie', 'r']
				{'string': 'f/ie/r', 'rgx': '((f))/((ie)|(i))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'ie', 'r']
				version split: ['f', 'i', 'e', '_', 'r']
				{'string': 'f/i/e/_/r', 'rgx': '((f))/((ie)|(i))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'i', 'e', '_', 'r']
				version split: ['f', 'i', 'e', '_', 'r']
				{'string': 'f/i/e/_/r', 'rgx': '((f))/((ie)|(i))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'i', 'e', '_', 'r']
				version split: ['f', 'ie', 'r', '_']
				{'string': 'f/ie/r/_', 'rgx': '((f))/((ie)|(i))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'ie', 'r', '_']
				version split: ['f', 'i', 'e', 'r', '_']
				{'string': 'f/i/e/r/_', 'rgx': '((f))/((ie)|(i))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'i', 'e', 'r', '_']
				version split: ['f', 'i', 'e', 'r', '_']
				{'string': 'f/i/e/r/_', 'rgx': '((f))/((ie)|(i))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'i', 'e', 'r', '_']
				version split: ['f', 'ie', 'r', '_']
				{'string': 'f/ie/r/_', 'rgx': '((f))/((ie)|(i))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'ie', 'r', '_']
				version split: ['f', 'i', 'e', '_', '_', 'r']
				{'string': 'f/i/e/_/_/r', 'rgx': '((f))/((ie)|(i))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'i', 'e', '_', '_', 'r']
				version split: ['f', 'i', 'e', '_', '_', 'r']
				{'string': 'f/i/e/_/_/r', 'rgx': '((f))/((ie)|(i))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'i', 'e', '_', '_', 'r']
				version split: ['f', 'ie', 'r', '_', '_']
				{'string': 'f/ie/r/_/_', 'rgx': '((f))/((ie)|(i))/((r))/((_))/((_))$'}
				ANALYSING: fiere
					resolving (3)
					> version: f/i/e/r/e
					TRYING: e
					> version: f/i/e/r/e
					TRYING: e
					> version: f/ie/r/e
					RESULT:  ['_']
				adding dashed alternative: ['f', 'i', 'e', 'r', '_', 'e']
				adding dashed alternative: ['f', 'i', 'e', 'r', '_', 'e']
				adding dashed alternative: ['f', 'ie', 'r', 'e', '_']
				f/i/e/r/e(CCVCV)
f/i/e/r/e(CVVCV)
f/ie/r/e(CVCV)
f/i/e/r/_/e(CAVCAV)
f/i/e/r/_/e(CAVCAV)
f/ie/r/e/_(CVCVA)
				version split: ['f', 'i', 'e', 'r', 'e']
				{'string': 'f/i/e/r/e', 'rgx': '((f))/((ie)|(i))/((r))/((e))/((_))$'}
				_____REMOVING________['f', 'i', 'e', 'r', 'e']
				version split: ['f', 'i', 'e', 'r', 'e']
				{'string': 'f/i/e/r/e', 'rgx': '((f))/((ie)|(i))/((r))/((e))/((_))$'}
				_____REMOVING________['f', 'i', 'e', 'r', 'e']
				version split: ['f', 'ie', 'r', 'e']
				{'string': 'f/ie/r/e', 'rgx': '((f))/((ie)|(i))/((r))/((e))/((_))$'}
				_____REMOVING________['f', 'ie', 'r', 'e']
				version split: ['f', 'i', 'e', 'r', '_', 'e']
				{'string': 'f/i/e/r/_/e', 'rgx': '((f))/((ie)|(i))/((r))/((e))/((_))$'}
				_____REMOVING________['f', 'i', 'e', 'r', '_', 'e']
				version split: ['f', 'i', 'e', 'r', '_', 'e']
				{'string': 'f/i/e/r/_/e', 'rgx': '((f))/((ie)|(i))/((r))/((e))/((_))$'}
				_____REMOVING________['f', 'i', 'e', 'r', '_', 'e']
				version split: ['f', 'ie', 'r', 'e', '_']
				{'string': 'f/ie/r/e/_', 'rgx': '((f))/((ie)|(i))/((r))/((e))/((_))$'}
				ANALYSING: fir
					resolving (4)
					> version: f/i/r
					> version: f/i/r
					> version: f/i/r/_
					> version: f/i/r/_
					RESULT:  ['_']
				adding dashed alternative: ['f', 'i', 'r', '_']
				adding dashed alternative: ['f', 'i', 'r', '_']
				adding dashed alternative: ['f', 'i', 'r', '_', '_']
				adding dashed alternative: ['f', 'i', 'r', '_', '_']
				f/i/r(CCC)
f/i/r(CVC)
f/i/r/_(CACA)
f/i/r/_(CACA)
f/i/r/_(CACA)
f/i/r/_(CACA)
f/i/r/_/_(CACAA)
f/i/r/_/_(CACAA)
				version split: ['f', 'i', 'r']
				{'string': 'f/i/r', 'rgx': '((f))/((i))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'i', 'r']
				version split: ['f', 'i', 'r']
				{'string': 'f/i/r', 'rgx': '((f))/((i))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'i', 'r']
				version split: ['f', 'i', 'r', '_']
				{'string': 'f/i/r/_', 'rgx': '((f))/((i))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'i', 'r', '_']
				version split: ['f', 'i', 'r', '_']
				{'string': 'f/i/r/_', 'rgx': '((f))/((i))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'i', 'r', '_']
				version split: ['f', 'i', 'r', '_']
				{'string': 'f/i/r/_', 'rgx': '((f))/((i))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'i', 'r', '_']
				version split: ['f', 'i', 'r', '_']
				{'string': 'f/i/r/_', 'rgx': '((f))/((i))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'i', 'r', '_']
				version split: ['f', 'i', 'r', '_', '_']
				{'string': 'f/i/r/_/_', 'rgx': '((f))/((i))/((r))/((_))/((_))$'}
				version split: ['f', 'i', 'r', '_', '_']
				{'string': 'f/i/r/_/_', 'rgx': '((f))/((i))/((r))/((_))/((_))$'}
				ANALYSING: fire
					resolving (2)
					> version: f/i/r/e
					> version: f/i/r/e
					RESULT:  ['_']
				adding dashed alternative: ['f', 'i', 'r', 'e', '_']
				adding dashed alternative: ['f', 'i', 'r', 'e', '_']
				f/i/r/e(CCCV)
f/i/r/e(CVCV)
f/i/r/e/_(CACVA)
f/i/r/e/_(CACVA)
				version split: ['f', 'i', 'r', 'e']
				{'string': 'f/i/r/e', 'rgx': '((f))/((i))/((r))/((e))/((_))$'}
				_____REMOVING________['f', 'i', 'r', 'e']
				version split: ['f', 'i', 'r', 'e']
				{'string': 'f/i/r/e', 'rgx': '((f))/((i))/((r))/((e))/((_))$'}
				_____REMOVING________['f', 'i', 'r', 'e']
				version split: ['f', 'i', 'r', 'e', '_']
				{'string': 'f/i/r/e/_', 'rgx': '((f))/((i))/((r))/((e))/((_))$'}
				version split: ['f', 'i', 'r', 'e', '_']
				{'string': 'f/i/r/e/_', 'rgx': '((f))/((i))/((r))/((e))/((_))$'}
				ANALYSING: fu
					resolving (8)
					> version: f/u
					> version: f/u
					> version: f/u/_
					> version: f/u/_
					> version: f/u/_
					> version: f/u/_
					> version: f/u/_/_
					> version: f/u/_/_
					RESULT:  ['_']
				adding dashed alternative: ['f', 'u', '_']
				adding dashed alternative: ['f', 'u', '_']
				adding dashed alternative: ['f', 'u', '_', '_']
				adding dashed alternative: ['f', 'u', '_', '_']
				adding dashed alternative: ['f', 'u', '_', '_']
				adding dashed alternative: ['f', 'u', '_', '_']
				adding dashed alternative: ['f', 'u', '_', '_', '_']
				adding dashed alternative: ['f', 'u', '_', '_', '_']
				f/u(CC)
f/u(CV)
f/u/_(CAA)
f/u/_(CAA)
f/u/_(CAA)
f/u/_(CAA)
f/u/_/_(CAAA)
f/u/_/_(CAAA)
f/u/_(CAA)
f/u/_(CAA)
f/u/_/_(CAAA)
f/u/_/_(CAAA)
f/u/_/_(CAAA)
f/u/_/_(CAAA)
f/u/_/_/_(CAAAA)
f/u/_/_/_(CAAAA)
				version split: ['f', 'u']
				{'string': 'f/u', 'rgx': '((f))/((u))/((_))/((_))/((_))$'}
				_____REMOVING________['f', 'u']
				version split: ['f', 'u']
				{'string': 'f/u', 'rgx': '((f))/((u))/((_))/((_))/((_))$'}
				_____REMOVING________['f', 'u']
				version split: ['f', 'u', '_']
				{'string': 'f/u/_', 'rgx': '((f))/((u))/((_))/((_))/((_))$'}
				_____REMOVING________['f', 'u', '_']
				version split: ['f', 'u', '_']
				{'string': 'f/u/_', 'rgx': '((f))/((u))/((_))/((_))/((_))$'}
				_____REMOVING________['f', 'u', '_']
				version split: ['f', 'u', '_']
				{'string': 'f/u/_', 'rgx': '((f))/((u))/((_))/((_))/((_))$'}
				_____REMOVING________['f', 'u', '_']
				version split: ['f', 'u', '_']
				{'string': 'f/u/_', 'rgx': '((f))/((u))/((_))/((_))/((_))$'}
				_____REMOVING________['f', 'u', '_']
				version split: ['f', 'u', '_', '_']
				{'string': 'f/u/_/_', 'rgx': '((f))/((u))/((_))/((_))/((_))$'}
				_____REMOVING________['f', 'u', '_', '_']
				version split: ['f', 'u', '_', '_']
				{'string': 'f/u/_/_', 'rgx': '((f))/((u))/((_))/((_))/((_))$'}
				_____REMOVING________['f', 'u', '_', '_']
				version split: ['f', 'u', '_']
				{'string': 'f/u/_', 'rgx': '((f))/((u))/((_))/((_))/((_))$'}
				_____REMOVING________['f', 'u', '_']
				version split: ['f', 'u', '_']
				{'string': 'f/u/_', 'rgx': '((f))/((u))/((_))/((_))/((_))$'}
				_____REMOVING________['f', 'u', '_']
				version split: ['f', 'u', '_', '_']
				{'string': 'f/u/_/_', 'rgx': '((f))/((u))/((_))/((_))/((_))$'}
				_____REMOVING________['f', 'u', '_', '_']
				version split: ['f', 'u', '_', '_']
				{'string': 'f/u/_/_', 'rgx': '((f))/((u))/((_))/((_))/((_))$'}
				_____REMOVING________['f', 'u', '_', '_']
				version split: ['f', 'u', '_', '_']
				{'string': 'f/u/_/_', 'rgx': '((f))/((u))/((_))/((_))/((_))$'}
				_____REMOVING________['f', 'u', '_', '_']
				version split: ['f', 'u', '_', '_']
				{'string': 'f/u/_/_', 'rgx': '((f))/((u))/((_))/((_))/((_))$'}
				_____REMOVING________['f', 'u', '_', '_']
				version split: ['f', 'u', '_', '_', '_']
				{'string': 'f/u/_/_/_', 'rgx': '((f))/((u))/((_))/((_))/((_))$'}
				version split: ['f', 'u', '_', '_', '_']
				{'string': 'f/u/_/_/_', 'rgx': '((f))/((u))/((_))/((_))/((_))$'}
				ANALYSING: fuir
					resolving (6)
					> version: f/u/i/r
					> version: f/u/i/r
					> version: f/ui/r
					> version: f/u/i/_/r
					TRYING: r
					adding blocked set: C = C >> r, s, _
					> version: f/u/i/_/r
					TRYING: r
					adding blocked set: C = C >> r, s, _
					> version: f/ui/r/_
					RESULT:  ['_']
				adding dashed alternative: ['f', 'u', 'i', 'r', '_']
				adding dashed alternative: ['f', 'u', 'i', 'r', '_']
				adding dashed alternative: ['f', 'ui', 'r', '_']
				adding dashed alternative: ['f', 'u', 'i', '_', '_', 'r']
				adding dashed alternative: ['f', 'u', 'i', '_', '_', 'r']
				adding dashed alternative: ['f', 'ui', 'r', '_', '_']
				f/u/i/r(CCCC)
f/u/i/r(CVVC)
f/ui/r(CVC)
f/u/i/_/r(CAAAC)
f/u/i/_/r(CAAAC)
f/ui/r/_(CVCA)
f/u/i/r/_(CAACA)
f/u/i/r/_(CAACA)
f/ui/r/_(CVCA)
f/u/i/_/_/r(CAAAAC)
f/u/i/_/_/r(CAAAAC)
f/ui/r/_/_(CVCAA)
				version split: ['f', 'u', 'i', 'r']
				{'string': 'f/u/i/r', 'rgx': '((f))/((ui)|(u))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'u', 'i', 'r']
				version split: ['f', 'u', 'i', 'r']
				{'string': 'f/u/i/r', 'rgx': '((f))/((ui)|(u))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'u', 'i', 'r']
				version split: ['f', 'ui', 'r']
				{'string': 'f/ui/r', 'rgx': '((f))/((ui)|(u))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'ui', 'r']
				version split: ['f', 'u', 'i', '_', 'r']
				{'string': 'f/u/i/_/r', 'rgx': '((f))/((ui)|(u))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'u', 'i', '_', 'r']
				version split: ['f', 'u', 'i', '_', 'r']
				{'string': 'f/u/i/_/r', 'rgx': '((f))/((ui)|(u))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'u', 'i', '_', 'r']
				version split: ['f', 'ui', 'r', '_']
				{'string': 'f/ui/r/_', 'rgx': '((f))/((ui)|(u))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'ui', 'r', '_']
				version split: ['f', 'u', 'i', 'r', '_']
				{'string': 'f/u/i/r/_', 'rgx': '((f))/((ui)|(u))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'u', 'i', 'r', '_']
				version split: ['f', 'u', 'i', 'r', '_']
				{'string': 'f/u/i/r/_', 'rgx': '((f))/((ui)|(u))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'u', 'i', 'r', '_']
				version split: ['f', 'ui', 'r', '_']
				{'string': 'f/ui/r/_', 'rgx': '((f))/((ui)|(u))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'ui', 'r', '_']
				version split: ['f', 'u', 'i', '_', '_', 'r']
				{'string': 'f/u/i/_/_/r', 'rgx': '((f))/((ui)|(u))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'u', 'i', '_', '_', 'r']
				version split: ['f', 'u', 'i', '_', '_', 'r']
				{'string': 'f/u/i/_/_/r', 'rgx': '((f))/((ui)|(u))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'u', 'i', '_', '_', 'r']
				version split: ['f', 'ui', 'r', '_', '_']
				{'string': 'f/ui/r/_/_', 'rgx': '((f))/((ui)|(u))/((r))/((_))/((_))$'}
				ANALYSING: fuire
					resolving (3)
					> version: f/u/i/r/e
					TRYING: e
					> version: f/u/i/r/e
					TRYING: e
					> version: f/ui/r/e
					RESULT:  ['_']
				adding dashed alternative: ['f', 'u', 'i', 'r', '_', 'e']
				adding dashed alternative: ['f', 'u', 'i', 'r', '_', 'e']
				adding dashed alternative: ['f', 'ui', 'r', 'e', '_']
				f/u/i/r/e(CCCCV)
f/u/i/r/e(CVVCV)
f/ui/r/e(CVCV)
f/u/i/r/_/e(CAACAV)
f/u/i/r/_/e(CAACAV)
f/ui/r/e/_(CVCVA)
				version split: ['f', 'u', 'i', 'r', 'e']
				{'string': 'f/u/i/r/e', 'rgx': '((f))/((ui)|(u))/((r))/((e))/((_))$'}
				_____REMOVING________['f', 'u', 'i', 'r', 'e']
				version split: ['f', 'u', 'i', 'r', 'e']
				{'string': 'f/u/i/r/e', 'rgx': '((f))/((ui)|(u))/((r))/((e))/((_))$'}
				_____REMOVING________['f', 'u', 'i', 'r', 'e']
				version split: ['f', 'ui', 'r', 'e']
				{'string': 'f/ui/r/e', 'rgx': '((f))/((ui)|(u))/((r))/((e))/((_))$'}
				_____REMOVING________['f', 'ui', 'r', 'e']
				version split: ['f', 'u', 'i', 'r', '_', 'e']
				{'string': 'f/u/i/r/_/e', 'rgx': '((f))/((ui)|(u))/((r))/((e))/((_))$'}
				_____REMOVING________['f', 'u', 'i', 'r', '_', 'e']
				version split: ['f', 'u', 'i', 'r', '_', 'e']
				{'string': 'f/u/i/r/_/e', 'rgx': '((f))/((ui)|(u))/((r))/((e))/((_))$'}
				_____REMOVING________['f', 'u', 'i', 'r', '_', 'e']
				version split: ['f', 'ui', 'r', 'e', '_']
				{'string': 'f/ui/r/e/_', 'rgx': '((f))/((ui)|(u))/((r))/((e))/((_))$'}
				ANALYSING: fur
					resolving (4)
					> version: f/u/r
					> version: f/u/r
					> version: f/u/r/_
					> version: f/u/r/_
					RESULT:  ['_']
				adding dashed alternative: ['f', 'u', 'r', '_']
				adding dashed alternative: ['f', 'u', 'r', '_']
				adding dashed alternative: ['f', 'u', 'r', '_', '_']
				adding dashed alternative: ['f', 'u', 'r', '_', '_']
				f/u/r(CCC)
f/u/r(CVC)
f/u/r/_(CACA)
f/u/r/_(CACA)
f/u/r/_(CACA)
f/u/r/_(CACA)
f/u/r/_/_(CACAA)
f/u/r/_/_(CACAA)
				version split: ['f', 'u', 'r']
				{'string': 'f/u/r', 'rgx': '((f))/((u))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'u', 'r']
				version split: ['f', 'u', 'r']
				{'string': 'f/u/r', 'rgx': '((f))/((u))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'u', 'r']
				version split: ['f', 'u', 'r', '_']
				{'string': 'f/u/r/_', 'rgx': '((f))/((u))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'u', 'r', '_']
				version split: ['f', 'u', 'r', '_']
				{'string': 'f/u/r/_', 'rgx': '((f))/((u))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'u', 'r', '_']
				version split: ['f', 'u', 'r', '_']
				{'string': 'f/u/r/_', 'rgx': '((f))/((u))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'u', 'r', '_']
				version split: ['f', 'u', 'r', '_']
				{'string': 'f/u/r/_', 'rgx': '((f))/((u))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'u', 'r', '_']
				version split: ['f', 'u', 'r', '_', '_']
				{'string': 'f/u/r/_/_', 'rgx': '((f))/((u))/((r))/((_))/((_))$'}
				version split: ['f', 'u', 'r', '_', '_']
				{'string': 'f/u/r/_/_', 'rgx': '((f))/((u))/((r))/((_))/((_))$'}
				ANALYSING: fure
					resolving (2)
					> version: f/u/r/e
					> version: f/u/r/e
					RESULT:  ['_']
				adding dashed alternative: ['f', 'u', 'r', 'e', '_']
				adding dashed alternative: ['f', 'u', 'r', 'e', '_']
				f/u/r/e(CCCV)
f/u/r/e(CVCV)
f/u/r/e/_(CACVA)
f/u/r/e/_(CACVA)
				version split: ['f', 'u', 'r', 'e']
				{'string': 'f/u/r/e', 'rgx': '((f))/((u))/((r))/((e))/((_))$'}
				_____REMOVING________['f', 'u', 'r', 'e']
				version split: ['f', 'u', 'r', 'e']
				{'string': 'f/u/r/e', 'rgx': '((f))/((u))/((r))/((e))/((_))$'}
				_____REMOVING________['f', 'u', 'r', 'e']
				version split: ['f', 'u', 'r', 'e', '_']
				{'string': 'f/u/r/e/_', 'rgx': '((f))/((u))/((r))/((e))/((_))$'}
				version split: ['f', 'u', 'r', 'e', '_']
				{'string': 'f/u/r/e/_', 'rgx': '((f))/((u))/((r))/((e))/((_))$'}
				ANALYSING: fuyr
					resolving (6)
					> version: f/u/y/r
					> version: f/u/y/r
					> version: f/uy/r
					> version: f/u/y/_/r
					TRYING: r
					adding blocked set: C = C >> r, s, _
					> version: f/u/y/_/r
					TRYING: r
					adding blocked set: C = C >> r, s, _
					> version: f/uy/r/_
					RESULT:  ['_']
				adding dashed alternative: ['f', 'u', 'y', 'r', '_']
				adding dashed alternative: ['f', 'u', 'y', 'r', '_']
				adding dashed alternative: ['f', 'uy', 'r', '_']
				adding dashed alternative: ['f', 'u', 'y', '_', '_', 'r']
				adding dashed alternative: ['f', 'u', 'y', '_', '_', 'r']
				adding dashed alternative: ['f', 'uy', 'r', '_', '_']
				f/u/y/r(CCCC)
f/u/y/r(CVVC)
f/uy/r(CVC)
f/u/y/_/r(CAAAC)
f/u/y/_/r(CAAAC)
f/uy/r/_(CVCA)
f/u/y/r/_(CAACA)
f/u/y/r/_(CAACA)
f/uy/r/_(CVCA)
f/u/y/_/_/r(CAAAAC)
f/u/y/_/_/r(CAAAAC)
f/uy/r/_/_(CVCAA)
				version split: ['f', 'u', 'y', 'r']
				{'string': 'f/u/y/r', 'rgx': '((f))/((uy)|(u))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'u', 'y', 'r']
				version split: ['f', 'u', 'y', 'r']
				{'string': 'f/u/y/r', 'rgx': '((f))/((uy)|(u))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'u', 'y', 'r']
				version split: ['f', 'uy', 'r']
				{'string': 'f/uy/r', 'rgx': '((f))/((uy)|(u))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'uy', 'r']
				version split: ['f', 'u', 'y', '_', 'r']
				{'string': 'f/u/y/_/r', 'rgx': '((f))/((uy)|(u))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'u', 'y', '_', 'r']
				version split: ['f', 'u', 'y', '_', 'r']
				{'string': 'f/u/y/_/r', 'rgx': '((f))/((uy)|(u))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'u', 'y', '_', 'r']
				version split: ['f', 'uy', 'r', '_']
				{'string': 'f/uy/r/_', 'rgx': '((f))/((uy)|(u))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'uy', 'r', '_']
				version split: ['f', 'u', 'y', 'r', '_']
				{'string': 'f/u/y/r/_', 'rgx': '((f))/((uy)|(u))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'u', 'y', 'r', '_']
				version split: ['f', 'u', 'y', 'r', '_']
				{'string': 'f/u/y/r/_', 'rgx': '((f))/((uy)|(u))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'u', 'y', 'r', '_']
				version split: ['f', 'uy', 'r', '_']
				{'string': 'f/uy/r/_', 'rgx': '((f))/((uy)|(u))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'uy', 'r', '_']
				version split: ['f', 'u', 'y', '_', '_', 'r']
				{'string': 'f/u/y/_/_/r', 'rgx': '((f))/((uy)|(u))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'u', 'y', '_', '_', 'r']
				version split: ['f', 'u', 'y', '_', '_', 'r']
				{'string': 'f/u/y/_/_/r', 'rgx': '((f))/((uy)|(u))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'u', 'y', '_', '_', 'r']
				version split: ['f', 'uy', 'r', '_', '_']
				{'string': 'f/uy/r/_/_', 'rgx': '((f))/((uy)|(u))/((r))/((_))/((_))$'}
				ANALYSING: fuyre
					resolving (3)
					> version: f/u/y/r/e
					TRYING: e
					> version: f/u/y/r/e
					TRYING: e
					> version: f/uy/r/e
					RESULT:  ['_']
				adding dashed alternative: ['f', 'u', 'y', 'r', '_', 'e']
				adding dashed alternative: ['f', 'u', 'y', 'r', '_', 'e']
				adding dashed alternative: ['f', 'uy', 'r', 'e', '_']
				f/u/y/r/e(CCCCV)
f/u/y/r/e(CVVCV)
f/uy/r/e(CVCV)
f/u/y/r/_/e(CAACAV)
f/u/y/r/_/e(CAACAV)
f/uy/r/e/_(CVCVA)
				version split: ['f', 'u', 'y', 'r', 'e']
				{'string': 'f/u/y/r/e', 'rgx': '((f))/((uy)|(u))/((r))/((e))/((_))$'}
				_____REMOVING________['f', 'u', 'y', 'r', 'e']
				version split: ['f', 'u', 'y', 'r', 'e']
				{'string': 'f/u/y/r/e', 'rgx': '((f))/((uy)|(u))/((r))/((e))/((_))$'}
				_____REMOVING________['f', 'u', 'y', 'r', 'e']
				version split: ['f', 'uy', 'r', 'e']
				{'string': 'f/uy/r/e', 'rgx': '((f))/((uy)|(u))/((r))/((e))/((_))$'}
				_____REMOVING________['f', 'uy', 'r', 'e']
				version split: ['f', 'u', 'y', 'r', '_', 'e']
				{'string': 'f/u/y/r/_/e', 'rgx': '((f))/((uy)|(u))/((r))/((e))/((_))$'}
				_____REMOVING________['f', 'u', 'y', 'r', '_', 'e']
				version split: ['f', 'u', 'y', 'r', '_', 'e']
				{'string': 'f/u/y/r/_/e', 'rgx': '((f))/((uy)|(u))/((r))/((e))/((_))$'}
				_____REMOVING________['f', 'u', 'y', 'r', '_', 'e']
				version split: ['f', 'uy', 'r', 'e', '_']
				{'string': 'f/uy/r/e/_', 'rgx': '((f))/((uy)|(u))/((r))/((e))/((_))$'}
				ANALYSING: fyr
					resolving (4)
					> version: f/y/r
					> version: f/y/r
					> version: f/y/r/_
					> version: f/y/r/_
					RESULT:  ['_']
				adding dashed alternative: ['f', 'y', 'r', '_']
				adding dashed alternative: ['f', 'y', 'r', '_']
				adding dashed alternative: ['f', 'y', 'r', '_', '_']
				adding dashed alternative: ['f', 'y', 'r', '_', '_']
				f/y/r(CCC)
f/y/r(CVC)
f/y/r/_(CACA)
f/y/r/_(CACA)
f/y/r/_(CACA)
f/y/r/_(CACA)
f/y/r/_/_(CACAA)
f/y/r/_/_(CACAA)
				version split: ['f', 'y', 'r']
				{'string': 'f/y/r', 'rgx': '((f))/((y))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'y', 'r']
				version split: ['f', 'y', 'r']
				{'string': 'f/y/r', 'rgx': '((f))/((y))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'y', 'r']
				version split: ['f', 'y', 'r', '_']
				{'string': 'f/y/r/_', 'rgx': '((f))/((y))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'y', 'r', '_']
				version split: ['f', 'y', 'r', '_']
				{'string': 'f/y/r/_', 'rgx': '((f))/((y))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'y', 'r', '_']
				version split: ['f', 'y', 'r', '_']
				{'string': 'f/y/r/_', 'rgx': '((f))/((y))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'y', 'r', '_']
				version split: ['f', 'y', 'r', '_']
				{'string': 'f/y/r/_', 'rgx': '((f))/((y))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'y', 'r', '_']
				version split: ['f', 'y', 'r', '_', '_']
				{'string': 'f/y/r/_/_', 'rgx': '((f))/((y))/((r))/((_))/((_))$'}
				version split: ['f', 'y', 'r', '_', '_']
				{'string': 'f/y/r/_/_', 'rgx': '((f))/((y))/((r))/((_))/((_))$'}
				ANALYSING: fyre
					resolving (2)
					> version: f/y/r/e
					> version: f/y/r/e
					RESULT:  ['_']
				adding dashed alternative: ['f', 'y', 'r', 'e', '_']
				adding dashed alternative: ['f', 'y', 'r', 'e', '_']
				f/y/r/e(CCCV)
f/y/r/e(CVCV)
f/y/r/e/_(CACVA)
f/y/r/e/_(CACVA)
				version split: ['f', 'y', 'r', 'e']
				{'string': 'f/y/r/e', 'rgx': '((f))/((y))/((r))/((e))/((_))$'}
				_____REMOVING________['f', 'y', 'r', 'e']
				version split: ['f', 'y', 'r', 'e']
				{'string': 'f/y/r/e', 'rgx': '((f))/((y))/((r))/((e))/((_))$'}
				_____REMOVING________['f', 'y', 'r', 'e']
				version split: ['f', 'y', 'r', 'e', '_']
				{'string': 'f/y/r/e/_', 'rgx': '((f))/((y))/((r))/((e))/((_))$'}
				version split: ['f', 'y', 'r', 'e', '_']
				{'string': 'f/y/r/e/_', 'rgx': '((f))/((y))/((r))/((e))/((_))$'}
				ANALYSING: uer
					resolving (6)
					> version: u/e/r
					> version: u/e/r
					> version: ue/r
					> version: u/e/r/_
					> version: u/e/r/_
					> version: ue/r/_
					RESULT:  ['_']
				adding dashed alternative: ['u', 'e', 'r', '_']
				adding dashed alternative: ['u', 'e', 'r', '_']
				adding dashed alternative: ['ue', 'r', '_']
				adding dashed alternative: ['u', 'e', 'r', '_', '_']
				adding dashed alternative: ['u', 'e', 'r', '_', '_']
				adding dashed alternative: ['ue', 'r', '_', '_']
				u/e/r(CVC)
u/e/r(VVC)
ue/r(VC)
u/e/r/_(AVCA)
u/e/r/_(AVCA)
ue/r/_(VCA)
u/e/r/_(AVCA)
u/e/r/_(AVCA)
ue/r/_(VCA)
u/e/r/_/_(AVCAA)
u/e/r/_/_(AVCAA)
ue/r/_/_(VCAA)
				version split: ['u', 'e', 'r']
				{'string': 'u/e/r', 'rgx': '((u))/((e))/((r))/((_))/((_))$'}
				_____REMOVING________['u', 'e', 'r']
				version split: ['u', 'e', 'r']
				{'string': 'u/e/r', 'rgx': '((u))/((e))/((r))/((_))/((_))$'}
				_____REMOVING________['u', 'e', 'r']
				version split: ['ue', 'r']
				{'string': 'ue/r', 'rgx': '((u))/((e))/((r))/((_))/((_))$'}
				_____REMOVING________['ue', 'r']
				version split: ['u', 'e', 'r', '_']
				{'string': 'u/e/r/_', 'rgx': '((u))/((e))/((r))/((_))/((_))$'}
				_____REMOVING________['u', 'e', 'r', '_']
				version split: ['u', 'e', 'r', '_']
				{'string': 'u/e/r/_', 'rgx': '((u))/((e))/((r))/((_))/((_))$'}
				_____REMOVING________['u', 'e', 'r', '_']
				version split: ['ue', 'r', '_']
				{'string': 'ue/r/_', 'rgx': '((u))/((e))/((r))/((_))/((_))$'}
				_____REMOVING________['ue', 'r', '_']
				version split: ['u', 'e', 'r', '_']
				{'string': 'u/e/r/_', 'rgx': '((u))/((e))/((r))/((_))/((_))$'}
				_____REMOVING________['u', 'e', 'r', '_']
				version split: ['u', 'e', 'r', '_']
				{'string': 'u/e/r/_', 'rgx': '((u))/((e))/((r))/((_))/((_))$'}
				_____REMOVING________['u', 'e', 'r', '_']
				version split: ['ue', 'r', '_']
				{'string': 'ue/r/_', 'rgx': '((u))/((e))/((r))/((_))/((_))$'}
				_____REMOVING________['ue', 'r', '_']
				version split: ['u', 'e', 'r', '_', '_']
				{'string': 'u/e/r/_/_', 'rgx': '((u))/((e))/((r))/((_))/((_))$'}
				version split: ['u', 'e', 'r', '_', '_']
				{'string': 'u/e/r/_/_', 'rgx': '((u))/((e))/((r))/((_))/((_))$'}
				version split: ['ue', 'r', '_', '_']
				{'string': 'ue/r/_/_', 'rgx': '((u))/((e))/((r))/((_))/((_))$'}
				_____REMOVING________['ue', 'r', '_', '_']
				ANALYSING: uere
					resolving (3)
					> version: u/e/r/e
					> version: u/e/r/e
					> version: ue/r/e
					RESULT:  ['_']
				adding dashed alternative: ['u', 'e', 'r', 'e', '_']
				adding dashed alternative: ['u', 'e', 'r', 'e', '_']
				adding dashed alternative: ['ue', 'r', 'e', '_']
				u/e/r/e(CVCV)
u/e/r/e(VVCV)
ue/r/e(VCV)
u/e/r/e/_(AVCVA)
u/e/r/e/_(AVCVA)
ue/r/e/_(VCVA)
				version split: ['u', 'e', 'r', 'e']
				{'string': 'u/e/r/e', 'rgx': '((u))/((e))/((r))/((e))/((_))$'}
				_____REMOVING________['u', 'e', 'r', 'e']
				version split: ['u', 'e', 'r', 'e']
				{'string': 'u/e/r/e', 'rgx': '((u))/((e))/((r))/((e))/((_))$'}
				_____REMOVING________['u', 'e', 'r', 'e']
				version split: ['ue', 'r', 'e']
				{'string': 'ue/r/e', 'rgx': '((u))/((e))/((r))/((e))/((_))$'}
				_____REMOVING________['ue', 'r', 'e']
				version split: ['u', 'e', 'r', 'e', '_']
				{'string': 'u/e/r/e/_', 'rgx': '((u))/((e))/((r))/((e))/((_))$'}
				version split: ['u', 'e', 'r', 'e', '_']
				{'string': 'u/e/r/e/_', 'rgx': '((u))/((e))/((r))/((e))/((_))$'}
				version split: ['ue', 'r', 'e', '_']
				{'string': 'ue/r/e/_', 'rgx': '((u))/((e))/((r))/((e))/((_))$'}
				_____REMOVING________['ue', 'r', 'e', '_']
				ANALYSING: ueréé
					resolving (6)
					> version: u/e/r/é/é
					TRYING: é
					> version: u/e/r/é/é
					TRYING: é
					> version: u/e/r/éé
					> version: u/e/r/éé
					> version: ue/r/é/é
					> version: ue/r/éé
					RESULT:  ['_']
				adding dashed alternative: ['u', 'e', 'r', 'é', '_', 'é']
				adding dashed alternative: ['u', 'e', 'r', 'é', '_', 'é']
				adding dashed alternative: ['u', 'e', 'r', 'éé', '_']
				adding dashed alternative: ['u', 'e', 'r', 'éé', '_']
				adding dashed alternative: ['ue', 'r', 'é', 'é', '_']
				adding dashed alternative: ['ue', 'r', 'éé', '_']
				u/e/r/é/é(CVCVV)
u/e/r/é/é(VVCVV)
u/e/r/éé(CVCV)
u/e/r/éé(VVCV)
ue/r/é/é(VCVV)
ue/r/éé(VCV)
u/e/r/é/_/é(AVCVAV)
u/e/r/é/_/é(AVCVAV)
u/e/r/éé/_(AVCVA)
u/e/r/éé/_(AVCVA)
ue/r/é/é/_(VCVVA)
ue/r/éé/_(VCVA)
				version split: ['u', 'e', 'r', 'é', 'é']
				{'string': 'u/e/r/é/é', 'rgx': '((u))/((e))/((r))/((é)|(éé))/((_))$'}
				_____REMOVING________['u', 'e', 'r', 'é', 'é']
				version split: ['u', 'e', 'r', 'é', 'é']
				{'string': 'u/e/r/é/é', 'rgx': '((u))/((e))/((r))/((é)|(éé))/((_))$'}
				_____REMOVING________['u', 'e', 'r', 'é', 'é']
				version split: ['u', 'e', 'r', 'éé']
				{'string': 'u/e/r/éé', 'rgx': '((u))/((e))/((r))/((é)|(éé))/((_))$'}
				_____REMOVING________['u', 'e', 'r', 'éé']
				version split: ['u', 'e', 'r', 'éé']
				{'string': 'u/e/r/éé', 'rgx': '((u))/((e))/((r))/((é)|(éé))/((_))$'}
				_____REMOVING________['u', 'e', 'r', 'éé']
				version split: ['ue', 'r', 'é', 'é']
				{'string': 'ue/r/é/é', 'rgx': '((u))/((e))/((r))/((é)|(éé))/((_))$'}
				_____REMOVING________['ue', 'r', 'é', 'é']
				version split: ['ue', 'r', 'éé']
				{'string': 'ue/r/éé', 'rgx': '((u))/((e))/((r))/((é)|(éé))/((_))$'}
				_____REMOVING________['ue', 'r', 'éé']
				version split: ['u', 'e', 'r', 'é', '_', 'é']
				{'string': 'u/e/r/é/_/é', 'rgx': '((u))/((e))/((r))/((é)|(éé))/((_))$'}
				_____REMOVING________['u', 'e', 'r', 'é', '_', 'é']
				version split: ['u', 'e', 'r', 'é', '_', 'é']
				{'string': 'u/e/r/é/_/é', 'rgx': '((u))/((e))/((r))/((é)|(éé))/((_))$'}
				_____REMOVING________['u', 'e', 'r', 'é', '_', 'é']
				version split: ['u', 'e', 'r', 'éé', '_']
				{'string': 'u/e/r/éé/_', 'rgx': '((u))/((e))/((r))/((é)|(éé))/((_))$'}
				version split: ['u', 'e', 'r', 'éé', '_']
				{'string': 'u/e/r/éé/_', 'rgx': '((u))/((e))/((r))/((é)|(éé))/((_))$'}
				version split: ['ue', 'r', 'é', 'é', '_']
				{'string': 'ue/r/é/é/_', 'rgx': '((u))/((e))/((r))/((é)|(éé))/((_))$'}
				_____REMOVING________['ue', 'r', 'é', 'é', '_']
				version split: ['ue', 'r', 'éé', '_']
				{'string': 'ue/r/éé/_', 'rgx': '((u))/((e))/((r))/((é)|(éé))/((_))$'}
				_____REMOVING________['ue', 'r', 'éé', '_']
				ANALYSING: uur
					resolving (4)
					> version: u/u/r
					> version: u/u/r
					> version: u/u/r/_
					> version: u/u/r/_
					RESULT:  ['_']
				adding dashed alternative: ['u', 'u', 'r', '_']
				adding dashed alternative: ['u', 'u', 'r', '_']
				adding dashed alternative: ['u', 'u', 'r', '_', '_']
				adding dashed alternative: ['u', 'u', 'r', '_', '_']
				u/u/r(CCC)
u/u/r(VVC)
u/u/r/_(AACA)
u/u/r/_(AACA)
u/u/r/_(AACA)
u/u/r/_(AACA)
u/u/r/_/_(AACAA)
u/u/r/_/_(AACAA)
				version split: ['u', 'u', 'r']
				{'string': 'u/u/r', 'rgx': '((u))/((u))/((r))/((_))/((_))$'}
				_____REMOVING________['u', 'u', 'r']
				version split: ['u', 'u', 'r']
				{'string': 'u/u/r', 'rgx': '((u))/((u))/((r))/((_))/((_))$'}
				_____REMOVING________['u', 'u', 'r']
				version split: ['u', 'u', 'r', '_']
				{'string': 'u/u/r/_', 'rgx': '((u))/((u))/((r))/((_))/((_))$'}
				_____REMOVING________['u', 'u', 'r', '_']
				version split: ['u', 'u', 'r', '_']
				{'string': 'u/u/r/_', 'rgx': '((u))/((u))/((r))/((_))/((_))$'}
				_____REMOVING________['u', 'u', 'r', '_']
				version split: ['u', 'u', 'r', '_']
				{'string': 'u/u/r/_', 'rgx': '((u))/((u))/((r))/((_))/((_))$'}
				_____REMOVING________['u', 'u', 'r', '_']
				version split: ['u', 'u', 'r', '_']
				{'string': 'u/u/r/_', 'rgx': '((u))/((u))/((r))/((_))/((_))$'}
				_____REMOVING________['u', 'u', 'r', '_']
				version split: ['u', 'u', 'r', '_', '_']
				{'string': 'u/u/r/_/_', 'rgx': '((u))/((u))/((r))/((_))/((_))$'}
				version split: ['u', 'u', 'r', '_', '_']
				{'string': 'u/u/r/_/_', 'rgx': '((u))/((u))/((r))/((_))/((_))$'}
				ANALYSING: ver
					resolving (4)
					> version: v/e/r
					> version: v/e/r
					> version: v/e/r/_
					> version: v/e/r/_
					RESULT:  ['_']
				adding dashed alternative: ['v', 'e', 'r', '_']
				adding dashed alternative: ['v', 'e', 'r', '_']
				adding dashed alternative: ['v', 'e', 'r', '_', '_']
				adding dashed alternative: ['v', 'e', 'r', '_', '_']
				v/e/r(CVC)
v/e/r(VVC)
v/e/r/_(AVCA)
v/e/r/_(AVCA)
v/e/r/_(AVCA)
v/e/r/_(AVCA)
v/e/r/_/_(AVCAA)
v/e/r/_/_(AVCAA)
				version split: ['v', 'e', 'r']
				{'string': 'v/e/r', 'rgx': '((v))/((e))/((r))/((_))/((_))$'}
				_____REMOVING________['v', 'e', 'r']
				version split: ['v', 'e', 'r']
				{'string': 'v/e/r', 'rgx': '((v))/((e))/((r))/((_))/((_))$'}
				_____REMOVING________['v', 'e', 'r']
				version split: ['v', 'e', 'r', '_']
				{'string': 'v/e/r/_', 'rgx': '((v))/((e))/((r))/((_))/((_))$'}
				_____REMOVING________['v', 'e', 'r', '_']
				version split: ['v', 'e', 'r', '_']
				{'string': 'v/e/r/_', 'rgx': '((v))/((e))/((r))/((_))/((_))$'}
				_____REMOVING________['v', 'e', 'r', '_']
				version split: ['v', 'e', 'r', '_']
				{'string': 'v/e/r/_', 'rgx': '((v))/((e))/((r))/((_))/((_))$'}
				_____REMOVING________['v', 'e', 'r', '_']
				version split: ['v', 'e', 'r', '_']
				{'string': 'v/e/r/_', 'rgx': '((v))/((e))/((r))/((_))/((_))$'}
				_____REMOVING________['v', 'e', 'r', '_']
				version split: ['v', 'e', 'r', '_', '_']
				{'string': 'v/e/r/_/_', 'rgx': '((v))/((e))/((r))/((_))/((_))$'}
				version split: ['v', 'e', 'r', '_', '_']
				{'string': 'v/e/r/_/_', 'rgx': '((v))/((e))/((r))/((_))/((_))$'}
				ANALYSING: vur
					resolving (4)
					> version: v/u/r
					> version: v/u/r
					> version: v/u/r/_
					> version: v/u/r/_
					RESULT:  ['_']
				adding dashed alternative: ['v', 'u', 'r', '_']
				adding dashed alternative: ['v', 'u', 'r', '_']
				adding dashed alternative: ['v', 'u', 'r', '_', '_']
				adding dashed alternative: ['v', 'u', 'r', '_', '_']
				v/u/r(CCC)
v/u/r(VVC)
v/u/r/_(AACA)
v/u/r/_(AACA)
v/u/r/_(AACA)
v/u/r/_(AACA)
v/u/r/_/_(AACAA)
v/u/r/_/_(AACAA)
				version split: ['v', 'u', 'r']
				{'string': 'v/u/r', 'rgx': '((v))/((u))/((r))/((_))/((_))$'}
				_____REMOVING________['v', 'u', 'r']
				version split: ['v', 'u', 'r']
				{'string': 'v/u/r', 'rgx': '((v))/((u))/((r))/((_))/((_))$'}
				_____REMOVING________['v', 'u', 'r']
				version split: ['v', 'u', 'r', '_']
				{'string': 'v/u/r/_', 'rgx': '((v))/((u))/((r))/((_))/((_))$'}
				_____REMOVING________['v', 'u', 'r', '_']
				version split: ['v', 'u', 'r', '_']
				{'string': 'v/u/r/_', 'rgx': '((v))/((u))/((r))/((_))/((_))$'}
				_____REMOVING________['v', 'u', 'r', '_']
				version split: ['v', 'u', 'r', '_']
				{'string': 'v/u/r/_', 'rgx': '((v))/((u))/((r))/((_))/((_))$'}
				_____REMOVING________['v', 'u', 'r', '_']
				version split: ['v', 'u', 'r', '_']
				{'string': 'v/u/r/_', 'rgx': '((v))/((u))/((r))/((_))/((_))$'}
				_____REMOVING________['v', 'u', 'r', '_']
				version split: ['v', 'u', 'r', '_', '_']
				{'string': 'v/u/r/_/_', 'rgx': '((v))/((u))/((r))/((_))/((_))$'}
				version split: ['v', 'u', 'r', '_', '_']
				{'string': 'v/u/r/_/_', 'rgx': '((v))/((u))/((r))/((_))/((_))$'}
		only one version left: ['f', 'ai', 'r', '_', '_']
		only one version left: ['f', 'a', 'r', '_', '_']
		only one version left: ['f', 'e', 'r', '_', '_']
		only one version left: ['f', 'e', 'r', 'e', '_']
		only one version left: ['f', 'ie', 'r', '_', '_']
		only one version left: ['f', 'ie', 'r', 'e', '_']
		only one version left: ['f', 'i', 'r', '_', '_']
		only one version left: ['f', 'i', 'r', 'e', '_']
		only one version left: ['f', 'u', '_', '_', '_']
		only one version left: ['f', 'ui', 'r', '_', '_']
		only one version left: ['f', 'ui', 'r', 'e', '_']
		only one version left: ['f', 'u', 'r', '_', '_']
		only one version left: ['f', 'u', 'r', 'e', '_']
		only one version left: ['f', 'uy', 'r', '_', '_']
		only one version left: ['f', 'uy', 'r', 'e', '_']
		only one version left: ['f', 'y', 'r', '_', '_']
		only one version left: ['f', 'y', 'r', 'e', '_']
		only one version left: ['u', 'e', 'r', '_', '_']
		only one version left: ['u', 'e', 'r', 'e', '_']
		only one version left: ['u', 'e', 'r', 'éé', '_']
		only one version left: ['u', 'u', 'r', '_', '_']
		only one version left: ['v', 'e', 'r', '_', '_']
		only one version left: ['v', 'u', 'r', '_', '_']
		SPLIT: ['f', 'i', 'r', 'e', 's']
		SPLIT: ['f', 'u', 'r', 'e', 's']
		SPLIT: ['f', 'ai', 'r', '_', '_']
		['f', 'ai', 'r', '_', '_']
		SPLIT: ['f', 'a', 'r', '_', '_']
		['f', 'a', 'r', '_', '_']
		SPLIT: ['f', 'e', 'r', '_', '_']
		['f', 'e', 'r', '_', '_']
		SPLIT: ['f', 'e', 'r', 'e', '_']
		['f', 'e', 'r', 'e', '_']
		SPLIT: ['f', 'ie', 'r', '_', '_']
		['f', 'ie', 'r', '_', '_']
		SPLIT: ['f', 'ie', 'r', 'e', '_']
		['f', 'ie', 'r', 'e', '_']
		SPLIT: ['f', 'i', 'r', '_', '_']
		['f', 'i', 'r', '_', '_']
		['f', 'i', 'r', '_', '_']
		SPLIT: ['f', 'i', 'r', 'e', '_']
		['f', 'i', 'r', 'e', '_']
		['f', 'i', 'r', 'e', '_']
		SPLIT: ['f', 'u', '_', '_', '_']
		['f', 'u', '_', '_', '_']
		['f', 'u', '_', '_', '_']
		SPLIT: ['f', 'ui', 'r', '_', '_']
		['f', 'ui', 'r', '_', '_']
		SPLIT: ['f', 'ui', 'r', 'e', '_']
		['f', 'ui', 'r', 'e', '_']
		SPLIT: ['f', 'u', 'r', '_', '_']
		['f', 'u', 'r', '_', '_']
		['f', 'u', 'r', '_', '_']
		SPLIT: ['f', 'u', 'r', 'e', '_']
		['f', 'u', 'r', 'e', '_']
		['f', 'u', 'r', 'e', '_']
		SPLIT: ['f', 'uy', 'r', '_', '_']
		['f', 'uy', 'r', '_', '_']
		SPLIT: ['f', 'uy', 'r', 'e', '_']
		['f', 'uy', 'r', 'e', '_']
		SPLIT: ['f', 'y', 'r', '_', '_']
		['f', 'y', 'r', '_', '_']
		['f', 'y', 'r', '_', '_']
		SPLIT: ['f', 'y', 'r', 'e', '_']
		['f', 'y', 'r', 'e', '_']
		['f', 'y', 'r', 'e', '_']
		SPLIT: ['u', 'e', 'r', '_', '_']
		['u', 'e', 'r', '_', '_']
		['u', 'e', 'r', '_', '_']
		SPLIT: ['u', 'e', 'r', 'e', '_']
		['u', 'e', 'r', 'e', '_']
		['u', 'e', 'r', 'e', '_']
		SPLIT: ['u', 'e', 'r', 'éé', '_']
		['u', 'e', 'r', 'éé', '_']
		['u', 'e', 'r', 'éé', '_']
		SPLIT: ['u', 'u', 'r', '_', '_']
		['u', 'u', 'r', '_', '_']
		['u', 'u', 'r', '_', '_']
		SPLIT: ['v', 'e', 'r', '_', '_']
		['v', 'e', 'r', '_', '_']
		['v', 'e', 'r', '_', '_']
		SPLIT: ['v', 'u', 'r', '_', '_']
		['v', 'u', 'r', '_', '_']
		['v', 'u', 'r', '_', '_']
		POSSIBLE CHANGE: 0 : Initial Fricative Voicing
		OVERVIEW: version for pattern CCCVC

faulty splits: 0
f | i | r | e | s
f | u | r | e | s
f | ai | r | _ | _
f | a | r | _ | _
f | e | r | _ | _
f | e | r | e | _
f | ie | r | _ | _
f | ie | r | e | _
f | i | r | _ | _
f | i | r | e | _
f | u | _ | _ | _
f | ui | r | _ | _
f | ui | r | e | _
f | u | r | _ | _
f | u | r | e | _
f | uy | r | _ | _
f | uy | r | e | _
f | y | r | _ | _
f | y | r | e | _
u | e | r | _ | _
u | e | r | e | _
u | e | r | éé | _
u | u | r | _ | _
v | e | r | _ | _
v | u | r | _ | _
4 : {'r', 's', '_'},{'s', 'r'}
	[[{'lit': 'ai', 'ln': 2, 'index': 1}]]
	[[{'lit': 'ie', 'ln': 2, 'index': 1}]]
	[[{'lit': 'ie', 'ln': 2, 'index': 1}]]
	[[{'lit': 'ui', 'ln': 2, 'index': 1}]]
	[[{'lit': 'ui', 'ln': 2, 'index': 1}]]
	[[{'lit': 'uy', 'ln': 2, 'index': 1}]]
	[[{'lit': 'uy', 'ln': 2, 'index': 1}]]
	[[{'lit': 'ue', 'ln': 2, 'index': 0}]]
	[[{'lit': 'ue', 'ln': 2, 'index': 0}]]
	[[{'lit': 'éé', 'ln': 2, 'index': 3}], [{'lit': 'ue', 'ln': 2, 'index': 0}]]
	[[{'lit': 'éé', 'ln': 2, 'index': 3}], [{'lit': 'ue', 'ln': 2, 'index': 0}], [{'lit': 'éé', 'ln': 2, 'index': 3}, {'lit': 'ue', 'ln': 2, 'index': 0}]]
	MIN pattern length=3
	Pattern CVCV is valid
	Pattern VVCV is invalid
	Pattern CCCVC is valid
	Pattern CVVCV is invalid
	Pattern CVCVV is invalid
	Pattern CC is invalid
	Pattern CCVCV is valid
	Pattern VVCVV is invalid
	Pattern CCCCV is invalid
	Pattern CCC is valid
	Pattern CCCC is invalid
	Pattern VCVV is invalid
	Pattern CV is invalid
	Pattern VC is invalid
	Pattern CVC is valid
	Pattern CVCVC is valid
	Pattern VCV is valid
	Pattern CVVC is invalid
	Pattern VVC is invalid
	Pattern CCCV is valid
	Pattern CVCC is valid
	Pattern CCVC is valid
	Making the selection for pattern: CCVCV
	Selection for pattern: CCVCV completed
	Making a version for pattern: CCVCV
			___CCVCV : 0___
				ANALYSING: fiere
				adding littera based on matching pattern
				ANALYSING: fair
					resolving (3)
					> version: f/a/i/r
					TRYING: f
					> version: f/a/i/r
					TRYING: f
					> version: f/ai/r
					TRYING: f
					RESULT:  ['f']
				ANALYSING: far
					resolving (1)
					> version: f/a/r
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fer
					resolving (1)
					> version: f/e/r
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fere
					resolving (1)
					> version: f/e/r/e
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fier
					resolving (3)
					> version: f/i/e/r
					TRYING: f
					> version: f/i/e/r
					TRYING: f
					> version: f/ie/r
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fir
					resolving (2)
					> version: f/i/r
					TRYING: f
					> version: f/i/r
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fire
					resolving (2)
					> version: f/i/r/e
					TRYING: f
					> version: f/i/r/e
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fires
					resolving (2)
					> version: f/i/r/e/s
					TRYING: f
					> version: f/i/r/e/s
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fu
					resolving (2)
					> version: f/u
					TRYING: f
					> version: f/u
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fuir
					resolving (3)
					> version: f/u/i/r
					TRYING: f
					> version: f/u/i/r
					TRYING: f
					> version: f/ui/r
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fuire
					resolving (3)
					> version: f/u/i/r/e
					TRYING: f
					> version: f/u/i/r/e
					TRYING: f
					> version: f/ui/r/e
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fur
					resolving (2)
					> version: f/u/r
					TRYING: f
					> version: f/u/r
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fure
					resolving (2)
					> version: f/u/r/e
					TRYING: f
					> version: f/u/r/e
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fures
					resolving (2)
					> version: f/u/r/e/s
					TRYING: f
					> version: f/u/r/e/s
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fuyr
					resolving (3)
					> version: f/u/y/r
					TRYING: f
					> version: f/u/y/r
					TRYING: f
					> version: f/uy/r
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fuyre
					resolving (3)
					> version: f/u/y/r/e
					TRYING: f
					> version: f/u/y/r/e
					TRYING: f
					> version: f/uy/r/e
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fyr
					resolving (2)
					> version: f/y/r
					TRYING: f
					> version: f/y/r
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fyre
					resolving (2)
					> version: f/y/r/e
					TRYING: f
					> version: f/y/r/e
					TRYING: f
					RESULT:  ['f']
				ANALYSING: uer
					resolving (3)
					> version: u/e/r
					TRYING: u
					> version: u/e/r
					TRYING: u
					> version: ue/r
					TRYING: ue
					RESULT:  ['u']
				ANALYSING: uere
					resolving (3)
					> version: u/e/r/e
					TRYING: u
					> version: u/e/r/e
					TRYING: u
					> version: ue/r/e
					TRYING: ue
					RESULT:  ['u']
				ANALYSING: ueréé
					resolving (6)
					> version: u/e/r/é/é
					TRYING: u
					> version: u/e/r/é/é
					TRYING: u
					> version: u/e/r/éé
					TRYING: u
					> version: u/e/r/éé
					TRYING: u
					> version: ue/r/é/é
					TRYING: ue
					> version: ue/r/éé
					TRYING: ue
					RESULT:  ['u']
				ANALYSING: uur
					resolving (2)
					> version: u/u/r
					TRYING: u
					> version: u/u/r
					TRYING: u
					RESULT:  ['u']
				ANALYSING: ver
					resolving (2)
					> version: v/e/r
					TRYING: v
					> version: v/e/r
					TRYING: v
					RESULT:  ['v']
				ANALYSING: vur
					resolving (2)
					> version: v/u/r
					TRYING: v
					> version: v/u/r
					TRYING: v
					RESULT:  ['v']
			___CCVCV : 1___
				ANALYSING: fiere
				adding littera based on matching pattern
				ANALYSING: fair
					resolving (3)
					> version: f/a/i/r
					TRYING: a
					> version: f/a/i/r
					TRYING: a
					> version: f/ai/r
					TRYING: ai
					>>> MULTIPLE RESOLVE OPTIONS: {'ai', 'a'}
					RESULT:  ['ai', 'a']
				ANALYSING: far
					resolving (1)
					> version: f/a/r
					TRYING: a
					RESULT:  ['a']
				ANALYSING: fer
					resolving (1)
					> version: f/e/r
					TRYING: e
					RESULT:  ['e']
				ANALYSING: fere
					resolving (1)
					> version: f/e/r/e
					TRYING: e
					RESULT:  ['e']
				ANALYSING: fier
					resolving (3)
					> version: f/i/e/r
					TRYING: i
					> version: f/i/e/r
					TRYING: i
					> version: f/ie/r
					TRYING: ie
					>>> MULTIPLE RESOLVE OPTIONS: {'ie', 'i'}
					RESULT:  ['ie', 'i']
				ANALYSING: fir
					resolving (2)
					> version: f/i/r
					TRYING: i
					> version: f/i/r
					TRYING: i
					RESULT:  ['i']
				ANALYSING: fire
					resolving (2)
					> version: f/i/r/e
					TRYING: i
					> version: f/i/r/e
					TRYING: i
					RESULT:  ['i']
				ANALYSING: fires
					resolving (2)
					> version: f/i/r/e/s
					TRYING: i
					> version: f/i/r/e/s
					TRYING: i
					RESULT:  ['i']
				ANALYSING: fu
					resolving (2)
					> version: f/u
					TRYING: u
					> version: f/u
					TRYING: u
					RESULT:  ['u']
				ANALYSING: fuir
					resolving (3)
					> version: f/u/i/r
					TRYING: u
					> version: f/u/i/r
					TRYING: u
					> version: f/ui/r
					TRYING: ui
					>>> MULTIPLE RESOLVE OPTIONS: {'ui', 'u'}
					RESULT:  ['ui', 'u']
				ANALYSING: fuire
					resolving (3)
					> version: f/u/i/r/e
					TRYING: u
					> version: f/u/i/r/e
					TRYING: u
					> version: f/ui/r/e
					TRYING: ui
					>>> MULTIPLE RESOLVE OPTIONS: {'ui', 'u'}
					RESULT:  ['ui', 'u']
				ANALYSING: fur
					resolving (2)
					> version: f/u/r
					TRYING: u
					> version: f/u/r
					TRYING: u
					RESULT:  ['u']
				ANALYSING: fure
					resolving (2)
					> version: f/u/r/e
					TRYING: u
					> version: f/u/r/e
					TRYING: u
					RESULT:  ['u']
				ANALYSING: fures
					resolving (2)
					> version: f/u/r/e/s
					TRYING: u
					> version: f/u/r/e/s
					TRYING: u
					RESULT:  ['u']
				ANALYSING: fuyr
					resolving (3)
					> version: f/u/y/r
					TRYING: u
					> version: f/u/y/r
					TRYING: u
					> version: f/uy/r
					TRYING: uy
					>>> MULTIPLE RESOLVE OPTIONS: {'uy', 'u'}
					RESULT:  ['uy', 'u']
				ANALYSING: fuyre
					resolving (3)
					> version: f/u/y/r/e
					TRYING: u
					> version: f/u/y/r/e
					TRYING: u
					> version: f/uy/r/e
					TRYING: uy
					>>> MULTIPLE RESOLVE OPTIONS: {'uy', 'u'}
					RESULT:  ['uy', 'u']
				ANALYSING: fyr
					resolving (2)
					> version: f/y/r
					TRYING: y
					> version: f/y/r
					TRYING: y
					RESULT:  ['y']
				ANALYSING: fyre
					resolving (2)
					> version: f/y/r/e
					TRYING: y
					> version: f/y/r/e
					TRYING: y
					RESULT:  ['y']
				ANALYSING: uer
					resolving (3)
					> version: u/e/r
					TRYING: e
					> version: u/e/r
					TRYING: e
					> version: ue/r
					TRYING: r
					RESULT:  ['e']
				ANALYSING: uere
					resolving (3)
					> version: u/e/r/e
					TRYING: e
					> version: u/e/r/e
					TRYING: e
					> version: ue/r/e
					TRYING: r
					RESULT:  ['e']
				ANALYSING: ueréé
					resolving (6)
					> version: u/e/r/é/é
					TRYING: e
					> version: u/e/r/é/é
					TRYING: e
					> version: u/e/r/éé
					TRYING: e
					> version: u/e/r/éé
					TRYING: e
					> version: ue/r/é/é
					TRYING: r
					> version: ue/r/éé
					TRYING: r
					RESULT:  ['e']
				ANALYSING: uur
					resolving (2)
					> version: u/u/r
					TRYING: u
					> version: u/u/r
					TRYING: u
					RESULT:  ['u']
				ANALYSING: ver
					resolving (2)
					> version: v/e/r
					TRYING: e
					> version: v/e/r
					TRYING: e
					RESULT:  ['e']
				ANALYSING: vur
					resolving (2)
					> version: v/u/r
					TRYING: u
					> version: v/u/r
					TRYING: u
					RESULT:  ['u']
			___CCVCV : 2___
				ANALYSING: fiere
				adding littera based on matching pattern
				ANALYSING: fair
					resolving (3)
					> version: f/a/i/r
					TRYING: i
					> version: f/a/i/r
					TRYING: i
					> version: f/ai/r
					TRYING: r
					RESULT:  ['i']
				ANALYSING: far
					resolving (1)
					> version: f/a/r
					TRYING: r
					RESULT:  ['_']
				adding dashed alternative: ['f', 'a', '_', 'r']
				f/a/r(CVC)
f/a/_/r(CVAC)
				ANALYSING: fer
					resolving (1)
					> version: f/e/r
					TRYING: r
					RESULT:  ['_']
				adding dashed alternative: ['f', 'e', '_', 'r']
				f/e/r(CVC)
f/e/_/r(CVAC)
				ANALYSING: fere
					resolving (1)
					> version: f/e/r/e
					TRYING: r
					RESULT:  ['_']
				adding dashed alternative: ['f', 'e', '_', 'r', 'e']
				f/e/r/e(CVCV)
f/e/_/r/e(CVACV)
				ANALYSING: fier
					resolving (3)
					> version: f/i/e/r
					TRYING: e
					> version: f/i/e/r
					TRYING: e
					> version: f/ie/r
					TRYING: r
					RESULT:  ['e']
				ANALYSING: fir
					resolving (2)
					> version: f/i/r
					TRYING: r
					> version: f/i/r
					TRYING: r
					RESULT:  ['_']
				adding dashed alternative: ['f', 'i', '_', 'r']
				adding dashed alternative: ['f', 'i', '_', 'r']
				f/i/r(CCC)
f/i/r(CVC)
f/i/_/r(CAAC)
f/i/_/r(CAAC)
				ANALYSING: fire
					resolving (2)
					> version: f/i/r/e
					TRYING: r
					> version: f/i/r/e
					TRYING: r
					RESULT:  ['_']
				adding dashed alternative: ['f', 'i', '_', 'r', 'e']
				adding dashed alternative: ['f', 'i', '_', 'r', 'e']
				f/i/r/e(CCCV)
f/i/r/e(CVCV)
f/i/_/r/e(CAACV)
f/i/_/r/e(CAACV)
				ANALYSING: fires
					resolving (2)
					> version: f/i/r/e/s
					TRYING: r
					> version: f/i/r/e/s
					TRYING: r
					RESULT:  ['_']
				adding dashed alternative: ['f', 'i', '_', 'r', 'e', 's']
				adding dashed alternative: ['f', 'i', '_', 'r', 'e', 's']
				f/i/r/e/s(CCCVC)
f/i/r/e/s(CVCVC)
f/i/_/r/e/s(CAACVC)
f/i/_/r/e/s(CAACVC)
				ANALYSING: fu
					resolving (2)
					> version: f/u
					> version: f/u
					RESULT:  ['_']
				adding dashed alternative: ['f', 'u', '_']
				adding dashed alternative: ['f', 'u', '_']
				f/u(CC)
f/u(CV)
f/u/_(CAA)
f/u/_(CAA)
				ANALYSING: fuir
					resolving (3)
					> version: f/u/i/r
					TRYING: i
					> version: f/u/i/r
					TRYING: i
					> version: f/ui/r
					TRYING: r
					RESULT:  ['i']
				ANALYSING: fuire
					resolving (3)
					> version: f/u/i/r/e
					TRYING: i
					> version: f/u/i/r/e
					TRYING: i
					> version: f/ui/r/e
					TRYING: r
					RESULT:  ['i']
				ANALYSING: fur
					resolving (2)
					> version: f/u/r
					TRYING: r
					> version: f/u/r
					TRYING: r
					RESULT:  ['_']
				adding dashed alternative: ['f', 'u', '_', 'r']
				adding dashed alternative: ['f', 'u', '_', 'r']
				f/u/r(CCC)
f/u/r(CVC)
f/u/_/r(CAAC)
f/u/_/r(CAAC)
				ANALYSING: fure
					resolving (2)
					> version: f/u/r/e
					TRYING: r
					> version: f/u/r/e
					TRYING: r
					RESULT:  ['_']
				adding dashed alternative: ['f', 'u', '_', 'r', 'e']
				adding dashed alternative: ['f', 'u', '_', 'r', 'e']
				f/u/r/e(CCCV)
f/u/r/e(CVCV)
f/u/_/r/e(CAACV)
f/u/_/r/e(CAACV)
				ANALYSING: fures
					resolving (2)
					> version: f/u/r/e/s
					TRYING: r
					> version: f/u/r/e/s
					TRYING: r
					RESULT:  ['_']
				adding dashed alternative: ['f', 'u', '_', 'r', 'e', 's']
				adding dashed alternative: ['f', 'u', '_', 'r', 'e', 's']
				f/u/r/e/s(CCCVC)
f/u/r/e/s(CVCVC)
f/u/_/r/e/s(CAACVC)
f/u/_/r/e/s(CAACVC)
				ANALYSING: fuyr
					resolving (3)
					> version: f/u/y/r
					TRYING: y
					> version: f/u/y/r
					TRYING: y
					> version: f/uy/r
					TRYING: r
					RESULT:  ['y']
				ANALYSING: fuyre
					resolving (3)
					> version: f/u/y/r/e
					TRYING: y
					> version: f/u/y/r/e
					TRYING: y
					> version: f/uy/r/e
					TRYING: r
					RESULT:  ['y']
				ANALYSING: fyr
					resolving (2)
					> version: f/y/r
					TRYING: r
					> version: f/y/r
					TRYING: r
					RESULT:  ['_']
				adding dashed alternative: ['f', 'y', '_', 'r']
				adding dashed alternative: ['f', 'y', '_', 'r']
				f/y/r(CCC)
f/y/r(CVC)
f/y/_/r(CAAC)
f/y/_/r(CAAC)
				ANALYSING: fyre
					resolving (2)
					> version: f/y/r/e
					TRYING: r
					> version: f/y/r/e
					TRYING: r
					RESULT:  ['_']
				adding dashed alternative: ['f', 'y', '_', 'r', 'e']
				adding dashed alternative: ['f', 'y', '_', 'r', 'e']
				f/y/r/e(CCCV)
f/y/r/e(CVCV)
f/y/_/r/e(CAACV)
f/y/_/r/e(CAACV)
				ANALYSING: uer
					resolving (3)
					> version: u/e/r
					TRYING: r
					> version: u/e/r
					TRYING: r
					> version: ue/r
					RESULT:  ['_']
				adding dashed alternative: ['u', 'e', '_', 'r']
				adding dashed alternative: ['u', 'e', '_', 'r']
				adding dashed alternative: ['ue', 'r', '_']
				u/e/r(CVC)
u/e/r(VVC)
ue/r(VC)
u/e/_/r(AVAC)
u/e/_/r(AVAC)
ue/r/_(VCA)
				ANALYSING: uere
					resolving (3)
					> version: u/e/r/e
					TRYING: r
					> version: u/e/r/e
					TRYING: r
					> version: ue/r/e
					TRYING: e
					RESULT:  ['e']
				ANALYSING: ueréé
					resolving (6)
					> version: u/e/r/é/é
					TRYING: r
					> version: u/e/r/é/é
					TRYING: r
					> version: u/e/r/éé
					TRYING: r
					> version: u/e/r/éé
					TRYING: r
					> version: ue/r/é/é
					TRYING: é
					adding blocked set: V = V >> e, _, é, y, i
					> version: ue/r/éé
					TRYING: éé
					adding blocked set: V = V >> e, _, éé, y, i
					RESULT:  ['_']
				adding dashed alternative: ['u', 'e', '_', 'r', 'é', 'é']
				adding dashed alternative: ['u', 'e', '_', 'r', 'é', 'é']
				adding dashed alternative: ['u', 'e', '_', 'r', 'éé']
				adding dashed alternative: ['u', 'e', '_', 'r', 'éé']
				adding dashed alternative: ['ue', 'r', '_', 'é', 'é']
				adding dashed alternative: ['ue', 'r', '_', 'éé']
				u/e/r/é/é(CVCVV)
u/e/r/é/é(VVCVV)
u/e/r/éé(CVCV)
u/e/r/éé(VVCV)
ue/r/é/é(VCVV)
ue/r/éé(VCV)
u/e/_/r/é/é(AVACVV)
u/e/_/r/é/é(AVACVV)
u/e/_/r/éé(AVACV)
u/e/_/r/éé(AVACV)
ue/r/_/é/é(VCAVV)
ue/r/_/éé(VCAV)
				ANALYSING: uur
					resolving (2)
					> version: u/u/r
					TRYING: r
					> version: u/u/r
					TRYING: r
					RESULT:  ['_']
				adding dashed alternative: ['u', 'u', '_', 'r']
				adding dashed alternative: ['u', 'u', '_', 'r']
				u/u/r(CCC)
u/u/r(VVC)
u/u/_/r(AAAC)
u/u/_/r(AAAC)
				ANALYSING: ver
					resolving (2)
					> version: v/e/r
					TRYING: r
					> version: v/e/r
					TRYING: r
					RESULT:  ['_']
				adding dashed alternative: ['v', 'e', '_', 'r']
				adding dashed alternative: ['v', 'e', '_', 'r']
				v/e/r(CVC)
v/e/r(VVC)
v/e/_/r(AVAC)
v/e/_/r(AVAC)
				ANALYSING: vur
					resolving (2)
					> version: v/u/r
					TRYING: r
					> version: v/u/r
					TRYING: r
					RESULT:  ['_']
				adding dashed alternative: ['v', 'u', '_', 'r']
				adding dashed alternative: ['v', 'u', '_', 'r']
				v/u/r(CCC)
v/u/r(VVC)
v/u/_/r(AAAC)
v/u/_/r(AAAC)
			___CCVCV : 3___
				ANALYSING: fiere
				adding littera based on matching pattern
				ANALYSING: fair
					resolving (3)
					> version: f/a/i/r
					TRYING: r
					> version: f/a/i/r
					TRYING: r
					> version: f/ai/r
					RESULT:  ['r']
				ANALYSING: far
					resolving (2)
					> version: f/a/r
					> version: f/a/_/r
					TRYING: r
					RESULT:  ['r']
				ANALYSING: fer
					resolving (2)
					> version: f/e/r
					> version: f/e/_/r
					TRYING: r
					RESULT:  ['r']
				ANALYSING: fere
					resolving (2)
					> version: f/e/r/e
					TRYING: e
					> version: f/e/_/r/e
					TRYING: r
					RESULT:  ['r']
				ANALYSING: fier
					resolving (3)
					> version: f/i/e/r
					TRYING: r
					> version: f/i/e/r
					TRYING: r
					> version: f/ie/r
					RESULT:  ['r']
				ANALYSING: fir
					resolving (4)
					> version: f/i/r
					> version: f/i/r
					> version: f/i/_/r
					TRYING: r
					> version: f/i/_/r
					TRYING: r
					RESULT:  ['r']
				ANALYSING: fire
					resolving (4)
					> version: f/i/r/e
					TRYING: e
					> version: f/i/r/e
					TRYING: e
					> version: f/i/_/r/e
					TRYING: r
					> version: f/i/_/r/e
					TRYING: r
					RESULT:  ['r']
				ANALYSING: fires
					resolving (4)
					> version: f/i/r/e/s
					TRYING: e
					> version: f/i/r/e/s
					TRYING: e
					> version: f/i/_/r/e/s
					TRYING: r
					> version: f/i/_/r/e/s
					TRYING: r
					RESULT:  ['r']
				ANALYSING: fu
					resolving (4)
					> version: f/u
					> version: f/u
					> version: f/u/_
					> version: f/u/_
					RESULT:  ['_']
				adding dashed alternative: ['f', 'u', '_']
				adding dashed alternative: ['f', 'u', '_']
				adding dashed alternative: ['f', 'u', '_', '_']
				adding dashed alternative: ['f', 'u', '_', '_']
				f/u(CC)
f/u(CV)
f/u/_(CAA)
f/u/_(CAA)
f/u/_(CAA)
f/u/_(CAA)
f/u/_/_(CAAA)
f/u/_/_(CAAA)
				ANALYSING: fuir
					resolving (3)
					> version: f/u/i/r
					TRYING: r
					> version: f/u/i/r
					TRYING: r
					> version: f/ui/r
					RESULT:  ['r']
				ANALYSING: fuire
					resolving (3)
					> version: f/u/i/r/e
					TRYING: r
					> version: f/u/i/r/e
					TRYING: r
					> version: f/ui/r/e
					TRYING: e
					RESULT:  ['r']
				ANALYSING: fur
					resolving (4)
					> version: f/u/r
					> version: f/u/r
					> version: f/u/_/r
					TRYING: r
					> version: f/u/_/r
					TRYING: r
					RESULT:  ['r']
				ANALYSING: fure
					resolving (4)
					> version: f/u/r/e
					TRYING: e
					> version: f/u/r/e
					TRYING: e
					> version: f/u/_/r/e
					TRYING: r
					> version: f/u/_/r/e
					TRYING: r
					RESULT:  ['r']
				ANALYSING: fures
					resolving (4)
					> version: f/u/r/e/s
					TRYING: e
					> version: f/u/r/e/s
					TRYING: e
					> version: f/u/_/r/e/s
					TRYING: r
					> version: f/u/_/r/e/s
					TRYING: r
					RESULT:  ['r']
				ANALYSING: fuyr
					resolving (3)
					> version: f/u/y/r
					TRYING: r
					> version: f/u/y/r
					TRYING: r
					> version: f/uy/r
					RESULT:  ['r']
				ANALYSING: fuyre
					resolving (3)
					> version: f/u/y/r/e
					TRYING: r
					> version: f/u/y/r/e
					TRYING: r
					> version: f/uy/r/e
					TRYING: e
					RESULT:  ['r']
				ANALYSING: fyr
					resolving (4)
					> version: f/y/r
					> version: f/y/r
					> version: f/y/_/r
					TRYING: r
					> version: f/y/_/r
					TRYING: r
					RESULT:  ['r']
				ANALYSING: fyre
					resolving (4)
					> version: f/y/r/e
					TRYING: e
					> version: f/y/r/e
					TRYING: e
					> version: f/y/_/r/e
					TRYING: r
					> version: f/y/_/r/e
					TRYING: r
					RESULT:  ['r']
				ANALYSING: uer
					resolving (6)
					> version: u/e/r
					> version: u/e/r
					> version: ue/r
					> version: u/e/_/r
					TRYING: r
					> version: u/e/_/r
					TRYING: r
					> version: ue/r/_
					RESULT:  ['r']
				ANALYSING: uere
					resolving (3)
					> version: u/e/r/e
					TRYING: e
					> version: u/e/r/e
					TRYING: e
					> version: ue/r/e
					RESULT:  ['_']
				adding dashed alternative: ['u', 'e', 'r', '_', 'e']
				adding dashed alternative: ['u', 'e', 'r', '_', 'e']
				adding dashed alternative: ['ue', 'r', 'e', '_']
				u/e/r/e(CVCV)
u/e/r/e(VVCV)
ue/r/e(VCV)
u/e/r/_/e(AVCAV)
u/e/r/_/e(AVCAV)
ue/r/e/_(VCVA)
				ANALYSING: ueréé
					resolving (12)
					> version: u/e/r/é/é
					TRYING: é
					> version: u/e/r/é/é
					TRYING: é
					> version: u/e/r/éé
					TRYING: éé
					> version: u/e/r/éé
					TRYING: éé
					> version: ue/r/é/é
					TRYING: é
					> version: ue/r/éé
					> version: u/e/_/r/é/é
					TRYING: r
					> version: u/e/_/r/é/é
					TRYING: r
					> version: u/e/_/r/éé
					TRYING: r
					> version: u/e/_/r/éé
					TRYING: r
					> version: ue/r/_/é/é
					TRYING: é
					> version: ue/r/_/éé
					TRYING: éé
					RESULT:  ['r']
				ANALYSING: uur
					resolving (4)
					> version: u/u/r
					> version: u/u/r
					> version: u/u/_/r
					TRYING: r
					> version: u/u/_/r
					TRYING: r
					RESULT:  ['r']
				ANALYSING: ver
					resolving (4)
					> version: v/e/r
					> version: v/e/r
					> version: v/e/_/r
					TRYING: r
					> version: v/e/_/r
					TRYING: r
					RESULT:  ['r']
				ANALYSING: vur
					resolving (4)
					> version: v/u/r
					> version: v/u/r
					> version: v/u/_/r
					TRYING: r
					> version: v/u/_/r
					TRYING: r
					RESULT:  ['r']
			___CCVCV : 4___
				ANALYSING: fiere
				adding littera based on matching pattern
				ANALYSING: fair
					resolving (3)
					> version: f/a/i/r
					> version: f/a/i/r
					> version: f/ai/r
					RESULT:  ['_']
				adding dashed alternative: ['f', 'a', 'i', 'r', '_']
				adding dashed alternative: ['f', 'a', 'i', 'r', '_']
				adding dashed alternative: ['f', 'ai', 'r', '_']
				f/a/i/r(CVCC)
f/a/i/r(CVVC)
f/ai/r(CVC)
f/a/i/r/_(CVACA)
f/a/i/r/_(CVACA)
f/ai/r/_(CVCA)
				version split: ['f', 'a', 'i', 'r']
				{'string': 'f/a/i/r', 'rgx': '((f))/((ai)|(a))/((i))/((r))/((_))$'}
				_____REMOVING________['f', 'a', 'i', 'r']
				version split: ['f', 'a', 'i', 'r']
				{'string': 'f/a/i/r', 'rgx': '((f))/((ai)|(a))/((i))/((r))/((_))$'}
				_____REMOVING________['f', 'a', 'i', 'r']
				version split: ['f', 'ai', 'r']
				{'string': 'f/ai/r', 'rgx': '((f))/((ai)|(a))/((i))/((r))/((_))$'}
				_____REMOVING________['f', 'ai', 'r']
				version split: ['f', 'a', 'i', 'r', '_']
				{'string': 'f/a/i/r/_', 'rgx': '((f))/((ai)|(a))/((i))/((r))/((_))$'}
				version split: ['f', 'a', 'i', 'r', '_']
				{'string': 'f/a/i/r/_', 'rgx': '((f))/((ai)|(a))/((i))/((r))/((_))$'}
				version split: ['f', 'ai', 'r', '_']
				{'string': 'f/ai/r/_', 'rgx': '((f))/((ai)|(a))/((i))/((r))/((_))$'}
				_____REMOVING________['f', 'ai', 'r', '_']
				ANALYSING: far
					resolving (2)
					> version: f/a/r
					> version: f/a/_/r
					RESULT:  ['_']
				adding dashed alternative: ['f', 'a', 'r', '_']
				adding dashed alternative: ['f', 'a', '_', 'r', '_']
				f/a/r(CVC)
f/a/_/r(CVAC)
f/a/r/_(CVCA)
f/a/_/r/_(CVACA)
				version split: ['f', 'a', 'r']
				{'string': 'f/a/r', 'rgx': '((f))/((a))/((_))/((r))/((_))$'}
				_____REMOVING________['f', 'a', 'r']
				version split: ['f', 'a', '_', 'r']
				{'string': 'f/a/_/r', 'rgx': '((f))/((a))/((_))/((r))/((_))$'}
				_____REMOVING________['f', 'a', '_', 'r']
				version split: ['f', 'a', 'r', '_']
				{'string': 'f/a/r/_', 'rgx': '((f))/((a))/((_))/((r))/((_))$'}
				_____REMOVING________['f', 'a', 'r', '_']
				version split: ['f', 'a', '_', 'r', '_']
				{'string': 'f/a/_/r/_', 'rgx': '((f))/((a))/((_))/((r))/((_))$'}
				ANALYSING: fer
					resolving (2)
					> version: f/e/r
					> version: f/e/_/r
					RESULT:  ['_']
				adding dashed alternative: ['f', 'e', 'r', '_']
				adding dashed alternative: ['f', 'e', '_', 'r', '_']
				f/e/r(CVC)
f/e/_/r(CVAC)
f/e/r/_(CVCA)
f/e/_/r/_(CVACA)
				version split: ['f', 'e', 'r']
				{'string': 'f/e/r', 'rgx': '((f))/((e))/((_))/((r))/((_))$'}
				_____REMOVING________['f', 'e', 'r']
				version split: ['f', 'e', '_', 'r']
				{'string': 'f/e/_/r', 'rgx': '((f))/((e))/((_))/((r))/((_))$'}
				_____REMOVING________['f', 'e', '_', 'r']
				version split: ['f', 'e', 'r', '_']
				{'string': 'f/e/r/_', 'rgx': '((f))/((e))/((_))/((r))/((_))$'}
				_____REMOVING________['f', 'e', 'r', '_']
				version split: ['f', 'e', '_', 'r', '_']
				{'string': 'f/e/_/r/_', 'rgx': '((f))/((e))/((_))/((r))/((_))$'}
				ANALYSING: fere
					resolving (2)
					> version: f/e/r/e
					> version: f/e/_/r/e
					TRYING: e
					RESULT:  ['e']
				version split: ['f', 'e', 'r', 'e']
				{'string': 'f/e/r/e', 'rgx': '((f))/((e))/((_))/((r))/((e))$'}
				_____REMOVING________['f', 'e', 'r', 'e']
				version split: ['f', 'e', '_', 'r', 'e']
				{'string': 'f/e/_/r/e', 'rgx': '((f))/((e))/((_))/((r))/((e))$'}
				ANALYSING: fier
					resolving (3)
					> version: f/i/e/r
					> version: f/i/e/r
					> version: f/ie/r
					RESULT:  ['_']
				adding dashed alternative: ['f', 'i', 'e', 'r', '_']
				adding dashed alternative: ['f', 'i', 'e', 'r', '_']
				adding dashed alternative: ['f', 'ie', 'r', '_']
				f/i/e/r(CCVC)
f/i/e/r(CVVC)
f/ie/r(CVC)
f/i/e/r/_(CAVCA)
f/i/e/r/_(CAVCA)
f/ie/r/_(CVCA)
				version split: ['f', 'i', 'e', 'r']
				{'string': 'f/i/e/r', 'rgx': '((f))/((ie)|(i))/((e))/((r))/((_))$'}
				_____REMOVING________['f', 'i', 'e', 'r']
				version split: ['f', 'i', 'e', 'r']
				{'string': 'f/i/e/r', 'rgx': '((f))/((ie)|(i))/((e))/((r))/((_))$'}
				_____REMOVING________['f', 'i', 'e', 'r']
				version split: ['f', 'ie', 'r']
				{'string': 'f/ie/r', 'rgx': '((f))/((ie)|(i))/((e))/((r))/((_))$'}
				_____REMOVING________['f', 'ie', 'r']
				version split: ['f', 'i', 'e', 'r', '_']
				{'string': 'f/i/e/r/_', 'rgx': '((f))/((ie)|(i))/((e))/((r))/((_))$'}
				version split: ['f', 'i', 'e', 'r', '_']
				{'string': 'f/i/e/r/_', 'rgx': '((f))/((ie)|(i))/((e))/((r))/((_))$'}
				version split: ['f', 'ie', 'r', '_']
				{'string': 'f/ie/r/_', 'rgx': '((f))/((ie)|(i))/((e))/((r))/((_))$'}
				_____REMOVING________['f', 'ie', 'r', '_']
				ANALYSING: fir
					resolving (4)
					> version: f/i/r
					> version: f/i/r
					> version: f/i/_/r
					> version: f/i/_/r
					RESULT:  ['_']
				adding dashed alternative: ['f', 'i', 'r', '_']
				adding dashed alternative: ['f', 'i', 'r', '_']
				adding dashed alternative: ['f', 'i', '_', 'r', '_']
				adding dashed alternative: ['f', 'i', '_', 'r', '_']
				f/i/r(CCC)
f/i/r(CVC)
f/i/_/r(CAAC)
f/i/_/r(CAAC)
f/i/r/_(CACA)
f/i/r/_(CACA)
f/i/_/r/_(CAACA)
f/i/_/r/_(CAACA)
				version split: ['f', 'i', 'r']
				{'string': 'f/i/r', 'rgx': '((f))/((i))/((_))/((r))/((_))$'}
				_____REMOVING________['f', 'i', 'r']
				version split: ['f', 'i', 'r']
				{'string': 'f/i/r', 'rgx': '((f))/((i))/((_))/((r))/((_))$'}
				_____REMOVING________['f', 'i', 'r']
				version split: ['f', 'i', '_', 'r']
				{'string': 'f/i/_/r', 'rgx': '((f))/((i))/((_))/((r))/((_))$'}
				_____REMOVING________['f', 'i', '_', 'r']
				version split: ['f', 'i', '_', 'r']
				{'string': 'f/i/_/r', 'rgx': '((f))/((i))/((_))/((r))/((_))$'}
				_____REMOVING________['f', 'i', '_', 'r']
				version split: ['f', 'i', 'r', '_']
				{'string': 'f/i/r/_', 'rgx': '((f))/((i))/((_))/((r))/((_))$'}
				_____REMOVING________['f', 'i', 'r', '_']
				version split: ['f', 'i', 'r', '_']
				{'string': 'f/i/r/_', 'rgx': '((f))/((i))/((_))/((r))/((_))$'}
				_____REMOVING________['f', 'i', 'r', '_']
				version split: ['f', 'i', '_', 'r', '_']
				{'string': 'f/i/_/r/_', 'rgx': '((f))/((i))/((_))/((r))/((_))$'}
				version split: ['f', 'i', '_', 'r', '_']
				{'string': 'f/i/_/r/_', 'rgx': '((f))/((i))/((_))/((r))/((_))$'}
				ANALYSING: fire
					resolving (4)
					> version: f/i/r/e
					> version: f/i/r/e
					> version: f/i/_/r/e
					TRYING: e
					> version: f/i/_/r/e
					TRYING: e
					RESULT:  ['e']
				version split: ['f', 'i', 'r', 'e']
				{'string': 'f/i/r/e', 'rgx': '((f))/((i))/((_))/((r))/((e))$'}
				_____REMOVING________['f', 'i', 'r', 'e']
				version split: ['f', 'i', 'r', 'e']
				{'string': 'f/i/r/e', 'rgx': '((f))/((i))/((_))/((r))/((e))$'}
				_____REMOVING________['f', 'i', 'r', 'e']
				version split: ['f', 'i', '_', 'r', 'e']
				{'string': 'f/i/_/r/e', 'rgx': '((f))/((i))/((_))/((r))/((e))$'}
				version split: ['f', 'i', '_', 'r', 'e']
				{'string': 'f/i/_/r/e', 'rgx': '((f))/((i))/((_))/((r))/((e))$'}
				ANALYSING: fires
					resolving (4)
					> version: f/i/r/e/s
					TRYING: s
					> version: f/i/r/e/s
					TRYING: s
					> version: f/i/_/r/e/s
					TRYING: e
					> version: f/i/_/r/e/s
					TRYING: e
					RESULT:  ['e']
				version split: ['f', 'i', 'r', 'e', 's']
				{'string': 'f/i/r/e/s', 'rgx': '((f))/((i))/((_))/((r))/((e))$'}
				_____REMOVING________['f', 'i', 'r', 'e', 's']
				version split: ['f', 'i', 'r', 'e', 's']
				{'string': 'f/i/r/e/s', 'rgx': '((f))/((i))/((_))/((r))/((e))$'}
				_____REMOVING________['f', 'i', 'r', 'e', 's']
				version split: ['f', 'i', '_', 'r', 'e', 's']
				{'string': 'f/i/_/r/e/s', 'rgx': '((f))/((i))/((_))/((r))/((e))$'}
				_____REMOVING________['f', 'i', '_', 'r', 'e', 's']
				version split: ['f', 'i', '_', 'r', 'e', 's']
				{'string': 'f/i/_/r/e/s', 'rgx': '((f))/((i))/((_))/((r))/((e))$'}
				_____REMOVING________['f', 'i', '_', 'r', 'e', 's']
				ANALYSING: fu
					resolving (8)
					> version: f/u
					> version: f/u
					> version: f/u/_
					> version: f/u/_
					> version: f/u/_
					> version: f/u/_
					> version: f/u/_/_
					> version: f/u/_/_
					RESULT:  ['_']
				adding dashed alternative: ['f', 'u', '_']
				adding dashed alternative: ['f', 'u', '_']
				adding dashed alternative: ['f', 'u', '_', '_']
				adding dashed alternative: ['f', 'u', '_', '_']
				adding dashed alternative: ['f', 'u', '_', '_']
				adding dashed alternative: ['f', 'u', '_', '_']
				adding dashed alternative: ['f', 'u', '_', '_', '_']
				adding dashed alternative: ['f', 'u', '_', '_', '_']
				f/u(CC)
f/u(CV)
f/u/_(CAA)
f/u/_(CAA)
f/u/_(CAA)
f/u/_(CAA)
f/u/_/_(CAAA)
f/u/_/_(CAAA)
f/u/_(CAA)
f/u/_(CAA)
f/u/_/_(CAAA)
f/u/_/_(CAAA)
f/u/_/_(CAAA)
f/u/_/_(CAAA)
f/u/_/_/_(CAAAA)
f/u/_/_/_(CAAAA)
				version split: ['f', 'u']
				{'string': 'f/u', 'rgx': '((f))/((u))/((_))/((_))/((_))$'}
				_____REMOVING________['f', 'u']
				version split: ['f', 'u']
				{'string': 'f/u', 'rgx': '((f))/((u))/((_))/((_))/((_))$'}
				_____REMOVING________['f', 'u']
				version split: ['f', 'u', '_']
				{'string': 'f/u/_', 'rgx': '((f))/((u))/((_))/((_))/((_))$'}
				_____REMOVING________['f', 'u', '_']
				version split: ['f', 'u', '_']
				{'string': 'f/u/_', 'rgx': '((f))/((u))/((_))/((_))/((_))$'}
				_____REMOVING________['f', 'u', '_']
				version split: ['f', 'u', '_']
				{'string': 'f/u/_', 'rgx': '((f))/((u))/((_))/((_))/((_))$'}
				_____REMOVING________['f', 'u', '_']
				version split: ['f', 'u', '_']
				{'string': 'f/u/_', 'rgx': '((f))/((u))/((_))/((_))/((_))$'}
				_____REMOVING________['f', 'u', '_']
				version split: ['f', 'u', '_', '_']
				{'string': 'f/u/_/_', 'rgx': '((f))/((u))/((_))/((_))/((_))$'}
				_____REMOVING________['f', 'u', '_', '_']
				version split: ['f', 'u', '_', '_']
				{'string': 'f/u/_/_', 'rgx': '((f))/((u))/((_))/((_))/((_))$'}
				_____REMOVING________['f', 'u', '_', '_']
				version split: ['f', 'u', '_']
				{'string': 'f/u/_', 'rgx': '((f))/((u))/((_))/((_))/((_))$'}
				_____REMOVING________['f', 'u', '_']
				version split: ['f', 'u', '_']
				{'string': 'f/u/_', 'rgx': '((f))/((u))/((_))/((_))/((_))$'}
				_____REMOVING________['f', 'u', '_']
				version split: ['f', 'u', '_', '_']
				{'string': 'f/u/_/_', 'rgx': '((f))/((u))/((_))/((_))/((_))$'}
				_____REMOVING________['f', 'u', '_', '_']
				version split: ['f', 'u', '_', '_']
				{'string': 'f/u/_/_', 'rgx': '((f))/((u))/((_))/((_))/((_))$'}
				_____REMOVING________['f', 'u', '_', '_']
				version split: ['f', 'u', '_', '_']
				{'string': 'f/u/_/_', 'rgx': '((f))/((u))/((_))/((_))/((_))$'}
				_____REMOVING________['f', 'u', '_', '_']
				version split: ['f', 'u', '_', '_']
				{'string': 'f/u/_/_', 'rgx': '((f))/((u))/((_))/((_))/((_))$'}
				_____REMOVING________['f', 'u', '_', '_']
				version split: ['f', 'u', '_', '_', '_']
				{'string': 'f/u/_/_/_', 'rgx': '((f))/((u))/((_))/((_))/((_))$'}
				version split: ['f', 'u', '_', '_', '_']
				{'string': 'f/u/_/_/_', 'rgx': '((f))/((u))/((_))/((_))/((_))$'}
				ANALYSING: fuir
					resolving (3)
					> version: f/u/i/r
					> version: f/u/i/r
					> version: f/ui/r
					RESULT:  ['_']
				adding dashed alternative: ['f', 'u', 'i', 'r', '_']
				adding dashed alternative: ['f', 'u', 'i', 'r', '_']
				adding dashed alternative: ['f', 'ui', 'r', '_']
				f/u/i/r(CCCC)
f/u/i/r(CVVC)
f/ui/r(CVC)
f/u/i/r/_(CAACA)
f/u/i/r/_(CAACA)
f/ui/r/_(CVCA)
				version split: ['f', 'u', 'i', 'r']
				{'string': 'f/u/i/r', 'rgx': '((f))/((ui)|(u))/((i))/((r))/((_))$'}
				_____REMOVING________['f', 'u', 'i', 'r']
				version split: ['f', 'u', 'i', 'r']
				{'string': 'f/u/i/r', 'rgx': '((f))/((ui)|(u))/((i))/((r))/((_))$'}
				_____REMOVING________['f', 'u', 'i', 'r']
				version split: ['f', 'ui', 'r']
				{'string': 'f/ui/r', 'rgx': '((f))/((ui)|(u))/((i))/((r))/((_))$'}
				_____REMOVING________['f', 'ui', 'r']
				version split: ['f', 'u', 'i', 'r', '_']
				{'string': 'f/u/i/r/_', 'rgx': '((f))/((ui)|(u))/((i))/((r))/((_))$'}
				version split: ['f', 'u', 'i', 'r', '_']
				{'string': 'f/u/i/r/_', 'rgx': '((f))/((ui)|(u))/((i))/((r))/((_))$'}
				version split: ['f', 'ui', 'r', '_']
				{'string': 'f/ui/r/_', 'rgx': '((f))/((ui)|(u))/((i))/((r))/((_))$'}
				_____REMOVING________['f', 'ui', 'r', '_']
				ANALYSING: fuire
					resolving (3)
					> version: f/u/i/r/e
					TRYING: e
					> version: f/u/i/r/e
					TRYING: e
					> version: f/ui/r/e
					RESULT:  ['e']
				version split: ['f', 'u', 'i', 'r', 'e']
				{'string': 'f/u/i/r/e', 'rgx': '((f))/((ui)|(u))/((i))/((r))/((e))$'}
				version split: ['f', 'u', 'i', 'r', 'e']
				{'string': 'f/u/i/r/e', 'rgx': '((f))/((ui)|(u))/((i))/((r))/((e))$'}
				version split: ['f', 'ui', 'r', 'e']
				{'string': 'f/ui/r/e', 'rgx': '((f))/((ui)|(u))/((i))/((r))/((e))$'}
				_____REMOVING________['f', 'ui', 'r', 'e']
				ANALYSING: fur
					resolving (4)
					> version: f/u/r
					> version: f/u/r
					> version: f/u/_/r
					> version: f/u/_/r
					RESULT:  ['_']
				adding dashed alternative: ['f', 'u', 'r', '_']
				adding dashed alternative: ['f', 'u', 'r', '_']
				adding dashed alternative: ['f', 'u', '_', 'r', '_']
				adding dashed alternative: ['f', 'u', '_', 'r', '_']
				f/u/r(CCC)
f/u/r(CVC)
f/u/_/r(CAAC)
f/u/_/r(CAAC)
f/u/r/_(CACA)
f/u/r/_(CACA)
f/u/_/r/_(CAACA)
f/u/_/r/_(CAACA)
				version split: ['f', 'u', 'r']
				{'string': 'f/u/r', 'rgx': '((f))/((u))/((_))/((r))/((_))$'}
				_____REMOVING________['f', 'u', 'r']
				version split: ['f', 'u', 'r']
				{'string': 'f/u/r', 'rgx': '((f))/((u))/((_))/((r))/((_))$'}
				_____REMOVING________['f', 'u', 'r']
				version split: ['f', 'u', '_', 'r']
				{'string': 'f/u/_/r', 'rgx': '((f))/((u))/((_))/((r))/((_))$'}
				_____REMOVING________['f', 'u', '_', 'r']
				version split: ['f', 'u', '_', 'r']
				{'string': 'f/u/_/r', 'rgx': '((f))/((u))/((_))/((r))/((_))$'}
				_____REMOVING________['f', 'u', '_', 'r']
				version split: ['f', 'u', 'r', '_']
				{'string': 'f/u/r/_', 'rgx': '((f))/((u))/((_))/((r))/((_))$'}
				_____REMOVING________['f', 'u', 'r', '_']
				version split: ['f', 'u', 'r', '_']
				{'string': 'f/u/r/_', 'rgx': '((f))/((u))/((_))/((r))/((_))$'}
				_____REMOVING________['f', 'u', 'r', '_']
				version split: ['f', 'u', '_', 'r', '_']
				{'string': 'f/u/_/r/_', 'rgx': '((f))/((u))/((_))/((r))/((_))$'}
				version split: ['f', 'u', '_', 'r', '_']
				{'string': 'f/u/_/r/_', 'rgx': '((f))/((u))/((_))/((r))/((_))$'}
				ANALYSING: fure
					resolving (4)
					> version: f/u/r/e
					> version: f/u/r/e
					> version: f/u/_/r/e
					TRYING: e
					> version: f/u/_/r/e
					TRYING: e
					RESULT:  ['e']
				version split: ['f', 'u', 'r', 'e']
				{'string': 'f/u/r/e', 'rgx': '((f))/((u))/((_))/((r))/((e))$'}
				_____REMOVING________['f', 'u', 'r', 'e']
				version split: ['f', 'u', 'r', 'e']
				{'string': 'f/u/r/e', 'rgx': '((f))/((u))/((_))/((r))/((e))$'}
				_____REMOVING________['f', 'u', 'r', 'e']
				version split: ['f', 'u', '_', 'r', 'e']
				{'string': 'f/u/_/r/e', 'rgx': '((f))/((u))/((_))/((r))/((e))$'}
				version split: ['f', 'u', '_', 'r', 'e']
				{'string': 'f/u/_/r/e', 'rgx': '((f))/((u))/((_))/((r))/((e))$'}
				ANALYSING: fures
					resolving (4)
					> version: f/u/r/e/s
					TRYING: s
					> version: f/u/r/e/s
					TRYING: s
					> version: f/u/_/r/e/s
					TRYING: e
					> version: f/u/_/r/e/s
					TRYING: e
					RESULT:  ['e']
				version split: ['f', 'u', 'r', 'e', 's']
				{'string': 'f/u/r/e/s', 'rgx': '((f))/((u))/((_))/((r))/((e))$'}
				_____REMOVING________['f', 'u', 'r', 'e', 's']
				version split: ['f', 'u', 'r', 'e', 's']
				{'string': 'f/u/r/e/s', 'rgx': '((f))/((u))/((_))/((r))/((e))$'}
				_____REMOVING________['f', 'u', 'r', 'e', 's']
				version split: ['f', 'u', '_', 'r', 'e', 's']
				{'string': 'f/u/_/r/e/s', 'rgx': '((f))/((u))/((_))/((r))/((e))$'}
				_____REMOVING________['f', 'u', '_', 'r', 'e', 's']
				version split: ['f', 'u', '_', 'r', 'e', 's']
				{'string': 'f/u/_/r/e/s', 'rgx': '((f))/((u))/((_))/((r))/((e))$'}
				_____REMOVING________['f', 'u', '_', 'r', 'e', 's']
				ANALYSING: fuyr
					resolving (3)
					> version: f/u/y/r
					> version: f/u/y/r
					> version: f/uy/r
					RESULT:  ['_']
				adding dashed alternative: ['f', 'u', 'y', 'r', '_']
				adding dashed alternative: ['f', 'u', 'y', 'r', '_']
				adding dashed alternative: ['f', 'uy', 'r', '_']
				f/u/y/r(CCCC)
f/u/y/r(CVVC)
f/uy/r(CVC)
f/u/y/r/_(CAACA)
f/u/y/r/_(CAACA)
f/uy/r/_(CVCA)
				version split: ['f', 'u', 'y', 'r']
				{'string': 'f/u/y/r', 'rgx': '((f))/((uy)|(u))/((y))/((r))/((_))$'}
				_____REMOVING________['f', 'u', 'y', 'r']
				version split: ['f', 'u', 'y', 'r']
				{'string': 'f/u/y/r', 'rgx': '((f))/((uy)|(u))/((y))/((r))/((_))$'}
				_____REMOVING________['f', 'u', 'y', 'r']
				version split: ['f', 'uy', 'r']
				{'string': 'f/uy/r', 'rgx': '((f))/((uy)|(u))/((y))/((r))/((_))$'}
				_____REMOVING________['f', 'uy', 'r']
				version split: ['f', 'u', 'y', 'r', '_']
				{'string': 'f/u/y/r/_', 'rgx': '((f))/((uy)|(u))/((y))/((r))/((_))$'}
				version split: ['f', 'u', 'y', 'r', '_']
				{'string': 'f/u/y/r/_', 'rgx': '((f))/((uy)|(u))/((y))/((r))/((_))$'}
				version split: ['f', 'uy', 'r', '_']
				{'string': 'f/uy/r/_', 'rgx': '((f))/((uy)|(u))/((y))/((r))/((_))$'}
				_____REMOVING________['f', 'uy', 'r', '_']
				ANALYSING: fuyre
					resolving (3)
					> version: f/u/y/r/e
					TRYING: e
					> version: f/u/y/r/e
					TRYING: e
					> version: f/uy/r/e
					RESULT:  ['e']
				version split: ['f', 'u', 'y', 'r', 'e']
				{'string': 'f/u/y/r/e', 'rgx': '((f))/((uy)|(u))/((y))/((r))/((e))$'}
				version split: ['f', 'u', 'y', 'r', 'e']
				{'string': 'f/u/y/r/e', 'rgx': '((f))/((uy)|(u))/((y))/((r))/((e))$'}
				version split: ['f', 'uy', 'r', 'e']
				{'string': 'f/uy/r/e', 'rgx': '((f))/((uy)|(u))/((y))/((r))/((e))$'}
				_____REMOVING________['f', 'uy', 'r', 'e']
				ANALYSING: fyr
					resolving (4)
					> version: f/y/r
					> version: f/y/r
					> version: f/y/_/r
					> version: f/y/_/r
					RESULT:  ['_']
				adding dashed alternative: ['f', 'y', 'r', '_']
				adding dashed alternative: ['f', 'y', 'r', '_']
				adding dashed alternative: ['f', 'y', '_', 'r', '_']
				adding dashed alternative: ['f', 'y', '_', 'r', '_']
				f/y/r(CCC)
f/y/r(CVC)
f/y/_/r(CAAC)
f/y/_/r(CAAC)
f/y/r/_(CACA)
f/y/r/_(CACA)
f/y/_/r/_(CAACA)
f/y/_/r/_(CAACA)
				version split: ['f', 'y', 'r']
				{'string': 'f/y/r', 'rgx': '((f))/((y))/((_))/((r))/((_))$'}
				_____REMOVING________['f', 'y', 'r']
				version split: ['f', 'y', 'r']
				{'string': 'f/y/r', 'rgx': '((f))/((y))/((_))/((r))/((_))$'}
				_____REMOVING________['f', 'y', 'r']
				version split: ['f', 'y', '_', 'r']
				{'string': 'f/y/_/r', 'rgx': '((f))/((y))/((_))/((r))/((_))$'}
				_____REMOVING________['f', 'y', '_', 'r']
				version split: ['f', 'y', '_', 'r']
				{'string': 'f/y/_/r', 'rgx': '((f))/((y))/((_))/((r))/((_))$'}
				_____REMOVING________['f', 'y', '_', 'r']
				version split: ['f', 'y', 'r', '_']
				{'string': 'f/y/r/_', 'rgx': '((f))/((y))/((_))/((r))/((_))$'}
				_____REMOVING________['f', 'y', 'r', '_']
				version split: ['f', 'y', 'r', '_']
				{'string': 'f/y/r/_', 'rgx': '((f))/((y))/((_))/((r))/((_))$'}
				_____REMOVING________['f', 'y', 'r', '_']
				version split: ['f', 'y', '_', 'r', '_']
				{'string': 'f/y/_/r/_', 'rgx': '((f))/((y))/((_))/((r))/((_))$'}
				version split: ['f', 'y', '_', 'r', '_']
				{'string': 'f/y/_/r/_', 'rgx': '((f))/((y))/((_))/((r))/((_))$'}
				ANALYSING: fyre
					resolving (4)
					> version: f/y/r/e
					> version: f/y/r/e
					> version: f/y/_/r/e
					TRYING: e
					> version: f/y/_/r/e
					TRYING: e
					RESULT:  ['e']
				version split: ['f', 'y', 'r', 'e']
				{'string': 'f/y/r/e', 'rgx': '((f))/((y))/((_))/((r))/((e))$'}
				_____REMOVING________['f', 'y', 'r', 'e']
				version split: ['f', 'y', 'r', 'e']
				{'string': 'f/y/r/e', 'rgx': '((f))/((y))/((_))/((r))/((e))$'}
				_____REMOVING________['f', 'y', 'r', 'e']
				version split: ['f', 'y', '_', 'r', 'e']
				{'string': 'f/y/_/r/e', 'rgx': '((f))/((y))/((_))/((r))/((e))$'}
				version split: ['f', 'y', '_', 'r', 'e']
				{'string': 'f/y/_/r/e', 'rgx': '((f))/((y))/((_))/((r))/((e))$'}
				ANALYSING: uer
					resolving (6)
					> version: u/e/r
					> version: u/e/r
					> version: ue/r
					> version: u/e/_/r
					> version: u/e/_/r
					> version: ue/r/_
					RESULT:  ['_']
				adding dashed alternative: ['u', 'e', 'r', '_']
				adding dashed alternative: ['u', 'e', 'r', '_']
				adding dashed alternative: ['ue', 'r', '_']
				adding dashed alternative: ['u', 'e', '_', 'r', '_']
				adding dashed alternative: ['u', 'e', '_', 'r', '_']
				adding dashed alternative: ['ue', 'r', '_', '_']
				u/e/r(CVC)
u/e/r(VVC)
ue/r(VC)
u/e/_/r(AVAC)
u/e/_/r(AVAC)
ue/r/_(VCA)
u/e/r/_(AVCA)
u/e/r/_(AVCA)
ue/r/_(VCA)
u/e/_/r/_(AVACA)
u/e/_/r/_(AVACA)
ue/r/_/_(VCAA)
				version split: ['u', 'e', 'r']
				{'string': 'u/e/r', 'rgx': '((u))/((e))/((_))/((r))/((_))$'}
				_____REMOVING________['u', 'e', 'r']
				version split: ['u', 'e', 'r']
				{'string': 'u/e/r', 'rgx': '((u))/((e))/((_))/((r))/((_))$'}
				_____REMOVING________['u', 'e', 'r']
				version split: ['ue', 'r']
				{'string': 'ue/r', 'rgx': '((u))/((e))/((_))/((r))/((_))$'}
				_____REMOVING________['ue', 'r']
				version split: ['u', 'e', '_', 'r']
				{'string': 'u/e/_/r', 'rgx': '((u))/((e))/((_))/((r))/((_))$'}
				_____REMOVING________['u', 'e', '_', 'r']
				version split: ['u', 'e', '_', 'r']
				{'string': 'u/e/_/r', 'rgx': '((u))/((e))/((_))/((r))/((_))$'}
				_____REMOVING________['u', 'e', '_', 'r']
				version split: ['ue', 'r', '_']
				{'string': 'ue/r/_', 'rgx': '((u))/((e))/((_))/((r))/((_))$'}
				_____REMOVING________['ue', 'r', '_']
				version split: ['u', 'e', 'r', '_']
				{'string': 'u/e/r/_', 'rgx': '((u))/((e))/((_))/((r))/((_))$'}
				_____REMOVING________['u', 'e', 'r', '_']
				version split: ['u', 'e', 'r', '_']
				{'string': 'u/e/r/_', 'rgx': '((u))/((e))/((_))/((r))/((_))$'}
				_____REMOVING________['u', 'e', 'r', '_']
				version split: ['ue', 'r', '_']
				{'string': 'ue/r/_', 'rgx': '((u))/((e))/((_))/((r))/((_))$'}
				_____REMOVING________['ue', 'r', '_']
				version split: ['u', 'e', '_', 'r', '_']
				{'string': 'u/e/_/r/_', 'rgx': '((u))/((e))/((_))/((r))/((_))$'}
				version split: ['u', 'e', '_', 'r', '_']
				{'string': 'u/e/_/r/_', 'rgx': '((u))/((e))/((_))/((r))/((_))$'}
				version split: ['ue', 'r', '_', '_']
				{'string': 'ue/r/_/_', 'rgx': '((u))/((e))/((_))/((r))/((_))$'}
				_____REMOVING________['ue', 'r', '_', '_']
				ANALYSING: uere
					resolving (6)
					> version: u/e/r/e
					> version: u/e/r/e
					> version: ue/r/e
					> version: u/e/r/_/e
					TRYING: e
					> version: u/e/r/_/e
					TRYING: e
					> version: ue/r/e/_
					RESULT:  ['e']
				version split: ['u', 'e', 'r', 'e']
				{'string': 'u/e/r/e', 'rgx': '((u))/((e))/((e))/((_))/((e))$'}
				_____REMOVING________['u', 'e', 'r', 'e']
				version split: ['u', 'e', 'r', 'e']
				{'string': 'u/e/r/e', 'rgx': '((u))/((e))/((e))/((_))/((e))$'}
				_____REMOVING________['u', 'e', 'r', 'e']
				version split: ['ue', 'r', 'e']
				{'string': 'ue/r/e', 'rgx': '((u))/((e))/((e))/((_))/((e))$'}
				_____REMOVING________['ue', 'r', 'e']
				version split: ['u', 'e', 'r', '_', 'e']
				{'string': 'u/e/r/_/e', 'rgx': '((u))/((e))/((e))/((_))/((e))$'}
				_____REMOVING________['u', 'e', 'r', '_', 'e']
				version split: ['u', 'e', 'r', '_', 'e']
				{'string': 'u/e/r/_/e', 'rgx': '((u))/((e))/((e))/((_))/((e))$'}
				_____REMOVING________['u', 'e', 'r', '_', 'e']
				version split: ['ue', 'r', 'e', '_']
				{'string': 'ue/r/e/_', 'rgx': '((u))/((e))/((e))/((_))/((e))$'}
				_____REMOVING________['ue', 'r', 'e', '_']
				ANALYSING: ueréé
					resolving (12)
					> version: u/e/r/é/é
					TRYING: é
					> version: u/e/r/é/é
					TRYING: é
					> version: u/e/r/éé
					> version: u/e/r/éé
					> version: ue/r/é/é
					> version: ue/r/éé
					> version: u/e/_/r/é/é
					TRYING: é
					> version: u/e/_/r/é/é
					TRYING: é
					> version: u/e/_/r/éé
					TRYING: éé
					>>> MULTIPLE RESOLVE OPTIONS: {'é', 'éé'}
					> version: u/e/_/r/éé
					TRYING: éé
					>>> MULTIPLE RESOLVE OPTIONS: {'é', 'éé'}
					> version: ue/r/_/é/é
					TRYING: é
					>>> MULTIPLE RESOLVE OPTIONS: {'é', 'éé'}
					> version: ue/r/_/éé
					>>> MULTIPLE RESOLVE OPTIONS: {'é', 'éé'}
					RESULT:  ['é', 'éé']
				version split: ['u', 'e', 'r', 'é', 'é']
				{'string': 'u/e/r/é/é', 'rgx': '((u))/((e))/((_))/((r))/((é)|(éé))$'}
				_____REMOVING________['u', 'e', 'r', 'é', 'é']
				version split: ['u', 'e', 'r', 'é', 'é']
				{'string': 'u/e/r/é/é', 'rgx': '((u))/((e))/((_))/((r))/((é)|(éé))$'}
				_____REMOVING________['u', 'e', 'r', 'é', 'é']
				version split: ['u', 'e', 'r', 'éé']
				{'string': 'u/e/r/éé', 'rgx': '((u))/((e))/((_))/((r))/((é)|(éé))$'}
				_____REMOVING________['u', 'e', 'r', 'éé']
				version split: ['u', 'e', 'r', 'éé']
				{'string': 'u/e/r/éé', 'rgx': '((u))/((e))/((_))/((r))/((é)|(éé))$'}
				_____REMOVING________['u', 'e', 'r', 'éé']
				version split: ['ue', 'r', 'é', 'é']
				{'string': 'ue/r/é/é', 'rgx': '((u))/((e))/((_))/((r))/((é)|(éé))$'}
				_____REMOVING________['ue', 'r', 'é', 'é']
				version split: ['ue', 'r', 'éé']
				{'string': 'ue/r/éé', 'rgx': '((u))/((e))/((_))/((r))/((é)|(éé))$'}
				_____REMOVING________['ue', 'r', 'éé']
				version split: ['u', 'e', '_', 'r', 'é', 'é']
				{'string': 'u/e/_/r/é/é', 'rgx': '((u))/((e))/((_))/((r))/((é)|(éé))$'}
				_____REMOVING________['u', 'e', '_', 'r', 'é', 'é']
				version split: ['u', 'e', '_', 'r', 'é', 'é']
				{'string': 'u/e/_/r/é/é', 'rgx': '((u))/((e))/((_))/((r))/((é)|(éé))$'}
				_____REMOVING________['u', 'e', '_', 'r', 'é', 'é']
				version split: ['u', 'e', '_', 'r', 'éé']
				{'string': 'u/e/_/r/éé', 'rgx': '((u))/((e))/((_))/((r))/((é)|(éé))$'}
				version split: ['u', 'e', '_', 'r', 'éé']
				{'string': 'u/e/_/r/éé', 'rgx': '((u))/((e))/((_))/((r))/((é)|(éé))$'}
				version split: ['ue', 'r', '_', 'é', 'é']
				{'string': 'ue/r/_/é/é', 'rgx': '((u))/((e))/((_))/((r))/((é)|(éé))$'}
				_____REMOVING________['ue', 'r', '_', 'é', 'é']
				version split: ['ue', 'r', '_', 'éé']
				{'string': 'ue/r/_/éé', 'rgx': '((u))/((e))/((_))/((r))/((é)|(éé))$'}
				_____REMOVING________['ue', 'r', '_', 'éé']
				ANALYSING: uur
					resolving (4)
					> version: u/u/r
					> version: u/u/r
					> version: u/u/_/r
					> version: u/u/_/r
					RESULT:  ['_']
				adding dashed alternative: ['u', 'u', 'r', '_']
				adding dashed alternative: ['u', 'u', 'r', '_']
				adding dashed alternative: ['u', 'u', '_', 'r', '_']
				adding dashed alternative: ['u', 'u', '_', 'r', '_']
				u/u/r(CCC)
u/u/r(VVC)
u/u/_/r(AAAC)
u/u/_/r(AAAC)
u/u/r/_(AACA)
u/u/r/_(AACA)
u/u/_/r/_(AAACA)
u/u/_/r/_(AAACA)
				version split: ['u', 'u', 'r']
				{'string': 'u/u/r', 'rgx': '((u))/((u))/((_))/((r))/((_))$'}
				_____REMOVING________['u', 'u', 'r']
				version split: ['u', 'u', 'r']
				{'string': 'u/u/r', 'rgx': '((u))/((u))/((_))/((r))/((_))$'}
				_____REMOVING________['u', 'u', 'r']
				version split: ['u', 'u', '_', 'r']
				{'string': 'u/u/_/r', 'rgx': '((u))/((u))/((_))/((r))/((_))$'}
				_____REMOVING________['u', 'u', '_', 'r']
				version split: ['u', 'u', '_', 'r']
				{'string': 'u/u/_/r', 'rgx': '((u))/((u))/((_))/((r))/((_))$'}
				_____REMOVING________['u', 'u', '_', 'r']
				version split: ['u', 'u', 'r', '_']
				{'string': 'u/u/r/_', 'rgx': '((u))/((u))/((_))/((r))/((_))$'}
				_____REMOVING________['u', 'u', 'r', '_']
				version split: ['u', 'u', 'r', '_']
				{'string': 'u/u/r/_', 'rgx': '((u))/((u))/((_))/((r))/((_))$'}
				_____REMOVING________['u', 'u', 'r', '_']
				version split: ['u', 'u', '_', 'r', '_']
				{'string': 'u/u/_/r/_', 'rgx': '((u))/((u))/((_))/((r))/((_))$'}
				version split: ['u', 'u', '_', 'r', '_']
				{'string': 'u/u/_/r/_', 'rgx': '((u))/((u))/((_))/((r))/((_))$'}
				ANALYSING: ver
					resolving (4)
					> version: v/e/r
					> version: v/e/r
					> version: v/e/_/r
					> version: v/e/_/r
					RESULT:  ['_']
				adding dashed alternative: ['v', 'e', 'r', '_']
				adding dashed alternative: ['v', 'e', 'r', '_']
				adding dashed alternative: ['v', 'e', '_', 'r', '_']
				adding dashed alternative: ['v', 'e', '_', 'r', '_']
				v/e/r(CVC)
v/e/r(VVC)
v/e/_/r(AVAC)
v/e/_/r(AVAC)
v/e/r/_(AVCA)
v/e/r/_(AVCA)
v/e/_/r/_(AVACA)
v/e/_/r/_(AVACA)
				version split: ['v', 'e', 'r']
				{'string': 'v/e/r', 'rgx': '((v))/((e))/((_))/((r))/((_))$'}
				_____REMOVING________['v', 'e', 'r']
				version split: ['v', 'e', 'r']
				{'string': 'v/e/r', 'rgx': '((v))/((e))/((_))/((r))/((_))$'}
				_____REMOVING________['v', 'e', 'r']
				version split: ['v', 'e', '_', 'r']
				{'string': 'v/e/_/r', 'rgx': '((v))/((e))/((_))/((r))/((_))$'}
				_____REMOVING________['v', 'e', '_', 'r']
				version split: ['v', 'e', '_', 'r']
				{'string': 'v/e/_/r', 'rgx': '((v))/((e))/((_))/((r))/((_))$'}
				_____REMOVING________['v', 'e', '_', 'r']
				version split: ['v', 'e', 'r', '_']
				{'string': 'v/e/r/_', 'rgx': '((v))/((e))/((_))/((r))/((_))$'}
				_____REMOVING________['v', 'e', 'r', '_']
				version split: ['v', 'e', 'r', '_']
				{'string': 'v/e/r/_', 'rgx': '((v))/((e))/((_))/((r))/((_))$'}
				_____REMOVING________['v', 'e', 'r', '_']
				version split: ['v', 'e', '_', 'r', '_']
				{'string': 'v/e/_/r/_', 'rgx': '((v))/((e))/((_))/((r))/((_))$'}
				version split: ['v', 'e', '_', 'r', '_']
				{'string': 'v/e/_/r/_', 'rgx': '((v))/((e))/((_))/((r))/((_))$'}
				ANALYSING: vur
					resolving (4)
					> version: v/u/r
					> version: v/u/r
					> version: v/u/_/r
					> version: v/u/_/r
					RESULT:  ['_']
				adding dashed alternative: ['v', 'u', 'r', '_']
				adding dashed alternative: ['v', 'u', 'r', '_']
				adding dashed alternative: ['v', 'u', '_', 'r', '_']
				adding dashed alternative: ['v', 'u', '_', 'r', '_']
				v/u/r(CCC)
v/u/r(VVC)
v/u/_/r(AAAC)
v/u/_/r(AAAC)
v/u/r/_(AACA)
v/u/r/_(AACA)
v/u/_/r/_(AAACA)
v/u/_/r/_(AAACA)
				version split: ['v', 'u', 'r']
				{'string': 'v/u/r', 'rgx': '((v))/((u))/((_))/((r))/((_))$'}
				_____REMOVING________['v', 'u', 'r']
				version split: ['v', 'u', 'r']
				{'string': 'v/u/r', 'rgx': '((v))/((u))/((_))/((r))/((_))$'}
				_____REMOVING________['v', 'u', 'r']
				version split: ['v', 'u', '_', 'r']
				{'string': 'v/u/_/r', 'rgx': '((v))/((u))/((_))/((r))/((_))$'}
				_____REMOVING________['v', 'u', '_', 'r']
				version split: ['v', 'u', '_', 'r']
				{'string': 'v/u/_/r', 'rgx': '((v))/((u))/((_))/((r))/((_))$'}
				_____REMOVING________['v', 'u', '_', 'r']
				version split: ['v', 'u', 'r', '_']
				{'string': 'v/u/r/_', 'rgx': '((v))/((u))/((_))/((r))/((_))$'}
				_____REMOVING________['v', 'u', 'r', '_']
				version split: ['v', 'u', 'r', '_']
				{'string': 'v/u/r/_', 'rgx': '((v))/((u))/((_))/((r))/((_))$'}
				_____REMOVING________['v', 'u', 'r', '_']
				version split: ['v', 'u', '_', 'r', '_']
				{'string': 'v/u/_/r/_', 'rgx': '((v))/((u))/((_))/((r))/((_))$'}
				version split: ['v', 'u', '_', 'r', '_']
				{'string': 'v/u/_/r/_', 'rgx': '((v))/((u))/((_))/((r))/((_))$'}
		only one version left: ['f', 'a', 'i', 'r', '_']
		only one version left: ['f', 'a', '_', 'r', '_']
		only one version left: ['f', 'e', '_', 'r', '_']
		only one version left: ['f', 'e', '_', 'r', 'e']
		only one version left: ['f', 'i', 'e', 'r', '_']
		only one version left: ['f', 'i', '_', 'r', '_']
		only one version left: ['f', 'i', '_', 'r', 'e']
		FAIL: 
		only one version left: ['f', 'u', '_', '_', '_']
		only one version left: ['f', 'u', 'i', 'r', '_']
		only one version left: ['f', 'u', 'i', 'r', 'e']
		only one version left: ['f', 'u', '_', 'r', '_']
		only one version left: ['f', 'u', '_', 'r', 'e']
		FAIL: 
		only one version left: ['f', 'u', 'y', 'r', '_']
		only one version left: ['f', 'u', 'y', 'r', 'e']
		only one version left: ['f', 'y', '_', 'r', '_']
		only one version left: ['f', 'y', '_', 'r', 'e']
		only one version left: ['u', 'e', '_', 'r', '_']
		FAIL: 
		only one version left: ['u', 'e', '_', 'r', 'éé']
		only one version left: ['u', 'u', '_', 'r', '_']
		only one version left: ['v', 'e', '_', 'r', '_']
		only one version left: ['v', 'u', '_', 'r', '_']
		SPLIT: ['f', 'i', 'e', 'r', 'e']
		SPLIT: ['f', 'a', 'i', 'r', '_']
		['f', 'a', 'i', 'r', '_']
		['f', 'a', 'i', 'r', '_']
		SPLIT: ['f', 'a', '_', 'r', '_']
		['f', 'a', '_', 'r', '_']
		SPLIT: ['f', 'e', '_', 'r', '_']
		['f', 'e', '_', 'r', '_']
		SPLIT: ['f', 'e', '_', 'r', 'e']
		['f', 'e', '_', 'r', 'e']
		SPLIT: ['f', 'i', 'e', 'r', '_']
		['f', 'i', 'e', 'r', '_']
		['f', 'i', 'e', 'r', '_']
		SPLIT: ['f', 'i', '_', 'r', '_']
		['f', 'i', '_', 'r', '_']
		['f', 'i', '_', 'r', '_']
		SPLIT: ['f', 'i', '_', 'r', 'e']
		['f', 'i', '_', 'r', 'e']
		['f', 'i', '_', 'r', 'e']
		SPLIT: ['f', 'i', '_', 'r', 'e', '----!']
		SPLIT: ['f', 'u', '_', '_', '_']
		['f', 'u', '_', '_', '_']
		['f', 'u', '_', '_', '_']
		SPLIT: ['f', 'u', 'i', 'r', '_']
		['f', 'u', 'i', 'r', '_']
		['f', 'u', 'i', 'r', '_']
		SPLIT: ['f', 'u', 'i', 'r', 'e']
		['f', 'u', 'i', 'r', 'e']
		['f', 'u', 'i', 'r', 'e']
		SPLIT: ['f', 'u', '_', 'r', '_']
		['f', 'u', '_', 'r', '_']
		['f', 'u', '_', 'r', '_']
		SPLIT: ['f', 'u', '_', 'r', 'e']
		['f', 'u', '_', 'r', 'e']
		['f', 'u', '_', 'r', 'e']
		SPLIT: ['f', 'u', '_', 'r', 'e', '----!']
		SPLIT: ['f', 'u', 'y', 'r', '_']
		['f', 'u', 'y', 'r', '_']
		['f', 'u', 'y', 'r', '_']
		SPLIT: ['f', 'u', 'y', 'r', 'e']
		['f', 'u', 'y', 'r', 'e']
		['f', 'u', 'y', 'r', 'e']
		SPLIT: ['f', 'y', '_', 'r', '_']
		['f', 'y', '_', 'r', '_']
		['f', 'y', '_', 'r', '_']
		SPLIT: ['f', 'y', '_', 'r', 'e']
		['f', 'y', '_', 'r', 'e']
		['f', 'y', '_', 'r', 'e']
		SPLIT: ['u', 'e', '_', 'r', '_']
		['u', 'e', '_', 'r', '_']
		['u', 'e', '_', 'r', '_']
		SPLIT: ['u', 'e', 'e', '_', 'e', '----!']
		SPLIT: ['u', 'e', '_', 'r', 'éé']
		['u', 'e', '_', 'r', 'éé']
		['u', 'e', '_', 'r', 'éé']
		SPLIT: ['u', 'u', '_', 'r', '_']
		['u', 'u', '_', 'r', '_']
		['u', 'u', '_', 'r', '_']
		SPLIT: ['v', 'e', '_', 'r', '_']
		['v', 'e', '_', 'r', '_']
		['v', 'e', '_', 'r', '_']
		SPLIT: ['v', 'u', '_', 'r', '_']
		['v', 'u', '_', 'r', '_']
		['v', 'u', '_', 'r', '_']
		version for pattern CCVCV is INVALID
		[]
		3
		POSSIBLE CHANGE: 0 : Initial Fricative Voicing
		OVERVIEW: version for pattern CCVCV

faulty splits: 3
fire----! <-! fires
fure----! <-! fures
ueee----! <-! uere
f | i | e | r | e
f | a | i | r | _
f | a | _ | r | _
f | e | _ | r | _
f | e | _ | r | e
f | i | e | r | _
f | i | _ | r | _
f | i | _ | r | e
f | i | _ | r | e | ----!
f | u | _ | _ | _
f | u | i | r | _
f | u | i | r | e
f | u | _ | r | _
f | u | _ | r | e
f | u | _ | r | e | ----!
f | u | y | r | _
f | u | y | r | e
f | y | _ | r | _
f | y | _ | r | e
u | e | _ | r | _
u | e | e | _ | e | ----!
u | e | _ | r | éé
u | u | _ | r | _
v | e | _ | r | _
v | u | _ | r | _
2 : {'e', '_', 'é', 'y', 'i'},{'e', '_', 'éé', 'y', 'i'}
	[[{'lit': 'ai', 'ln': 2, 'index': 1}]]
	[[{'lit': 'ie', 'ln': 2, 'index': 1}]]
	[[{'lit': 'ie', 'ln': 2, 'index': 1}]]
	[[{'lit': 'ui', 'ln': 2, 'index': 1}]]
	[[{'lit': 'ui', 'ln': 2, 'index': 1}]]
	[[{'lit': 'uy', 'ln': 2, 'index': 1}]]
	[[{'lit': 'uy', 'ln': 2, 'index': 1}]]
	[[{'lit': 'ue', 'ln': 2, 'index': 0}]]
	[[{'lit': 'ue', 'ln': 2, 'index': 0}]]
	[[{'lit': 'éé', 'ln': 2, 'index': 3}], [{'lit': 'ue', 'ln': 2, 'index': 0}]]
	[[{'lit': 'éé', 'ln': 2, 'index': 3}], [{'lit': 'ue', 'ln': 2, 'index': 0}], [{'lit': 'éé', 'ln': 2, 'index': 3}, {'lit': 'ue', 'ln': 2, 'index': 0}]]
	MIN pattern length=3
	Pattern CVCV is valid
	Pattern VVCV is invalid
	Pattern CCCVC is valid
	Pattern CVVCV is invalid
	Pattern CVCVV is invalid
	Pattern CC is invalid
	Pattern CCVCV is valid
	Pattern VVCVV is invalid
	Pattern CCCCV is invalid
	Pattern CCC is valid
	Pattern CCCC is invalid
	Pattern VCVV is invalid
	Pattern CV is invalid
	Pattern VC is invalid
	Pattern CVC is valid
	Pattern CVCVC is valid
	Pattern VCV is valid
	Pattern CVVC is invalid
	Pattern VVC is invalid
	Pattern CCCV is valid
	Pattern CVCC is valid
	Pattern CCVC is valid
	Making the selection for pattern: CCC
	Selection for pattern: CCC completed
	Making a version for pattern: CCC
			___CCC : 0___
				ANALYSING: fir
				adding littera based on matching pattern
				ANALYSING: fur
				adding littera based on matching pattern
				ANALYSING: fyr
				adding littera based on matching pattern
				ANALYSING: uur
				adding littera based on matching pattern
				ANALYSING: vur
				adding littera based on matching pattern
				ANALYSING: fair
					resolving (3)
					> version: f/a/i/r
					TRYING: f
					> version: f/a/i/r
					TRYING: f
					> version: f/ai/r
					TRYING: f
					RESULT:  ['f']
				ANALYSING: far
					resolving (1)
					> version: f/a/r
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fer
					resolving (1)
					> version: f/e/r
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fere
					resolving (1)
					> version: f/e/r/e
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fier
					resolving (3)
					> version: f/i/e/r
					TRYING: f
					> version: f/i/e/r
					TRYING: f
					> version: f/ie/r
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fiere
					resolving (3)
					> version: f/i/e/r/e
					TRYING: f
					> version: f/i/e/r/e
					TRYING: f
					> version: f/ie/r/e
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fire
					resolving (2)
					> version: f/i/r/e
					TRYING: f
					> version: f/i/r/e
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fires
					resolving (2)
					> version: f/i/r/e/s
					TRYING: f
					> version: f/i/r/e/s
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fu
					resolving (2)
					> version: f/u
					TRYING: f
					> version: f/u
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fuir
					resolving (3)
					> version: f/u/i/r
					TRYING: f
					> version: f/u/i/r
					TRYING: f
					> version: f/ui/r
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fuire
					resolving (3)
					> version: f/u/i/r/e
					TRYING: f
					> version: f/u/i/r/e
					TRYING: f
					> version: f/ui/r/e
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fure
					resolving (2)
					> version: f/u/r/e
					TRYING: f
					> version: f/u/r/e
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fures
					resolving (2)
					> version: f/u/r/e/s
					TRYING: f
					> version: f/u/r/e/s
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fuyr
					resolving (3)
					> version: f/u/y/r
					TRYING: f
					> version: f/u/y/r
					TRYING: f
					> version: f/uy/r
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fuyre
					resolving (3)
					> version: f/u/y/r/e
					TRYING: f
					> version: f/u/y/r/e
					TRYING: f
					> version: f/uy/r/e
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fyre
					resolving (2)
					> version: f/y/r/e
					TRYING: f
					> version: f/y/r/e
					TRYING: f
					RESULT:  ['f']
				ANALYSING: uer
					resolving (3)
					> version: u/e/r
					TRYING: u
					> version: u/e/r
					TRYING: u
					> version: ue/r
					TRYING: ue
					RESULT:  ['u']
				ANALYSING: uere
					resolving (3)
					> version: u/e/r/e
					TRYING: u
					> version: u/e/r/e
					TRYING: u
					> version: ue/r/e
					TRYING: ue
					RESULT:  ['u']
				ANALYSING: ueréé
					resolving (6)
					> version: u/e/r/é/é
					TRYING: u
					> version: u/e/r/é/é
					TRYING: u
					> version: u/e/r/éé
					TRYING: u
					> version: u/e/r/éé
					TRYING: u
					> version: ue/r/é/é
					TRYING: ue
					> version: ue/r/éé
					TRYING: ue
					RESULT:  ['u']
				ANALYSING: ver
					resolving (2)
					> version: v/e/r
					TRYING: v
					> version: v/e/r
					TRYING: v
					RESULT:  ['v']
			___CCC : 1___
				ANALYSING: fir
				adding littera based on matching pattern
				ANALYSING: fur
				adding littera based on matching pattern
				ANALYSING: fyr
				adding littera based on matching pattern
				ANALYSING: uur
				adding littera based on matching pattern
				ANALYSING: vur
				adding littera based on matching pattern
				ANALYSING: fair
					resolving (3)
					> version: f/a/i/r
					TRYING: a
					> version: f/a/i/r
					TRYING: a
					> version: f/ai/r
					TRYING: ai
					>>> MULTIPLE RESOLVE OPTIONS: {'ai', 'a'}
					RESULT:  ['ai', 'a']
				ANALYSING: far
					resolving (1)
					> version: f/a/r
					TRYING: a
					RESULT:  ['a']
				ANALYSING: fer
					resolving (1)
					> version: f/e/r
					TRYING: e
					RESULT:  ['e']
				ANALYSING: fere
					resolving (1)
					> version: f/e/r/e
					TRYING: e
					RESULT:  ['e']
				ANALYSING: fier
					resolving (3)
					> version: f/i/e/r
					TRYING: i
					> version: f/i/e/r
					TRYING: i
					> version: f/ie/r
					TRYING: ie
					>>> MULTIPLE RESOLVE OPTIONS: {'ie', 'i'}
					RESULT:  ['ie', 'i']
				ANALYSING: fiere
					resolving (3)
					> version: f/i/e/r/e
					TRYING: i
					> version: f/i/e/r/e
					TRYING: i
					> version: f/ie/r/e
					TRYING: ie
					>>> MULTIPLE RESOLVE OPTIONS: {'ie', 'i'}
					RESULT:  ['ie', 'i']
				ANALYSING: fire
					resolving (2)
					> version: f/i/r/e
					TRYING: i
					> version: f/i/r/e
					TRYING: i
					RESULT:  ['i']
				ANALYSING: fires
					resolving (2)
					> version: f/i/r/e/s
					TRYING: i
					> version: f/i/r/e/s
					TRYING: i
					RESULT:  ['i']
				ANALYSING: fu
					resolving (2)
					> version: f/u
					TRYING: u
					> version: f/u
					TRYING: u
					RESULT:  ['u']
				ANALYSING: fuir
					resolving (3)
					> version: f/u/i/r
					TRYING: u
					> version: f/u/i/r
					TRYING: u
					> version: f/ui/r
					TRYING: ui
					>>> MULTIPLE RESOLVE OPTIONS: {'ui', 'u'}
					RESULT:  ['ui', 'u']
				ANALYSING: fuire
					resolving (3)
					> version: f/u/i/r/e
					TRYING: u
					> version: f/u/i/r/e
					TRYING: u
					> version: f/ui/r/e
					TRYING: ui
					>>> MULTIPLE RESOLVE OPTIONS: {'ui', 'u'}
					RESULT:  ['ui', 'u']
				ANALYSING: fure
					resolving (2)
					> version: f/u/r/e
					TRYING: u
					> version: f/u/r/e
					TRYING: u
					RESULT:  ['u']
				ANALYSING: fures
					resolving (2)
					> version: f/u/r/e/s
					TRYING: u
					> version: f/u/r/e/s
					TRYING: u
					RESULT:  ['u']
				ANALYSING: fuyr
					resolving (3)
					> version: f/u/y/r
					TRYING: u
					> version: f/u/y/r
					TRYING: u
					> version: f/uy/r
					TRYING: uy
					>>> MULTIPLE RESOLVE OPTIONS: {'uy', 'u'}
					RESULT:  ['uy', 'u']
				ANALYSING: fuyre
					resolving (3)
					> version: f/u/y/r/e
					TRYING: u
					> version: f/u/y/r/e
					TRYING: u
					> version: f/uy/r/e
					TRYING: uy
					>>> MULTIPLE RESOLVE OPTIONS: {'uy', 'u'}
					RESULT:  ['uy', 'u']
				ANALYSING: fyre
					resolving (2)
					> version: f/y/r/e
					TRYING: y
					> version: f/y/r/e
					TRYING: y
					RESULT:  ['y']
				ANALYSING: uer
					resolving (3)
					> version: u/e/r
					TRYING: e
					> version: u/e/r
					TRYING: e
					> version: ue/r
					TRYING: r
					RESULT:  ['e']
				ANALYSING: uere
					resolving (3)
					> version: u/e/r/e
					TRYING: e
					> version: u/e/r/e
					TRYING: e
					> version: ue/r/e
					TRYING: r
					RESULT:  ['e']
				ANALYSING: ueréé
					resolving (6)
					> version: u/e/r/é/é
					TRYING: e
					> version: u/e/r/é/é
					TRYING: e
					> version: u/e/r/éé
					TRYING: e
					> version: u/e/r/éé
					TRYING: e
					> version: ue/r/é/é
					TRYING: r
					> version: ue/r/éé
					TRYING: r
					RESULT:  ['e']
				ANALYSING: ver
					resolving (2)
					> version: v/e/r
					TRYING: e
					> version: v/e/r
					TRYING: e
					RESULT:  ['e']
			___CCC : 2___
				ANALYSING: fir
				adding littera based on matching pattern
				ANALYSING: fur
				adding littera based on matching pattern
				ANALYSING: fyr
				adding littera based on matching pattern
				ANALYSING: uur
				adding littera based on matching pattern
				ANALYSING: vur
				adding littera based on matching pattern
				ANALYSING: fair
					resolving (3)
					> version: f/a/i/r
					TRYING: i
					adding blocked set: C = C >> i, r
					> version: f/a/i/r
					TRYING: i
					adding blocked set: C = C >> i, r
					> version: f/ai/r
					TRYING: r
					RESULT:  ['r']
				version split: ['f', 'a', 'i', 'r']
				{'string': 'f/a/i/r', 'rgx': '((f))/((ai)|(a))/((r))$'}
				_____REMOVING________['f', 'a', 'i', 'r']
				version split: ['f', 'a', 'i', 'r']
				{'string': 'f/a/i/r', 'rgx': '((f))/((ai)|(a))/((r))$'}
				_____REMOVING________['f', 'a', 'i', 'r']
				version split: ['f', 'ai', 'r']
				{'string': 'f/ai/r', 'rgx': '((f))/((ai)|(a))/((r))$'}
				ANALYSING: far
					resolving (1)
					> version: f/a/r
					TRYING: r
					RESULT:  ['r']
				version split: ['f', 'a', 'r']
				{'string': 'f/a/r', 'rgx': '((f))/((a))/((r))$'}
				ANALYSING: fer
					resolving (1)
					> version: f/e/r
					TRYING: r
					RESULT:  ['r']
				version split: ['f', 'e', 'r']
				{'string': 'f/e/r', 'rgx': '((f))/((e))/((r))$'}
				ANALYSING: fere
					resolving (1)
					> version: f/e/r/e
					TRYING: r
					RESULT:  ['r']
				version split: ['f', 'e', 'r', 'e']
				{'string': 'f/e/r/e', 'rgx': '((f))/((e))/((r))$'}
				_____REMOVING________['f', 'e', 'r', 'e']
				ANALYSING: fier
					resolving (3)
					> version: f/i/e/r
					TRYING: e
					> version: f/i/e/r
					TRYING: e
					> version: f/ie/r
					TRYING: r
					RESULT:  ['r']
				version split: ['f', 'i', 'e', 'r']
				{'string': 'f/i/e/r', 'rgx': '((f))/((ie)|(i))/((r))$'}
				_____REMOVING________['f', 'i', 'e', 'r']
				version split: ['f', 'i', 'e', 'r']
				{'string': 'f/i/e/r', 'rgx': '((f))/((ie)|(i))/((r))$'}
				_____REMOVING________['f', 'i', 'e', 'r']
				version split: ['f', 'ie', 'r']
				{'string': 'f/ie/r', 'rgx': '((f))/((ie)|(i))/((r))$'}
				ANALYSING: fiere
					resolving (3)
					> version: f/i/e/r/e
					TRYING: e
					> version: f/i/e/r/e
					TRYING: e
					> version: f/ie/r/e
					TRYING: r
					RESULT:  ['r']
				version split: ['f', 'i', 'e', 'r', 'e']
				{'string': 'f/i/e/r', 'rgx': '((f))/((ie)|(i))/((r))$'}
				_____REMOVING________['f', 'i', 'e', 'r', 'e']
				version split: ['f', 'i', 'e', 'r', 'e']
				{'string': 'f/i/e/r', 'rgx': '((f))/((ie)|(i))/((r))$'}
				_____REMOVING________['f', 'i', 'e', 'r', 'e']
				version split: ['f', 'ie', 'r', 'e']
				{'string': 'f/ie/r/e', 'rgx': '((f))/((ie)|(i))/((r))$'}
				_____REMOVING________['f', 'ie', 'r', 'e']
				ANALYSING: fire
					resolving (2)
					> version: f/i/r/e
					TRYING: r
					> version: f/i/r/e
					TRYING: r
					RESULT:  ['r']
				version split: ['f', 'i', 'r', 'e']
				{'string': 'f/i/r/e', 'rgx': '((f))/((i))/((r))$'}
				_____REMOVING________['f', 'i', 'r', 'e']
				version split: ['f', 'i', 'r', 'e']
				{'string': 'f/i/r/e', 'rgx': '((f))/((i))/((r))$'}
				_____REMOVING________['f', 'i', 'r', 'e']
				ANALYSING: fires
					resolving (2)
					> version: f/i/r/e/s
					TRYING: r
					> version: f/i/r/e/s
					TRYING: r
					RESULT:  ['r']
				version split: ['f', 'i', 'r', 'e', 's']
				{'string': 'f/i/r/e', 'rgx': '((f))/((i))/((r))$'}
				_____REMOVING________['f', 'i', 'r', 'e', 's']
				version split: ['f', 'i', 'r', 'e', 's']
				{'string': 'f/i/r/e', 'rgx': '((f))/((i))/((r))$'}
				_____REMOVING________['f', 'i', 'r', 'e', 's']
				ANALYSING: fu
					resolving (2)
					> version: f/u
					> version: f/u
					RESULT:  ['_']
				adding dashed alternative: ['f', 'u', '_']
				adding dashed alternative: ['f', 'u', '_']
				f/u(CC)
f/u(CV)
f/u/_(CAA)
f/u/_(CAA)
				version split: ['f', 'u']
				{'string': 'f/u', 'rgx': '((f))/((u))/((_))$'}
				_____REMOVING________['f', 'u']
				version split: ['f', 'u']
				{'string': 'f/u', 'rgx': '((f))/((u))/((_))$'}
				_____REMOVING________['f', 'u']
				version split: ['f', 'u', '_']
				{'string': 'f/u/_', 'rgx': '((f))/((u))/((_))$'}
				version split: ['f', 'u', '_']
				{'string': 'f/u/_', 'rgx': '((f))/((u))/((_))$'}
				ANALYSING: fuir
					resolving (3)
					> version: f/u/i/r
					TRYING: i
					adding blocked set: C = C >> r, i, _
					> version: f/u/i/r
					TRYING: i
					adding blocked set: C = C >> r, i, _
					> version: f/ui/r
					TRYING: r
					RESULT:  ['r']
				version split: ['f', 'u', 'i', 'r']
				{'string': 'f/u/i/r', 'rgx': '((f))/((ui)|(u))/((r))$'}
				_____REMOVING________['f', 'u', 'i', 'r']
				version split: ['f', 'u', 'i', 'r']
				{'string': 'f/u/i/r', 'rgx': '((f))/((ui)|(u))/((r))$'}
				_____REMOVING________['f', 'u', 'i', 'r']
				version split: ['f', 'ui', 'r']
				{'string': 'f/ui/r', 'rgx': '((f))/((ui)|(u))/((r))$'}
				ANALYSING: fuire
					resolving (3)
					> version: f/u/i/r/e
					TRYING: i
					adding blocked set: C = C >> _, i, r
					> version: f/u/i/r/e
					TRYING: i
					adding blocked set: C = C >> _, i, r
					> version: f/ui/r/e
					TRYING: r
					RESULT:  ['r']
				version split: ['f', 'u', 'i', 'r', 'e']
				{'string': 'f/u/i/r', 'rgx': '((f))/((ui)|(u))/((r))$'}
				_____REMOVING________['f', 'u', 'i', 'r', 'e']
				version split: ['f', 'u', 'i', 'r', 'e']
				{'string': 'f/u/i/r', 'rgx': '((f))/((ui)|(u))/((r))$'}
				_____REMOVING________['f', 'u', 'i', 'r', 'e']
				version split: ['f', 'ui', 'r', 'e']
				{'string': 'f/ui/r/e', 'rgx': '((f))/((ui)|(u))/((r))$'}
				_____REMOVING________['f', 'ui', 'r', 'e']
				ANALYSING: fure
					resolving (2)
					> version: f/u/r/e
					TRYING: r
					> version: f/u/r/e
					TRYING: r
					RESULT:  ['r']
				version split: ['f', 'u', 'r', 'e']
				{'string': 'f/u/r/e', 'rgx': '((f))/((u))/((r))$'}
				_____REMOVING________['f', 'u', 'r', 'e']
				version split: ['f', 'u', 'r', 'e']
				{'string': 'f/u/r/e', 'rgx': '((f))/((u))/((r))$'}
				_____REMOVING________['f', 'u', 'r', 'e']
				ANALYSING: fures
					resolving (2)
					> version: f/u/r/e/s
					TRYING: r
					> version: f/u/r/e/s
					TRYING: r
					RESULT:  ['r']
				version split: ['f', 'u', 'r', 'e', 's']
				{'string': 'f/u/r/e', 'rgx': '((f))/((u))/((r))$'}
				_____REMOVING________['f', 'u', 'r', 'e', 's']
				version split: ['f', 'u', 'r', 'e', 's']
				{'string': 'f/u/r/e', 'rgx': '((f))/((u))/((r))$'}
				_____REMOVING________['f', 'u', 'r', 'e', 's']
				ANALYSING: fuyr
					resolving (3)
					> version: f/u/y/r
					TRYING: y
					adding blocked set: C = C >> r, y, _
					> version: f/u/y/r
					TRYING: y
					adding blocked set: C = C >> r, y, _
					> version: f/uy/r
					TRYING: r
					RESULT:  ['r']
				version split: ['f', 'u', 'y', 'r']
				{'string': 'f/u/y/r', 'rgx': '((f))/((uy)|(u))/((r))$'}
				_____REMOVING________['f', 'u', 'y', 'r']
				version split: ['f', 'u', 'y', 'r']
				{'string': 'f/u/y/r', 'rgx': '((f))/((uy)|(u))/((r))$'}
				_____REMOVING________['f', 'u', 'y', 'r']
				version split: ['f', 'uy', 'r']
				{'string': 'f/uy/r', 'rgx': '((f))/((uy)|(u))/((r))$'}
				ANALYSING: fuyre
					resolving (3)
					> version: f/u/y/r/e
					TRYING: y
					adding blocked set: C = C >> _, y, r
					> version: f/u/y/r/e
					TRYING: y
					adding blocked set: C = C >> _, y, r
					> version: f/uy/r/e
					TRYING: r
					RESULT:  ['r']
				version split: ['f', 'u', 'y', 'r', 'e']
				{'string': 'f/u/y/r', 'rgx': '((f))/((uy)|(u))/((r))$'}
				_____REMOVING________['f', 'u', 'y', 'r', 'e']
				version split: ['f', 'u', 'y', 'r', 'e']
				{'string': 'f/u/y/r', 'rgx': '((f))/((uy)|(u))/((r))$'}
				_____REMOVING________['f', 'u', 'y', 'r', 'e']
				version split: ['f', 'uy', 'r', 'e']
				{'string': 'f/uy/r/e', 'rgx': '((f))/((uy)|(u))/((r))$'}
				_____REMOVING________['f', 'uy', 'r', 'e']
				ANALYSING: fyre
					resolving (2)
					> version: f/y/r/e
					TRYING: r
					> version: f/y/r/e
					TRYING: r
					RESULT:  ['r']
				version split: ['f', 'y', 'r', 'e']
				{'string': 'f/y/r/e', 'rgx': '((f))/((y))/((r))$'}
				_____REMOVING________['f', 'y', 'r', 'e']
				version split: ['f', 'y', 'r', 'e']
				{'string': 'f/y/r/e', 'rgx': '((f))/((y))/((r))$'}
				_____REMOVING________['f', 'y', 'r', 'e']
				ANALYSING: uer
					resolving (3)
					> version: u/e/r
					TRYING: r
					> version: u/e/r
					TRYING: r
					> version: ue/r
					RESULT:  ['r']
				version split: ['u', 'e', 'r']
				{'string': 'u/e/r', 'rgx': '((u))/((e))/((r))$'}
				version split: ['u', 'e', 'r']
				{'string': 'u/e/r', 'rgx': '((u))/((e))/((r))$'}
				version split: ['ue', 'r']
				{'string': 'ue/r', 'rgx': '((u))/((e))/((r))$'}
				_____REMOVING________['ue', 'r']
				ANALYSING: uere
					resolving (3)
					> version: u/e/r/e
					TRYING: r
					> version: u/e/r/e
					TRYING: r
					> version: ue/r/e
					TRYING: e
					RESULT:  ['r']
				version split: ['u', 'e', 'r', 'e']
				{'string': 'u/e/r/e', 'rgx': '((u))/((e))/((r))$'}
				_____REMOVING________['u', 'e', 'r', 'e']
				version split: ['u', 'e', 'r', 'e']
				{'string': 'u/e/r/e', 'rgx': '((u))/((e))/((r))$'}
				_____REMOVING________['u', 'e', 'r', 'e']
				version split: ['ue', 'r', 'e']
				{'string': 'ue/r/e', 'rgx': '((u))/((e))/((r))$'}
				_____REMOVING________['ue', 'r', 'e']
				ANALYSING: ueréé
					resolving (6)
					> version: u/e/r/é/é
					TRYING: r
					> version: u/e/r/é/é
					TRYING: r
					> version: u/e/r/éé
					TRYING: r
					> version: u/e/r/éé
					TRYING: r
					> version: ue/r/é/é
					TRYING: é
					> version: ue/r/éé
					TRYING: éé
					RESULT:  ['r']
				version split: ['u', 'e', 'r', 'é', 'é']
				{'string': 'u/e/r/é', 'rgx': '((u))/((e))/((r))$'}
				_____REMOVING________['u', 'e', 'r', 'é', 'é']
				version split: ['u', 'e', 'r', 'é', 'é']
				{'string': 'u/e/r/é', 'rgx': '((u))/((e))/((r))$'}
				_____REMOVING________['u', 'e', 'r', 'é', 'é']
				version split: ['u', 'e', 'r', 'éé']
				{'string': 'u/e/r/éé', 'rgx': '((u))/((e))/((r))$'}
				_____REMOVING________['u', 'e', 'r', 'éé']
				version split: ['u', 'e', 'r', 'éé']
				{'string': 'u/e/r/éé', 'rgx': '((u))/((e))/((r))$'}
				_____REMOVING________['u', 'e', 'r', 'éé']
				version split: ['ue', 'r', 'é', 'é']
				{'string': 'ue/r/é/é', 'rgx': '((u))/((e))/((r))$'}
				_____REMOVING________['ue', 'r', 'é', 'é']
				version split: ['ue', 'r', 'éé']
				{'string': 'ue/r/éé', 'rgx': '((u))/((e))/((r))$'}
				_____REMOVING________['ue', 'r', 'éé']
				ANALYSING: ver
					resolving (2)
					> version: v/e/r
					TRYING: r
					> version: v/e/r
					TRYING: r
					RESULT:  ['r']
				version split: ['v', 'e', 'r']
				{'string': 'v/e/r', 'rgx': '((v))/((e))/((r))$'}
				version split: ['v', 'e', 'r']
				{'string': 'v/e/r', 'rgx': '((v))/((e))/((r))$'}
		only one version left: ['f', 'ai', 'r']
		only one version left: ['f', 'a', 'r']
		only one version left: ['f', 'e', 'r']
		FAIL: 
		only one version left: ['f', 'ie', 'r']
		FAIL: 
		FAIL: 
		FAIL: 
		only one version left: ['f', 'u', '_']
		only one version left: ['f', 'ui', 'r']
		FAIL: 
		FAIL: 
		FAIL: 
		only one version left: ['f', 'uy', 'r']
		FAIL: 
		FAIL: 
		only one version left: ['u', 'e', 'r']
		FAIL: 
		FAIL: 
		only one version left: ['v', 'e', 'r']
		SPLIT: ['f', 'i', 'r']
		SPLIT: ['f', 'u', 'r']
		SPLIT: ['f', 'y', 'r']
		SPLIT: ['u', 'u', 'r']
		SPLIT: ['v', 'u', 'r']
		SPLIT: ['f', 'ai', 'r']
		['f', 'ai', 'r']
		SPLIT: ['f', 'a', 'r']
		['f', 'a', 'r']
		SPLIT: ['f', 'e', 'r']
		['f', 'e', 'r']
		SPLIT: ['f', 'e', 'r', '----!']
		SPLIT: ['f', 'ie', 'r']
		['f', 'ie', 'r']
		SPLIT: ['f', 'ie.i', 'r', '----!']
		SPLIT: ['f', 'i', 'r', '----!']
		SPLIT: ['f', 'i', 'r', '----!']
		SPLIT: ['f', 'u', '_']
		['f', 'u', '_']
		['f', 'u', '_']
		SPLIT: ['f', 'ui', 'r']
		['f', 'ui', 'r']
		SPLIT: ['f', 'ui.u', 'r', '----!']
		SPLIT: ['f', 'u', 'r', '----!']
		SPLIT: ['f', 'u', 'r', '----!']
		SPLIT: ['f', 'uy', 'r']
		['f', 'uy', 'r']
		SPLIT: ['f', 'uy.u', 'r', '----!']
		SPLIT: ['f', 'y', 'r', '----!']
		SPLIT: ['u', 'e', 'r']
		['u', 'e', 'r']
		['u', 'e', 'r']
		SPLIT: ['u', 'e', 'r', '----!']
		SPLIT: ['u', 'e', 'r', '----!']
		SPLIT: ['v', 'e', 'r']
		['v', 'e', 'r']
		['v', 'e', 'r']
		version for pattern CCC is INVALID
		[]
		11
		POSSIBLE CHANGE: 0 : Initial Fricative Voicing
		OVERVIEW: version for pattern CCC

faulty splits: 11
fer----! <-! fere
fie.ir----! <-! fiere
fir----! <-! fire
fir----! <-! fires
fui.ur----! <-! fuire
fur----! <-! fure
fur----! <-! fures
fuy.ur----! <-! fuyre
fyr----! <-! fyre
uer----! <-! uere
uer----! <-! ueréé
f | i | r
f | u | r
f | y | r
u | u | r
v | u | r
f | ai | r
f | a | r
f | e | r
f | e | r | ----!
f | ie | r
f | ie.i | r | ----!
f | i | r | ----!
f | i | r | ----!
f | u | _
f | ui | r
f | ui.u | r | ----!
f | u | r | ----!
f | u | r | ----!
f | uy | r
f | uy.u | r | ----!
f | y | r | ----!
u | e | r
u | e | r | ----!
u | e | r | ----!
v | e | r
	[[{'lit': 'ai', 'ln': 2, 'index': 1}]]
	[[{'lit': 'ie', 'ln': 2, 'index': 1}]]
	[[{'lit': 'ie', 'ln': 2, 'index': 1}]]
	[[{'lit': 'ui', 'ln': 2, 'index': 1}]]
	[[{'lit': 'ui', 'ln': 2, 'index': 1}]]
	[[{'lit': 'uy', 'ln': 2, 'index': 1}]]
	[[{'lit': 'uy', 'ln': 2, 'index': 1}]]
	[[{'lit': 'ue', 'ln': 2, 'index': 0}]]
	[[{'lit': 'ue', 'ln': 2, 'index': 0}]]
	[[{'lit': 'éé', 'ln': 2, 'index': 3}], [{'lit': 'ue', 'ln': 2, 'index': 0}]]
	[[{'lit': 'éé', 'ln': 2, 'index': 3}], [{'lit': 'ue', 'ln': 2, 'index': 0}], [{'lit': 'éé', 'ln': 2, 'index': 3}, {'lit': 'ue', 'ln': 2, 'index': 0}]]
	MIN pattern length=3
	Pattern CVCV is valid
	Pattern VVCV is invalid
	Pattern CCCVC is valid
	Pattern CVVCV is invalid
	Pattern CVCVV is invalid
	Pattern CC is invalid
	Pattern CCVCV is valid
	Pattern VVCVV is invalid
	Pattern CCCCV is invalid
	Pattern CCC is valid
	Pattern CCCC is invalid
	Pattern VCVV is invalid
	Pattern CV is invalid
	Pattern VC is invalid
	Pattern CVC is valid
	Pattern CVCVC is valid
	Pattern VCV is valid
	Pattern CVVC is invalid
	Pattern VVC is invalid
	Pattern CCCV is valid
	Pattern CVCC is valid
	Pattern CCVC is valid
	Making the selection for pattern: CVC
	Selection for pattern: CVC completed
	Making a version for pattern: CVC
			___CVC : 0___
				ANALYSING: fair
				adding littera based on matching pattern
				ANALYSING: far
				adding littera based on matching pattern
				ANALYSING: fer
				adding littera based on matching pattern
				ANALYSING: fier
				adding littera based on matching pattern
				ANALYSING: fir
				adding littera based on matching pattern
				ANALYSING: fuir
				adding littera based on matching pattern
				ANALYSING: fur
				adding littera based on matching pattern
				ANALYSING: fuyr
				adding littera based on matching pattern
				ANALYSING: fyr
				adding littera based on matching pattern
				ANALYSING: uer
				adding littera based on matching pattern
				ANALYSING: ver
				adding littera based on matching pattern
				ANALYSING: fere
					resolving (1)
					> version: f/e/r/e
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fiere
					resolving (3)
					> version: f/i/e/r/e
					TRYING: f
					> version: f/i/e/r/e
					TRYING: f
					> version: f/ie/r/e
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fire
					resolving (2)
					> version: f/i/r/e
					TRYING: f
					> version: f/i/r/e
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fires
					resolving (2)
					> version: f/i/r/e/s
					TRYING: f
					> version: f/i/r/e/s
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fu
					resolving (2)
					> version: f/u
					TRYING: f
					> version: f/u
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fuire
					resolving (3)
					> version: f/u/i/r/e
					TRYING: f
					> version: f/u/i/r/e
					TRYING: f
					> version: f/ui/r/e
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fure
					resolving (2)
					> version: f/u/r/e
					TRYING: f
					> version: f/u/r/e
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fures
					resolving (2)
					> version: f/u/r/e/s
					TRYING: f
					> version: f/u/r/e/s
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fuyre
					resolving (3)
					> version: f/u/y/r/e
					TRYING: f
					> version: f/u/y/r/e
					TRYING: f
					> version: f/uy/r/e
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fyre
					resolving (2)
					> version: f/y/r/e
					TRYING: f
					> version: f/y/r/e
					TRYING: f
					RESULT:  ['f']
				ANALYSING: uere
					resolving (3)
					> version: u/e/r/e
					TRYING: u
					> version: u/e/r/e
					TRYING: u
					> version: ue/r/e
					TRYING: ue
					RESULT:  ['u']
				ANALYSING: ueréé
					resolving (6)
					> version: u/e/r/é/é
					TRYING: u
					> version: u/e/r/é/é
					TRYING: u
					> version: u/e/r/éé
					TRYING: u
					> version: u/e/r/éé
					TRYING: u
					> version: ue/r/é/é
					TRYING: ue
					> version: ue/r/éé
					TRYING: ue
					RESULT:  ['u']
				ANALYSING: uur
					resolving (2)
					> version: u/u/r
					TRYING: u
					> version: u/u/r
					TRYING: u
					RESULT:  ['u']
				ANALYSING: vur
					resolving (2)
					> version: v/u/r
					TRYING: v
					> version: v/u/r
					TRYING: v
					RESULT:  ['v']
			___CVC : 1___
				ANALYSING: fair
				adding littera based on matching pattern
				ANALYSING: far
				adding littera based on matching pattern
				ANALYSING: fer
				adding littera based on matching pattern
				ANALYSING: fier
				adding littera based on matching pattern
				ANALYSING: fir
				adding littera based on matching pattern
				ANALYSING: fuir
				adding littera based on matching pattern
				ANALYSING: fur
				adding littera based on matching pattern
				ANALYSING: fuyr
				adding littera based on matching pattern
				ANALYSING: fyr
				adding littera based on matching pattern
				ANALYSING: uer
				adding littera based on matching pattern
				ANALYSING: ver
				adding littera based on matching pattern
				ANALYSING: fere
					resolving (1)
					> version: f/e/r/e
					TRYING: e
					RESULT:  ['e']
				ANALYSING: fiere
					resolving (3)
					> version: f/i/e/r/e
					TRYING: i
					> version: f/i/e/r/e
					TRYING: i
					> version: f/ie/r/e
					TRYING: ie
					>>> MULTIPLE RESOLVE OPTIONS: {'ie', 'i'}
					RESULT:  ['ie', 'i']
				ANALYSING: fire
					resolving (2)
					> version: f/i/r/e
					TRYING: i
					> version: f/i/r/e
					TRYING: i
					RESULT:  ['i']
				ANALYSING: fires
					resolving (2)
					> version: f/i/r/e/s
					TRYING: i
					> version: f/i/r/e/s
					TRYING: i
					RESULT:  ['i']
				ANALYSING: fu
					resolving (2)
					> version: f/u
					TRYING: u
					> version: f/u
					TRYING: u
					RESULT:  ['u']
				ANALYSING: fuire
					resolving (3)
					> version: f/u/i/r/e
					TRYING: u
					> version: f/u/i/r/e
					TRYING: u
					> version: f/ui/r/e
					TRYING: ui
					>>> MULTIPLE RESOLVE OPTIONS: {'ui', 'u'}
					RESULT:  ['ui', 'u']
				ANALYSING: fure
					resolving (2)
					> version: f/u/r/e
					TRYING: u
					> version: f/u/r/e
					TRYING: u
					RESULT:  ['u']
				ANALYSING: fures
					resolving (2)
					> version: f/u/r/e/s
					TRYING: u
					> version: f/u/r/e/s
					TRYING: u
					RESULT:  ['u']
				ANALYSING: fuyre
					resolving (3)
					> version: f/u/y/r/e
					TRYING: u
					> version: f/u/y/r/e
					TRYING: u
					> version: f/uy/r/e
					TRYING: uy
					>>> MULTIPLE RESOLVE OPTIONS: {'uy', 'u'}
					RESULT:  ['uy', 'u']
				ANALYSING: fyre
					resolving (2)
					> version: f/y/r/e
					TRYING: y
					> version: f/y/r/e
					TRYING: y
					RESULT:  ['y']
				ANALYSING: uere
					resolving (3)
					> version: u/e/r/e
					TRYING: e
					> version: u/e/r/e
					TRYING: e
					> version: ue/r/e
					TRYING: r
					RESULT:  ['e']
				ANALYSING: ueréé
					resolving (6)
					> version: u/e/r/é/é
					TRYING: e
					> version: u/e/r/é/é
					TRYING: e
					> version: u/e/r/éé
					TRYING: e
					> version: u/e/r/éé
					TRYING: e
					> version: ue/r/é/é
					TRYING: r
					> version: ue/r/éé
					TRYING: r
					RESULT:  ['e']
				ANALYSING: uur
					resolving (2)
					> version: u/u/r
					TRYING: u
					> version: u/u/r
					TRYING: u
					RESULT:  ['u']
				ANALYSING: vur
					resolving (2)
					> version: v/u/r
					TRYING: u
					> version: v/u/r
					TRYING: u
					RESULT:  ['u']
			___CVC : 2___
				ANALYSING: fair
				adding littera based on matching pattern
				ANALYSING: far
				adding littera based on matching pattern
				ANALYSING: fer
				adding littera based on matching pattern
				ANALYSING: fier
				adding littera based on matching pattern
				ANALYSING: fir
				adding littera based on matching pattern
				ANALYSING: fuir
				adding littera based on matching pattern
				ANALYSING: fur
				adding littera based on matching pattern
				ANALYSING: fuyr
				adding littera based on matching pattern
				ANALYSING: fyr
				adding littera based on matching pattern
				ANALYSING: uer
				adding littera based on matching pattern
				ANALYSING: ver
				adding littera based on matching pattern
				ANALYSING: fere
					resolving (1)
					> version: f/e/r/e
					TRYING: r
					RESULT:  ['r']
				version split: ['f', 'e', 'r', 'e']
				{'string': 'f/e/r/e', 'rgx': '((f))/((e))/((r))$'}
				_____REMOVING________['f', 'e', 'r', 'e']
				ANALYSING: fiere
					resolving (3)
					> version: f/i/e/r/e
					TRYING: e
					> version: f/i/e/r/e
					TRYING: e
					> version: f/ie/r/e
					TRYING: r
					RESULT:  ['r']
				version split: ['f', 'i', 'e', 'r', 'e']
				{'string': 'f/i/e/r', 'rgx': '((f))/((ie)|(i))/((r))$'}
				_____REMOVING________['f', 'i', 'e', 'r', 'e']
				version split: ['f', 'i', 'e', 'r', 'e']
				{'string': 'f/i/e/r', 'rgx': '((f))/((ie)|(i))/((r))$'}
				_____REMOVING________['f', 'i', 'e', 'r', 'e']
				version split: ['f', 'ie', 'r', 'e']
				{'string': 'f/ie/r/e', 'rgx': '((f))/((ie)|(i))/((r))$'}
				_____REMOVING________['f', 'ie', 'r', 'e']
				ANALYSING: fire
					resolving (2)
					> version: f/i/r/e
					TRYING: r
					> version: f/i/r/e
					TRYING: r
					RESULT:  ['r']
				version split: ['f', 'i', 'r', 'e']
				{'string': 'f/i/r/e', 'rgx': '((f))/((i))/((r))$'}
				_____REMOVING________['f', 'i', 'r', 'e']
				version split: ['f', 'i', 'r', 'e']
				{'string': 'f/i/r/e', 'rgx': '((f))/((i))/((r))$'}
				_____REMOVING________['f', 'i', 'r', 'e']
				ANALYSING: fires
					resolving (2)
					> version: f/i/r/e/s
					TRYING: r
					> version: f/i/r/e/s
					TRYING: r
					RESULT:  ['r']
				version split: ['f', 'i', 'r', 'e', 's']
				{'string': 'f/i/r/e', 'rgx': '((f))/((i))/((r))$'}
				_____REMOVING________['f', 'i', 'r', 'e', 's']
				version split: ['f', 'i', 'r', 'e', 's']
				{'string': 'f/i/r/e', 'rgx': '((f))/((i))/((r))$'}
				_____REMOVING________['f', 'i', 'r', 'e', 's']
				ANALYSING: fu
					resolving (2)
					> version: f/u
					> version: f/u
					RESULT:  ['_']
				adding dashed alternative: ['f', 'u', '_']
				adding dashed alternative: ['f', 'u', '_']
				f/u(CC)
f/u(CV)
f/u/_(CAA)
f/u/_(CAA)
				version split: ['f', 'u']
				{'string': 'f/u', 'rgx': '((f))/((u))/((_))$'}
				_____REMOVING________['f', 'u']
				version split: ['f', 'u']
				{'string': 'f/u', 'rgx': '((f))/((u))/((_))$'}
				_____REMOVING________['f', 'u']
				version split: ['f', 'u', '_']
				{'string': 'f/u/_', 'rgx': '((f))/((u))/((_))$'}
				version split: ['f', 'u', '_']
				{'string': 'f/u/_', 'rgx': '((f))/((u))/((_))$'}
				ANALYSING: fuire
					resolving (3)
					> version: f/u/i/r/e
					TRYING: i
					adding blocked set: C = C >> r, i, _
					> version: f/u/i/r/e
					TRYING: i
					adding blocked set: C = C >> r, i, _
					> version: f/ui/r/e
					TRYING: r
					RESULT:  ['r']
				version split: ['f', 'u', 'i', 'r', 'e']
				{'string': 'f/u/i/r', 'rgx': '((f))/((ui)|(u))/((r))$'}
				_____REMOVING________['f', 'u', 'i', 'r', 'e']
				version split: ['f', 'u', 'i', 'r', 'e']
				{'string': 'f/u/i/r', 'rgx': '((f))/((ui)|(u))/((r))$'}
				_____REMOVING________['f', 'u', 'i', 'r', 'e']
				version split: ['f', 'ui', 'r', 'e']
				{'string': 'f/ui/r/e', 'rgx': '((f))/((ui)|(u))/((r))$'}
				_____REMOVING________['f', 'ui', 'r', 'e']
				ANALYSING: fure
					resolving (2)
					> version: f/u/r/e
					TRYING: r
					> version: f/u/r/e
					TRYING: r
					RESULT:  ['r']
				version split: ['f', 'u', 'r', 'e']
				{'string': 'f/u/r/e', 'rgx': '((f))/((u))/((r))$'}
				_____REMOVING________['f', 'u', 'r', 'e']
				version split: ['f', 'u', 'r', 'e']
				{'string': 'f/u/r/e', 'rgx': '((f))/((u))/((r))$'}
				_____REMOVING________['f', 'u', 'r', 'e']
				ANALYSING: fures
					resolving (2)
					> version: f/u/r/e/s
					TRYING: r
					> version: f/u/r/e/s
					TRYING: r
					RESULT:  ['r']
				version split: ['f', 'u', 'r', 'e', 's']
				{'string': 'f/u/r/e', 'rgx': '((f))/((u))/((r))$'}
				_____REMOVING________['f', 'u', 'r', 'e', 's']
				version split: ['f', 'u', 'r', 'e', 's']
				{'string': 'f/u/r/e', 'rgx': '((f))/((u))/((r))$'}
				_____REMOVING________['f', 'u', 'r', 'e', 's']
				ANALYSING: fuyre
					resolving (3)
					> version: f/u/y/r/e
					TRYING: y
					adding blocked set: C = C >> _, y, r
					> version: f/u/y/r/e
					TRYING: y
					adding blocked set: C = C >> _, y, r
					> version: f/uy/r/e
					TRYING: r
					RESULT:  ['r']
				version split: ['f', 'u', 'y', 'r', 'e']
				{'string': 'f/u/y/r', 'rgx': '((f))/((uy)|(u))/((r))$'}
				_____REMOVING________['f', 'u', 'y', 'r', 'e']
				version split: ['f', 'u', 'y', 'r', 'e']
				{'string': 'f/u/y/r', 'rgx': '((f))/((uy)|(u))/((r))$'}
				_____REMOVING________['f', 'u', 'y', 'r', 'e']
				version split: ['f', 'uy', 'r', 'e']
				{'string': 'f/uy/r/e', 'rgx': '((f))/((uy)|(u))/((r))$'}
				_____REMOVING________['f', 'uy', 'r', 'e']
				ANALYSING: fyre
					resolving (2)
					> version: f/y/r/e
					TRYING: r
					> version: f/y/r/e
					TRYING: r
					RESULT:  ['r']
				version split: ['f', 'y', 'r', 'e']
				{'string': 'f/y/r/e', 'rgx': '((f))/((y))/((r))$'}
				_____REMOVING________['f', 'y', 'r', 'e']
				version split: ['f', 'y', 'r', 'e']
				{'string': 'f/y/r/e', 'rgx': '((f))/((y))/((r))$'}
				_____REMOVING________['f', 'y', 'r', 'e']
				ANALYSING: uere
					resolving (3)
					> version: u/e/r/e
					TRYING: r
					> version: u/e/r/e
					TRYING: r
					> version: ue/r/e
					TRYING: e
					RESULT:  ['r']
				version split: ['u', 'e', 'r', 'e']
				{'string': 'u/e/r/e', 'rgx': '((u))/((e))/((r))$'}
				_____REMOVING________['u', 'e', 'r', 'e']
				version split: ['u', 'e', 'r', 'e']
				{'string': 'u/e/r/e', 'rgx': '((u))/((e))/((r))$'}
				_____REMOVING________['u', 'e', 'r', 'e']
				version split: ['ue', 'r', 'e']
				{'string': 'ue/r/e', 'rgx': '((u))/((e))/((r))$'}
				_____REMOVING________['ue', 'r', 'e']
				ANALYSING: ueréé
					resolving (6)
					> version: u/e/r/é/é
					TRYING: r
					> version: u/e/r/é/é
					TRYING: r
					> version: u/e/r/éé
					TRYING: r
					> version: u/e/r/éé
					TRYING: r
					> version: ue/r/é/é
					TRYING: é
					> version: ue/r/éé
					TRYING: éé
					RESULT:  ['r']
				version split: ['u', 'e', 'r', 'é', 'é']
				{'string': 'u/e/r/é', 'rgx': '((u))/((e))/((r))$'}
				_____REMOVING________['u', 'e', 'r', 'é', 'é']
				version split: ['u', 'e', 'r', 'é', 'é']
				{'string': 'u/e/r/é', 'rgx': '((u))/((e))/((r))$'}
				_____REMOVING________['u', 'e', 'r', 'é', 'é']
				version split: ['u', 'e', 'r', 'éé']
				{'string': 'u/e/r/éé', 'rgx': '((u))/((e))/((r))$'}
				_____REMOVING________['u', 'e', 'r', 'éé']
				version split: ['u', 'e', 'r', 'éé']
				{'string': 'u/e/r/éé', 'rgx': '((u))/((e))/((r))$'}
				_____REMOVING________['u', 'e', 'r', 'éé']
				version split: ['ue', 'r', 'é', 'é']
				{'string': 'ue/r/é/é', 'rgx': '((u))/((e))/((r))$'}
				_____REMOVING________['ue', 'r', 'é', 'é']
				version split: ['ue', 'r', 'éé']
				{'string': 'ue/r/éé', 'rgx': '((u))/((e))/((r))$'}
				_____REMOVING________['ue', 'r', 'éé']
				ANALYSING: uur
					resolving (2)
					> version: u/u/r
					TRYING: r
					> version: u/u/r
					TRYING: r
					RESULT:  ['r']
				version split: ['u', 'u', 'r']
				{'string': 'u/u/r', 'rgx': '((u))/((u))/((r))$'}
				version split: ['u', 'u', 'r']
				{'string': 'u/u/r', 'rgx': '((u))/((u))/((r))$'}
				ANALYSING: vur
					resolving (2)
					> version: v/u/r
					TRYING: r
					> version: v/u/r
					TRYING: r
					RESULT:  ['r']
				version split: ['v', 'u', 'r']
				{'string': 'v/u/r', 'rgx': '((v))/((u))/((r))$'}
				version split: ['v', 'u', 'r']
				{'string': 'v/u/r', 'rgx': '((v))/((u))/((r))$'}
		FAIL: 
		FAIL: 
		FAIL: 
		FAIL: 
		only one version left: ['f', 'u', '_']
		FAIL: 
		FAIL: 
		FAIL: 
		FAIL: 
		FAIL: 
		FAIL: 
		FAIL: 
		only one version left: ['u', 'u', 'r']
		only one version left: ['v', 'u', 'r']
		SPLIT: ['f', 'ai', 'r']
		SPLIT: ['f', 'a', 'r']
		SPLIT: ['f', 'e', 'r']
		SPLIT: ['f', 'ie', 'r']
		SPLIT: ['f', 'i', 'r']
		SPLIT: ['f', 'ui', 'r']
		SPLIT: ['f', 'u', 'r']
		SPLIT: ['f', 'uy', 'r']
		SPLIT: ['f', 'y', 'r']
		SPLIT: ['u', 'e', 'r']
		SPLIT: ['v', 'e', 'r']
		SPLIT: ['f', 'e', 'r', '----!']
		SPLIT: ['f', 'ie.i', 'r', '----!']
		SPLIT: ['f', 'i', 'r', '----!']
		SPLIT: ['f', 'i', 'r', '----!']
		SPLIT: ['f', 'u', '_']
		['f', 'u', '_']
		['f', 'u', '_']
		SPLIT: ['f', 'ui.u', 'r', '----!']
		SPLIT: ['f', 'u', 'r', '----!']
		SPLIT: ['f', 'u', 'r', '----!']
		SPLIT: ['f', 'uy.u', 'r', '----!']
		SPLIT: ['f', 'y', 'r', '----!']
		SPLIT: ['u', 'e', 'r', '----!']
		SPLIT: ['u', 'e', 'r', '----!']
		SPLIT: ['u', 'u', 'r']
		['u', 'u', 'r']
		['u', 'u', 'r']
		SPLIT: ['v', 'u', 'r']
		['v', 'u', 'r']
		['v', 'u', 'r']
		version for pattern CVC is INVALID
		[]
		11
		POSSIBLE CHANGE: 0 : Initial Fricative Voicing
		OVERVIEW: version for pattern CVC

faulty splits: 11
fer----! <-! fere
fie.ir----! <-! fiere
fir----! <-! fire
fir----! <-! fires
fui.ur----! <-! fuire
fur----! <-! fure
fur----! <-! fures
fuy.ur----! <-! fuyre
fyr----! <-! fyre
uer----! <-! uere
uer----! <-! ueréé
f | ai | r
f | a | r
f | e | r
f | ie | r
f | i | r
f | ui | r
f | u | r
f | uy | r
f | y | r
u | e | r
v | e | r
f | e | r | ----!
f | ie.i | r | ----!
f | i | r | ----!
f | i | r | ----!
f | u | _
f | ui.u | r | ----!
f | u | r | ----!
f | u | r | ----!
f | uy.u | r | ----!
f | y | r | ----!
u | e | r | ----!
u | e | r | ----!
u | u | r
v | u | r
	[[{'lit': 'ai', 'ln': 2, 'index': 1}]]
	[[{'lit': 'ie', 'ln': 2, 'index': 1}]]
	[[{'lit': 'ie', 'ln': 2, 'index': 1}]]
	[[{'lit': 'ui', 'ln': 2, 'index': 1}]]
	[[{'lit': 'ui', 'ln': 2, 'index': 1}]]
	[[{'lit': 'uy', 'ln': 2, 'index': 1}]]
	[[{'lit': 'uy', 'ln': 2, 'index': 1}]]
	[[{'lit': 'ue', 'ln': 2, 'index': 0}]]
	[[{'lit': 'ue', 'ln': 2, 'index': 0}]]
	[[{'lit': 'éé', 'ln': 2, 'index': 3}], [{'lit': 'ue', 'ln': 2, 'index': 0}]]
	[[{'lit': 'éé', 'ln': 2, 'index': 3}], [{'lit': 'ue', 'ln': 2, 'index': 0}], [{'lit': 'éé', 'ln': 2, 'index': 3}, {'lit': 'ue', 'ln': 2, 'index': 0}]]
	MIN pattern length=3
	Pattern CVCV is valid
	Pattern VVCV is invalid
	Pattern CCCVC is valid
	Pattern CVVCV is invalid
	Pattern CVCVV is invalid
	Pattern CC is invalid
	Pattern CCVCV is valid
	Pattern VVCVV is invalid
	Pattern CCCCV is invalid
	Pattern CCC is valid
	Pattern CCCC is invalid
	Pattern VCVV is invalid
	Pattern CV is invalid
	Pattern VC is invalid
	Pattern CVC is valid
	Pattern CVCVC is valid
	Pattern VCV is valid
	Pattern CVVC is invalid
	Pattern VVC is invalid
	Pattern CCCV is valid
	Pattern CVCC is valid
	Pattern CCVC is valid
	Making the selection for pattern: CVCVC
	Selection for pattern: CVCVC completed
	Making a version for pattern: CVCVC
			___CVCVC : 0___
				ANALYSING: fires
				adding littera based on matching pattern
				ANALYSING: fures
				adding littera based on matching pattern
				ANALYSING: fair
					resolving (3)
					> version: f/a/i/r
					TRYING: f
					> version: f/a/i/r
					TRYING: f
					> version: f/ai/r
					TRYING: f
					RESULT:  ['f']
				ANALYSING: far
					resolving (1)
					> version: f/a/r
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fer
					resolving (1)
					> version: f/e/r
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fere
					resolving (1)
					> version: f/e/r/e
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fier
					resolving (3)
					> version: f/i/e/r
					TRYING: f
					> version: f/i/e/r
					TRYING: f
					> version: f/ie/r
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fiere
					resolving (3)
					> version: f/i/e/r/e
					TRYING: f
					> version: f/i/e/r/e
					TRYING: f
					> version: f/ie/r/e
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fir
					resolving (2)
					> version: f/i/r
					TRYING: f
					> version: f/i/r
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fire
					resolving (2)
					> version: f/i/r/e
					TRYING: f
					> version: f/i/r/e
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fu
					resolving (2)
					> version: f/u
					TRYING: f
					> version: f/u
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fuir
					resolving (3)
					> version: f/u/i/r
					TRYING: f
					> version: f/u/i/r
					TRYING: f
					> version: f/ui/r
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fuire
					resolving (3)
					> version: f/u/i/r/e
					TRYING: f
					> version: f/u/i/r/e
					TRYING: f
					> version: f/ui/r/e
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fur
					resolving (2)
					> version: f/u/r
					TRYING: f
					> version: f/u/r
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fure
					resolving (2)
					> version: f/u/r/e
					TRYING: f
					> version: f/u/r/e
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fuyr
					resolving (3)
					> version: f/u/y/r
					TRYING: f
					> version: f/u/y/r
					TRYING: f
					> version: f/uy/r
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fuyre
					resolving (3)
					> version: f/u/y/r/e
					TRYING: f
					> version: f/u/y/r/e
					TRYING: f
					> version: f/uy/r/e
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fyr
					resolving (2)
					> version: f/y/r
					TRYING: f
					> version: f/y/r
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fyre
					resolving (2)
					> version: f/y/r/e
					TRYING: f
					> version: f/y/r/e
					TRYING: f
					RESULT:  ['f']
				ANALYSING: uer
					resolving (3)
					> version: u/e/r
					TRYING: u
					> version: u/e/r
					TRYING: u
					> version: ue/r
					TRYING: ue
					RESULT:  ['u']
				ANALYSING: uere
					resolving (3)
					> version: u/e/r/e
					TRYING: u
					> version: u/e/r/e
					TRYING: u
					> version: ue/r/e
					TRYING: ue
					RESULT:  ['u']
				ANALYSING: ueréé
					resolving (6)
					> version: u/e/r/é/é
					TRYING: u
					> version: u/e/r/é/é
					TRYING: u
					> version: u/e/r/éé
					TRYING: u
					> version: u/e/r/éé
					TRYING: u
					> version: ue/r/é/é
					TRYING: ue
					> version: ue/r/éé
					TRYING: ue
					RESULT:  ['u']
				ANALYSING: uur
					resolving (2)
					> version: u/u/r
					TRYING: u
					> version: u/u/r
					TRYING: u
					RESULT:  ['u']
				ANALYSING: ver
					resolving (2)
					> version: v/e/r
					TRYING: v
					> version: v/e/r
					TRYING: v
					RESULT:  ['v']
				ANALYSING: vur
					resolving (2)
					> version: v/u/r
					TRYING: v
					> version: v/u/r
					TRYING: v
					RESULT:  ['v']
			___CVCVC : 1___
				ANALYSING: fires
				adding littera based on matching pattern
				ANALYSING: fures
				adding littera based on matching pattern
				ANALYSING: fair
					resolving (3)
					> version: f/a/i/r
					TRYING: a
					> version: f/a/i/r
					TRYING: a
					> version: f/ai/r
					TRYING: ai
					>>> MULTIPLE RESOLVE OPTIONS: {'ai', 'a'}
					RESULT:  ['ai', 'a']
				ANALYSING: far
					resolving (1)
					> version: f/a/r
					TRYING: a
					RESULT:  ['a']
				ANALYSING: fer
					resolving (1)
					> version: f/e/r
					TRYING: e
					RESULT:  ['e']
				ANALYSING: fere
					resolving (1)
					> version: f/e/r/e
					TRYING: e
					RESULT:  ['e']
				ANALYSING: fier
					resolving (3)
					> version: f/i/e/r
					TRYING: i
					> version: f/i/e/r
					TRYING: i
					> version: f/ie/r
					TRYING: ie
					>>> MULTIPLE RESOLVE OPTIONS: {'ie', 'i'}
					RESULT:  ['ie', 'i']
				ANALYSING: fiere
					resolving (3)
					> version: f/i/e/r/e
					TRYING: i
					> version: f/i/e/r/e
					TRYING: i
					> version: f/ie/r/e
					TRYING: ie
					>>> MULTIPLE RESOLVE OPTIONS: {'ie', 'i'}
					RESULT:  ['ie', 'i']
				ANALYSING: fir
					resolving (2)
					> version: f/i/r
					TRYING: i
					> version: f/i/r
					TRYING: i
					RESULT:  ['i']
				ANALYSING: fire
					resolving (2)
					> version: f/i/r/e
					TRYING: i
					> version: f/i/r/e
					TRYING: i
					RESULT:  ['i']
				ANALYSING: fu
					resolving (2)
					> version: f/u
					TRYING: u
					> version: f/u
					TRYING: u
					RESULT:  ['u']
				ANALYSING: fuir
					resolving (3)
					> version: f/u/i/r
					TRYING: u
					> version: f/u/i/r
					TRYING: u
					> version: f/ui/r
					TRYING: ui
					>>> MULTIPLE RESOLVE OPTIONS: {'ui', 'u'}
					RESULT:  ['ui', 'u']
				ANALYSING: fuire
					resolving (3)
					> version: f/u/i/r/e
					TRYING: u
					> version: f/u/i/r/e
					TRYING: u
					> version: f/ui/r/e
					TRYING: ui
					>>> MULTIPLE RESOLVE OPTIONS: {'ui', 'u'}
					RESULT:  ['ui', 'u']
				ANALYSING: fur
					resolving (2)
					> version: f/u/r
					TRYING: u
					> version: f/u/r
					TRYING: u
					RESULT:  ['u']
				ANALYSING: fure
					resolving (2)
					> version: f/u/r/e
					TRYING: u
					> version: f/u/r/e
					TRYING: u
					RESULT:  ['u']
				ANALYSING: fuyr
					resolving (3)
					> version: f/u/y/r
					TRYING: u
					> version: f/u/y/r
					TRYING: u
					> version: f/uy/r
					TRYING: uy
					>>> MULTIPLE RESOLVE OPTIONS: {'uy', 'u'}
					RESULT:  ['uy', 'u']
				ANALYSING: fuyre
					resolving (3)
					> version: f/u/y/r/e
					TRYING: u
					> version: f/u/y/r/e
					TRYING: u
					> version: f/uy/r/e
					TRYING: uy
					>>> MULTIPLE RESOLVE OPTIONS: {'uy', 'u'}
					RESULT:  ['uy', 'u']
				ANALYSING: fyr
					resolving (2)
					> version: f/y/r
					TRYING: y
					> version: f/y/r
					TRYING: y
					RESULT:  ['y']
				ANALYSING: fyre
					resolving (2)
					> version: f/y/r/e
					TRYING: y
					> version: f/y/r/e
					TRYING: y
					RESULT:  ['y']
				ANALYSING: uer
					resolving (3)
					> version: u/e/r
					TRYING: e
					> version: u/e/r
					TRYING: e
					> version: ue/r
					TRYING: r
					RESULT:  ['e']
				ANALYSING: uere
					resolving (3)
					> version: u/e/r/e
					TRYING: e
					> version: u/e/r/e
					TRYING: e
					> version: ue/r/e
					TRYING: r
					RESULT:  ['e']
				ANALYSING: ueréé
					resolving (6)
					> version: u/e/r/é/é
					TRYING: e
					> version: u/e/r/é/é
					TRYING: e
					> version: u/e/r/éé
					TRYING: e
					> version: u/e/r/éé
					TRYING: e
					> version: ue/r/é/é
					TRYING: r
					> version: ue/r/éé
					TRYING: r
					RESULT:  ['e']
				ANALYSING: uur
					resolving (2)
					> version: u/u/r
					TRYING: u
					> version: u/u/r
					TRYING: u
					RESULT:  ['u']
				ANALYSING: ver
					resolving (2)
					> version: v/e/r
					TRYING: e
					> version: v/e/r
					TRYING: e
					RESULT:  ['e']
				ANALYSING: vur
					resolving (2)
					> version: v/u/r
					TRYING: u
					> version: v/u/r
					TRYING: u
					RESULT:  ['u']
			___CVCVC : 2___
				ANALYSING: fires
				adding littera based on matching pattern
				ANALYSING: fures
				adding littera based on matching pattern
				ANALYSING: fair
					resolving (3)
					> version: f/a/i/r
					TRYING: i
					adding blocked set: C = C >> i, r
					> version: f/a/i/r
					TRYING: i
					adding blocked set: C = C >> i, r
					> version: f/ai/r
					TRYING: r
					RESULT:  ['r']
				ANALYSING: far
					resolving (1)
					> version: f/a/r
					TRYING: r
					RESULT:  ['r']
				ANALYSING: fer
					resolving (1)
					> version: f/e/r
					TRYING: r
					RESULT:  ['r']
				ANALYSING: fere
					resolving (1)
					> version: f/e/r/e
					TRYING: r
					RESULT:  ['r']
				ANALYSING: fier
					resolving (3)
					> version: f/i/e/r
					TRYING: e
					> version: f/i/e/r
					TRYING: e
					> version: f/ie/r
					TRYING: r
					RESULT:  ['r']
				ANALYSING: fiere
					resolving (3)
					> version: f/i/e/r/e
					TRYING: e
					> version: f/i/e/r/e
					TRYING: e
					> version: f/ie/r/e
					TRYING: r
					RESULT:  ['r']
				ANALYSING: fir
					resolving (2)
					> version: f/i/r
					TRYING: r
					> version: f/i/r
					TRYING: r
					RESULT:  ['r']
				ANALYSING: fire
					resolving (2)
					> version: f/i/r/e
					TRYING: r
					> version: f/i/r/e
					TRYING: r
					RESULT:  ['r']
				ANALYSING: fu
					resolving (2)
					> version: f/u
					> version: f/u
					RESULT:  ['_']
				adding dashed alternative: ['f', 'u', '_']
				adding dashed alternative: ['f', 'u', '_']
				f/u(CC)
f/u(CV)
f/u/_(CAA)
f/u/_(CAA)
				ANALYSING: fuir
					resolving (3)
					> version: f/u/i/r
					TRYING: i
					adding blocked set: C = C >> r, i, _
					> version: f/u/i/r
					TRYING: i
					adding blocked set: C = C >> r, i, _
					> version: f/ui/r
					TRYING: r
					RESULT:  ['r']
				ANALYSING: fuire
					resolving (3)
					> version: f/u/i/r/e
					TRYING: i
					adding blocked set: C = C >> _, i, r
					> version: f/u/i/r/e
					TRYING: i
					adding blocked set: C = C >> _, i, r
					> version: f/ui/r/e
					TRYING: r
					RESULT:  ['r']
				ANALYSING: fur
					resolving (2)
					> version: f/u/r
					TRYING: r
					> version: f/u/r
					TRYING: r
					RESULT:  ['r']
				ANALYSING: fure
					resolving (2)
					> version: f/u/r/e
					TRYING: r
					> version: f/u/r/e
					TRYING: r
					RESULT:  ['r']
				ANALYSING: fuyr
					resolving (3)
					> version: f/u/y/r
					TRYING: y
					adding blocked set: C = C >> r, y, _
					> version: f/u/y/r
					TRYING: y
					adding blocked set: C = C >> r, y, _
					> version: f/uy/r
					TRYING: r
					RESULT:  ['r']
				ANALYSING: fuyre
					resolving (3)
					> version: f/u/y/r/e
					TRYING: y
					adding blocked set: C = C >> _, y, r
					> version: f/u/y/r/e
					TRYING: y
					adding blocked set: C = C >> _, y, r
					> version: f/uy/r/e
					TRYING: r
					RESULT:  ['r']
				ANALYSING: fyr
					resolving (2)
					> version: f/y/r
					TRYING: r
					> version: f/y/r
					TRYING: r
					RESULT:  ['r']
				ANALYSING: fyre
					resolving (2)
					> version: f/y/r/e
					TRYING: r
					> version: f/y/r/e
					TRYING: r
					RESULT:  ['r']
				ANALYSING: uer
					resolving (3)
					> version: u/e/r
					TRYING: r
					> version: u/e/r
					TRYING: r
					> version: ue/r
					RESULT:  ['r']
				ANALYSING: uere
					resolving (3)
					> version: u/e/r/e
					TRYING: r
					> version: u/e/r/e
					TRYING: r
					> version: ue/r/e
					TRYING: e
					RESULT:  ['r']
				ANALYSING: ueréé
					resolving (6)
					> version: u/e/r/é/é
					TRYING: r
					> version: u/e/r/é/é
					TRYING: r
					> version: u/e/r/éé
					TRYING: r
					> version: u/e/r/éé
					TRYING: r
					> version: ue/r/é/é
					TRYING: é
					> version: ue/r/éé
					TRYING: éé
					RESULT:  ['r']
				ANALYSING: uur
					resolving (2)
					> version: u/u/r
					TRYING: r
					> version: u/u/r
					TRYING: r
					RESULT:  ['r']
				ANALYSING: ver
					resolving (2)
					> version: v/e/r
					TRYING: r
					> version: v/e/r
					TRYING: r
					RESULT:  ['r']
				ANALYSING: vur
					resolving (2)
					> version: v/u/r
					TRYING: r
					> version: v/u/r
					TRYING: r
					RESULT:  ['r']
			___CVCVC : 3___
				ANALYSING: fires
				adding littera based on matching pattern
				ANALYSING: fures
				adding littera based on matching pattern
				ANALYSING: fair
					resolving (3)
					> version: f/a/i/r
					TRYING: r
					> version: f/a/i/r
					TRYING: r
					> version: f/ai/r
					RESULT:  ['_']
				adding dashed alternative: ['f', 'a', 'i', '_', 'r']
				adding dashed alternative: ['f', 'a', 'i', '_', 'r']
				adding dashed alternative: ['f', 'ai', 'r', '_']
				f/a/i/r(CVCC)
f/a/i/r(CVVC)
f/ai/r(CVC)
f/a/i/_/r(CVAAC)
f/a/i/_/r(CVAAC)
f/ai/r/_(CVCA)
				ANALYSING: far
					resolving (1)
					> version: f/a/r
					RESULT:  ['_']
				adding dashed alternative: ['f', 'a', 'r', '_']
				f/a/r(CVC)
f/a/r/_(CVCA)
				ANALYSING: fer
					resolving (1)
					> version: f/e/r
					RESULT:  ['_']
				adding dashed alternative: ['f', 'e', 'r', '_']
				f/e/r(CVC)
f/e/r/_(CVCA)
				ANALYSING: fere
					resolving (1)
					> version: f/e/r/e
					TRYING: e
					RESULT:  ['e']
				ANALYSING: fier
					resolving (3)
					> version: f/i/e/r
					TRYING: r
					> version: f/i/e/r
					TRYING: r
					> version: f/ie/r
					RESULT:  ['_']
				adding dashed alternative: ['f', 'i', 'e', '_', 'r']
				adding dashed alternative: ['f', 'i', 'e', '_', 'r']
				adding dashed alternative: ['f', 'ie', 'r', '_']
				f/i/e/r(CCVC)
f/i/e/r(CVVC)
f/ie/r(CVC)
f/i/e/_/r(CAVAC)
f/i/e/_/r(CAVAC)
f/ie/r/_(CVCA)
				ANALYSING: fiere
					resolving (3)
					> version: f/i/e/r/e
					TRYING: r
					> version: f/i/e/r/e
					TRYING: r
					> version: f/ie/r/e
					TRYING: e
					RESULT:  ['e']
				ANALYSING: fir
					resolving (2)
					> version: f/i/r
					> version: f/i/r
					RESULT:  ['_']
				adding dashed alternative: ['f', 'i', 'r', '_']
				adding dashed alternative: ['f', 'i', 'r', '_']
				f/i/r(CCC)
f/i/r(CVC)
f/i/r/_(CACA)
f/i/r/_(CACA)
				ANALYSING: fire
					resolving (2)
					> version: f/i/r/e
					TRYING: e
					> version: f/i/r/e
					TRYING: e
					RESULT:  ['e']
				ANALYSING: fu
					resolving (4)
					> version: f/u
					> version: f/u
					> version: f/u/_
					> version: f/u/_
					RESULT:  ['_']
				adding dashed alternative: ['f', 'u', '_']
				adding dashed alternative: ['f', 'u', '_']
				adding dashed alternative: ['f', 'u', '_', '_']
				adding dashed alternative: ['f', 'u', '_', '_']
				f/u(CC)
f/u(CV)
f/u/_(CAA)
f/u/_(CAA)
f/u/_(CAA)
f/u/_(CAA)
f/u/_/_(CAAA)
f/u/_/_(CAAA)
				ANALYSING: fuir
					resolving (3)
					> version: f/u/i/r
					TRYING: r
					> version: f/u/i/r
					TRYING: r
					> version: f/ui/r
					RESULT:  ['_']
				adding dashed alternative: ['f', 'u', 'i', '_', 'r']
				adding dashed alternative: ['f', 'u', 'i', '_', 'r']
				adding dashed alternative: ['f', 'ui', 'r', '_']
				f/u/i/r(CCCC)
f/u/i/r(CVVC)
f/ui/r(CVC)
f/u/i/_/r(CAAAC)
f/u/i/_/r(CAAAC)
f/ui/r/_(CVCA)
				ANALYSING: fuire
					resolving (3)
					> version: f/u/i/r/e
					TRYING: r
					> version: f/u/i/r/e
					TRYING: r
					> version: f/ui/r/e
					TRYING: e
					RESULT:  ['e']
				ANALYSING: fur
					resolving (2)
					> version: f/u/r
					> version: f/u/r
					RESULT:  ['_']
				adding dashed alternative: ['f', 'u', 'r', '_']
				adding dashed alternative: ['f', 'u', 'r', '_']
				f/u/r(CCC)
f/u/r(CVC)
f/u/r/_(CACA)
f/u/r/_(CACA)
				ANALYSING: fure
					resolving (2)
					> version: f/u/r/e
					TRYING: e
					> version: f/u/r/e
					TRYING: e
					RESULT:  ['e']
				ANALYSING: fuyr
					resolving (3)
					> version: f/u/y/r
					TRYING: r
					> version: f/u/y/r
					TRYING: r
					> version: f/uy/r
					RESULT:  ['_']
				adding dashed alternative: ['f', 'u', 'y', '_', 'r']
				adding dashed alternative: ['f', 'u', 'y', '_', 'r']
				adding dashed alternative: ['f', 'uy', 'r', '_']
				f/u/y/r(CCCC)
f/u/y/r(CVVC)
f/uy/r(CVC)
f/u/y/_/r(CAAAC)
f/u/y/_/r(CAAAC)
f/uy/r/_(CVCA)
				ANALYSING: fuyre
					resolving (3)
					> version: f/u/y/r/e
					TRYING: r
					> version: f/u/y/r/e
					TRYING: r
					> version: f/uy/r/e
					TRYING: e
					RESULT:  ['e']
				ANALYSING: fyr
					resolving (2)
					> version: f/y/r
					> version: f/y/r
					RESULT:  ['_']
				adding dashed alternative: ['f', 'y', 'r', '_']
				adding dashed alternative: ['f', 'y', 'r', '_']
				f/y/r(CCC)
f/y/r(CVC)
f/y/r/_(CACA)
f/y/r/_(CACA)
				ANALYSING: fyre
					resolving (2)
					> version: f/y/r/e
					TRYING: e
					> version: f/y/r/e
					TRYING: e
					RESULT:  ['e']
				ANALYSING: uer
					resolving (3)
					> version: u/e/r
					> version: u/e/r
					> version: ue/r
					RESULT:  ['_']
				adding dashed alternative: ['u', 'e', 'r', '_']
				adding dashed alternative: ['u', 'e', 'r', '_']
				adding dashed alternative: ['ue', 'r', '_']
				u/e/r(CVC)
u/e/r(VVC)
ue/r(VC)
u/e/r/_(AVCA)
u/e/r/_(AVCA)
ue/r/_(VCA)
				ANALYSING: uere
					resolving (3)
					> version: u/e/r/e
					TRYING: e
					> version: u/e/r/e
					TRYING: e
					> version: ue/r/e
					RESULT:  ['e']
				ANALYSING: ueréé
					resolving (6)
					> version: u/e/r/é/é
					TRYING: é
					> version: u/e/r/é/é
					TRYING: é
					> version: u/e/r/éé
					TRYING: éé
					>>> MULTIPLE RESOLVE OPTIONS: {'é', 'éé'}
					> version: u/e/r/éé
					TRYING: éé
					>>> MULTIPLE RESOLVE OPTIONS: {'é', 'éé'}
					> version: ue/r/é/é
					TRYING: é
					>>> MULTIPLE RESOLVE OPTIONS: {'é', 'éé'}
					> version: ue/r/éé
					>>> MULTIPLE RESOLVE OPTIONS: {'é', 'éé'}
					RESULT:  ['é', 'éé']
				ANALYSING: uur
					resolving (2)
					> version: u/u/r
					> version: u/u/r
					RESULT:  ['_']
				adding dashed alternative: ['u', 'u', 'r', '_']
				adding dashed alternative: ['u', 'u', 'r', '_']
				u/u/r(CCC)
u/u/r(VVC)
u/u/r/_(AACA)
u/u/r/_(AACA)
				ANALYSING: ver
					resolving (2)
					> version: v/e/r
					> version: v/e/r
					RESULT:  ['_']
				adding dashed alternative: ['v', 'e', 'r', '_']
				adding dashed alternative: ['v', 'e', 'r', '_']
				v/e/r(CVC)
v/e/r(VVC)
v/e/r/_(AVCA)
v/e/r/_(AVCA)
				ANALYSING: vur
					resolving (2)
					> version: v/u/r
					> version: v/u/r
					RESULT:  ['_']
				adding dashed alternative: ['v', 'u', 'r', '_']
				adding dashed alternative: ['v', 'u', 'r', '_']
				v/u/r(CCC)
v/u/r(VVC)
v/u/r/_(AACA)
v/u/r/_(AACA)
			___CVCVC : 4___
				ANALYSING: fires
				adding littera based on matching pattern
				ANALYSING: fures
				adding littera based on matching pattern
				ANALYSING: fair
					resolving (6)
					> version: f/a/i/r
					> version: f/a/i/r
					> version: f/ai/r
					> version: f/a/i/_/r
					TRYING: r
					adding blocked set: C = C >> s, r
					> version: f/a/i/_/r
					TRYING: r
					adding blocked set: C = C >> s, r
					> version: f/ai/r/_
					RESULT:  ['_']
				adding dashed alternative: ['f', 'a', 'i', 'r', '_']
				adding dashed alternative: ['f', 'a', 'i', 'r', '_']
				adding dashed alternative: ['f', 'ai', 'r', '_']
				adding dashed alternative: ['f', 'a', 'i', '_', '_', 'r']
				adding dashed alternative: ['f', 'a', 'i', '_', '_', 'r']
				adding dashed alternative: ['f', 'ai', 'r', '_', '_']
				f/a/i/r(CVCC)
f/a/i/r(CVVC)
f/ai/r(CVC)
f/a/i/_/r(CVAAC)
f/a/i/_/r(CVAAC)
f/ai/r/_(CVCA)
f/a/i/r/_(CVACA)
f/a/i/r/_(CVACA)
f/ai/r/_(CVCA)
f/a/i/_/_/r(CVAAAC)
f/a/i/_/_/r(CVAAAC)
f/ai/r/_/_(CVCAA)
				version split: ['f', 'a', 'i', 'r']
				{'string': 'f/a/i/r', 'rgx': '((f))/((ai)|(a))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'a', 'i', 'r']
				version split: ['f', 'a', 'i', 'r']
				{'string': 'f/a/i/r', 'rgx': '((f))/((ai)|(a))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'a', 'i', 'r']
				version split: ['f', 'ai', 'r']
				{'string': 'f/ai/r', 'rgx': '((f))/((ai)|(a))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'ai', 'r']
				version split: ['f', 'a', 'i', '_', 'r']
				{'string': 'f/a/i/_/r', 'rgx': '((f))/((ai)|(a))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'a', 'i', '_', 'r']
				version split: ['f', 'a', 'i', '_', 'r']
				{'string': 'f/a/i/_/r', 'rgx': '((f))/((ai)|(a))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'a', 'i', '_', 'r']
				version split: ['f', 'ai', 'r', '_']
				{'string': 'f/ai/r/_', 'rgx': '((f))/((ai)|(a))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'ai', 'r', '_']
				version split: ['f', 'a', 'i', 'r', '_']
				{'string': 'f/a/i/r/_', 'rgx': '((f))/((ai)|(a))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'a', 'i', 'r', '_']
				version split: ['f', 'a', 'i', 'r', '_']
				{'string': 'f/a/i/r/_', 'rgx': '((f))/((ai)|(a))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'a', 'i', 'r', '_']
				version split: ['f', 'ai', 'r', '_']
				{'string': 'f/ai/r/_', 'rgx': '((f))/((ai)|(a))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'ai', 'r', '_']
				version split: ['f', 'a', 'i', '_', '_', 'r']
				{'string': 'f/a/i/_/_/r', 'rgx': '((f))/((ai)|(a))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'a', 'i', '_', '_', 'r']
				version split: ['f', 'a', 'i', '_', '_', 'r']
				{'string': 'f/a/i/_/_/r', 'rgx': '((f))/((ai)|(a))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'a', 'i', '_', '_', 'r']
				version split: ['f', 'ai', 'r', '_', '_']
				{'string': 'f/ai/r/_/_', 'rgx': '((f))/((ai)|(a))/((r))/((_))/((_))$'}
				ANALYSING: far
					resolving (2)
					> version: f/a/r
					> version: f/a/r/_
					RESULT:  ['_']
				adding dashed alternative: ['f', 'a', 'r', '_']
				adding dashed alternative: ['f', 'a', 'r', '_', '_']
				f/a/r(CVC)
f/a/r/_(CVCA)
f/a/r/_(CVCA)
f/a/r/_/_(CVCAA)
				version split: ['f', 'a', 'r']
				{'string': 'f/a/r', 'rgx': '((f))/((a))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'a', 'r']
				version split: ['f', 'a', 'r', '_']
				{'string': 'f/a/r/_', 'rgx': '((f))/((a))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'a', 'r', '_']
				version split: ['f', 'a', 'r', '_']
				{'string': 'f/a/r/_', 'rgx': '((f))/((a))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'a', 'r', '_']
				version split: ['f', 'a', 'r', '_', '_']
				{'string': 'f/a/r/_/_', 'rgx': '((f))/((a))/((r))/((_))/((_))$'}
				ANALYSING: fer
					resolving (2)
					> version: f/e/r
					> version: f/e/r/_
					RESULT:  ['_']
				adding dashed alternative: ['f', 'e', 'r', '_']
				adding dashed alternative: ['f', 'e', 'r', '_', '_']
				f/e/r(CVC)
f/e/r/_(CVCA)
f/e/r/_(CVCA)
f/e/r/_/_(CVCAA)
				version split: ['f', 'e', 'r']
				{'string': 'f/e/r', 'rgx': '((f))/((e))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'e', 'r']
				version split: ['f', 'e', 'r', '_']
				{'string': 'f/e/r/_', 'rgx': '((f))/((e))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'e', 'r', '_']
				version split: ['f', 'e', 'r', '_']
				{'string': 'f/e/r/_', 'rgx': '((f))/((e))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'e', 'r', '_']
				version split: ['f', 'e', 'r', '_', '_']
				{'string': 'f/e/r/_/_', 'rgx': '((f))/((e))/((r))/((_))/((_))$'}
				ANALYSING: fere
					resolving (1)
					> version: f/e/r/e
					RESULT:  ['_']
				adding dashed alternative: ['f', 'e', 'r', 'e', '_']
				f/e/r/e(CVCV)
f/e/r/e/_(CVCVA)
				version split: ['f', 'e', 'r', 'e']
				{'string': 'f/e/r/e', 'rgx': '((f))/((e))/((r))/((e))/((_))$'}
				_____REMOVING________['f', 'e', 'r', 'e']
				version split: ['f', 'e', 'r', 'e', '_']
				{'string': 'f/e/r/e/_', 'rgx': '((f))/((e))/((r))/((e))/((_))$'}
				ANALYSING: fier
					resolving (6)
					> version: f/i/e/r
					> version: f/i/e/r
					> version: f/ie/r
					> version: f/i/e/_/r
					TRYING: r
					adding blocked set: C = C >> r, s, _
					> version: f/i/e/_/r
					TRYING: r
					adding blocked set: C = C >> r, s, _
					> version: f/ie/r/_
					RESULT:  ['_']
				adding dashed alternative: ['f', 'i', 'e', 'r', '_']
				adding dashed alternative: ['f', 'i', 'e', 'r', '_']
				adding dashed alternative: ['f', 'ie', 'r', '_']
				adding dashed alternative: ['f', 'i', 'e', '_', '_', 'r']
				adding dashed alternative: ['f', 'i', 'e', '_', '_', 'r']
				adding dashed alternative: ['f', 'ie', 'r', '_', '_']
				f/i/e/r(CCVC)
f/i/e/r(CVVC)
f/ie/r(CVC)
f/i/e/_/r(CAVAC)
f/i/e/_/r(CAVAC)
f/ie/r/_(CVCA)
f/i/e/r/_(CAVCA)
f/i/e/r/_(CAVCA)
f/ie/r/_(CVCA)
f/i/e/_/_/r(CAVAAC)
f/i/e/_/_/r(CAVAAC)
f/ie/r/_/_(CVCAA)
				version split: ['f', 'i', 'e', 'r']
				{'string': 'f/i/e/r', 'rgx': '((f))/((ie)|(i))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'i', 'e', 'r']
				version split: ['f', 'i', 'e', 'r']
				{'string': 'f/i/e/r', 'rgx': '((f))/((ie)|(i))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'i', 'e', 'r']
				version split: ['f', 'ie', 'r']
				{'string': 'f/ie/r', 'rgx': '((f))/((ie)|(i))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'ie', 'r']
				version split: ['f', 'i', 'e', '_', 'r']
				{'string': 'f/i/e/_/r', 'rgx': '((f))/((ie)|(i))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'i', 'e', '_', 'r']
				version split: ['f', 'i', 'e', '_', 'r']
				{'string': 'f/i/e/_/r', 'rgx': '((f))/((ie)|(i))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'i', 'e', '_', 'r']
				version split: ['f', 'ie', 'r', '_']
				{'string': 'f/ie/r/_', 'rgx': '((f))/((ie)|(i))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'ie', 'r', '_']
				version split: ['f', 'i', 'e', 'r', '_']
				{'string': 'f/i/e/r/_', 'rgx': '((f))/((ie)|(i))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'i', 'e', 'r', '_']
				version split: ['f', 'i', 'e', 'r', '_']
				{'string': 'f/i/e/r/_', 'rgx': '((f))/((ie)|(i))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'i', 'e', 'r', '_']
				version split: ['f', 'ie', 'r', '_']
				{'string': 'f/ie/r/_', 'rgx': '((f))/((ie)|(i))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'ie', 'r', '_']
				version split: ['f', 'i', 'e', '_', '_', 'r']
				{'string': 'f/i/e/_/_/r', 'rgx': '((f))/((ie)|(i))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'i', 'e', '_', '_', 'r']
				version split: ['f', 'i', 'e', '_', '_', 'r']
				{'string': 'f/i/e/_/_/r', 'rgx': '((f))/((ie)|(i))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'i', 'e', '_', '_', 'r']
				version split: ['f', 'ie', 'r', '_', '_']
				{'string': 'f/ie/r/_/_', 'rgx': '((f))/((ie)|(i))/((r))/((_))/((_))$'}
				ANALYSING: fiere
					resolving (3)
					> version: f/i/e/r/e
					TRYING: e
					> version: f/i/e/r/e
					TRYING: e
					> version: f/ie/r/e
					RESULT:  ['_']
				adding dashed alternative: ['f', 'i', 'e', 'r', '_', 'e']
				adding dashed alternative: ['f', 'i', 'e', 'r', '_', 'e']
				adding dashed alternative: ['f', 'ie', 'r', 'e', '_']
				f/i/e/r/e(CCVCV)
f/i/e/r/e(CVVCV)
f/ie/r/e(CVCV)
f/i/e/r/_/e(CAVCAV)
f/i/e/r/_/e(CAVCAV)
f/ie/r/e/_(CVCVA)
				version split: ['f', 'i', 'e', 'r', 'e']
				{'string': 'f/i/e/r/e', 'rgx': '((f))/((ie)|(i))/((r))/((e))/((_))$'}
				_____REMOVING________['f', 'i', 'e', 'r', 'e']
				version split: ['f', 'i', 'e', 'r', 'e']
				{'string': 'f/i/e/r/e', 'rgx': '((f))/((ie)|(i))/((r))/((e))/((_))$'}
				_____REMOVING________['f', 'i', 'e', 'r', 'e']
				version split: ['f', 'ie', 'r', 'e']
				{'string': 'f/ie/r/e', 'rgx': '((f))/((ie)|(i))/((r))/((e))/((_))$'}
				_____REMOVING________['f', 'ie', 'r', 'e']
				version split: ['f', 'i', 'e', 'r', '_', 'e']
				{'string': 'f/i/e/r/_/e', 'rgx': '((f))/((ie)|(i))/((r))/((e))/((_))$'}
				_____REMOVING________['f', 'i', 'e', 'r', '_', 'e']
				version split: ['f', 'i', 'e', 'r', '_', 'e']
				{'string': 'f/i/e/r/_/e', 'rgx': '((f))/((ie)|(i))/((r))/((e))/((_))$'}
				_____REMOVING________['f', 'i', 'e', 'r', '_', 'e']
				version split: ['f', 'ie', 'r', 'e', '_']
				{'string': 'f/ie/r/e/_', 'rgx': '((f))/((ie)|(i))/((r))/((e))/((_))$'}
				ANALYSING: fir
					resolving (4)
					> version: f/i/r
					> version: f/i/r
					> version: f/i/r/_
					> version: f/i/r/_
					RESULT:  ['_']
				adding dashed alternative: ['f', 'i', 'r', '_']
				adding dashed alternative: ['f', 'i', 'r', '_']
				adding dashed alternative: ['f', 'i', 'r', '_', '_']
				adding dashed alternative: ['f', 'i', 'r', '_', '_']
				f/i/r(CCC)
f/i/r(CVC)
f/i/r/_(CACA)
f/i/r/_(CACA)
f/i/r/_(CACA)
f/i/r/_(CACA)
f/i/r/_/_(CACAA)
f/i/r/_/_(CACAA)
				version split: ['f', 'i', 'r']
				{'string': 'f/i/r', 'rgx': '((f))/((i))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'i', 'r']
				version split: ['f', 'i', 'r']
				{'string': 'f/i/r', 'rgx': '((f))/((i))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'i', 'r']
				version split: ['f', 'i', 'r', '_']
				{'string': 'f/i/r/_', 'rgx': '((f))/((i))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'i', 'r', '_']
				version split: ['f', 'i', 'r', '_']
				{'string': 'f/i/r/_', 'rgx': '((f))/((i))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'i', 'r', '_']
				version split: ['f', 'i', 'r', '_']
				{'string': 'f/i/r/_', 'rgx': '((f))/((i))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'i', 'r', '_']
				version split: ['f', 'i', 'r', '_']
				{'string': 'f/i/r/_', 'rgx': '((f))/((i))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'i', 'r', '_']
				version split: ['f', 'i', 'r', '_', '_']
				{'string': 'f/i/r/_/_', 'rgx': '((f))/((i))/((r))/((_))/((_))$'}
				version split: ['f', 'i', 'r', '_', '_']
				{'string': 'f/i/r/_/_', 'rgx': '((f))/((i))/((r))/((_))/((_))$'}
				ANALYSING: fire
					resolving (2)
					> version: f/i/r/e
					> version: f/i/r/e
					RESULT:  ['_']
				adding dashed alternative: ['f', 'i', 'r', 'e', '_']
				adding dashed alternative: ['f', 'i', 'r', 'e', '_']
				f/i/r/e(CCCV)
f/i/r/e(CVCV)
f/i/r/e/_(CACVA)
f/i/r/e/_(CACVA)
				version split: ['f', 'i', 'r', 'e']
				{'string': 'f/i/r/e', 'rgx': '((f))/((i))/((r))/((e))/((_))$'}
				_____REMOVING________['f', 'i', 'r', 'e']
				version split: ['f', 'i', 'r', 'e']
				{'string': 'f/i/r/e', 'rgx': '((f))/((i))/((r))/((e))/((_))$'}
				_____REMOVING________['f', 'i', 'r', 'e']
				version split: ['f', 'i', 'r', 'e', '_']
				{'string': 'f/i/r/e/_', 'rgx': '((f))/((i))/((r))/((e))/((_))$'}
				version split: ['f', 'i', 'r', 'e', '_']
				{'string': 'f/i/r/e/_', 'rgx': '((f))/((i))/((r))/((e))/((_))$'}
				ANALYSING: fu
					resolving (8)
					> version: f/u
					> version: f/u
					> version: f/u/_
					> version: f/u/_
					> version: f/u/_
					> version: f/u/_
					> version: f/u/_/_
					> version: f/u/_/_
					RESULT:  ['_']
				adding dashed alternative: ['f', 'u', '_']
				adding dashed alternative: ['f', 'u', '_']
				adding dashed alternative: ['f', 'u', '_', '_']
				adding dashed alternative: ['f', 'u', '_', '_']
				adding dashed alternative: ['f', 'u', '_', '_']
				adding dashed alternative: ['f', 'u', '_', '_']
				adding dashed alternative: ['f', 'u', '_', '_', '_']
				adding dashed alternative: ['f', 'u', '_', '_', '_']
				f/u(CC)
f/u(CV)
f/u/_(CAA)
f/u/_(CAA)
f/u/_(CAA)
f/u/_(CAA)
f/u/_/_(CAAA)
f/u/_/_(CAAA)
f/u/_(CAA)
f/u/_(CAA)
f/u/_/_(CAAA)
f/u/_/_(CAAA)
f/u/_/_(CAAA)
f/u/_/_(CAAA)
f/u/_/_/_(CAAAA)
f/u/_/_/_(CAAAA)
				version split: ['f', 'u']
				{'string': 'f/u', 'rgx': '((f))/((u))/((_))/((_))/((_))$'}
				_____REMOVING________['f', 'u']
				version split: ['f', 'u']
				{'string': 'f/u', 'rgx': '((f))/((u))/((_))/((_))/((_))$'}
				_____REMOVING________['f', 'u']
				version split: ['f', 'u', '_']
				{'string': 'f/u/_', 'rgx': '((f))/((u))/((_))/((_))/((_))$'}
				_____REMOVING________['f', 'u', '_']
				version split: ['f', 'u', '_']
				{'string': 'f/u/_', 'rgx': '((f))/((u))/((_))/((_))/((_))$'}
				_____REMOVING________['f', 'u', '_']
				version split: ['f', 'u', '_']
				{'string': 'f/u/_', 'rgx': '((f))/((u))/((_))/((_))/((_))$'}
				_____REMOVING________['f', 'u', '_']
				version split: ['f', 'u', '_']
				{'string': 'f/u/_', 'rgx': '((f))/((u))/((_))/((_))/((_))$'}
				_____REMOVING________['f', 'u', '_']
				version split: ['f', 'u', '_', '_']
				{'string': 'f/u/_/_', 'rgx': '((f))/((u))/((_))/((_))/((_))$'}
				_____REMOVING________['f', 'u', '_', '_']
				version split: ['f', 'u', '_', '_']
				{'string': 'f/u/_/_', 'rgx': '((f))/((u))/((_))/((_))/((_))$'}
				_____REMOVING________['f', 'u', '_', '_']
				version split: ['f', 'u', '_']
				{'string': 'f/u/_', 'rgx': '((f))/((u))/((_))/((_))/((_))$'}
				_____REMOVING________['f', 'u', '_']
				version split: ['f', 'u', '_']
				{'string': 'f/u/_', 'rgx': '((f))/((u))/((_))/((_))/((_))$'}
				_____REMOVING________['f', 'u', '_']
				version split: ['f', 'u', '_', '_']
				{'string': 'f/u/_/_', 'rgx': '((f))/((u))/((_))/((_))/((_))$'}
				_____REMOVING________['f', 'u', '_', '_']
				version split: ['f', 'u', '_', '_']
				{'string': 'f/u/_/_', 'rgx': '((f))/((u))/((_))/((_))/((_))$'}
				_____REMOVING________['f', 'u', '_', '_']
				version split: ['f', 'u', '_', '_']
				{'string': 'f/u/_/_', 'rgx': '((f))/((u))/((_))/((_))/((_))$'}
				_____REMOVING________['f', 'u', '_', '_']
				version split: ['f', 'u', '_', '_']
				{'string': 'f/u/_/_', 'rgx': '((f))/((u))/((_))/((_))/((_))$'}
				_____REMOVING________['f', 'u', '_', '_']
				version split: ['f', 'u', '_', '_', '_']
				{'string': 'f/u/_/_/_', 'rgx': '((f))/((u))/((_))/((_))/((_))$'}
				version split: ['f', 'u', '_', '_', '_']
				{'string': 'f/u/_/_/_', 'rgx': '((f))/((u))/((_))/((_))/((_))$'}
				ANALYSING: fuir
					resolving (6)
					> version: f/u/i/r
					> version: f/u/i/r
					> version: f/ui/r
					> version: f/u/i/_/r
					TRYING: r
					adding blocked set: C = C >> r, s, _
					> version: f/u/i/_/r
					TRYING: r
					adding blocked set: C = C >> r, s, _
					> version: f/ui/r/_
					RESULT:  ['_']
				adding dashed alternative: ['f', 'u', 'i', 'r', '_']
				adding dashed alternative: ['f', 'u', 'i', 'r', '_']
				adding dashed alternative: ['f', 'ui', 'r', '_']
				adding dashed alternative: ['f', 'u', 'i', '_', '_', 'r']
				adding dashed alternative: ['f', 'u', 'i', '_', '_', 'r']
				adding dashed alternative: ['f', 'ui', 'r', '_', '_']
				f/u/i/r(CCCC)
f/u/i/r(CVVC)
f/ui/r(CVC)
f/u/i/_/r(CAAAC)
f/u/i/_/r(CAAAC)
f/ui/r/_(CVCA)
f/u/i/r/_(CAACA)
f/u/i/r/_(CAACA)
f/ui/r/_(CVCA)
f/u/i/_/_/r(CAAAAC)
f/u/i/_/_/r(CAAAAC)
f/ui/r/_/_(CVCAA)
				version split: ['f', 'u', 'i', 'r']
				{'string': 'f/u/i/r', 'rgx': '((f))/((ui)|(u))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'u', 'i', 'r']
				version split: ['f', 'u', 'i', 'r']
				{'string': 'f/u/i/r', 'rgx': '((f))/((ui)|(u))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'u', 'i', 'r']
				version split: ['f', 'ui', 'r']
				{'string': 'f/ui/r', 'rgx': '((f))/((ui)|(u))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'ui', 'r']
				version split: ['f', 'u', 'i', '_', 'r']
				{'string': 'f/u/i/_/r', 'rgx': '((f))/((ui)|(u))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'u', 'i', '_', 'r']
				version split: ['f', 'u', 'i', '_', 'r']
				{'string': 'f/u/i/_/r', 'rgx': '((f))/((ui)|(u))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'u', 'i', '_', 'r']
				version split: ['f', 'ui', 'r', '_']
				{'string': 'f/ui/r/_', 'rgx': '((f))/((ui)|(u))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'ui', 'r', '_']
				version split: ['f', 'u', 'i', 'r', '_']
				{'string': 'f/u/i/r/_', 'rgx': '((f))/((ui)|(u))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'u', 'i', 'r', '_']
				version split: ['f', 'u', 'i', 'r', '_']
				{'string': 'f/u/i/r/_', 'rgx': '((f))/((ui)|(u))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'u', 'i', 'r', '_']
				version split: ['f', 'ui', 'r', '_']
				{'string': 'f/ui/r/_', 'rgx': '((f))/((ui)|(u))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'ui', 'r', '_']
				version split: ['f', 'u', 'i', '_', '_', 'r']
				{'string': 'f/u/i/_/_/r', 'rgx': '((f))/((ui)|(u))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'u', 'i', '_', '_', 'r']
				version split: ['f', 'u', 'i', '_', '_', 'r']
				{'string': 'f/u/i/_/_/r', 'rgx': '((f))/((ui)|(u))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'u', 'i', '_', '_', 'r']
				version split: ['f', 'ui', 'r', '_', '_']
				{'string': 'f/ui/r/_/_', 'rgx': '((f))/((ui)|(u))/((r))/((_))/((_))$'}
				ANALYSING: fuire
					resolving (3)
					> version: f/u/i/r/e
					TRYING: e
					> version: f/u/i/r/e
					TRYING: e
					> version: f/ui/r/e
					RESULT:  ['_']
				adding dashed alternative: ['f', 'u', 'i', 'r', '_', 'e']
				adding dashed alternative: ['f', 'u', 'i', 'r', '_', 'e']
				adding dashed alternative: ['f', 'ui', 'r', 'e', '_']
				f/u/i/r/e(CCCCV)
f/u/i/r/e(CVVCV)
f/ui/r/e(CVCV)
f/u/i/r/_/e(CAACAV)
f/u/i/r/_/e(CAACAV)
f/ui/r/e/_(CVCVA)
				version split: ['f', 'u', 'i', 'r', 'e']
				{'string': 'f/u/i/r/e', 'rgx': '((f))/((ui)|(u))/((r))/((e))/((_))$'}
				_____REMOVING________['f', 'u', 'i', 'r', 'e']
				version split: ['f', 'u', 'i', 'r', 'e']
				{'string': 'f/u/i/r/e', 'rgx': '((f))/((ui)|(u))/((r))/((e))/((_))$'}
				_____REMOVING________['f', 'u', 'i', 'r', 'e']
				version split: ['f', 'ui', 'r', 'e']
				{'string': 'f/ui/r/e', 'rgx': '((f))/((ui)|(u))/((r))/((e))/((_))$'}
				_____REMOVING________['f', 'ui', 'r', 'e']
				version split: ['f', 'u', 'i', 'r', '_', 'e']
				{'string': 'f/u/i/r/_/e', 'rgx': '((f))/((ui)|(u))/((r))/((e))/((_))$'}
				_____REMOVING________['f', 'u', 'i', 'r', '_', 'e']
				version split: ['f', 'u', 'i', 'r', '_', 'e']
				{'string': 'f/u/i/r/_/e', 'rgx': '((f))/((ui)|(u))/((r))/((e))/((_))$'}
				_____REMOVING________['f', 'u', 'i', 'r', '_', 'e']
				version split: ['f', 'ui', 'r', 'e', '_']
				{'string': 'f/ui/r/e/_', 'rgx': '((f))/((ui)|(u))/((r))/((e))/((_))$'}
				ANALYSING: fur
					resolving (4)
					> version: f/u/r
					> version: f/u/r
					> version: f/u/r/_
					> version: f/u/r/_
					RESULT:  ['_']
				adding dashed alternative: ['f', 'u', 'r', '_']
				adding dashed alternative: ['f', 'u', 'r', '_']
				adding dashed alternative: ['f', 'u', 'r', '_', '_']
				adding dashed alternative: ['f', 'u', 'r', '_', '_']
				f/u/r(CCC)
f/u/r(CVC)
f/u/r/_(CACA)
f/u/r/_(CACA)
f/u/r/_(CACA)
f/u/r/_(CACA)
f/u/r/_/_(CACAA)
f/u/r/_/_(CACAA)
				version split: ['f', 'u', 'r']
				{'string': 'f/u/r', 'rgx': '((f))/((u))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'u', 'r']
				version split: ['f', 'u', 'r']
				{'string': 'f/u/r', 'rgx': '((f))/((u))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'u', 'r']
				version split: ['f', 'u', 'r', '_']
				{'string': 'f/u/r/_', 'rgx': '((f))/((u))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'u', 'r', '_']
				version split: ['f', 'u', 'r', '_']
				{'string': 'f/u/r/_', 'rgx': '((f))/((u))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'u', 'r', '_']
				version split: ['f', 'u', 'r', '_']
				{'string': 'f/u/r/_', 'rgx': '((f))/((u))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'u', 'r', '_']
				version split: ['f', 'u', 'r', '_']
				{'string': 'f/u/r/_', 'rgx': '((f))/((u))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'u', 'r', '_']
				version split: ['f', 'u', 'r', '_', '_']
				{'string': 'f/u/r/_/_', 'rgx': '((f))/((u))/((r))/((_))/((_))$'}
				version split: ['f', 'u', 'r', '_', '_']
				{'string': 'f/u/r/_/_', 'rgx': '((f))/((u))/((r))/((_))/((_))$'}
				ANALYSING: fure
					resolving (2)
					> version: f/u/r/e
					> version: f/u/r/e
					RESULT:  ['_']
				adding dashed alternative: ['f', 'u', 'r', 'e', '_']
				adding dashed alternative: ['f', 'u', 'r', 'e', '_']
				f/u/r/e(CCCV)
f/u/r/e(CVCV)
f/u/r/e/_(CACVA)
f/u/r/e/_(CACVA)
				version split: ['f', 'u', 'r', 'e']
				{'string': 'f/u/r/e', 'rgx': '((f))/((u))/((r))/((e))/((_))$'}
				_____REMOVING________['f', 'u', 'r', 'e']
				version split: ['f', 'u', 'r', 'e']
				{'string': 'f/u/r/e', 'rgx': '((f))/((u))/((r))/((e))/((_))$'}
				_____REMOVING________['f', 'u', 'r', 'e']
				version split: ['f', 'u', 'r', 'e', '_']
				{'string': 'f/u/r/e/_', 'rgx': '((f))/((u))/((r))/((e))/((_))$'}
				version split: ['f', 'u', 'r', 'e', '_']
				{'string': 'f/u/r/e/_', 'rgx': '((f))/((u))/((r))/((e))/((_))$'}
				ANALYSING: fuyr
					resolving (6)
					> version: f/u/y/r
					> version: f/u/y/r
					> version: f/uy/r
					> version: f/u/y/_/r
					TRYING: r
					adding blocked set: C = C >> r, s, _
					> version: f/u/y/_/r
					TRYING: r
					adding blocked set: C = C >> r, s, _
					> version: f/uy/r/_
					RESULT:  ['_']
				adding dashed alternative: ['f', 'u', 'y', 'r', '_']
				adding dashed alternative: ['f', 'u', 'y', 'r', '_']
				adding dashed alternative: ['f', 'uy', 'r', '_']
				adding dashed alternative: ['f', 'u', 'y', '_', '_', 'r']
				adding dashed alternative: ['f', 'u', 'y', '_', '_', 'r']
				adding dashed alternative: ['f', 'uy', 'r', '_', '_']
				f/u/y/r(CCCC)
f/u/y/r(CVVC)
f/uy/r(CVC)
f/u/y/_/r(CAAAC)
f/u/y/_/r(CAAAC)
f/uy/r/_(CVCA)
f/u/y/r/_(CAACA)
f/u/y/r/_(CAACA)
f/uy/r/_(CVCA)
f/u/y/_/_/r(CAAAAC)
f/u/y/_/_/r(CAAAAC)
f/uy/r/_/_(CVCAA)
				version split: ['f', 'u', 'y', 'r']
				{'string': 'f/u/y/r', 'rgx': '((f))/((uy)|(u))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'u', 'y', 'r']
				version split: ['f', 'u', 'y', 'r']
				{'string': 'f/u/y/r', 'rgx': '((f))/((uy)|(u))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'u', 'y', 'r']
				version split: ['f', 'uy', 'r']
				{'string': 'f/uy/r', 'rgx': '((f))/((uy)|(u))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'uy', 'r']
				version split: ['f', 'u', 'y', '_', 'r']
				{'string': 'f/u/y/_/r', 'rgx': '((f))/((uy)|(u))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'u', 'y', '_', 'r']
				version split: ['f', 'u', 'y', '_', 'r']
				{'string': 'f/u/y/_/r', 'rgx': '((f))/((uy)|(u))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'u', 'y', '_', 'r']
				version split: ['f', 'uy', 'r', '_']
				{'string': 'f/uy/r/_', 'rgx': '((f))/((uy)|(u))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'uy', 'r', '_']
				version split: ['f', 'u', 'y', 'r', '_']
				{'string': 'f/u/y/r/_', 'rgx': '((f))/((uy)|(u))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'u', 'y', 'r', '_']
				version split: ['f', 'u', 'y', 'r', '_']
				{'string': 'f/u/y/r/_', 'rgx': '((f))/((uy)|(u))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'u', 'y', 'r', '_']
				version split: ['f', 'uy', 'r', '_']
				{'string': 'f/uy/r/_', 'rgx': '((f))/((uy)|(u))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'uy', 'r', '_']
				version split: ['f', 'u', 'y', '_', '_', 'r']
				{'string': 'f/u/y/_/_/r', 'rgx': '((f))/((uy)|(u))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'u', 'y', '_', '_', 'r']
				version split: ['f', 'u', 'y', '_', '_', 'r']
				{'string': 'f/u/y/_/_/r', 'rgx': '((f))/((uy)|(u))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'u', 'y', '_', '_', 'r']
				version split: ['f', 'uy', 'r', '_', '_']
				{'string': 'f/uy/r/_/_', 'rgx': '((f))/((uy)|(u))/((r))/((_))/((_))$'}
				ANALYSING: fuyre
					resolving (3)
					> version: f/u/y/r/e
					TRYING: e
					> version: f/u/y/r/e
					TRYING: e
					> version: f/uy/r/e
					RESULT:  ['_']
				adding dashed alternative: ['f', 'u', 'y', 'r', '_', 'e']
				adding dashed alternative: ['f', 'u', 'y', 'r', '_', 'e']
				adding dashed alternative: ['f', 'uy', 'r', 'e', '_']
				f/u/y/r/e(CCCCV)
f/u/y/r/e(CVVCV)
f/uy/r/e(CVCV)
f/u/y/r/_/e(CAACAV)
f/u/y/r/_/e(CAACAV)
f/uy/r/e/_(CVCVA)
				version split: ['f', 'u', 'y', 'r', 'e']
				{'string': 'f/u/y/r/e', 'rgx': '((f))/((uy)|(u))/((r))/((e))/((_))$'}
				_____REMOVING________['f', 'u', 'y', 'r', 'e']
				version split: ['f', 'u', 'y', 'r', 'e']
				{'string': 'f/u/y/r/e', 'rgx': '((f))/((uy)|(u))/((r))/((e))/((_))$'}
				_____REMOVING________['f', 'u', 'y', 'r', 'e']
				version split: ['f', 'uy', 'r', 'e']
				{'string': 'f/uy/r/e', 'rgx': '((f))/((uy)|(u))/((r))/((e))/((_))$'}
				_____REMOVING________['f', 'uy', 'r', 'e']
				version split: ['f', 'u', 'y', 'r', '_', 'e']
				{'string': 'f/u/y/r/_/e', 'rgx': '((f))/((uy)|(u))/((r))/((e))/((_))$'}
				_____REMOVING________['f', 'u', 'y', 'r', '_', 'e']
				version split: ['f', 'u', 'y', 'r', '_', 'e']
				{'string': 'f/u/y/r/_/e', 'rgx': '((f))/((uy)|(u))/((r))/((e))/((_))$'}
				_____REMOVING________['f', 'u', 'y', 'r', '_', 'e']
				version split: ['f', 'uy', 'r', 'e', '_']
				{'string': 'f/uy/r/e/_', 'rgx': '((f))/((uy)|(u))/((r))/((e))/((_))$'}
				ANALYSING: fyr
					resolving (4)
					> version: f/y/r
					> version: f/y/r
					> version: f/y/r/_
					> version: f/y/r/_
					RESULT:  ['_']
				adding dashed alternative: ['f', 'y', 'r', '_']
				adding dashed alternative: ['f', 'y', 'r', '_']
				adding dashed alternative: ['f', 'y', 'r', '_', '_']
				adding dashed alternative: ['f', 'y', 'r', '_', '_']
				f/y/r(CCC)
f/y/r(CVC)
f/y/r/_(CACA)
f/y/r/_(CACA)
f/y/r/_(CACA)
f/y/r/_(CACA)
f/y/r/_/_(CACAA)
f/y/r/_/_(CACAA)
				version split: ['f', 'y', 'r']
				{'string': 'f/y/r', 'rgx': '((f))/((y))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'y', 'r']
				version split: ['f', 'y', 'r']
				{'string': 'f/y/r', 'rgx': '((f))/((y))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'y', 'r']
				version split: ['f', 'y', 'r', '_']
				{'string': 'f/y/r/_', 'rgx': '((f))/((y))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'y', 'r', '_']
				version split: ['f', 'y', 'r', '_']
				{'string': 'f/y/r/_', 'rgx': '((f))/((y))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'y', 'r', '_']
				version split: ['f', 'y', 'r', '_']
				{'string': 'f/y/r/_', 'rgx': '((f))/((y))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'y', 'r', '_']
				version split: ['f', 'y', 'r', '_']
				{'string': 'f/y/r/_', 'rgx': '((f))/((y))/((r))/((_))/((_))$'}
				_____REMOVING________['f', 'y', 'r', '_']
				version split: ['f', 'y', 'r', '_', '_']
				{'string': 'f/y/r/_/_', 'rgx': '((f))/((y))/((r))/((_))/((_))$'}
				version split: ['f', 'y', 'r', '_', '_']
				{'string': 'f/y/r/_/_', 'rgx': '((f))/((y))/((r))/((_))/((_))$'}
				ANALYSING: fyre
					resolving (2)
					> version: f/y/r/e
					> version: f/y/r/e
					RESULT:  ['_']
				adding dashed alternative: ['f', 'y', 'r', 'e', '_']
				adding dashed alternative: ['f', 'y', 'r', 'e', '_']
				f/y/r/e(CCCV)
f/y/r/e(CVCV)
f/y/r/e/_(CACVA)
f/y/r/e/_(CACVA)
				version split: ['f', 'y', 'r', 'e']
				{'string': 'f/y/r/e', 'rgx': '((f))/((y))/((r))/((e))/((_))$'}
				_____REMOVING________['f', 'y', 'r', 'e']
				version split: ['f', 'y', 'r', 'e']
				{'string': 'f/y/r/e', 'rgx': '((f))/((y))/((r))/((e))/((_))$'}
				_____REMOVING________['f', 'y', 'r', 'e']
				version split: ['f', 'y', 'r', 'e', '_']
				{'string': 'f/y/r/e/_', 'rgx': '((f))/((y))/((r))/((e))/((_))$'}
				version split: ['f', 'y', 'r', 'e', '_']
				{'string': 'f/y/r/e/_', 'rgx': '((f))/((y))/((r))/((e))/((_))$'}
				ANALYSING: uer
					resolving (6)
					> version: u/e/r
					> version: u/e/r
					> version: ue/r
					> version: u/e/r/_
					> version: u/e/r/_
					> version: ue/r/_
					RESULT:  ['_']
				adding dashed alternative: ['u', 'e', 'r', '_']
				adding dashed alternative: ['u', 'e', 'r', '_']
				adding dashed alternative: ['ue', 'r', '_']
				adding dashed alternative: ['u', 'e', 'r', '_', '_']
				adding dashed alternative: ['u', 'e', 'r', '_', '_']
				adding dashed alternative: ['ue', 'r', '_', '_']
				u/e/r(CVC)
u/e/r(VVC)
ue/r(VC)
u/e/r/_(AVCA)
u/e/r/_(AVCA)
ue/r/_(VCA)
u/e/r/_(AVCA)
u/e/r/_(AVCA)
ue/r/_(VCA)
u/e/r/_/_(AVCAA)
u/e/r/_/_(AVCAA)
ue/r/_/_(VCAA)
				version split: ['u', 'e', 'r']
				{'string': 'u/e/r', 'rgx': '((u))/((e))/((r))/((_))/((_))$'}
				_____REMOVING________['u', 'e', 'r']
				version split: ['u', 'e', 'r']
				{'string': 'u/e/r', 'rgx': '((u))/((e))/((r))/((_))/((_))$'}
				_____REMOVING________['u', 'e', 'r']
				version split: ['ue', 'r']
				{'string': 'ue/r', 'rgx': '((u))/((e))/((r))/((_))/((_))$'}
				_____REMOVING________['ue', 'r']
				version split: ['u', 'e', 'r', '_']
				{'string': 'u/e/r/_', 'rgx': '((u))/((e))/((r))/((_))/((_))$'}
				_____REMOVING________['u', 'e', 'r', '_']
				version split: ['u', 'e', 'r', '_']
				{'string': 'u/e/r/_', 'rgx': '((u))/((e))/((r))/((_))/((_))$'}
				_____REMOVING________['u', 'e', 'r', '_']
				version split: ['ue', 'r', '_']
				{'string': 'ue/r/_', 'rgx': '((u))/((e))/((r))/((_))/((_))$'}
				_____REMOVING________['ue', 'r', '_']
				version split: ['u', 'e', 'r', '_']
				{'string': 'u/e/r/_', 'rgx': '((u))/((e))/((r))/((_))/((_))$'}
				_____REMOVING________['u', 'e', 'r', '_']
				version split: ['u', 'e', 'r', '_']
				{'string': 'u/e/r/_', 'rgx': '((u))/((e))/((r))/((_))/((_))$'}
				_____REMOVING________['u', 'e', 'r', '_']
				version split: ['ue', 'r', '_']
				{'string': 'ue/r/_', 'rgx': '((u))/((e))/((r))/((_))/((_))$'}
				_____REMOVING________['ue', 'r', '_']
				version split: ['u', 'e', 'r', '_', '_']
				{'string': 'u/e/r/_/_', 'rgx': '((u))/((e))/((r))/((_))/((_))$'}
				version split: ['u', 'e', 'r', '_', '_']
				{'string': 'u/e/r/_/_', 'rgx': '((u))/((e))/((r))/((_))/((_))$'}
				version split: ['ue', 'r', '_', '_']
				{'string': 'ue/r/_/_', 'rgx': '((u))/((e))/((r))/((_))/((_))$'}
				_____REMOVING________['ue', 'r', '_', '_']
				ANALYSING: uere
					resolving (3)
					> version: u/e/r/e
					> version: u/e/r/e
					> version: ue/r/e
					RESULT:  ['_']
				adding dashed alternative: ['u', 'e', 'r', 'e', '_']
				adding dashed alternative: ['u', 'e', 'r', 'e', '_']
				adding dashed alternative: ['ue', 'r', 'e', '_']
				u/e/r/e(CVCV)
u/e/r/e(VVCV)
ue/r/e(VCV)
u/e/r/e/_(AVCVA)
u/e/r/e/_(AVCVA)
ue/r/e/_(VCVA)
				version split: ['u', 'e', 'r', 'e']
				{'string': 'u/e/r/e', 'rgx': '((u))/((e))/((r))/((e))/((_))$'}
				_____REMOVING________['u', 'e', 'r', 'e']
				version split: ['u', 'e', 'r', 'e']
				{'string': 'u/e/r/e', 'rgx': '((u))/((e))/((r))/((e))/((_))$'}
				_____REMOVING________['u', 'e', 'r', 'e']
				version split: ['ue', 'r', 'e']
				{'string': 'ue/r/e', 'rgx': '((u))/((e))/((r))/((e))/((_))$'}
				_____REMOVING________['ue', 'r', 'e']
				version split: ['u', 'e', 'r', 'e', '_']
				{'string': 'u/e/r/e/_', 'rgx': '((u))/((e))/((r))/((e))/((_))$'}
				version split: ['u', 'e', 'r', 'e', '_']
				{'string': 'u/e/r/e/_', 'rgx': '((u))/((e))/((r))/((e))/((_))$'}
				version split: ['ue', 'r', 'e', '_']
				{'string': 'ue/r/e/_', 'rgx': '((u))/((e))/((r))/((e))/((_))$'}
				_____REMOVING________['ue', 'r', 'e', '_']
				ANALYSING: ueréé
					resolving (6)
					> version: u/e/r/é/é
					TRYING: é
					> version: u/e/r/é/é
					TRYING: é
					> version: u/e/r/éé
					> version: u/e/r/éé
					> version: ue/r/é/é
					> version: ue/r/éé
					RESULT:  ['_']
				adding dashed alternative: ['u', 'e', 'r', 'é', '_', 'é']
				adding dashed alternative: ['u', 'e', 'r', 'é', '_', 'é']
				adding dashed alternative: ['u', 'e', 'r', 'éé', '_']
				adding dashed alternative: ['u', 'e', 'r', 'éé', '_']
				adding dashed alternative: ['ue', 'r', 'é', 'é', '_']
				adding dashed alternative: ['ue', 'r', 'éé', '_']
				u/e/r/é/é(CVCVV)
u/e/r/é/é(VVCVV)
u/e/r/éé(CVCV)
u/e/r/éé(VVCV)
ue/r/é/é(VCVV)
ue/r/éé(VCV)
u/e/r/é/_/é(AVCVAV)
u/e/r/é/_/é(AVCVAV)
u/e/r/éé/_(AVCVA)
u/e/r/éé/_(AVCVA)
ue/r/é/é/_(VCVVA)
ue/r/éé/_(VCVA)
				version split: ['u', 'e', 'r', 'é', 'é']
				{'string': 'u/e/r/é/é', 'rgx': '((u))/((e))/((r))/((é)|(éé))/((_))$'}
				_____REMOVING________['u', 'e', 'r', 'é', 'é']
				version split: ['u', 'e', 'r', 'é', 'é']
				{'string': 'u/e/r/é/é', 'rgx': '((u))/((e))/((r))/((é)|(éé))/((_))$'}
				_____REMOVING________['u', 'e', 'r', 'é', 'é']
				version split: ['u', 'e', 'r', 'éé']
				{'string': 'u/e/r/éé', 'rgx': '((u))/((e))/((r))/((é)|(éé))/((_))$'}
				_____REMOVING________['u', 'e', 'r', 'éé']
				version split: ['u', 'e', 'r', 'éé']
				{'string': 'u/e/r/éé', 'rgx': '((u))/((e))/((r))/((é)|(éé))/((_))$'}
				_____REMOVING________['u', 'e', 'r', 'éé']
				version split: ['ue', 'r', 'é', 'é']
				{'string': 'ue/r/é/é', 'rgx': '((u))/((e))/((r))/((é)|(éé))/((_))$'}
				_____REMOVING________['ue', 'r', 'é', 'é']
				version split: ['ue', 'r', 'éé']
				{'string': 'ue/r/éé', 'rgx': '((u))/((e))/((r))/((é)|(éé))/((_))$'}
				_____REMOVING________['ue', 'r', 'éé']
				version split: ['u', 'e', 'r', 'é', '_', 'é']
				{'string': 'u/e/r/é/_/é', 'rgx': '((u))/((e))/((r))/((é)|(éé))/((_))$'}
				_____REMOVING________['u', 'e', 'r', 'é', '_', 'é']
				version split: ['u', 'e', 'r', 'é', '_', 'é']
				{'string': 'u/e/r/é/_/é', 'rgx': '((u))/((e))/((r))/((é)|(éé))/((_))$'}
				_____REMOVING________['u', 'e', 'r', 'é', '_', 'é']
				version split: ['u', 'e', 'r', 'éé', '_']
				{'string': 'u/e/r/éé/_', 'rgx': '((u))/((e))/((r))/((é)|(éé))/((_))$'}
				version split: ['u', 'e', 'r', 'éé', '_']
				{'string': 'u/e/r/éé/_', 'rgx': '((u))/((e))/((r))/((é)|(éé))/((_))$'}
				version split: ['ue', 'r', 'é', 'é', '_']
				{'string': 'ue/r/é/é/_', 'rgx': '((u))/((e))/((r))/((é)|(éé))/((_))$'}
				_____REMOVING________['ue', 'r', 'é', 'é', '_']
				version split: ['ue', 'r', 'éé', '_']
				{'string': 'ue/r/éé/_', 'rgx': '((u))/((e))/((r))/((é)|(éé))/((_))$'}
				_____REMOVING________['ue', 'r', 'éé', '_']
				ANALYSING: uur
					resolving (4)
					> version: u/u/r
					> version: u/u/r
					> version: u/u/r/_
					> version: u/u/r/_
					RESULT:  ['_']
				adding dashed alternative: ['u', 'u', 'r', '_']
				adding dashed alternative: ['u', 'u', 'r', '_']
				adding dashed alternative: ['u', 'u', 'r', '_', '_']
				adding dashed alternative: ['u', 'u', 'r', '_', '_']
				u/u/r(CCC)
u/u/r(VVC)
u/u/r/_(AACA)
u/u/r/_(AACA)
u/u/r/_(AACA)
u/u/r/_(AACA)
u/u/r/_/_(AACAA)
u/u/r/_/_(AACAA)
				version split: ['u', 'u', 'r']
				{'string': 'u/u/r', 'rgx': '((u))/((u))/((r))/((_))/((_))$'}
				_____REMOVING________['u', 'u', 'r']
				version split: ['u', 'u', 'r']
				{'string': 'u/u/r', 'rgx': '((u))/((u))/((r))/((_))/((_))$'}
				_____REMOVING________['u', 'u', 'r']
				version split: ['u', 'u', 'r', '_']
				{'string': 'u/u/r/_', 'rgx': '((u))/((u))/((r))/((_))/((_))$'}
				_____REMOVING________['u', 'u', 'r', '_']
				version split: ['u', 'u', 'r', '_']
				{'string': 'u/u/r/_', 'rgx': '((u))/((u))/((r))/((_))/((_))$'}
				_____REMOVING________['u', 'u', 'r', '_']
				version split: ['u', 'u', 'r', '_']
				{'string': 'u/u/r/_', 'rgx': '((u))/((u))/((r))/((_))/((_))$'}
				_____REMOVING________['u', 'u', 'r', '_']
				version split: ['u', 'u', 'r', '_']
				{'string': 'u/u/r/_', 'rgx': '((u))/((u))/((r))/((_))/((_))$'}
				_____REMOVING________['u', 'u', 'r', '_']
				version split: ['u', 'u', 'r', '_', '_']
				{'string': 'u/u/r/_/_', 'rgx': '((u))/((u))/((r))/((_))/((_))$'}
				version split: ['u', 'u', 'r', '_', '_']
				{'string': 'u/u/r/_/_', 'rgx': '((u))/((u))/((r))/((_))/((_))$'}
				ANALYSING: ver
					resolving (4)
					> version: v/e/r
					> version: v/e/r
					> version: v/e/r/_
					> version: v/e/r/_
					RESULT:  ['_']
				adding dashed alternative: ['v', 'e', 'r', '_']
				adding dashed alternative: ['v', 'e', 'r', '_']
				adding dashed alternative: ['v', 'e', 'r', '_', '_']
				adding dashed alternative: ['v', 'e', 'r', '_', '_']
				v/e/r(CVC)
v/e/r(VVC)
v/e/r/_(AVCA)
v/e/r/_(AVCA)
v/e/r/_(AVCA)
v/e/r/_(AVCA)
v/e/r/_/_(AVCAA)
v/e/r/_/_(AVCAA)
				version split: ['v', 'e', 'r']
				{'string': 'v/e/r', 'rgx': '((v))/((e))/((r))/((_))/((_))$'}
				_____REMOVING________['v', 'e', 'r']
				version split: ['v', 'e', 'r']
				{'string': 'v/e/r', 'rgx': '((v))/((e))/((r))/((_))/((_))$'}
				_____REMOVING________['v', 'e', 'r']
				version split: ['v', 'e', 'r', '_']
				{'string': 'v/e/r/_', 'rgx': '((v))/((e))/((r))/((_))/((_))$'}
				_____REMOVING________['v', 'e', 'r', '_']
				version split: ['v', 'e', 'r', '_']
				{'string': 'v/e/r/_', 'rgx': '((v))/((e))/((r))/((_))/((_))$'}
				_____REMOVING________['v', 'e', 'r', '_']
				version split: ['v', 'e', 'r', '_']
				{'string': 'v/e/r/_', 'rgx': '((v))/((e))/((r))/((_))/((_))$'}
				_____REMOVING________['v', 'e', 'r', '_']
				version split: ['v', 'e', 'r', '_']
				{'string': 'v/e/r/_', 'rgx': '((v))/((e))/((r))/((_))/((_))$'}
				_____REMOVING________['v', 'e', 'r', '_']
				version split: ['v', 'e', 'r', '_', '_']
				{'string': 'v/e/r/_/_', 'rgx': '((v))/((e))/((r))/((_))/((_))$'}
				version split: ['v', 'e', 'r', '_', '_']
				{'string': 'v/e/r/_/_', 'rgx': '((v))/((e))/((r))/((_))/((_))$'}
				ANALYSING: vur
					resolving (4)
					> version: v/u/r
					> version: v/u/r
					> version: v/u/r/_
					> version: v/u/r/_
					RESULT:  ['_']
				adding dashed alternative: ['v', 'u', 'r', '_']
				adding dashed alternative: ['v', 'u', 'r', '_']
				adding dashed alternative: ['v', 'u', 'r', '_', '_']
				adding dashed alternative: ['v', 'u', 'r', '_', '_']
				v/u/r(CCC)
v/u/r(VVC)
v/u/r/_(AACA)
v/u/r/_(AACA)
v/u/r/_(AACA)
v/u/r/_(AACA)
v/u/r/_/_(AACAA)
v/u/r/_/_(AACAA)
				version split: ['v', 'u', 'r']
				{'string': 'v/u/r', 'rgx': '((v))/((u))/((r))/((_))/((_))$'}
				_____REMOVING________['v', 'u', 'r']
				version split: ['v', 'u', 'r']
				{'string': 'v/u/r', 'rgx': '((v))/((u))/((r))/((_))/((_))$'}
				_____REMOVING________['v', 'u', 'r']
				version split: ['v', 'u', 'r', '_']
				{'string': 'v/u/r/_', 'rgx': '((v))/((u))/((r))/((_))/((_))$'}
				_____REMOVING________['v', 'u', 'r', '_']
				version split: ['v', 'u', 'r', '_']
				{'string': 'v/u/r/_', 'rgx': '((v))/((u))/((r))/((_))/((_))$'}
				_____REMOVING________['v', 'u', 'r', '_']
				version split: ['v', 'u', 'r', '_']
				{'string': 'v/u/r/_', 'rgx': '((v))/((u))/((r))/((_))/((_))$'}
				_____REMOVING________['v', 'u', 'r', '_']
				version split: ['v', 'u', 'r', '_']
				{'string': 'v/u/r/_', 'rgx': '((v))/((u))/((r))/((_))/((_))$'}
				_____REMOVING________['v', 'u', 'r', '_']
				version split: ['v', 'u', 'r', '_', '_']
				{'string': 'v/u/r/_/_', 'rgx': '((v))/((u))/((r))/((_))/((_))$'}
				version split: ['v', 'u', 'r', '_', '_']
				{'string': 'v/u/r/_/_', 'rgx': '((v))/((u))/((r))/((_))/((_))$'}
		only one version left: ['f', 'ai', 'r', '_', '_']
		only one version left: ['f', 'a', 'r', '_', '_']
		only one version left: ['f', 'e', 'r', '_', '_']
		only one version left: ['f', 'e', 'r', 'e', '_']
		only one version left: ['f', 'ie', 'r', '_', '_']
		only one version left: ['f', 'ie', 'r', 'e', '_']
		only one version left: ['f', 'i', 'r', '_', '_']
		only one version left: ['f', 'i', 'r', 'e', '_']
		only one version left: ['f', 'u', '_', '_', '_']
		only one version left: ['f', 'ui', 'r', '_', '_']
		only one version left: ['f', 'ui', 'r', 'e', '_']
		only one version left: ['f', 'u', 'r', '_', '_']
		only one version left: ['f', 'u', 'r', 'e', '_']
		only one version left: ['f', 'uy', 'r', '_', '_']
		only one version left: ['f', 'uy', 'r', 'e', '_']
		only one version left: ['f', 'y', 'r', '_', '_']
		only one version left: ['f', 'y', 'r', 'e', '_']
		only one version left: ['u', 'e', 'r', '_', '_']
		only one version left: ['u', 'e', 'r', 'e', '_']
		only one version left: ['u', 'e', 'r', 'éé', '_']
		only one version left: ['u', 'u', 'r', '_', '_']
		only one version left: ['v', 'e', 'r', '_', '_']
		only one version left: ['v', 'u', 'r', '_', '_']
		SPLIT: ['f', 'i', 'r', 'e', 's']
		SPLIT: ['f', 'u', 'r', 'e', 's']
		SPLIT: ['f', 'ai', 'r', '_', '_']
		['f', 'ai', 'r', '_', '_']
		SPLIT: ['f', 'a', 'r', '_', '_']
		['f', 'a', 'r', '_', '_']
		SPLIT: ['f', 'e', 'r', '_', '_']
		['f', 'e', 'r', '_', '_']
		SPLIT: ['f', 'e', 'r', 'e', '_']
		['f', 'e', 'r', 'e', '_']
		SPLIT: ['f', 'ie', 'r', '_', '_']
		['f', 'ie', 'r', '_', '_']
		SPLIT: ['f', 'ie', 'r', 'e', '_']
		['f', 'ie', 'r', 'e', '_']
		SPLIT: ['f', 'i', 'r', '_', '_']
		['f', 'i', 'r', '_', '_']
		['f', 'i', 'r', '_', '_']
		SPLIT: ['f', 'i', 'r', 'e', '_']
		['f', 'i', 'r', 'e', '_']
		['f', 'i', 'r', 'e', '_']
		SPLIT: ['f', 'u', '_', '_', '_']
		['f', 'u', '_', '_', '_']
		['f', 'u', '_', '_', '_']
		SPLIT: ['f', 'ui', 'r', '_', '_']
		['f', 'ui', 'r', '_', '_']
		SPLIT: ['f', 'ui', 'r', 'e', '_']
		['f', 'ui', 'r', 'e', '_']
		SPLIT: ['f', 'u', 'r', '_', '_']
		['f', 'u', 'r', '_', '_']
		['f', 'u', 'r', '_', '_']
		SPLIT: ['f', 'u', 'r', 'e', '_']
		['f', 'u', 'r', 'e', '_']
		['f', 'u', 'r', 'e', '_']
		SPLIT: ['f', 'uy', 'r', '_', '_']
		['f', 'uy', 'r', '_', '_']
		SPLIT: ['f', 'uy', 'r', 'e', '_']
		['f', 'uy', 'r', 'e', '_']
		SPLIT: ['f', 'y', 'r', '_', '_']
		['f', 'y', 'r', '_', '_']
		['f', 'y', 'r', '_', '_']
		SPLIT: ['f', 'y', 'r', 'e', '_']
		['f', 'y', 'r', 'e', '_']
		['f', 'y', 'r', 'e', '_']
		SPLIT: ['u', 'e', 'r', '_', '_']
		['u', 'e', 'r', '_', '_']
		['u', 'e', 'r', '_', '_']
		SPLIT: ['u', 'e', 'r', 'e', '_']
		['u', 'e', 'r', 'e', '_']
		['u', 'e', 'r', 'e', '_']
		SPLIT: ['u', 'e', 'r', 'éé', '_']
		['u', 'e', 'r', 'éé', '_']
		['u', 'e', 'r', 'éé', '_']
		SPLIT: ['u', 'u', 'r', '_', '_']
		['u', 'u', 'r', '_', '_']
		['u', 'u', 'r', '_', '_']
		SPLIT: ['v', 'e', 'r', '_', '_']
		['v', 'e', 'r', '_', '_']
		['v', 'e', 'r', '_', '_']
		SPLIT: ['v', 'u', 'r', '_', '_']
		['v', 'u', 'r', '_', '_']
		['v', 'u', 'r', '_', '_']
		POSSIBLE CHANGE: 0 : Initial Fricative Voicing
		OVERVIEW: version for pattern CVCVC

faulty splits: 0
f | i | r | e | s
f | u | r | e | s
f | ai | r | _ | _
f | a | r | _ | _
f | e | r | _ | _
f | e | r | e | _
f | ie | r | _ | _
f | ie | r | e | _
f | i | r | _ | _
f | i | r | e | _
f | u | _ | _ | _
f | ui | r | _ | _
f | ui | r | e | _
f | u | r | _ | _
f | u | r | e | _
f | uy | r | _ | _
f | uy | r | e | _
f | y | r | _ | _
f | y | r | e | _
u | e | r | _ | _
u | e | r | e | _
u | e | r | éé | _
u | u | r | _ | _
v | e | r | _ | _
v | u | r | _ | _
4 : {'r', 's', '_'},{'s', 'r'}
	[[{'lit': 'ai', 'ln': 2, 'index': 1}]]
	[[{'lit': 'ie', 'ln': 2, 'index': 1}]]
	[[{'lit': 'ie', 'ln': 2, 'index': 1}]]
	[[{'lit': 'ui', 'ln': 2, 'index': 1}]]
	[[{'lit': 'ui', 'ln': 2, 'index': 1}]]
	[[{'lit': 'uy', 'ln': 2, 'index': 1}]]
	[[{'lit': 'uy', 'ln': 2, 'index': 1}]]
	[[{'lit': 'ue', 'ln': 2, 'index': 0}]]
	[[{'lit': 'ue', 'ln': 2, 'index': 0}]]
	[[{'lit': 'éé', 'ln': 2, 'index': 3}], [{'lit': 'ue', 'ln': 2, 'index': 0}]]
	[[{'lit': 'éé', 'ln': 2, 'index': 3}], [{'lit': 'ue', 'ln': 2, 'index': 0}], [{'lit': 'éé', 'ln': 2, 'index': 3}, {'lit': 'ue', 'ln': 2, 'index': 0}]]
	MIN pattern length=3
	Pattern CVCV is valid
	Pattern VVCV is invalid
	Pattern CCCVC is valid
	Pattern CVVCV is invalid
	Pattern CVCVV is invalid
	Pattern CC is invalid
	Pattern CCVCV is valid
	Pattern VVCVV is invalid
	Pattern CCCCV is invalid
	Pattern CCC is valid
	Pattern CCCC is invalid
	Pattern VCVV is invalid
	Pattern CV is invalid
	Pattern VC is invalid
	Pattern CVC is valid
	Pattern CVCVC is valid
	Pattern VCV is valid
	Pattern CVVC is invalid
	Pattern VVC is invalid
	Pattern CCCV is valid
	Pattern CVCC is valid
	Pattern CCVC is valid
	Making the selection for pattern: VCV
	Selection for pattern: VCV completed
	Making a version for pattern: VCV
			___VCV : 0___
				ANALYSING: uere
				adding littera based on matching pattern
				ANALYSING: ueréé
				adding littera based on matching pattern
				ANALYSING: fair
					resolving (3)
					> version: f/a/i/r
					TRYING: f
					> version: f/a/i/r
					TRYING: f
					> version: f/ai/r
					TRYING: f
					RESULT:  ['_']
				adding dashed alternative: ['_', 'f', 'a', 'i', 'r']
				adding dashed alternative: ['_', 'f', 'a', 'i', 'r']
				adding dashed alternative: ['_', 'f', 'ai', 'r']
				f/a/i/r(CVCC)
f/a/i/r(CVVC)
f/ai/r(CVC)
_/f/a/i/r(ACVAC)
_/f/a/i/r(ACVAC)
_/f/ai/r(ACVC)
				ANALYSING: far
					resolving (1)
					> version: f/a/r
					TRYING: f
					RESULT:  ['_']
				adding dashed alternative: ['_', 'f', 'a', 'r']
				f/a/r(CVC)
_/f/a/r(ACVC)
				ANALYSING: fer
					resolving (1)
					> version: f/e/r
					TRYING: f
					RESULT:  ['_']
				adding dashed alternative: ['_', 'f', 'e', 'r']
				f/e/r(CVC)
_/f/e/r(ACVC)
				ANALYSING: fere
					resolving (1)
					> version: f/e/r/e
					TRYING: f
					RESULT:  ['_']
				adding dashed alternative: ['_', 'f', 'e', 'r', 'e']
				f/e/r/e(CVCV)
_/f/e/r/e(ACVCV)
				ANALYSING: fier
					resolving (3)
					> version: f/i/e/r
					TRYING: f
					> version: f/i/e/r
					TRYING: f
					> version: f/ie/r
					TRYING: f
					RESULT:  ['_']
				adding dashed alternative: ['_', 'f', 'i', 'e', 'r']
				adding dashed alternative: ['_', 'f', 'i', 'e', 'r']
				adding dashed alternative: ['_', 'f', 'ie', 'r']
				f/i/e/r(CCVC)
f/i/e/r(CVVC)
f/ie/r(CVC)
_/f/i/e/r(ACAVC)
_/f/i/e/r(ACAVC)
_/f/ie/r(ACVC)
				ANALYSING: fiere
					resolving (3)
					> version: f/i/e/r/e
					TRYING: f
					> version: f/i/e/r/e
					TRYING: f
					> version: f/ie/r/e
					TRYING: f
					RESULT:  ['_']
				adding dashed alternative: ['_', 'f', 'i', 'e', 'r', 'e']
				adding dashed alternative: ['_', 'f', 'i', 'e', 'r', 'e']
				adding dashed alternative: ['_', 'f', 'ie', 'r', 'e']
				f/i/e/r/e(CCVCV)
f/i/e/r/e(CVVCV)
f/ie/r/e(CVCV)
_/f/i/e/r/e(ACAVCV)
_/f/i/e/r/e(ACAVCV)
_/f/ie/r/e(ACVCV)
				ANALYSING: fir
					resolving (2)
					> version: f/i/r
					TRYING: f
					> version: f/i/r
					TRYING: f
					RESULT:  ['_']
				adding dashed alternative: ['_', 'f', 'i', 'r']
				adding dashed alternative: ['_', 'f', 'i', 'r']
				f/i/r(CCC)
f/i/r(CVC)
_/f/i/r(ACAC)
_/f/i/r(ACAC)
				ANALYSING: fire
					resolving (2)
					> version: f/i/r/e
					TRYING: f
					> version: f/i/r/e
					TRYING: f
					RESULT:  ['_']
				adding dashed alternative: ['_', 'f', 'i', 'r', 'e']
				adding dashed alternative: ['_', 'f', 'i', 'r', 'e']
				f/i/r/e(CCCV)
f/i/r/e(CVCV)
_/f/i/r/e(ACACV)
_/f/i/r/e(ACACV)
				ANALYSING: fires
					resolving (2)
					> version: f/i/r/e/s
					TRYING: f
					> version: f/i/r/e/s
					TRYING: f
					RESULT:  ['_']
				adding dashed alternative: ['_', 'f', 'i', 'r', 'e', 's']
				adding dashed alternative: ['_', 'f', 'i', 'r', 'e', 's']
				f/i/r/e/s(CCCVC)
f/i/r/e/s(CVCVC)
_/f/i/r/e/s(ACACVC)
_/f/i/r/e/s(ACACVC)
				ANALYSING: fu
					resolving (2)
					> version: f/u
					TRYING: f
					> version: f/u
					TRYING: f
					RESULT:  ['_']
				adding dashed alternative: ['_', 'f', 'u']
				adding dashed alternative: ['_', 'f', 'u']
				f/u(CC)
f/u(CV)
_/f/u(ACA)
_/f/u(ACA)
				ANALYSING: fuir
					resolving (3)
					> version: f/u/i/r
					TRYING: f
					> version: f/u/i/r
					TRYING: f
					> version: f/ui/r
					TRYING: f
					RESULT:  ['_']
				adding dashed alternative: ['_', 'f', 'u', 'i', 'r']
				adding dashed alternative: ['_', 'f', 'u', 'i', 'r']
				adding dashed alternative: ['_', 'f', 'ui', 'r']
				f/u/i/r(CCCC)
f/u/i/r(CVVC)
f/ui/r(CVC)
_/f/u/i/r(ACAAC)
_/f/u/i/r(ACAAC)
_/f/ui/r(ACVC)
				ANALYSING: fuire
					resolving (3)
					> version: f/u/i/r/e
					TRYING: f
					> version: f/u/i/r/e
					TRYING: f
					> version: f/ui/r/e
					TRYING: f
					RESULT:  ['_']
				adding dashed alternative: ['_', 'f', 'u', 'i', 'r', 'e']
				adding dashed alternative: ['_', 'f', 'u', 'i', 'r', 'e']
				adding dashed alternative: ['_', 'f', 'ui', 'r', 'e']
				f/u/i/r/e(CCCCV)
f/u/i/r/e(CVVCV)
f/ui/r/e(CVCV)
_/f/u/i/r/e(ACAACV)
_/f/u/i/r/e(ACAACV)
_/f/ui/r/e(ACVCV)
				ANALYSING: fur
					resolving (2)
					> version: f/u/r
					TRYING: f
					> version: f/u/r
					TRYING: f
					RESULT:  ['_']
				adding dashed alternative: ['_', 'f', 'u', 'r']
				adding dashed alternative: ['_', 'f', 'u', 'r']
				f/u/r(CCC)
f/u/r(CVC)
_/f/u/r(ACAC)
_/f/u/r(ACAC)
				ANALYSING: fure
					resolving (2)
					> version: f/u/r/e
					TRYING: f
					> version: f/u/r/e
					TRYING: f
					RESULT:  ['_']
				adding dashed alternative: ['_', 'f', 'u', 'r', 'e']
				adding dashed alternative: ['_', 'f', 'u', 'r', 'e']
				f/u/r/e(CCCV)
f/u/r/e(CVCV)
_/f/u/r/e(ACACV)
_/f/u/r/e(ACACV)
				ANALYSING: fures
					resolving (2)
					> version: f/u/r/e/s
					TRYING: f
					> version: f/u/r/e/s
					TRYING: f
					RESULT:  ['_']
				adding dashed alternative: ['_', 'f', 'u', 'r', 'e', 's']
				adding dashed alternative: ['_', 'f', 'u', 'r', 'e', 's']
				f/u/r/e/s(CCCVC)
f/u/r/e/s(CVCVC)
_/f/u/r/e/s(ACACVC)
_/f/u/r/e/s(ACACVC)
				ANALYSING: fuyr
					resolving (3)
					> version: f/u/y/r
					TRYING: f
					> version: f/u/y/r
					TRYING: f
					> version: f/uy/r
					TRYING: f
					RESULT:  ['_']
				adding dashed alternative: ['_', 'f', 'u', 'y', 'r']
				adding dashed alternative: ['_', 'f', 'u', 'y', 'r']
				adding dashed alternative: ['_', 'f', 'uy', 'r']
				f/u/y/r(CCCC)
f/u/y/r(CVVC)
f/uy/r(CVC)
_/f/u/y/r(ACAAC)
_/f/u/y/r(ACAAC)
_/f/uy/r(ACVC)
				ANALYSING: fuyre
					resolving (3)
					> version: f/u/y/r/e
					TRYING: f
					> version: f/u/y/r/e
					TRYING: f
					> version: f/uy/r/e
					TRYING: f
					RESULT:  ['_']
				adding dashed alternative: ['_', 'f', 'u', 'y', 'r', 'e']
				adding dashed alternative: ['_', 'f', 'u', 'y', 'r', 'e']
				adding dashed alternative: ['_', 'f', 'uy', 'r', 'e']
				f/u/y/r/e(CCCCV)
f/u/y/r/e(CVVCV)
f/uy/r/e(CVCV)
_/f/u/y/r/e(ACAACV)
_/f/u/y/r/e(ACAACV)
_/f/uy/r/e(ACVCV)
				ANALYSING: fyr
					resolving (2)
					> version: f/y/r
					TRYING: f
					> version: f/y/r
					TRYING: f
					RESULT:  ['_']
				adding dashed alternative: ['_', 'f', 'y', 'r']
				adding dashed alternative: ['_', 'f', 'y', 'r']
				f/y/r(CCC)
f/y/r(CVC)
_/f/y/r(ACAC)
_/f/y/r(ACAC)
				ANALYSING: fyre
					resolving (2)
					> version: f/y/r/e
					TRYING: f
					> version: f/y/r/e
					TRYING: f
					RESULT:  ['_']
				adding dashed alternative: ['_', 'f', 'y', 'r', 'e']
				adding dashed alternative: ['_', 'f', 'y', 'r', 'e']
				f/y/r/e(CCCV)
f/y/r/e(CVCV)
_/f/y/r/e(ACACV)
_/f/y/r/e(ACACV)
				ANALYSING: uer
					resolving (3)
					> version: u/e/r
					TRYING: u
					> version: u/e/r
					TRYING: u
					> version: ue/r
					TRYING: ue
					>>> MULTIPLE RESOLVE OPTIONS: {'ue', 'u'}
					RESULT:  ['ue', 'u']
				ANALYSING: uur
					resolving (2)
					> version: u/u/r
					TRYING: u
					> version: u/u/r
					TRYING: u
					RESULT:  ['u']
				ANALYSING: ver
					resolving (2)
					> version: v/e/r
					TRYING: v
					adding blocked set: V = V >> v, ue, u, _
					> version: v/e/r
					TRYING: v
					adding blocked set: V = V >> v, ue, u, _
					RESULT:  ['_']
				adding dashed alternative: ['_', 'v', 'e', 'r']
				adding dashed alternative: ['_', 'v', 'e', 'r']
				v/e/r(CVC)
v/e/r(VVC)
_/v/e/r(AAVC)
_/v/e/r(AAVC)
				ANALYSING: vur
					resolving (2)
					> version: v/u/r
					TRYING: v
					adding blocked set: V = V >> v, ue, u, _
					> version: v/u/r
					TRYING: v
					adding blocked set: V = V >> v, ue, u, _
					RESULT:  ['_']
				adding dashed alternative: ['_', 'v', 'u', 'r']
				adding dashed alternative: ['_', 'v', 'u', 'r']
				v/u/r(CCC)
v/u/r(VVC)
_/v/u/r(AAAC)
_/v/u/r(AAAC)
			___VCV : 1___
				ANALYSING: uere
				adding littera based on matching pattern
				ANALYSING: ueréé
				adding littera based on matching pattern
				ANALYSING: fair
					resolving (6)
					> version: f/a/i/r
					TRYING: a
					> version: f/a/i/r
					TRYING: a
					> version: f/ai/r
					TRYING: ai
					> version: _/f/a/i/r
					TRYING: f
					adding blocked set: C = C >> f, r
					> version: _/f/a/i/r
					TRYING: f
					adding blocked set: C = C >> f, r
					> version: _/f/ai/r
					TRYING: f
					adding blocked set: C = C >> f, r
					RESULT:  ['_']
				adding dashed alternative: ['f', '_', 'a', 'i', 'r']
				adding dashed alternative: ['f', '_', 'a', 'i', 'r']
				adding dashed alternative: ['f', '_', 'ai', 'r']
				adding dashed alternative: ['_', '_', 'f', 'a', 'i', 'r']
				adding dashed alternative: ['_', '_', 'f', 'a', 'i', 'r']
				adding dashed alternative: ['_', '_', 'f', 'ai', 'r']
				f/a/i/r(CVCC)
f/a/i/r(CVVC)
f/ai/r(CVC)
_/f/a/i/r(ACVAC)
_/f/a/i/r(ACVAC)
_/f/ai/r(ACVC)
f/_/a/i/r(CAVAC)
f/_/a/i/r(CAVAC)
f/_/ai/r(CAVC)
_/_/f/a/i/r(AACVAC)
_/_/f/a/i/r(AACVAC)
_/_/f/ai/r(AACVC)
				ANALYSING: far
					resolving (2)
					> version: f/a/r
					TRYING: a
					> version: _/f/a/r
					TRYING: f
					adding blocked set: C = C >> r, f, _
					RESULT:  ['_']
				adding dashed alternative: ['f', '_', 'a', 'r']
				adding dashed alternative: ['_', '_', 'f', 'a', 'r']
				f/a/r(CVC)
_/f/a/r(ACVC)
f/_/a/r(CAVC)
_/_/f/a/r(AACVC)
				ANALYSING: fer
					resolving (2)
					> version: f/e/r
					TRYING: e
					> version: _/f/e/r
					TRYING: f
					adding blocked set: C = C >> _, f, r
					RESULT:  ['_']
				adding dashed alternative: ['f', '_', 'e', 'r']
				adding dashed alternative: ['_', '_', 'f', 'e', 'r']
				f/e/r(CVC)
_/f/e/r(ACVC)
f/_/e/r(CAVC)
_/_/f/e/r(AACVC)
				ANALYSING: fere
					resolving (2)
					> version: f/e/r/e
					TRYING: e
					> version: _/f/e/r/e
					TRYING: f
					adding blocked set: C = C >> r, f, _
					RESULT:  ['_']
				adding dashed alternative: ['f', '_', 'e', 'r', 'e']
				adding dashed alternative: ['_', '_', 'f', 'e', 'r', 'e']
				f/e/r/e(CVCV)
_/f/e/r/e(ACVCV)
f/_/e/r/e(CAVCV)
_/_/f/e/r/e(AACVCV)
				ANALYSING: fier
					resolving (6)
					> version: f/i/e/r
					TRYING: i
					adding blocked set: C = C >> _, i, r
					> version: f/i/e/r
					TRYING: i
					adding blocked set: C = C >> _, i, r
					> version: f/ie/r
					TRYING: ie
					> version: _/f/i/e/r
					TRYING: f
					adding blocked set: C = C >> _, f, r
					> version: _/f/i/e/r
					TRYING: f
					adding blocked set: C = C >> _, f, r
					> version: _/f/ie/r
					TRYING: f
					adding blocked set: C = C >> _, f, r
					RESULT:  ['_']
				adding dashed alternative: ['f', '_', 'i', 'e', 'r']
				adding dashed alternative: ['f', '_', 'i', 'e', 'r']
				adding dashed alternative: ['f', '_', 'ie', 'r']
				adding dashed alternative: ['_', '_', 'f', 'i', 'e', 'r']
				adding dashed alternative: ['_', '_', 'f', 'i', 'e', 'r']
				adding dashed alternative: ['_', '_', 'f', 'ie', 'r']
				f/i/e/r(CCVC)
f/i/e/r(CVVC)
f/ie/r(CVC)
_/f/i/e/r(ACAVC)
_/f/i/e/r(ACAVC)
_/f/ie/r(ACVC)
f/_/i/e/r(CAAVC)
f/_/i/e/r(CAAVC)
f/_/ie/r(CAVC)
_/_/f/i/e/r(AACAVC)
_/_/f/i/e/r(AACAVC)
_/_/f/ie/r(AACVC)
				ANALYSING: fiere
					resolving (6)
					> version: f/i/e/r/e
					TRYING: i
					adding blocked set: C = C >> r, i, _
					> version: f/i/e/r/e
					TRYING: i
					adding blocked set: C = C >> r, i, _
					> version: f/ie/r/e
					TRYING: ie
					> version: _/f/i/e/r/e
					TRYING: f
					adding blocked set: C = C >> r, f, _
					> version: _/f/i/e/r/e
					TRYING: f
					adding blocked set: C = C >> r, f, _
					> version: _/f/ie/r/e
					TRYING: f
					adding blocked set: C = C >> r, f, _
					RESULT:  ['_']
				adding dashed alternative: ['f', '_', 'i', 'e', 'r', 'e']
				adding dashed alternative: ['f', '_', 'i', 'e', 'r', 'e']
				adding dashed alternative: ['f', '_', 'ie', 'r', 'e']
				adding dashed alternative: ['_', '_', 'f', 'i', 'e', 'r', 'e']
				adding dashed alternative: ['_', '_', 'f', 'i', 'e', 'r', 'e']
				adding dashed alternative: ['_', '_', 'f', 'ie', 'r', 'e']
				f/i/e/r/e(CCVCV)
f/i/e/r/e(CVVCV)
f/ie/r/e(CVCV)
_/f/i/e/r/e(ACAVCV)
_/f/i/e/r/e(ACAVCV)
_/f/ie/r/e(ACVCV)
f/_/i/e/r/e(CAAVCV)
f/_/i/e/r/e(CAAVCV)
f/_/ie/r/e(CAVCV)
_/_/f/i/e/r/e(AACAVCV)
_/_/f/i/e/r/e(AACAVCV)
_/_/f/ie/r/e(AACVCV)
				ANALYSING: fir
					resolving (4)
					> version: f/i/r
					TRYING: i
					adding blocked set: C = C >> _, i, r
					> version: f/i/r
					TRYING: i
					adding blocked set: C = C >> _, i, r
					> version: _/f/i/r
					TRYING: f
					adding blocked set: C = C >> _, f, r
					> version: _/f/i/r
					TRYING: f
					adding blocked set: C = C >> _, f, r
					RESULT:  ['_']
				adding dashed alternative: ['f', '_', 'i', 'r']
				adding dashed alternative: ['f', '_', 'i', 'r']
				adding dashed alternative: ['_', '_', 'f', 'i', 'r']
				adding dashed alternative: ['_', '_', 'f', 'i', 'r']
				f/i/r(CCC)
f/i/r(CVC)
_/f/i/r(ACAC)
_/f/i/r(ACAC)
f/_/i/r(CAAC)
f/_/i/r(CAAC)
_/_/f/i/r(AACAC)
_/_/f/i/r(AACAC)
				ANALYSING: fire
					resolving (4)
					> version: f/i/r/e
					TRYING: i
					adding blocked set: C = C >> r, i, _
					> version: f/i/r/e
					TRYING: i
					adding blocked set: C = C >> r, i, _
					> version: _/f/i/r/e
					TRYING: f
					adding blocked set: C = C >> r, f, _
					> version: _/f/i/r/e
					TRYING: f
					adding blocked set: C = C >> r, f, _
					RESULT:  ['_']
				adding dashed alternative: ['f', '_', 'i', 'r', 'e']
				adding dashed alternative: ['f', '_', 'i', 'r', 'e']
				adding dashed alternative: ['_', '_', 'f', 'i', 'r', 'e']
				adding dashed alternative: ['_', '_', 'f', 'i', 'r', 'e']
				f/i/r/e(CCCV)
f/i/r/e(CVCV)
_/f/i/r/e(ACACV)
_/f/i/r/e(ACACV)
f/_/i/r/e(CAACV)
f/_/i/r/e(CAACV)
_/_/f/i/r/e(AACACV)
_/_/f/i/r/e(AACACV)
				ANALYSING: fires
					resolving (4)
					> version: f/i/r/e/s
					TRYING: i
					adding blocked set: C = C >> _, i, r
					> version: f/i/r/e/s
					TRYING: i
					adding blocked set: C = C >> _, i, r
					> version: _/f/i/r/e/s
					TRYING: f
					adding blocked set: C = C >> _, f, r
					> version: _/f/i/r/e/s
					TRYING: f
					adding blocked set: C = C >> _, f, r
					RESULT:  ['_']
				adding dashed alternative: ['f', '_', 'i', 'r', 'e', 's']
				adding dashed alternative: ['f', '_', 'i', 'r', 'e', 's']
				adding dashed alternative: ['_', '_', 'f', 'i', 'r', 'e', 's']
				adding dashed alternative: ['_', '_', 'f', 'i', 'r', 'e', 's']
				f/i/r/e/s(CCCVC)
f/i/r/e/s(CVCVC)
_/f/i/r/e/s(ACACVC)
_/f/i/r/e/s(ACACVC)
f/_/i/r/e/s(CAACVC)
f/_/i/r/e/s(CAACVC)
_/_/f/i/r/e/s(AACACVC)
_/_/f/i/r/e/s(AACACVC)
				ANALYSING: fu
					resolving (4)
					> version: f/u
					TRYING: u
					adding blocked set: C = C >> r, u, _
					> version: f/u
					TRYING: u
					adding blocked set: C = C >> r, u, _
					> version: _/f/u
					TRYING: f
					adding blocked set: C = C >> r, f, _
					> version: _/f/u
					TRYING: f
					adding blocked set: C = C >> r, f, _
					RESULT:  ['_']
				adding dashed alternative: ['f', '_', 'u']
				adding dashed alternative: ['f', '_', 'u']
				adding dashed alternative: ['_', '_', 'f', 'u']
				adding dashed alternative: ['_', '_', 'f', 'u']
				f/u(CC)
f/u(CV)
_/f/u(ACA)
_/f/u(ACA)
f/_/u(CAA)
f/_/u(CAA)
_/_/f/u(AACA)
_/_/f/u(AACA)
				ANALYSING: fuir
					resolving (6)
					> version: f/u/i/r
					TRYING: u
					adding blocked set: C = C >> _, u, r
					> version: f/u/i/r
					TRYING: u
					adding blocked set: C = C >> _, u, r
					> version: f/ui/r
					TRYING: ui
					> version: _/f/u/i/r
					TRYING: f
					adding blocked set: C = C >> _, f, r
					> version: _/f/u/i/r
					TRYING: f
					adding blocked set: C = C >> _, f, r
					> version: _/f/ui/r
					TRYING: f
					adding blocked set: C = C >> _, f, r
					RESULT:  ['_']
				adding dashed alternative: ['f', '_', 'u', 'i', 'r']
				adding dashed alternative: ['f', '_', 'u', 'i', 'r']
				adding dashed alternative: ['f', '_', 'ui', 'r']
				adding dashed alternative: ['_', '_', 'f', 'u', 'i', 'r']
				adding dashed alternative: ['_', '_', 'f', 'u', 'i', 'r']
				adding dashed alternative: ['_', '_', 'f', 'ui', 'r']
				f/u/i/r(CCCC)
f/u/i/r(CVVC)
f/ui/r(CVC)
_/f/u/i/r(ACAAC)
_/f/u/i/r(ACAAC)
_/f/ui/r(ACVC)
f/_/u/i/r(CAAAC)
f/_/u/i/r(CAAAC)
f/_/ui/r(CAVC)
_/_/f/u/i/r(AACAAC)
_/_/f/u/i/r(AACAAC)
_/_/f/ui/r(AACVC)
				ANALYSING: fuire
					resolving (6)
					> version: f/u/i/r/e
					TRYING: u
					adding blocked set: C = C >> r, u, _
					> version: f/u/i/r/e
					TRYING: u
					adding blocked set: C = C >> r, u, _
					> version: f/ui/r/e
					TRYING: ui
					> version: _/f/u/i/r/e
					TRYING: f
					adding blocked set: C = C >> r, f, _
					> version: _/f/u/i/r/e
					TRYING: f
					adding blocked set: C = C >> r, f, _
					> version: _/f/ui/r/e
					TRYING: f
					adding blocked set: C = C >> r, f, _
					RESULT:  ['_']
				adding dashed alternative: ['f', '_', 'u', 'i', 'r', 'e']
				adding dashed alternative: ['f', '_', 'u', 'i', 'r', 'e']
				adding dashed alternative: ['f', '_', 'ui', 'r', 'e']
				adding dashed alternative: ['_', '_', 'f', 'u', 'i', 'r', 'e']
				adding dashed alternative: ['_', '_', 'f', 'u', 'i', 'r', 'e']
				adding dashed alternative: ['_', '_', 'f', 'ui', 'r', 'e']
				f/u/i/r/e(CCCCV)
f/u/i/r/e(CVVCV)
f/ui/r/e(CVCV)
_/f/u/i/r/e(ACAACV)
_/f/u/i/r/e(ACAACV)
_/f/ui/r/e(ACVCV)
f/_/u/i/r/e(CAAACV)
f/_/u/i/r/e(CAAACV)
f/_/ui/r/e(CAVCV)
_/_/f/u/i/r/e(AACAACV)
_/_/f/u/i/r/e(AACAACV)
_/_/f/ui/r/e(AACVCV)
				ANALYSING: fur
					resolving (4)
					> version: f/u/r
					TRYING: u
					adding blocked set: C = C >> _, u, r
					> version: f/u/r
					TRYING: u
					adding blocked set: C = C >> _, u, r
					> version: _/f/u/r
					TRYING: f
					adding blocked set: C = C >> _, f, r
					> version: _/f/u/r
					TRYING: f
					adding blocked set: C = C >> _, f, r
					RESULT:  ['_']
				adding dashed alternative: ['f', '_', 'u', 'r']
				adding dashed alternative: ['f', '_', 'u', 'r']
				adding dashed alternative: ['_', '_', 'f', 'u', 'r']
				adding dashed alternative: ['_', '_', 'f', 'u', 'r']
				f/u/r(CCC)
f/u/r(CVC)
_/f/u/r(ACAC)
_/f/u/r(ACAC)
f/_/u/r(CAAC)
f/_/u/r(CAAC)
_/_/f/u/r(AACAC)
_/_/f/u/r(AACAC)
				ANALYSING: fure
					resolving (4)
					> version: f/u/r/e
					TRYING: u
					adding blocked set: C = C >> r, u, _
					> version: f/u/r/e
					TRYING: u
					adding blocked set: C = C >> r, u, _
					> version: _/f/u/r/e
					TRYING: f
					adding blocked set: C = C >> r, f, _
					> version: _/f/u/r/e
					TRYING: f
					adding blocked set: C = C >> r, f, _
					RESULT:  ['_']
				adding dashed alternative: ['f', '_', 'u', 'r', 'e']
				adding dashed alternative: ['f', '_', 'u', 'r', 'e']
				adding dashed alternative: ['_', '_', 'f', 'u', 'r', 'e']
				adding dashed alternative: ['_', '_', 'f', 'u', 'r', 'e']
				f/u/r/e(CCCV)
f/u/r/e(CVCV)
_/f/u/r/e(ACACV)
_/f/u/r/e(ACACV)
f/_/u/r/e(CAACV)
f/_/u/r/e(CAACV)
_/_/f/u/r/e(AACACV)
_/_/f/u/r/e(AACACV)
				ANALYSING: fures
					resolving (4)
					> version: f/u/r/e/s
					TRYING: u
					adding blocked set: C = C >> _, u, r
					> version: f/u/r/e/s
					TRYING: u
					adding blocked set: C = C >> _, u, r
					> version: _/f/u/r/e/s
					TRYING: f
					adding blocked set: C = C >> _, f, r
					> version: _/f/u/r/e/s
					TRYING: f
					adding blocked set: C = C >> _, f, r
					RESULT:  ['_']
				adding dashed alternative: ['f', '_', 'u', 'r', 'e', 's']
				adding dashed alternative: ['f', '_', 'u', 'r', 'e', 's']
				adding dashed alternative: ['_', '_', 'f', 'u', 'r', 'e', 's']
				adding dashed alternative: ['_', '_', 'f', 'u', 'r', 'e', 's']
				f/u/r/e/s(CCCVC)
f/u/r/e/s(CVCVC)
_/f/u/r/e/s(ACACVC)
_/f/u/r/e/s(ACACVC)
f/_/u/r/e/s(CAACVC)
f/_/u/r/e/s(CAACVC)
_/_/f/u/r/e/s(AACACVC)
_/_/f/u/r/e/s(AACACVC)
				ANALYSING: fuyr
					resolving (6)
					> version: f/u/y/r
					TRYING: u
					adding blocked set: C = C >> r, u, _
					> version: f/u/y/r
					TRYING: u
					adding blocked set: C = C >> r, u, _
					> version: f/uy/r
					TRYING: uy
					> version: _/f/u/y/r
					TRYING: f
					adding blocked set: C = C >> r, f, _
					> version: _/f/u/y/r
					TRYING: f
					adding blocked set: C = C >> r, f, _
					> version: _/f/uy/r
					TRYING: f
					adding blocked set: C = C >> r, f, _
					RESULT:  ['_']
				adding dashed alternative: ['f', '_', 'u', 'y', 'r']
				adding dashed alternative: ['f', '_', 'u', 'y', 'r']
				adding dashed alternative: ['f', '_', 'uy', 'r']
				adding dashed alternative: ['_', '_', 'f', 'u', 'y', 'r']
				adding dashed alternative: ['_', '_', 'f', 'u', 'y', 'r']
				adding dashed alternative: ['_', '_', 'f', 'uy', 'r']
				f/u/y/r(CCCC)
f/u/y/r(CVVC)
f/uy/r(CVC)
_/f/u/y/r(ACAAC)
_/f/u/y/r(ACAAC)
_/f/uy/r(ACVC)
f/_/u/y/r(CAAAC)
f/_/u/y/r(CAAAC)
f/_/uy/r(CAVC)
_/_/f/u/y/r(AACAAC)
_/_/f/u/y/r(AACAAC)
_/_/f/uy/r(AACVC)
				ANALYSING: fuyre
					resolving (6)
					> version: f/u/y/r/e
					TRYING: u
					adding blocked set: C = C >> _, u, r
					> version: f/u/y/r/e
					TRYING: u
					adding blocked set: C = C >> _, u, r
					> version: f/uy/r/e
					TRYING: uy
					> version: _/f/u/y/r/e
					TRYING: f
					adding blocked set: C = C >> _, f, r
					> version: _/f/u/y/r/e
					TRYING: f
					adding blocked set: C = C >> _, f, r
					> version: _/f/uy/r/e
					TRYING: f
					adding blocked set: C = C >> _, f, r
					RESULT:  ['_']
				adding dashed alternative: ['f', '_', 'u', 'y', 'r', 'e']
				adding dashed alternative: ['f', '_', 'u', 'y', 'r', 'e']
				adding dashed alternative: ['f', '_', 'uy', 'r', 'e']
				adding dashed alternative: ['_', '_', 'f', 'u', 'y', 'r', 'e']
				adding dashed alternative: ['_', '_', 'f', 'u', 'y', 'r', 'e']
				adding dashed alternative: ['_', '_', 'f', 'uy', 'r', 'e']
				f/u/y/r/e(CCCCV)
f/u/y/r/e(CVVCV)
f/uy/r/e(CVCV)
_/f/u/y/r/e(ACAACV)
_/f/u/y/r/e(ACAACV)
_/f/uy/r/e(ACVCV)
f/_/u/y/r/e(CAAACV)
f/_/u/y/r/e(CAAACV)
f/_/uy/r/e(CAVCV)
_/_/f/u/y/r/e(AACAACV)
_/_/f/u/y/r/e(AACAACV)
_/_/f/uy/r/e(AACVCV)
				ANALYSING: fyr
					resolving (4)
					> version: f/y/r
					TRYING: y
					adding blocked set: C = C >> r, y, _
					> version: f/y/r
					TRYING: y
					adding blocked set: C = C >> r, y, _
					> version: _/f/y/r
					TRYING: f
					adding blocked set: C = C >> r, f, _
					> version: _/f/y/r
					TRYING: f
					adding blocked set: C = C >> r, f, _
					RESULT:  ['_']
				adding dashed alternative: ['f', '_', 'y', 'r']
				adding dashed alternative: ['f', '_', 'y', 'r']
				adding dashed alternative: ['_', '_', 'f', 'y', 'r']
				adding dashed alternative: ['_', '_', 'f', 'y', 'r']
				f/y/r(CCC)
f/y/r(CVC)
_/f/y/r(ACAC)
_/f/y/r(ACAC)
f/_/y/r(CAAC)
f/_/y/r(CAAC)
_/_/f/y/r(AACAC)
_/_/f/y/r(AACAC)
				ANALYSING: fyre
					resolving (4)
					> version: f/y/r/e
					TRYING: y
					adding blocked set: C = C >> _, y, r
					> version: f/y/r/e
					TRYING: y
					adding blocked set: C = C >> _, y, r
					> version: _/f/y/r/e
					TRYING: f
					adding blocked set: C = C >> _, f, r
					> version: _/f/y/r/e
					TRYING: f
					adding blocked set: C = C >> _, f, r
					RESULT:  ['_']
				adding dashed alternative: ['f', '_', 'y', 'r', 'e']
				adding dashed alternative: ['f', '_', 'y', 'r', 'e']
				adding dashed alternative: ['_', '_', 'f', 'y', 'r', 'e']
				adding dashed alternative: ['_', '_', 'f', 'y', 'r', 'e']
				f/y/r/e(CCCV)
f/y/r/e(CVCV)
_/f/y/r/e(ACACV)
_/f/y/r/e(ACACV)
f/_/y/r/e(CAACV)
f/_/y/r/e(CAACV)
_/_/f/y/r/e(AACACV)
_/_/f/y/r/e(AACACV)
				ANALYSING: uer
					resolving (3)
					> version: u/e/r
					TRYING: e
					> version: u/e/r
					TRYING: e
					> version: ue/r
					TRYING: r
					RESULT:  ['r']
				ANALYSING: uur
					resolving (2)
					> version: u/u/r
					TRYING: u
					adding blocked set: C = C >> _, u, r
					> version: u/u/r
					TRYING: u
					adding blocked set: C = C >> _, u, r
					RESULT:  ['_']
				adding dashed alternative: ['u', '_', 'u', 'r']
				adding dashed alternative: ['u', '_', 'u', 'r']
				u/u/r(CCC)
u/u/r(VVC)
u/_/u/r(AAAC)
u/_/u/r(AAAC)
				ANALYSING: ver
					resolving (4)
					> version: v/e/r
					TRYING: e
					> version: v/e/r
					TRYING: e
					> version: _/v/e/r
					TRYING: v
					adding blocked set: C = C >> r, v, _
					> version: _/v/e/r
					TRYING: v
					adding blocked set: C = C >> r, v, _
					RESULT:  ['_']
				adding dashed alternative: ['v', '_', 'e', 'r']
				adding dashed alternative: ['v', '_', 'e', 'r']
				adding dashed alternative: ['_', '_', 'v', 'e', 'r']
				adding dashed alternative: ['_', '_', 'v', 'e', 'r']
				v/e/r(CVC)
v/e/r(VVC)
_/v/e/r(AAVC)
_/v/e/r(AAVC)
v/_/e/r(AAVC)
v/_/e/r(AAVC)
_/_/v/e/r(AAAVC)
_/_/v/e/r(AAAVC)
				ANALYSING: vur
					resolving (4)
					> version: v/u/r
					TRYING: u
					adding blocked set: C = C >> _, u, r
					> version: v/u/r
					TRYING: u
					adding blocked set: C = C >> _, u, r
					> version: _/v/u/r
					TRYING: v
					adding blocked set: C = C >> _, v, r
					> version: _/v/u/r
					TRYING: v
					adding blocked set: C = C >> _, v, r
					RESULT:  ['_']
				adding dashed alternative: ['v', '_', 'u', 'r']
				adding dashed alternative: ['v', '_', 'u', 'r']
				adding dashed alternative: ['_', '_', 'v', 'u', 'r']
				adding dashed alternative: ['_', '_', 'v', 'u', 'r']
				v/u/r(CCC)
v/u/r(VVC)
_/v/u/r(AAAC)
_/v/u/r(AAAC)
v/_/u/r(AAAC)
v/_/u/r(AAAC)
_/_/v/u/r(AAAAC)
_/_/v/u/r(AAAAC)
			___VCV : 2___
				ANALYSING: uere
				adding littera based on matching pattern
				ANALYSING: ueréé
				adding littera based on matching pattern
				ANALYSING: fair
					resolving (12)
					> version: f/a/i/r
					TRYING: i
					adding blocked set: V = V >> éé, e, i
					> version: f/a/i/r
					TRYING: i
					adding blocked set: V = V >> éé, e, i
					> version: f/ai/r
					TRYING: r
					> version: _/f/a/i/r
					TRYING: a
					> version: _/f/a/i/r
					TRYING: a
					> version: _/f/ai/r
					TRYING: ai
					adding blocked set: V = V >> éé, e, ai
					> version: f/_/a/i/r
					TRYING: a
					> version: f/_/a/i/r
					TRYING: a
					> version: f/_/ai/r
					TRYING: ai
					adding blocked set: V = V >> éé, e, ai
					> version: _/_/f/a/i/r
					TRYING: f
					> version: _/_/f/a/i/r
					TRYING: f
					> version: _/_/f/ai/r
					TRYING: f
					RESULT:  ['a']
				version split: ['f', 'a', 'i', 'r']
				{'string': 'f/a/i/r', 'rgx': '((_))/((_))/((a))$'}
				_____REMOVING________['f', 'a', 'i', 'r']
				version split: ['f', 'a', 'i', 'r']
				{'string': 'f/a/i/r', 'rgx': '((_))/((_))/((a))$'}
				_____REMOVING________['f', 'a', 'i', 'r']
				version split: ['f', 'ai', 'r']
				{'string': 'f/ai/r', 'rgx': '((_))/((_))/((a))$'}
				_____REMOVING________['f', 'ai', 'r']
				version split: ['_', 'f', 'a', 'i', 'r']
				{'string': '_/f/a/i', 'rgx': '((_))/((_))/((a))$'}
				_____REMOVING________['_', 'f', 'a', 'i', 'r']
				version split: ['_', 'f', 'a', 'i', 'r']
				{'string': '_/f/a/i', 'rgx': '((_))/((_))/((a))$'}
				_____REMOVING________['_', 'f', 'a', 'i', 'r']
				version split: ['_', 'f', 'ai', 'r']
				{'string': '_/f/ai/r', 'rgx': '((_))/((_))/((a))$'}
				_____REMOVING________['_', 'f', 'ai', 'r']
				version split: ['f', '_', 'a', 'i', 'r']
				{'string': 'f/_/a/i', 'rgx': '((_))/((_))/((a))$'}
				_____REMOVING________['f', '_', 'a', 'i', 'r']
				version split: ['f', '_', 'a', 'i', 'r']
				{'string': 'f/_/a/i', 'rgx': '((_))/((_))/((a))$'}
				_____REMOVING________['f', '_', 'a', 'i', 'r']
				version split: ['f', '_', 'ai', 'r']
				{'string': 'f/_/ai/r', 'rgx': '((_))/((_))/((a))$'}
				_____REMOVING________['f', '_', 'ai', 'r']
				version split: ['_', '_', 'f', 'a', 'i', 'r']
				{'string': '_/_/f/a', 'rgx': '((_))/((_))/((a))$'}
				_____REMOVING________['_', '_', 'f', 'a', 'i', 'r']
				version split: ['_', '_', 'f', 'a', 'i', 'r']
				{'string': '_/_/f/a', 'rgx': '((_))/((_))/((a))$'}
				_____REMOVING________['_', '_', 'f', 'a', 'i', 'r']
				version split: ['_', '_', 'f', 'ai', 'r']
				{'string': '_/_/f/ai', 'rgx': '((_))/((_))/((a))$'}
				_____REMOVING________['_', '_', 'f', 'ai', 'r']
				ANALYSING: far
					resolving (4)
					> version: f/a/r
					TRYING: r
					> version: _/f/a/r
					TRYING: a
					> version: f/_/a/r
					TRYING: a
					> version: _/_/f/a/r
					TRYING: f
					RESULT:  ['a']
				version split: ['f', 'a', 'r']
				{'string': 'f/a/r', 'rgx': '((_))/((_))/((a))$'}
				_____REMOVING________['f', 'a', 'r']
				version split: ['_', 'f', 'a', 'r']
				{'string': '_/f/a/r', 'rgx': '((_))/((_))/((a))$'}
				_____REMOVING________['_', 'f', 'a', 'r']
				version split: ['f', '_', 'a', 'r']
				{'string': 'f/_/a/r', 'rgx': '((_))/((_))/((a))$'}
				_____REMOVING________['f', '_', 'a', 'r']
				version split: ['_', '_', 'f', 'a', 'r']
				{'string': '_/_/f/a', 'rgx': '((_))/((_))/((a))$'}
				_____REMOVING________['_', '_', 'f', 'a', 'r']
				ANALYSING: fer
					resolving (4)
					> version: f/e/r
					TRYING: r
					> version: _/f/e/r
					TRYING: e
					> version: f/_/e/r
					TRYING: e
					> version: _/_/f/e/r
					TRYING: f
					RESULT:  ['e']
				version split: ['f', 'e', 'r']
				{'string': 'f/e/r', 'rgx': '((_))/((_))/((e))$'}
				_____REMOVING________['f', 'e', 'r']
				version split: ['_', 'f', 'e', 'r']
				{'string': '_/f/e/r', 'rgx': '((_))/((_))/((e))$'}
				_____REMOVING________['_', 'f', 'e', 'r']
				version split: ['f', '_', 'e', 'r']
				{'string': 'f/_/e/r', 'rgx': '((_))/((_))/((e))$'}
				_____REMOVING________['f', '_', 'e', 'r']
				version split: ['_', '_', 'f', 'e', 'r']
				{'string': '_/_/f/e', 'rgx': '((_))/((_))/((e))$'}
				_____REMOVING________['_', '_', 'f', 'e', 'r']
				ANALYSING: fere
					resolving (4)
					> version: f/e/r/e
					TRYING: r
					> version: _/f/e/r/e
					TRYING: e
					> version: f/_/e/r/e
					TRYING: e
					> version: _/_/f/e/r/e
					TRYING: f
					RESULT:  ['e']
				version split: ['f', 'e', 'r', 'e']
				{'string': 'f/e/r/e', 'rgx': '((_))/((_))/((e))$'}
				_____REMOVING________['f', 'e', 'r', 'e']
				version split: ['_', 'f', 'e', 'r', 'e']
				{'string': '_/f/e/r', 'rgx': '((_))/((_))/((e))$'}
				_____REMOVING________['_', 'f', 'e', 'r', 'e']
				version split: ['f', '_', 'e', 'r', 'e']
				{'string': 'f/_/e/r', 'rgx': '((_))/((_))/((e))$'}
				_____REMOVING________['f', '_', 'e', 'r', 'e']
				version split: ['_', '_', 'f', 'e', 'r', 'e']
				{'string': '_/_/f/e', 'rgx': '((_))/((_))/((e))$'}
				_____REMOVING________['_', '_', 'f', 'e', 'r', 'e']
				ANALYSING: fier
					resolving (12)
					> version: f/i/e/r
					TRYING: e
					> version: f/i/e/r
					TRYING: e
					> version: f/ie/r
					TRYING: r
					> version: _/f/i/e/r
					TRYING: i
					adding blocked set: V = V >> éé, e, a, i
					> version: _/f/i/e/r
					TRYING: i
					adding blocked set: V = V >> éé, e, a, i
					> version: _/f/ie/r
					TRYING: ie
					adding blocked set: V = V >> éé, e, a, ie
					> version: f/_/i/e/r
					TRYING: i
					adding blocked set: V = V >> éé, e, a, i
					> version: f/_/i/e/r
					TRYING: i
					adding blocked set: V = V >> éé, e, a, i
					> version: f/_/ie/r
					TRYING: ie
					adding blocked set: V = V >> éé, e, a, ie
					> version: _/_/f/i/e/r
					TRYING: f
					> version: _/_/f/i/e/r
					TRYING: f
					> version: _/_/f/ie/r
					TRYING: f
					RESULT:  ['e']
				version split: ['f', 'i', 'e', 'r']
				{'string': 'f/i/e/r', 'rgx': '((_))/((_))/((e))$'}
				_____REMOVING________['f', 'i', 'e', 'r']
				version split: ['f', 'i', 'e', 'r']
				{'string': 'f/i/e/r', 'rgx': '((_))/((_))/((e))$'}
				_____REMOVING________['f', 'i', 'e', 'r']
				version split: ['f', 'ie', 'r']
				{'string': 'f/ie/r', 'rgx': '((_))/((_))/((e))$'}
				_____REMOVING________['f', 'ie', 'r']
				version split: ['_', 'f', 'i', 'e', 'r']
				{'string': '_/f/i/e', 'rgx': '((_))/((_))/((e))$'}
				_____REMOVING________['_', 'f', 'i', 'e', 'r']
				version split: ['_', 'f', 'i', 'e', 'r']
				{'string': '_/f/i/e', 'rgx': '((_))/((_))/((e))$'}
				_____REMOVING________['_', 'f', 'i', 'e', 'r']
				version split: ['_', 'f', 'ie', 'r']
				{'string': '_/f/ie/r', 'rgx': '((_))/((_))/((e))$'}
				_____REMOVING________['_', 'f', 'ie', 'r']
				version split: ['f', '_', 'i', 'e', 'r']
				{'string': 'f/_/i/e', 'rgx': '((_))/((_))/((e))$'}
				_____REMOVING________['f', '_', 'i', 'e', 'r']
				version split: ['f', '_', 'i', 'e', 'r']
				{'string': 'f/_/i/e', 'rgx': '((_))/((_))/((e))$'}
				_____REMOVING________['f', '_', 'i', 'e', 'r']
				version split: ['f', '_', 'ie', 'r']
				{'string': 'f/_/ie/r', 'rgx': '((_))/((_))/((e))$'}
				_____REMOVING________['f', '_', 'ie', 'r']
				version split: ['_', '_', 'f', 'i', 'e', 'r']
				{'string': '_/_/f/i', 'rgx': '((_))/((_))/((e))$'}
				_____REMOVING________['_', '_', 'f', 'i', 'e', 'r']
				version split: ['_', '_', 'f', 'i', 'e', 'r']
				{'string': '_/_/f/i', 'rgx': '((_))/((_))/((e))$'}
				_____REMOVING________['_', '_', 'f', 'i', 'e', 'r']
				version split: ['_', '_', 'f', 'ie', 'r']
				{'string': '_/_/f/ie', 'rgx': '((_))/((_))/((e))$'}
				_____REMOVING________['_', '_', 'f', 'ie', 'r']
				ANALYSING: fiere
					resolving (12)
					> version: f/i/e/r/e
					TRYING: e
					> version: f/i/e/r/e
					TRYING: e
					> version: f/ie/r/e
					TRYING: r
					> version: _/f/i/e/r/e
					TRYING: i
					adding blocked set: V = V >> éé, e, a, i
					> version: _/f/i/e/r/e
					TRYING: i
					adding blocked set: V = V >> éé, e, a, i
					> version: _/f/ie/r/e
					TRYING: ie
					adding blocked set: V = V >> éé, e, a, ie
					> version: f/_/i/e/r/e
					TRYING: i
					adding blocked set: V = V >> éé, e, a, i
					> version: f/_/i/e/r/e
					TRYING: i
					adding blocked set: V = V >> éé, e, a, i
					> version: f/_/ie/r/e
					TRYING: ie
					adding blocked set: V = V >> éé, e, a, ie
					> version: _/_/f/i/e/r/e
					TRYING: f
					> version: _/_/f/i/e/r/e
					TRYING: f
					> version: _/_/f/ie/r/e
					TRYING: f
					RESULT:  ['e']
				version split: ['f', 'i', 'e', 'r', 'e']
				{'string': 'f/i/e/r', 'rgx': '((_))/((_))/((e))$'}
				_____REMOVING________['f', 'i', 'e', 'r', 'e']
				version split: ['f', 'i', 'e', 'r', 'e']
				{'string': 'f/i/e/r', 'rgx': '((_))/((_))/((e))$'}
				_____REMOVING________['f', 'i', 'e', 'r', 'e']
				version split: ['f', 'ie', 'r', 'e']
				{'string': 'f/ie/r/e', 'rgx': '((_))/((_))/((e))$'}
				_____REMOVING________['f', 'ie', 'r', 'e']
				version split: ['_', 'f', 'i', 'e', 'r', 'e']
				{'string': '_/f/i/e', 'rgx': '((_))/((_))/((e))$'}
				_____REMOVING________['_', 'f', 'i', 'e', 'r', 'e']
				version split: ['_', 'f', 'i', 'e', 'r', 'e']
				{'string': '_/f/i/e', 'rgx': '((_))/((_))/((e))$'}
				_____REMOVING________['_', 'f', 'i', 'e', 'r', 'e']
				version split: ['_', 'f', 'ie', 'r', 'e']
				{'string': '_/f/ie/r', 'rgx': '((_))/((_))/((e))$'}
				_____REMOVING________['_', 'f', 'ie', 'r', 'e']
				version split: ['f', '_', 'i', 'e', 'r', 'e']
				{'string': 'f/_/i/e', 'rgx': '((_))/((_))/((e))$'}
				_____REMOVING________['f', '_', 'i', 'e', 'r', 'e']
				version split: ['f', '_', 'i', 'e', 'r', 'e']
				{'string': 'f/_/i/e', 'rgx': '((_))/((_))/((e))$'}
				_____REMOVING________['f', '_', 'i', 'e', 'r', 'e']
				version split: ['f', '_', 'ie', 'r', 'e']
				{'string': 'f/_/ie/r', 'rgx': '((_))/((_))/((e))$'}
				_____REMOVING________['f', '_', 'ie', 'r', 'e']
				version split: ['_', '_', 'f', 'i', 'e', 'r', 'e']
				{'string': '_/_/f/i', 'rgx': '((_))/((_))/((e))$'}
				_____REMOVING________['_', '_', 'f', 'i', 'e', 'r', 'e']
				version split: ['_', '_', 'f', 'i', 'e', 'r', 'e']
				{'string': '_/_/f/i', 'rgx': '((_))/((_))/((e))$'}
				_____REMOVING________['_', '_', 'f', 'i', 'e', 'r', 'e']
				version split: ['_', '_', 'f', 'ie', 'r', 'e']
				{'string': '_/_/f/ie', 'rgx': '((_))/((_))/((e))$'}
				_____REMOVING________['_', '_', 'f', 'ie', 'r', 'e']
				ANALYSING: fir
					resolving (8)
					> version: f/i/r
					TRYING: r
					> version: f/i/r
					TRYING: r
					> version: _/f/i/r
					TRYING: i
					adding blocked set: V = V >> éé, e, a, i
					> version: _/f/i/r
					TRYING: i
					adding blocked set: V = V >> éé, e, a, i
					> version: f/_/i/r
					TRYING: i
					adding blocked set: V = V >> éé, e, a, i
					> version: f/_/i/r
					TRYING: i
					adding blocked set: V = V >> éé, e, a, i
					> version: _/_/f/i/r
					TRYING: f
					> version: _/_/f/i/r
					TRYING: f
					RESULT:  ['_']
				adding dashed alternative: ['f', 'i', '_', 'r']
				adding dashed alternative: ['f', 'i', '_', 'r']
				adding dashed alternative: ['_', 'f', '_', 'i', 'r']
				adding dashed alternative: ['_', 'f', '_', 'i', 'r']
				adding dashed alternative: ['f', '_', '_', 'i', 'r']
				adding dashed alternative: ['f', '_', '_', 'i', 'r']
				adding dashed alternative: ['_', '_', '_', 'f', 'i', 'r']
				adding dashed alternative: ['_', '_', '_', 'f', 'i', 'r']
				f/i/r(CCC)
f/i/r(CVC)
_/f/i/r(ACAC)
_/f/i/r(ACAC)
f/_/i/r(CAAC)
f/_/i/r(CAAC)
_/_/f/i/r(AACAC)
_/_/f/i/r(AACAC)
f/i/_/r(CAAC)
f/i/_/r(CAAC)
_/f/_/i/r(ACAAC)
_/f/_/i/r(ACAAC)
f/_/_/i/r(CAAAC)
f/_/_/i/r(CAAAC)
_/_/_/f/i/r(AAACAC)
_/_/_/f/i/r(AAACAC)
				version split: ['f', 'i', 'r']
				{'string': 'f/i/r', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', 'i', 'r']
				version split: ['f', 'i', 'r']
				{'string': 'f/i/r', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', 'i', 'r']
				version split: ['_', 'f', 'i', 'r']
				{'string': '_/f/i/r', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', 'f', 'i', 'r']
				version split: ['_', 'f', 'i', 'r']
				{'string': '_/f/i/r', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', 'f', 'i', 'r']
				version split: ['f', '_', 'i', 'r']
				{'string': 'f/_/i/r', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', '_', 'i', 'r']
				version split: ['f', '_', 'i', 'r']
				{'string': 'f/_/i/r', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', '_', 'i', 'r']
				version split: ['_', '_', 'f', 'i', 'r']
				{'string': '_/_/f/i', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'f', 'i', 'r']
				version split: ['_', '_', 'f', 'i', 'r']
				{'string': '_/_/f/i', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'f', 'i', 'r']
				version split: ['f', 'i', '_', 'r']
				{'string': 'f/i/_/r', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', 'i', '_', 'r']
				version split: ['f', 'i', '_', 'r']
				{'string': 'f/i/_/r', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', 'i', '_', 'r']
				version split: ['_', 'f', '_', 'i', 'r']
				{'string': '_/f/_/i', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', 'f', '_', 'i', 'r']
				version split: ['_', 'f', '_', 'i', 'r']
				{'string': '_/f/_/i', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', 'f', '_', 'i', 'r']
				version split: ['f', '_', '_', 'i', 'r']
				{'string': 'f/_/_/i', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', '_', '_', 'i', 'r']
				version split: ['f', '_', '_', 'i', 'r']
				{'string': 'f/_/_/i', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', '_', '_', 'i', 'r']
				version split: ['_', '_', '_', 'f', 'i', 'r']
				{'string': '_/_/_/f', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', 'f', 'i', 'r']
				version split: ['_', '_', '_', 'f', 'i', 'r']
				{'string': '_/_/_/f', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', 'f', 'i', 'r']
				ANALYSING: fire
					resolving (8)
					> version: f/i/r/e
					TRYING: r
					> version: f/i/r/e
					TRYING: r
					> version: _/f/i/r/e
					TRYING: i
					adding blocked set: V = V >> e, _, a, éé, i
					> version: _/f/i/r/e
					TRYING: i
					adding blocked set: V = V >> e, _, a, éé, i
					> version: f/_/i/r/e
					TRYING: i
					adding blocked set: V = V >> e, _, a, éé, i
					> version: f/_/i/r/e
					TRYING: i
					adding blocked set: V = V >> e, _, a, éé, i
					> version: _/_/f/i/r/e
					TRYING: f
					> version: _/_/f/i/r/e
					TRYING: f
					RESULT:  ['_']
				adding dashed alternative: ['f', 'i', '_', 'r', 'e']
				adding dashed alternative: ['f', 'i', '_', 'r', 'e']
				adding dashed alternative: ['_', 'f', '_', 'i', 'r', 'e']
				adding dashed alternative: ['_', 'f', '_', 'i', 'r', 'e']
				adding dashed alternative: ['f', '_', '_', 'i', 'r', 'e']
				adding dashed alternative: ['f', '_', '_', 'i', 'r', 'e']
				adding dashed alternative: ['_', '_', '_', 'f', 'i', 'r', 'e']
				adding dashed alternative: ['_', '_', '_', 'f', 'i', 'r', 'e']
				f/i/r/e(CCCV)
f/i/r/e(CVCV)
_/f/i/r/e(ACACV)
_/f/i/r/e(ACACV)
f/_/i/r/e(CAACV)
f/_/i/r/e(CAACV)
_/_/f/i/r/e(AACACV)
_/_/f/i/r/e(AACACV)
f/i/_/r/e(CAACV)
f/i/_/r/e(CAACV)
_/f/_/i/r/e(ACAACV)
_/f/_/i/r/e(ACAACV)
f/_/_/i/r/e(CAAACV)
f/_/_/i/r/e(CAAACV)
_/_/_/f/i/r/e(AAACACV)
_/_/_/f/i/r/e(AAACACV)
				version split: ['f', 'i', 'r', 'e']
				{'string': 'f/i/r/e', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', 'i', 'r', 'e']
				version split: ['f', 'i', 'r', 'e']
				{'string': 'f/i/r/e', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', 'i', 'r', 'e']
				version split: ['_', 'f', 'i', 'r', 'e']
				{'string': '_/f/i/r', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', 'f', 'i', 'r', 'e']
				version split: ['_', 'f', 'i', 'r', 'e']
				{'string': '_/f/i/r', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', 'f', 'i', 'r', 'e']
				version split: ['f', '_', 'i', 'r', 'e']
				{'string': 'f/_/i/r', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', '_', 'i', 'r', 'e']
				version split: ['f', '_', 'i', 'r', 'e']
				{'string': 'f/_/i/r', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', '_', 'i', 'r', 'e']
				version split: ['_', '_', 'f', 'i', 'r', 'e']
				{'string': '_/_/f/i', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'f', 'i', 'r', 'e']
				version split: ['_', '_', 'f', 'i', 'r', 'e']
				{'string': '_/_/f/i', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'f', 'i', 'r', 'e']
				version split: ['f', 'i', '_', 'r', 'e']
				{'string': 'f/i/_/r', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', 'i', '_', 'r', 'e']
				version split: ['f', 'i', '_', 'r', 'e']
				{'string': 'f/i/_/r', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', 'i', '_', 'r', 'e']
				version split: ['_', 'f', '_', 'i', 'r', 'e']
				{'string': '_/f/_/i', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', 'f', '_', 'i', 'r', 'e']
				version split: ['_', 'f', '_', 'i', 'r', 'e']
				{'string': '_/f/_/i', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', 'f', '_', 'i', 'r', 'e']
				version split: ['f', '_', '_', 'i', 'r', 'e']
				{'string': 'f/_/_/i', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', '_', '_', 'i', 'r', 'e']
				version split: ['f', '_', '_', 'i', 'r', 'e']
				{'string': 'f/_/_/i', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', '_', '_', 'i', 'r', 'e']
				version split: ['_', '_', '_', 'f', 'i', 'r', 'e']
				{'string': '_/_/_/f', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', 'f', 'i', 'r', 'e']
				version split: ['_', '_', '_', 'f', 'i', 'r', 'e']
				{'string': '_/_/_/f', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', 'f', 'i', 'r', 'e']
				ANALYSING: fires
					resolving (8)
					> version: f/i/r/e/s
					TRYING: r
					> version: f/i/r/e/s
					TRYING: r
					> version: _/f/i/r/e/s
					TRYING: i
					adding blocked set: V = V >> e, _, a, éé, i
					> version: _/f/i/r/e/s
					TRYING: i
					adding blocked set: V = V >> e, _, a, éé, i
					> version: f/_/i/r/e/s
					TRYING: i
					adding blocked set: V = V >> e, _, a, éé, i
					> version: f/_/i/r/e/s
					TRYING: i
					adding blocked set: V = V >> e, _, a, éé, i
					> version: _/_/f/i/r/e/s
					TRYING: f
					> version: _/_/f/i/r/e/s
					TRYING: f
					RESULT:  ['_']
				adding dashed alternative: ['f', 'i', '_', 'r', 'e', 's']
				adding dashed alternative: ['f', 'i', '_', 'r', 'e', 's']
				adding dashed alternative: ['_', 'f', '_', 'i', 'r', 'e', 's']
				adding dashed alternative: ['_', 'f', '_', 'i', 'r', 'e', 's']
				adding dashed alternative: ['f', '_', '_', 'i', 'r', 'e', 's']
				adding dashed alternative: ['f', '_', '_', 'i', 'r', 'e', 's']
				adding dashed alternative: ['_', '_', '_', 'f', 'i', 'r', 'e', 's']
				adding dashed alternative: ['_', '_', '_', 'f', 'i', 'r', 'e', 's']
				f/i/r/e/s(CCCVC)
f/i/r/e/s(CVCVC)
_/f/i/r/e/s(ACACVC)
_/f/i/r/e/s(ACACVC)
f/_/i/r/e/s(CAACVC)
f/_/i/r/e/s(CAACVC)
_/_/f/i/r/e/s(AACACVC)
_/_/f/i/r/e/s(AACACVC)
f/i/_/r/e/s(CAACVC)
f/i/_/r/e/s(CAACVC)
_/f/_/i/r/e/s(ACAACVC)
_/f/_/i/r/e/s(ACAACVC)
f/_/_/i/r/e/s(CAAACVC)
f/_/_/i/r/e/s(CAAACVC)
_/_/_/f/i/r/e/s(AAACACVC)
_/_/_/f/i/r/e/s(AAACACVC)
				version split: ['f', 'i', 'r', 'e', 's']
				{'string': 'f/i/r/e', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', 'i', 'r', 'e', 's']
				version split: ['f', 'i', 'r', 'e', 's']
				{'string': 'f/i/r/e', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', 'i', 'r', 'e', 's']
				version split: ['_', 'f', 'i', 'r', 'e', 's']
				{'string': '_/f/i/r', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', 'f', 'i', 'r', 'e', 's']
				version split: ['_', 'f', 'i', 'r', 'e', 's']
				{'string': '_/f/i/r', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', 'f', 'i', 'r', 'e', 's']
				version split: ['f', '_', 'i', 'r', 'e', 's']
				{'string': 'f/_/i/r', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', '_', 'i', 'r', 'e', 's']
				version split: ['f', '_', 'i', 'r', 'e', 's']
				{'string': 'f/_/i/r', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', '_', 'i', 'r', 'e', 's']
				version split: ['_', '_', 'f', 'i', 'r', 'e', 's']
				{'string': '_/_/f/i', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'f', 'i', 'r', 'e', 's']
				version split: ['_', '_', 'f', 'i', 'r', 'e', 's']
				{'string': '_/_/f/i', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'f', 'i', 'r', 'e', 's']
				version split: ['f', 'i', '_', 'r', 'e', 's']
				{'string': 'f/i/_/r', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', 'i', '_', 'r', 'e', 's']
				version split: ['f', 'i', '_', 'r', 'e', 's']
				{'string': 'f/i/_/r', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', 'i', '_', 'r', 'e', 's']
				version split: ['_', 'f', '_', 'i', 'r', 'e', 's']
				{'string': '_/f/_/i', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', 'f', '_', 'i', 'r', 'e', 's']
				version split: ['_', 'f', '_', 'i', 'r', 'e', 's']
				{'string': '_/f/_/i', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', 'f', '_', 'i', 'r', 'e', 's']
				version split: ['f', '_', '_', 'i', 'r', 'e', 's']
				{'string': 'f/_/_/i', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', '_', '_', 'i', 'r', 'e', 's']
				version split: ['f', '_', '_', 'i', 'r', 'e', 's']
				{'string': 'f/_/_/i', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', '_', '_', 'i', 'r', 'e', 's']
				version split: ['_', '_', '_', 'f', 'i', 'r', 'e', 's']
				{'string': '_/_/_/f', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', 'f', 'i', 'r', 'e', 's']
				version split: ['_', '_', '_', 'f', 'i', 'r', 'e', 's']
				{'string': '_/_/_/f', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', 'f', 'i', 'r', 'e', 's']
				ANALYSING: fu
					resolving (8)
					> version: f/u
					> version: f/u
					> version: _/f/u
					TRYING: u
					adding blocked set: V = V >> e, _, a, éé, u
					> version: _/f/u
					TRYING: u
					adding blocked set: V = V >> e, _, a, éé, u
					> version: f/_/u
					TRYING: u
					adding blocked set: V = V >> e, _, a, éé, u
					> version: f/_/u
					TRYING: u
					adding blocked set: V = V >> e, _, a, éé, u
					> version: _/_/f/u
					TRYING: f
					> version: _/_/f/u
					TRYING: f
					RESULT:  ['_']
				adding dashed alternative: ['f', 'u', '_']
				adding dashed alternative: ['f', 'u', '_']
				adding dashed alternative: ['_', 'f', '_', 'u']
				adding dashed alternative: ['_', 'f', '_', 'u']
				adding dashed alternative: ['f', '_', '_', 'u']
				adding dashed alternative: ['f', '_', '_', 'u']
				adding dashed alternative: ['_', '_', '_', 'f', 'u']
				adding dashed alternative: ['_', '_', '_', 'f', 'u']
				f/u(CC)
f/u(CV)
_/f/u(ACA)
_/f/u(ACA)
f/_/u(CAA)
f/_/u(CAA)
_/_/f/u(AACA)
_/_/f/u(AACA)
f/u/_(CAA)
f/u/_(CAA)
_/f/_/u(ACAA)
_/f/_/u(ACAA)
f/_/_/u(CAAA)
f/_/_/u(CAAA)
_/_/_/f/u(AAACA)
_/_/_/f/u(AAACA)
				version split: ['f', 'u']
				{'string': 'f/u', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', 'u']
				version split: ['f', 'u']
				{'string': 'f/u', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', 'u']
				version split: ['_', 'f', 'u']
				{'string': '_/f/u', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', 'f', 'u']
				version split: ['_', 'f', 'u']
				{'string': '_/f/u', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', 'f', 'u']
				version split: ['f', '_', 'u']
				{'string': 'f/_/u', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', '_', 'u']
				version split: ['f', '_', 'u']
				{'string': 'f/_/u', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', '_', 'u']
				version split: ['_', '_', 'f', 'u']
				{'string': '_/_/f/u', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'f', 'u']
				version split: ['_', '_', 'f', 'u']
				{'string': '_/_/f/u', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'f', 'u']
				version split: ['f', 'u', '_']
				{'string': 'f/u/_', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', 'u', '_']
				version split: ['f', 'u', '_']
				{'string': 'f/u/_', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', 'u', '_']
				version split: ['_', 'f', '_', 'u']
				{'string': '_/f/_/u', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', 'f', '_', 'u']
				version split: ['_', 'f', '_', 'u']
				{'string': '_/f/_/u', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', 'f', '_', 'u']
				version split: ['f', '_', '_', 'u']
				{'string': 'f/_/_/u', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', '_', '_', 'u']
				version split: ['f', '_', '_', 'u']
				{'string': 'f/_/_/u', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', '_', '_', 'u']
				version split: ['_', '_', '_', 'f', 'u']
				{'string': '_/_/_/f', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', 'f', 'u']
				version split: ['_', '_', '_', 'f', 'u']
				{'string': '_/_/_/f', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', 'f', 'u']
				ANALYSING: fuir
					resolving (12)
					> version: f/u/i/r
					TRYING: i
					adding blocked set: V = V >> e, _, a, éé, i
					> version: f/u/i/r
					TRYING: i
					adding blocked set: V = V >> e, _, a, éé, i
					> version: f/ui/r
					TRYING: r
					> version: _/f/u/i/r
					TRYING: u
					adding blocked set: V = V >> e, _, a, éé, u
					> version: _/f/u/i/r
					TRYING: u
					adding blocked set: V = V >> e, _, a, éé, u
					> version: _/f/ui/r
					TRYING: ui
					adding blocked set: V = V >> e, _, ui, a, éé
					> version: f/_/u/i/r
					TRYING: u
					adding blocked set: V = V >> e, _, a, éé, u
					> version: f/_/u/i/r
					TRYING: u
					adding blocked set: V = V >> e, _, a, éé, u
					> version: f/_/ui/r
					TRYING: ui
					adding blocked set: V = V >> e, _, ui, a, éé
					> version: _/_/f/u/i/r
					TRYING: f
					> version: _/_/f/u/i/r
					TRYING: f
					> version: _/_/f/ui/r
					TRYING: f
					RESULT:  ['_']
				adding dashed alternative: ['f', 'u', '_', 'i', 'r']
				adding dashed alternative: ['f', 'u', '_', 'i', 'r']
				adding dashed alternative: ['f', 'ui', '_', 'r']
				adding dashed alternative: ['_', 'f', '_', 'u', 'i', 'r']
				adding dashed alternative: ['_', 'f', '_', 'u', 'i', 'r']
				adding dashed alternative: ['_', 'f', '_', 'ui', 'r']
				adding dashed alternative: ['f', '_', '_', 'u', 'i', 'r']
				adding dashed alternative: ['f', '_', '_', 'u', 'i', 'r']
				adding dashed alternative: ['f', '_', '_', 'ui', 'r']
				adding dashed alternative: ['_', '_', '_', 'f', 'u', 'i', 'r']
				adding dashed alternative: ['_', '_', '_', 'f', 'u', 'i', 'r']
				adding dashed alternative: ['_', '_', '_', 'f', 'ui', 'r']
				f/u/i/r(CCCC)
f/u/i/r(CVVC)
f/ui/r(CVC)
_/f/u/i/r(ACAAC)
_/f/u/i/r(ACAAC)
_/f/ui/r(ACVC)
f/_/u/i/r(CAAAC)
f/_/u/i/r(CAAAC)
f/_/ui/r(CAVC)
_/_/f/u/i/r(AACAAC)
_/_/f/u/i/r(AACAAC)
_/_/f/ui/r(AACVC)
f/u/_/i/r(CAAAC)
f/u/_/i/r(CAAAC)
f/ui/_/r(CVAC)
_/f/_/u/i/r(ACAAAC)
_/f/_/u/i/r(ACAAAC)
_/f/_/ui/r(ACAVC)
f/_/_/u/i/r(CAAAAC)
f/_/_/u/i/r(CAAAAC)
f/_/_/ui/r(CAAVC)
_/_/_/f/u/i/r(AAACAAC)
_/_/_/f/u/i/r(AAACAAC)
_/_/_/f/ui/r(AAACVC)
				version split: ['f', 'u', 'i', 'r']
				{'string': 'f/u/i/r', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', 'u', 'i', 'r']
				version split: ['f', 'u', 'i', 'r']
				{'string': 'f/u/i/r', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', 'u', 'i', 'r']
				version split: ['f', 'ui', 'r']
				{'string': 'f/ui/r', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', 'ui', 'r']
				version split: ['_', 'f', 'u', 'i', 'r']
				{'string': '_/f/u/i', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', 'f', 'u', 'i', 'r']
				version split: ['_', 'f', 'u', 'i', 'r']
				{'string': '_/f/u/i', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', 'f', 'u', 'i', 'r']
				version split: ['_', 'f', 'ui', 'r']
				{'string': '_/f/ui/r', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', 'f', 'ui', 'r']
				version split: ['f', '_', 'u', 'i', 'r']
				{'string': 'f/_/u/i', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', '_', 'u', 'i', 'r']
				version split: ['f', '_', 'u', 'i', 'r']
				{'string': 'f/_/u/i', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', '_', 'u', 'i', 'r']
				version split: ['f', '_', 'ui', 'r']
				{'string': 'f/_/ui/r', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', '_', 'ui', 'r']
				version split: ['_', '_', 'f', 'u', 'i', 'r']
				{'string': '_/_/f/u', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'f', 'u', 'i', 'r']
				version split: ['_', '_', 'f', 'u', 'i', 'r']
				{'string': '_/_/f/u', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'f', 'u', 'i', 'r']
				version split: ['_', '_', 'f', 'ui', 'r']
				{'string': '_/_/f/ui', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'f', 'ui', 'r']
				version split: ['f', 'u', '_', 'i', 'r']
				{'string': 'f/u/_/i', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', 'u', '_', 'i', 'r']
				version split: ['f', 'u', '_', 'i', 'r']
				{'string': 'f/u/_/i', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', 'u', '_', 'i', 'r']
				version split: ['f', 'ui', '_', 'r']
				{'string': 'f/ui/_/r', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', 'ui', '_', 'r']
				version split: ['_', 'f', '_', 'u', 'i', 'r']
				{'string': '_/f/_/u', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', 'f', '_', 'u', 'i', 'r']
				version split: ['_', 'f', '_', 'u', 'i', 'r']
				{'string': '_/f/_/u', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', 'f', '_', 'u', 'i', 'r']
				version split: ['_', 'f', '_', 'ui', 'r']
				{'string': '_/f/_/ui', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', 'f', '_', 'ui', 'r']
				version split: ['f', '_', '_', 'u', 'i', 'r']
				{'string': 'f/_/_/u', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', '_', '_', 'u', 'i', 'r']
				version split: ['f', '_', '_', 'u', 'i', 'r']
				{'string': 'f/_/_/u', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', '_', '_', 'u', 'i', 'r']
				version split: ['f', '_', '_', 'ui', 'r']
				{'string': 'f/_/_/ui', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', '_', '_', 'ui', 'r']
				version split: ['_', '_', '_', 'f', 'u', 'i', 'r']
				{'string': '_/_/_/f', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', 'f', 'u', 'i', 'r']
				version split: ['_', '_', '_', 'f', 'u', 'i', 'r']
				{'string': '_/_/_/f', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', 'f', 'u', 'i', 'r']
				version split: ['_', '_', '_', 'f', 'ui', 'r']
				{'string': '_/_/_/f', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', 'f', 'ui', 'r']
				ANALYSING: fuire
					resolving (12)
					> version: f/u/i/r/e
					TRYING: i
					adding blocked set: V = V >> e, _, a, éé, i
					> version: f/u/i/r/e
					TRYING: i
					adding blocked set: V = V >> e, _, a, éé, i
					> version: f/ui/r/e
					TRYING: r
					> version: _/f/u/i/r/e
					TRYING: u
					adding blocked set: V = V >> e, _, a, éé, u
					> version: _/f/u/i/r/e
					TRYING: u
					adding blocked set: V = V >> e, _, a, éé, u
					> version: _/f/ui/r/e
					TRYING: ui
					adding blocked set: V = V >> e, _, ui, a, éé
					> version: f/_/u/i/r/e
					TRYING: u
					adding blocked set: V = V >> e, _, a, éé, u
					> version: f/_/u/i/r/e
					TRYING: u
					adding blocked set: V = V >> e, _, a, éé, u
					> version: f/_/ui/r/e
					TRYING: ui
					adding blocked set: V = V >> e, _, ui, a, éé
					> version: _/_/f/u/i/r/e
					TRYING: f
					> version: _/_/f/u/i/r/e
					TRYING: f
					> version: _/_/f/ui/r/e
					TRYING: f
					RESULT:  ['_']
				adding dashed alternative: ['f', 'u', '_', 'i', 'r', 'e']
				adding dashed alternative: ['f', 'u', '_', 'i', 'r', 'e']
				adding dashed alternative: ['f', 'ui', '_', 'r', 'e']
				adding dashed alternative: ['_', 'f', '_', 'u', 'i', 'r', 'e']
				adding dashed alternative: ['_', 'f', '_', 'u', 'i', 'r', 'e']
				adding dashed alternative: ['_', 'f', '_', 'ui', 'r', 'e']
				adding dashed alternative: ['f', '_', '_', 'u', 'i', 'r', 'e']
				adding dashed alternative: ['f', '_', '_', 'u', 'i', 'r', 'e']
				adding dashed alternative: ['f', '_', '_', 'ui', 'r', 'e']
				adding dashed alternative: ['_', '_', '_', 'f', 'u', 'i', 'r', 'e']
				adding dashed alternative: ['_', '_', '_', 'f', 'u', 'i', 'r', 'e']
				adding dashed alternative: ['_', '_', '_', 'f', 'ui', 'r', 'e']
				f/u/i/r/e(CCCCV)
f/u/i/r/e(CVVCV)
f/ui/r/e(CVCV)
_/f/u/i/r/e(ACAACV)
_/f/u/i/r/e(ACAACV)
_/f/ui/r/e(ACVCV)
f/_/u/i/r/e(CAAACV)
f/_/u/i/r/e(CAAACV)
f/_/ui/r/e(CAVCV)
_/_/f/u/i/r/e(AACAACV)
_/_/f/u/i/r/e(AACAACV)
_/_/f/ui/r/e(AACVCV)
f/u/_/i/r/e(CAAACV)
f/u/_/i/r/e(CAAACV)
f/ui/_/r/e(CVACV)
_/f/_/u/i/r/e(ACAAACV)
_/f/_/u/i/r/e(ACAAACV)
_/f/_/ui/r/e(ACAVCV)
f/_/_/u/i/r/e(CAAAACV)
f/_/_/u/i/r/e(CAAAACV)
f/_/_/ui/r/e(CAAVCV)
_/_/_/f/u/i/r/e(AAACAACV)
_/_/_/f/u/i/r/e(AAACAACV)
_/_/_/f/ui/r/e(AAACVCV)
				version split: ['f', 'u', 'i', 'r', 'e']
				{'string': 'f/u/i/r', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', 'u', 'i', 'r', 'e']
				version split: ['f', 'u', 'i', 'r', 'e']
				{'string': 'f/u/i/r', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', 'u', 'i', 'r', 'e']
				version split: ['f', 'ui', 'r', 'e']
				{'string': 'f/ui/r/e', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', 'ui', 'r', 'e']
				version split: ['_', 'f', 'u', 'i', 'r', 'e']
				{'string': '_/f/u/i', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', 'f', 'u', 'i', 'r', 'e']
				version split: ['_', 'f', 'u', 'i', 'r', 'e']
				{'string': '_/f/u/i', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', 'f', 'u', 'i', 'r', 'e']
				version split: ['_', 'f', 'ui', 'r', 'e']
				{'string': '_/f/ui/r', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', 'f', 'ui', 'r', 'e']
				version split: ['f', '_', 'u', 'i', 'r', 'e']
				{'string': 'f/_/u/i', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', '_', 'u', 'i', 'r', 'e']
				version split: ['f', '_', 'u', 'i', 'r', 'e']
				{'string': 'f/_/u/i', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', '_', 'u', 'i', 'r', 'e']
				version split: ['f', '_', 'ui', 'r', 'e']
				{'string': 'f/_/ui/r', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', '_', 'ui', 'r', 'e']
				version split: ['_', '_', 'f', 'u', 'i', 'r', 'e']
				{'string': '_/_/f/u', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'f', 'u', 'i', 'r', 'e']
				version split: ['_', '_', 'f', 'u', 'i', 'r', 'e']
				{'string': '_/_/f/u', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'f', 'u', 'i', 'r', 'e']
				version split: ['_', '_', 'f', 'ui', 'r', 'e']
				{'string': '_/_/f/ui', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'f', 'ui', 'r', 'e']
				version split: ['f', 'u', '_', 'i', 'r', 'e']
				{'string': 'f/u/_/i', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', 'u', '_', 'i', 'r', 'e']
				version split: ['f', 'u', '_', 'i', 'r', 'e']
				{'string': 'f/u/_/i', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', 'u', '_', 'i', 'r', 'e']
				version split: ['f', 'ui', '_', 'r', 'e']
				{'string': 'f/ui/_/r', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', 'ui', '_', 'r', 'e']
				version split: ['_', 'f', '_', 'u', 'i', 'r', 'e']
				{'string': '_/f/_/u', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', 'f', '_', 'u', 'i', 'r', 'e']
				version split: ['_', 'f', '_', 'u', 'i', 'r', 'e']
				{'string': '_/f/_/u', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', 'f', '_', 'u', 'i', 'r', 'e']
				version split: ['_', 'f', '_', 'ui', 'r', 'e']
				{'string': '_/f/_/ui', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', 'f', '_', 'ui', 'r', 'e']
				version split: ['f', '_', '_', 'u', 'i', 'r', 'e']
				{'string': 'f/_/_/u', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', '_', '_', 'u', 'i', 'r', 'e']
				version split: ['f', '_', '_', 'u', 'i', 'r', 'e']
				{'string': 'f/_/_/u', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', '_', '_', 'u', 'i', 'r', 'e']
				version split: ['f', '_', '_', 'ui', 'r', 'e']
				{'string': 'f/_/_/ui', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', '_', '_', 'ui', 'r', 'e']
				version split: ['_', '_', '_', 'f', 'u', 'i', 'r', 'e']
				{'string': '_/_/_/f', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', 'f', 'u', 'i', 'r', 'e']
				version split: ['_', '_', '_', 'f', 'u', 'i', 'r', 'e']
				{'string': '_/_/_/f', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', 'f', 'u', 'i', 'r', 'e']
				version split: ['_', '_', '_', 'f', 'ui', 'r', 'e']
				{'string': '_/_/_/f', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', 'f', 'ui', 'r', 'e']
				ANALYSING: fur
					resolving (8)
					> version: f/u/r
					TRYING: r
					> version: f/u/r
					TRYING: r
					> version: _/f/u/r
					TRYING: u
					adding blocked set: V = V >> e, _, a, éé, u
					> version: _/f/u/r
					TRYING: u
					adding blocked set: V = V >> e, _, a, éé, u
					> version: f/_/u/r
					TRYING: u
					adding blocked set: V = V >> e, _, a, éé, u
					> version: f/_/u/r
					TRYING: u
					adding blocked set: V = V >> e, _, a, éé, u
					> version: _/_/f/u/r
					TRYING: f
					> version: _/_/f/u/r
					TRYING: f
					RESULT:  ['_']
				adding dashed alternative: ['f', 'u', '_', 'r']
				adding dashed alternative: ['f', 'u', '_', 'r']
				adding dashed alternative: ['_', 'f', '_', 'u', 'r']
				adding dashed alternative: ['_', 'f', '_', 'u', 'r']
				adding dashed alternative: ['f', '_', '_', 'u', 'r']
				adding dashed alternative: ['f', '_', '_', 'u', 'r']
				adding dashed alternative: ['_', '_', '_', 'f', 'u', 'r']
				adding dashed alternative: ['_', '_', '_', 'f', 'u', 'r']
				f/u/r(CCC)
f/u/r(CVC)
_/f/u/r(ACAC)
_/f/u/r(ACAC)
f/_/u/r(CAAC)
f/_/u/r(CAAC)
_/_/f/u/r(AACAC)
_/_/f/u/r(AACAC)
f/u/_/r(CAAC)
f/u/_/r(CAAC)
_/f/_/u/r(ACAAC)
_/f/_/u/r(ACAAC)
f/_/_/u/r(CAAAC)
f/_/_/u/r(CAAAC)
_/_/_/f/u/r(AAACAC)
_/_/_/f/u/r(AAACAC)
				version split: ['f', 'u', 'r']
				{'string': 'f/u/r', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', 'u', 'r']
				version split: ['f', 'u', 'r']
				{'string': 'f/u/r', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', 'u', 'r']
				version split: ['_', 'f', 'u', 'r']
				{'string': '_/f/u/r', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', 'f', 'u', 'r']
				version split: ['_', 'f', 'u', 'r']
				{'string': '_/f/u/r', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', 'f', 'u', 'r']
				version split: ['f', '_', 'u', 'r']
				{'string': 'f/_/u/r', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', '_', 'u', 'r']
				version split: ['f', '_', 'u', 'r']
				{'string': 'f/_/u/r', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', '_', 'u', 'r']
				version split: ['_', '_', 'f', 'u', 'r']
				{'string': '_/_/f/u', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'f', 'u', 'r']
				version split: ['_', '_', 'f', 'u', 'r']
				{'string': '_/_/f/u', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'f', 'u', 'r']
				version split: ['f', 'u', '_', 'r']
				{'string': 'f/u/_/r', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', 'u', '_', 'r']
				version split: ['f', 'u', '_', 'r']
				{'string': 'f/u/_/r', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', 'u', '_', 'r']
				version split: ['_', 'f', '_', 'u', 'r']
				{'string': '_/f/_/u', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', 'f', '_', 'u', 'r']
				version split: ['_', 'f', '_', 'u', 'r']
				{'string': '_/f/_/u', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', 'f', '_', 'u', 'r']
				version split: ['f', '_', '_', 'u', 'r']
				{'string': 'f/_/_/u', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', '_', '_', 'u', 'r']
				version split: ['f', '_', '_', 'u', 'r']
				{'string': 'f/_/_/u', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', '_', '_', 'u', 'r']
				version split: ['_', '_', '_', 'f', 'u', 'r']
				{'string': '_/_/_/f', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', 'f', 'u', 'r']
				version split: ['_', '_', '_', 'f', 'u', 'r']
				{'string': '_/_/_/f', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', 'f', 'u', 'r']
				ANALYSING: fure
					resolving (8)
					> version: f/u/r/e
					TRYING: r
					> version: f/u/r/e
					TRYING: r
					> version: _/f/u/r/e
					TRYING: u
					adding blocked set: V = V >> e, _, a, éé, u
					> version: _/f/u/r/e
					TRYING: u
					adding blocked set: V = V >> e, _, a, éé, u
					> version: f/_/u/r/e
					TRYING: u
					adding blocked set: V = V >> e, _, a, éé, u
					> version: f/_/u/r/e
					TRYING: u
					adding blocked set: V = V >> e, _, a, éé, u
					> version: _/_/f/u/r/e
					TRYING: f
					> version: _/_/f/u/r/e
					TRYING: f
					RESULT:  ['_']
				adding dashed alternative: ['f', 'u', '_', 'r', 'e']
				adding dashed alternative: ['f', 'u', '_', 'r', 'e']
				adding dashed alternative: ['_', 'f', '_', 'u', 'r', 'e']
				adding dashed alternative: ['_', 'f', '_', 'u', 'r', 'e']
				adding dashed alternative: ['f', '_', '_', 'u', 'r', 'e']
				adding dashed alternative: ['f', '_', '_', 'u', 'r', 'e']
				adding dashed alternative: ['_', '_', '_', 'f', 'u', 'r', 'e']
				adding dashed alternative: ['_', '_', '_', 'f', 'u', 'r', 'e']
				f/u/r/e(CCCV)
f/u/r/e(CVCV)
_/f/u/r/e(ACACV)
_/f/u/r/e(ACACV)
f/_/u/r/e(CAACV)
f/_/u/r/e(CAACV)
_/_/f/u/r/e(AACACV)
_/_/f/u/r/e(AACACV)
f/u/_/r/e(CAACV)
f/u/_/r/e(CAACV)
_/f/_/u/r/e(ACAACV)
_/f/_/u/r/e(ACAACV)
f/_/_/u/r/e(CAAACV)
f/_/_/u/r/e(CAAACV)
_/_/_/f/u/r/e(AAACACV)
_/_/_/f/u/r/e(AAACACV)
				version split: ['f', 'u', 'r', 'e']
				{'string': 'f/u/r/e', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', 'u', 'r', 'e']
				version split: ['f', 'u', 'r', 'e']
				{'string': 'f/u/r/e', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', 'u', 'r', 'e']
				version split: ['_', 'f', 'u', 'r', 'e']
				{'string': '_/f/u/r', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', 'f', 'u', 'r', 'e']
				version split: ['_', 'f', 'u', 'r', 'e']
				{'string': '_/f/u/r', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', 'f', 'u', 'r', 'e']
				version split: ['f', '_', 'u', 'r', 'e']
				{'string': 'f/_/u/r', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', '_', 'u', 'r', 'e']
				version split: ['f', '_', 'u', 'r', 'e']
				{'string': 'f/_/u/r', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', '_', 'u', 'r', 'e']
				version split: ['_', '_', 'f', 'u', 'r', 'e']
				{'string': '_/_/f/u', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'f', 'u', 'r', 'e']
				version split: ['_', '_', 'f', 'u', 'r', 'e']
				{'string': '_/_/f/u', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'f', 'u', 'r', 'e']
				version split: ['f', 'u', '_', 'r', 'e']
				{'string': 'f/u/_/r', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', 'u', '_', 'r', 'e']
				version split: ['f', 'u', '_', 'r', 'e']
				{'string': 'f/u/_/r', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', 'u', '_', 'r', 'e']
				version split: ['_', 'f', '_', 'u', 'r', 'e']
				{'string': '_/f/_/u', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', 'f', '_', 'u', 'r', 'e']
				version split: ['_', 'f', '_', 'u', 'r', 'e']
				{'string': '_/f/_/u', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', 'f', '_', 'u', 'r', 'e']
				version split: ['f', '_', '_', 'u', 'r', 'e']
				{'string': 'f/_/_/u', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', '_', '_', 'u', 'r', 'e']
				version split: ['f', '_', '_', 'u', 'r', 'e']
				{'string': 'f/_/_/u', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', '_', '_', 'u', 'r', 'e']
				version split: ['_', '_', '_', 'f', 'u', 'r', 'e']
				{'string': '_/_/_/f', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', 'f', 'u', 'r', 'e']
				version split: ['_', '_', '_', 'f', 'u', 'r', 'e']
				{'string': '_/_/_/f', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', 'f', 'u', 'r', 'e']
				ANALYSING: fures
					resolving (8)
					> version: f/u/r/e/s
					TRYING: r
					> version: f/u/r/e/s
					TRYING: r
					> version: _/f/u/r/e/s
					TRYING: u
					adding blocked set: V = V >> e, _, a, éé, u
					> version: _/f/u/r/e/s
					TRYING: u
					adding blocked set: V = V >> e, _, a, éé, u
					> version: f/_/u/r/e/s
					TRYING: u
					adding blocked set: V = V >> e, _, a, éé, u
					> version: f/_/u/r/e/s
					TRYING: u
					adding blocked set: V = V >> e, _, a, éé, u
					> version: _/_/f/u/r/e/s
					TRYING: f
					> version: _/_/f/u/r/e/s
					TRYING: f
					RESULT:  ['_']
				adding dashed alternative: ['f', 'u', '_', 'r', 'e', 's']
				adding dashed alternative: ['f', 'u', '_', 'r', 'e', 's']
				adding dashed alternative: ['_', 'f', '_', 'u', 'r', 'e', 's']
				adding dashed alternative: ['_', 'f', '_', 'u', 'r', 'e', 's']
				adding dashed alternative: ['f', '_', '_', 'u', 'r', 'e', 's']
				adding dashed alternative: ['f', '_', '_', 'u', 'r', 'e', 's']
				adding dashed alternative: ['_', '_', '_', 'f', 'u', 'r', 'e', 's']
				adding dashed alternative: ['_', '_', '_', 'f', 'u', 'r', 'e', 's']
				f/u/r/e/s(CCCVC)
f/u/r/e/s(CVCVC)
_/f/u/r/e/s(ACACVC)
_/f/u/r/e/s(ACACVC)
f/_/u/r/e/s(CAACVC)
f/_/u/r/e/s(CAACVC)
_/_/f/u/r/e/s(AACACVC)
_/_/f/u/r/e/s(AACACVC)
f/u/_/r/e/s(CAACVC)
f/u/_/r/e/s(CAACVC)
_/f/_/u/r/e/s(ACAACVC)
_/f/_/u/r/e/s(ACAACVC)
f/_/_/u/r/e/s(CAAACVC)
f/_/_/u/r/e/s(CAAACVC)
_/_/_/f/u/r/e/s(AAACACVC)
_/_/_/f/u/r/e/s(AAACACVC)
				version split: ['f', 'u', 'r', 'e', 's']
				{'string': 'f/u/r/e', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', 'u', 'r', 'e', 's']
				version split: ['f', 'u', 'r', 'e', 's']
				{'string': 'f/u/r/e', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', 'u', 'r', 'e', 's']
				version split: ['_', 'f', 'u', 'r', 'e', 's']
				{'string': '_/f/u/r', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', 'f', 'u', 'r', 'e', 's']
				version split: ['_', 'f', 'u', 'r', 'e', 's']
				{'string': '_/f/u/r', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', 'f', 'u', 'r', 'e', 's']
				version split: ['f', '_', 'u', 'r', 'e', 's']
				{'string': 'f/_/u/r', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', '_', 'u', 'r', 'e', 's']
				version split: ['f', '_', 'u', 'r', 'e', 's']
				{'string': 'f/_/u/r', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', '_', 'u', 'r', 'e', 's']
				version split: ['_', '_', 'f', 'u', 'r', 'e', 's']
				{'string': '_/_/f/u', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'f', 'u', 'r', 'e', 's']
				version split: ['_', '_', 'f', 'u', 'r', 'e', 's']
				{'string': '_/_/f/u', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'f', 'u', 'r', 'e', 's']
				version split: ['f', 'u', '_', 'r', 'e', 's']
				{'string': 'f/u/_/r', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', 'u', '_', 'r', 'e', 's']
				version split: ['f', 'u', '_', 'r', 'e', 's']
				{'string': 'f/u/_/r', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', 'u', '_', 'r', 'e', 's']
				version split: ['_', 'f', '_', 'u', 'r', 'e', 's']
				{'string': '_/f/_/u', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', 'f', '_', 'u', 'r', 'e', 's']
				version split: ['_', 'f', '_', 'u', 'r', 'e', 's']
				{'string': '_/f/_/u', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', 'f', '_', 'u', 'r', 'e', 's']
				version split: ['f', '_', '_', 'u', 'r', 'e', 's']
				{'string': 'f/_/_/u', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', '_', '_', 'u', 'r', 'e', 's']
				version split: ['f', '_', '_', 'u', 'r', 'e', 's']
				{'string': 'f/_/_/u', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', '_', '_', 'u', 'r', 'e', 's']
				version split: ['_', '_', '_', 'f', 'u', 'r', 'e', 's']
				{'string': '_/_/_/f', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', 'f', 'u', 'r', 'e', 's']
				version split: ['_', '_', '_', 'f', 'u', 'r', 'e', 's']
				{'string': '_/_/_/f', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', 'f', 'u', 'r', 'e', 's']
				ANALYSING: fuyr
					resolving (12)
					> version: f/u/y/r
					TRYING: y
					adding blocked set: V = V >> e, _, a, éé, y
					> version: f/u/y/r
					TRYING: y
					adding blocked set: V = V >> e, _, a, éé, y
					> version: f/uy/r
					TRYING: r
					> version: _/f/u/y/r
					TRYING: u
					adding blocked set: V = V >> e, _, a, éé, u
					> version: _/f/u/y/r
					TRYING: u
					adding blocked set: V = V >> e, _, a, éé, u
					> version: _/f/uy/r
					TRYING: uy
					adding blocked set: V = V >> uy, e, _, a, éé
					> version: f/_/u/y/r
					TRYING: u
					adding blocked set: V = V >> e, _, a, éé, u
					> version: f/_/u/y/r
					TRYING: u
					adding blocked set: V = V >> e, _, a, éé, u
					> version: f/_/uy/r
					TRYING: uy
					adding blocked set: V = V >> uy, e, _, a, éé
					> version: _/_/f/u/y/r
					TRYING: f
					> version: _/_/f/u/y/r
					TRYING: f
					> version: _/_/f/uy/r
					TRYING: f
					RESULT:  ['_']
				adding dashed alternative: ['f', 'u', '_', 'y', 'r']
				adding dashed alternative: ['f', 'u', '_', 'y', 'r']
				adding dashed alternative: ['f', 'uy', '_', 'r']
				adding dashed alternative: ['_', 'f', '_', 'u', 'y', 'r']
				adding dashed alternative: ['_', 'f', '_', 'u', 'y', 'r']
				adding dashed alternative: ['_', 'f', '_', 'uy', 'r']
				adding dashed alternative: ['f', '_', '_', 'u', 'y', 'r']
				adding dashed alternative: ['f', '_', '_', 'u', 'y', 'r']
				adding dashed alternative: ['f', '_', '_', 'uy', 'r']
				adding dashed alternative: ['_', '_', '_', 'f', 'u', 'y', 'r']
				adding dashed alternative: ['_', '_', '_', 'f', 'u', 'y', 'r']
				adding dashed alternative: ['_', '_', '_', 'f', 'uy', 'r']
				f/u/y/r(CCCC)
f/u/y/r(CVVC)
f/uy/r(CVC)
_/f/u/y/r(ACAAC)
_/f/u/y/r(ACAAC)
_/f/uy/r(ACVC)
f/_/u/y/r(CAAAC)
f/_/u/y/r(CAAAC)
f/_/uy/r(CAVC)
_/_/f/u/y/r(AACAAC)
_/_/f/u/y/r(AACAAC)
_/_/f/uy/r(AACVC)
f/u/_/y/r(CAAAC)
f/u/_/y/r(CAAAC)
f/uy/_/r(CVAC)
_/f/_/u/y/r(ACAAAC)
_/f/_/u/y/r(ACAAAC)
_/f/_/uy/r(ACAVC)
f/_/_/u/y/r(CAAAAC)
f/_/_/u/y/r(CAAAAC)
f/_/_/uy/r(CAAVC)
_/_/_/f/u/y/r(AAACAAC)
_/_/_/f/u/y/r(AAACAAC)
_/_/_/f/uy/r(AAACVC)
				version split: ['f', 'u', 'y', 'r']
				{'string': 'f/u/y/r', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', 'u', 'y', 'r']
				version split: ['f', 'u', 'y', 'r']
				{'string': 'f/u/y/r', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', 'u', 'y', 'r']
				version split: ['f', 'uy', 'r']
				{'string': 'f/uy/r', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', 'uy', 'r']
				version split: ['_', 'f', 'u', 'y', 'r']
				{'string': '_/f/u/y', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', 'f', 'u', 'y', 'r']
				version split: ['_', 'f', 'u', 'y', 'r']
				{'string': '_/f/u/y', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', 'f', 'u', 'y', 'r']
				version split: ['_', 'f', 'uy', 'r']
				{'string': '_/f/uy/r', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', 'f', 'uy', 'r']
				version split: ['f', '_', 'u', 'y', 'r']
				{'string': 'f/_/u/y', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', '_', 'u', 'y', 'r']
				version split: ['f', '_', 'u', 'y', 'r']
				{'string': 'f/_/u/y', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', '_', 'u', 'y', 'r']
				version split: ['f', '_', 'uy', 'r']
				{'string': 'f/_/uy/r', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', '_', 'uy', 'r']
				version split: ['_', '_', 'f', 'u', 'y', 'r']
				{'string': '_/_/f/u', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'f', 'u', 'y', 'r']
				version split: ['_', '_', 'f', 'u', 'y', 'r']
				{'string': '_/_/f/u', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'f', 'u', 'y', 'r']
				version split: ['_', '_', 'f', 'uy', 'r']
				{'string': '_/_/f/uy', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'f', 'uy', 'r']
				version split: ['f', 'u', '_', 'y', 'r']
				{'string': 'f/u/_/y', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', 'u', '_', 'y', 'r']
				version split: ['f', 'u', '_', 'y', 'r']
				{'string': 'f/u/_/y', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', 'u', '_', 'y', 'r']
				version split: ['f', 'uy', '_', 'r']
				{'string': 'f/uy/_/r', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', 'uy', '_', 'r']
				version split: ['_', 'f', '_', 'u', 'y', 'r']
				{'string': '_/f/_/u', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', 'f', '_', 'u', 'y', 'r']
				version split: ['_', 'f', '_', 'u', 'y', 'r']
				{'string': '_/f/_/u', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', 'f', '_', 'u', 'y', 'r']
				version split: ['_', 'f', '_', 'uy', 'r']
				{'string': '_/f/_/uy', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', 'f', '_', 'uy', 'r']
				version split: ['f', '_', '_', 'u', 'y', 'r']
				{'string': 'f/_/_/u', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', '_', '_', 'u', 'y', 'r']
				version split: ['f', '_', '_', 'u', 'y', 'r']
				{'string': 'f/_/_/u', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', '_', '_', 'u', 'y', 'r']
				version split: ['f', '_', '_', 'uy', 'r']
				{'string': 'f/_/_/uy', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', '_', '_', 'uy', 'r']
				version split: ['_', '_', '_', 'f', 'u', 'y', 'r']
				{'string': '_/_/_/f', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', 'f', 'u', 'y', 'r']
				version split: ['_', '_', '_', 'f', 'u', 'y', 'r']
				{'string': '_/_/_/f', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', 'f', 'u', 'y', 'r']
				version split: ['_', '_', '_', 'f', 'uy', 'r']
				{'string': '_/_/_/f', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', 'f', 'uy', 'r']
				ANALYSING: fuyre
					resolving (12)
					> version: f/u/y/r/e
					TRYING: y
					adding blocked set: V = V >> e, _, a, éé, y
					> version: f/u/y/r/e
					TRYING: y
					adding blocked set: V = V >> e, _, a, éé, y
					> version: f/uy/r/e
					TRYING: r
					> version: _/f/u/y/r/e
					TRYING: u
					adding blocked set: V = V >> e, _, a, éé, u
					> version: _/f/u/y/r/e
					TRYING: u
					adding blocked set: V = V >> e, _, a, éé, u
					> version: _/f/uy/r/e
					TRYING: uy
					adding blocked set: V = V >> uy, e, _, a, éé
					> version: f/_/u/y/r/e
					TRYING: u
					adding blocked set: V = V >> e, _, a, éé, u
					> version: f/_/u/y/r/e
					TRYING: u
					adding blocked set: V = V >> e, _, a, éé, u
					> version: f/_/uy/r/e
					TRYING: uy
					adding blocked set: V = V >> uy, e, _, a, éé
					> version: _/_/f/u/y/r/e
					TRYING: f
					> version: _/_/f/u/y/r/e
					TRYING: f
					> version: _/_/f/uy/r/e
					TRYING: f
					RESULT:  ['_']
				adding dashed alternative: ['f', 'u', '_', 'y', 'r', 'e']
				adding dashed alternative: ['f', 'u', '_', 'y', 'r', 'e']
				adding dashed alternative: ['f', 'uy', '_', 'r', 'e']
				adding dashed alternative: ['_', 'f', '_', 'u', 'y', 'r', 'e']
				adding dashed alternative: ['_', 'f', '_', 'u', 'y', 'r', 'e']
				adding dashed alternative: ['_', 'f', '_', 'uy', 'r', 'e']
				adding dashed alternative: ['f', '_', '_', 'u', 'y', 'r', 'e']
				adding dashed alternative: ['f', '_', '_', 'u', 'y', 'r', 'e']
				adding dashed alternative: ['f', '_', '_', 'uy', 'r', 'e']
				adding dashed alternative: ['_', '_', '_', 'f', 'u', 'y', 'r', 'e']
				adding dashed alternative: ['_', '_', '_', 'f', 'u', 'y', 'r', 'e']
				adding dashed alternative: ['_', '_', '_', 'f', 'uy', 'r', 'e']
				f/u/y/r/e(CCCCV)
f/u/y/r/e(CVVCV)
f/uy/r/e(CVCV)
_/f/u/y/r/e(ACAACV)
_/f/u/y/r/e(ACAACV)
_/f/uy/r/e(ACVCV)
f/_/u/y/r/e(CAAACV)
f/_/u/y/r/e(CAAACV)
f/_/uy/r/e(CAVCV)
_/_/f/u/y/r/e(AACAACV)
_/_/f/u/y/r/e(AACAACV)
_/_/f/uy/r/e(AACVCV)
f/u/_/y/r/e(CAAACV)
f/u/_/y/r/e(CAAACV)
f/uy/_/r/e(CVACV)
_/f/_/u/y/r/e(ACAAACV)
_/f/_/u/y/r/e(ACAAACV)
_/f/_/uy/r/e(ACAVCV)
f/_/_/u/y/r/e(CAAAACV)
f/_/_/u/y/r/e(CAAAACV)
f/_/_/uy/r/e(CAAVCV)
_/_/_/f/u/y/r/e(AAACAACV)
_/_/_/f/u/y/r/e(AAACAACV)
_/_/_/f/uy/r/e(AAACVCV)
				version split: ['f', 'u', 'y', 'r', 'e']
				{'string': 'f/u/y/r', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', 'u', 'y', 'r', 'e']
				version split: ['f', 'u', 'y', 'r', 'e']
				{'string': 'f/u/y/r', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', 'u', 'y', 'r', 'e']
				version split: ['f', 'uy', 'r', 'e']
				{'string': 'f/uy/r/e', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', 'uy', 'r', 'e']
				version split: ['_', 'f', 'u', 'y', 'r', 'e']
				{'string': '_/f/u/y', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', 'f', 'u', 'y', 'r', 'e']
				version split: ['_', 'f', 'u', 'y', 'r', 'e']
				{'string': '_/f/u/y', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', 'f', 'u', 'y', 'r', 'e']
				version split: ['_', 'f', 'uy', 'r', 'e']
				{'string': '_/f/uy/r', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', 'f', 'uy', 'r', 'e']
				version split: ['f', '_', 'u', 'y', 'r', 'e']
				{'string': 'f/_/u/y', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', '_', 'u', 'y', 'r', 'e']
				version split: ['f', '_', 'u', 'y', 'r', 'e']
				{'string': 'f/_/u/y', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', '_', 'u', 'y', 'r', 'e']
				version split: ['f', '_', 'uy', 'r', 'e']
				{'string': 'f/_/uy/r', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', '_', 'uy', 'r', 'e']
				version split: ['_', '_', 'f', 'u', 'y', 'r', 'e']
				{'string': '_/_/f/u', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'f', 'u', 'y', 'r', 'e']
				version split: ['_', '_', 'f', 'u', 'y', 'r', 'e']
				{'string': '_/_/f/u', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'f', 'u', 'y', 'r', 'e']
				version split: ['_', '_', 'f', 'uy', 'r', 'e']
				{'string': '_/_/f/uy', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'f', 'uy', 'r', 'e']
				version split: ['f', 'u', '_', 'y', 'r', 'e']
				{'string': 'f/u/_/y', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', 'u', '_', 'y', 'r', 'e']
				version split: ['f', 'u', '_', 'y', 'r', 'e']
				{'string': 'f/u/_/y', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', 'u', '_', 'y', 'r', 'e']
				version split: ['f', 'uy', '_', 'r', 'e']
				{'string': 'f/uy/_/r', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', 'uy', '_', 'r', 'e']
				version split: ['_', 'f', '_', 'u', 'y', 'r', 'e']
				{'string': '_/f/_/u', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', 'f', '_', 'u', 'y', 'r', 'e']
				version split: ['_', 'f', '_', 'u', 'y', 'r', 'e']
				{'string': '_/f/_/u', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', 'f', '_', 'u', 'y', 'r', 'e']
				version split: ['_', 'f', '_', 'uy', 'r', 'e']
				{'string': '_/f/_/uy', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', 'f', '_', 'uy', 'r', 'e']
				version split: ['f', '_', '_', 'u', 'y', 'r', 'e']
				{'string': 'f/_/_/u', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', '_', '_', 'u', 'y', 'r', 'e']
				version split: ['f', '_', '_', 'u', 'y', 'r', 'e']
				{'string': 'f/_/_/u', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', '_', '_', 'u', 'y', 'r', 'e']
				version split: ['f', '_', '_', 'uy', 'r', 'e']
				{'string': 'f/_/_/uy', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', '_', '_', 'uy', 'r', 'e']
				version split: ['_', '_', '_', 'f', 'u', 'y', 'r', 'e']
				{'string': '_/_/_/f', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', 'f', 'u', 'y', 'r', 'e']
				version split: ['_', '_', '_', 'f', 'u', 'y', 'r', 'e']
				{'string': '_/_/_/f', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', 'f', 'u', 'y', 'r', 'e']
				version split: ['_', '_', '_', 'f', 'uy', 'r', 'e']
				{'string': '_/_/_/f', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', 'f', 'uy', 'r', 'e']
				ANALYSING: fyr
					resolving (8)
					> version: f/y/r
					TRYING: r
					> version: f/y/r
					TRYING: r
					> version: _/f/y/r
					TRYING: y
					adding blocked set: V = V >> e, _, a, éé, y
					> version: _/f/y/r
					TRYING: y
					adding blocked set: V = V >> e, _, a, éé, y
					> version: f/_/y/r
					TRYING: y
					adding blocked set: V = V >> e, _, a, éé, y
					> version: f/_/y/r
					TRYING: y
					adding blocked set: V = V >> e, _, a, éé, y
					> version: _/_/f/y/r
					TRYING: f
					> version: _/_/f/y/r
					TRYING: f
					RESULT:  ['_']
				adding dashed alternative: ['f', 'y', '_', 'r']
				adding dashed alternative: ['f', 'y', '_', 'r']
				adding dashed alternative: ['_', 'f', '_', 'y', 'r']
				adding dashed alternative: ['_', 'f', '_', 'y', 'r']
				adding dashed alternative: ['f', '_', '_', 'y', 'r']
				adding dashed alternative: ['f', '_', '_', 'y', 'r']
				adding dashed alternative: ['_', '_', '_', 'f', 'y', 'r']
				adding dashed alternative: ['_', '_', '_', 'f', 'y', 'r']
				f/y/r(CCC)
f/y/r(CVC)
_/f/y/r(ACAC)
_/f/y/r(ACAC)
f/_/y/r(CAAC)
f/_/y/r(CAAC)
_/_/f/y/r(AACAC)
_/_/f/y/r(AACAC)
f/y/_/r(CAAC)
f/y/_/r(CAAC)
_/f/_/y/r(ACAAC)
_/f/_/y/r(ACAAC)
f/_/_/y/r(CAAAC)
f/_/_/y/r(CAAAC)
_/_/_/f/y/r(AAACAC)
_/_/_/f/y/r(AAACAC)
				version split: ['f', 'y', 'r']
				{'string': 'f/y/r', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', 'y', 'r']
				version split: ['f', 'y', 'r']
				{'string': 'f/y/r', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', 'y', 'r']
				version split: ['_', 'f', 'y', 'r']
				{'string': '_/f/y/r', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', 'f', 'y', 'r']
				version split: ['_', 'f', 'y', 'r']
				{'string': '_/f/y/r', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', 'f', 'y', 'r']
				version split: ['f', '_', 'y', 'r']
				{'string': 'f/_/y/r', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', '_', 'y', 'r']
				version split: ['f', '_', 'y', 'r']
				{'string': 'f/_/y/r', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', '_', 'y', 'r']
				version split: ['_', '_', 'f', 'y', 'r']
				{'string': '_/_/f/y', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'f', 'y', 'r']
				version split: ['_', '_', 'f', 'y', 'r']
				{'string': '_/_/f/y', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'f', 'y', 'r']
				version split: ['f', 'y', '_', 'r']
				{'string': 'f/y/_/r', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', 'y', '_', 'r']
				version split: ['f', 'y', '_', 'r']
				{'string': 'f/y/_/r', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', 'y', '_', 'r']
				version split: ['_', 'f', '_', 'y', 'r']
				{'string': '_/f/_/y', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', 'f', '_', 'y', 'r']
				version split: ['_', 'f', '_', 'y', 'r']
				{'string': '_/f/_/y', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', 'f', '_', 'y', 'r']
				version split: ['f', '_', '_', 'y', 'r']
				{'string': 'f/_/_/y', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', '_', '_', 'y', 'r']
				version split: ['f', '_', '_', 'y', 'r']
				{'string': 'f/_/_/y', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', '_', '_', 'y', 'r']
				version split: ['_', '_', '_', 'f', 'y', 'r']
				{'string': '_/_/_/f', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', 'f', 'y', 'r']
				version split: ['_', '_', '_', 'f', 'y', 'r']
				{'string': '_/_/_/f', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', 'f', 'y', 'r']
				ANALYSING: fyre
					resolving (8)
					> version: f/y/r/e
					TRYING: r
					> version: f/y/r/e
					TRYING: r
					> version: _/f/y/r/e
					TRYING: y
					adding blocked set: V = V >> e, _, a, éé, y
					> version: _/f/y/r/e
					TRYING: y
					adding blocked set: V = V >> e, _, a, éé, y
					> version: f/_/y/r/e
					TRYING: y
					adding blocked set: V = V >> e, _, a, éé, y
					> version: f/_/y/r/e
					TRYING: y
					adding blocked set: V = V >> e, _, a, éé, y
					> version: _/_/f/y/r/e
					TRYING: f
					> version: _/_/f/y/r/e
					TRYING: f
					RESULT:  ['_']
				adding dashed alternative: ['f', 'y', '_', 'r', 'e']
				adding dashed alternative: ['f', 'y', '_', 'r', 'e']
				adding dashed alternative: ['_', 'f', '_', 'y', 'r', 'e']
				adding dashed alternative: ['_', 'f', '_', 'y', 'r', 'e']
				adding dashed alternative: ['f', '_', '_', 'y', 'r', 'e']
				adding dashed alternative: ['f', '_', '_', 'y', 'r', 'e']
				adding dashed alternative: ['_', '_', '_', 'f', 'y', 'r', 'e']
				adding dashed alternative: ['_', '_', '_', 'f', 'y', 'r', 'e']
				f/y/r/e(CCCV)
f/y/r/e(CVCV)
_/f/y/r/e(ACACV)
_/f/y/r/e(ACACV)
f/_/y/r/e(CAACV)
f/_/y/r/e(CAACV)
_/_/f/y/r/e(AACACV)
_/_/f/y/r/e(AACACV)
f/y/_/r/e(CAACV)
f/y/_/r/e(CAACV)
_/f/_/y/r/e(ACAACV)
_/f/_/y/r/e(ACAACV)
f/_/_/y/r/e(CAAACV)
f/_/_/y/r/e(CAAACV)
_/_/_/f/y/r/e(AAACACV)
_/_/_/f/y/r/e(AAACACV)
				version split: ['f', 'y', 'r', 'e']
				{'string': 'f/y/r/e', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', 'y', 'r', 'e']
				version split: ['f', 'y', 'r', 'e']
				{'string': 'f/y/r/e', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', 'y', 'r', 'e']
				version split: ['_', 'f', 'y', 'r', 'e']
				{'string': '_/f/y/r', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', 'f', 'y', 'r', 'e']
				version split: ['_', 'f', 'y', 'r', 'e']
				{'string': '_/f/y/r', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', 'f', 'y', 'r', 'e']
				version split: ['f', '_', 'y', 'r', 'e']
				{'string': 'f/_/y/r', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', '_', 'y', 'r', 'e']
				version split: ['f', '_', 'y', 'r', 'e']
				{'string': 'f/_/y/r', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', '_', 'y', 'r', 'e']
				version split: ['_', '_', 'f', 'y', 'r', 'e']
				{'string': '_/_/f/y', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'f', 'y', 'r', 'e']
				version split: ['_', '_', 'f', 'y', 'r', 'e']
				{'string': '_/_/f/y', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'f', 'y', 'r', 'e']
				version split: ['f', 'y', '_', 'r', 'e']
				{'string': 'f/y/_/r', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', 'y', '_', 'r', 'e']
				version split: ['f', 'y', '_', 'r', 'e']
				{'string': 'f/y/_/r', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', 'y', '_', 'r', 'e']
				version split: ['_', 'f', '_', 'y', 'r', 'e']
				{'string': '_/f/_/y', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', 'f', '_', 'y', 'r', 'e']
				version split: ['_', 'f', '_', 'y', 'r', 'e']
				{'string': '_/f/_/y', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', 'f', '_', 'y', 'r', 'e']
				version split: ['f', '_', '_', 'y', 'r', 'e']
				{'string': 'f/_/_/y', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', '_', '_', 'y', 'r', 'e']
				version split: ['f', '_', '_', 'y', 'r', 'e']
				{'string': 'f/_/_/y', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['f', '_', '_', 'y', 'r', 'e']
				version split: ['_', '_', '_', 'f', 'y', 'r', 'e']
				{'string': '_/_/_/f', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', 'f', 'y', 'r', 'e']
				version split: ['_', '_', '_', 'f', 'y', 'r', 'e']
				{'string': '_/_/_/f', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', 'f', 'y', 'r', 'e']
				ANALYSING: uer
					resolving (3)
					> version: u/e/r
					TRYING: r
					> version: u/e/r
					TRYING: r
					> version: ue/r
					RESULT:  ['_']
				adding dashed alternative: ['u', 'e', '_', 'r']
				adding dashed alternative: ['u', 'e', '_', 'r']
				adding dashed alternative: ['ue', 'r', '_']
				u/e/r(CVC)
u/e/r(VVC)
ue/r(VC)
u/e/_/r(AVAC)
u/e/_/r(AVAC)
ue/r/_(VCA)
				version split: ['u', 'e', 'r']
				{'string': 'u/e/r', 'rgx': '((ue)|(u))/((r))/((_))$'}
				_____REMOVING________['u', 'e', 'r']
				version split: ['u', 'e', 'r']
				{'string': 'u/e/r', 'rgx': '((ue)|(u))/((r))/((_))$'}
				_____REMOVING________['u', 'e', 'r']
				version split: ['ue', 'r']
				{'string': 'ue/r', 'rgx': '((ue)|(u))/((r))/((_))$'}
				_____REMOVING________['ue', 'r']
				version split: ['u', 'e', '_', 'r']
				{'string': 'u/e/_/r', 'rgx': '((ue)|(u))/((r))/((_))$'}
				_____REMOVING________['u', 'e', '_', 'r']
				version split: ['u', 'e', '_', 'r']
				{'string': 'u/e/_/r', 'rgx': '((ue)|(u))/((r))/((_))$'}
				_____REMOVING________['u', 'e', '_', 'r']
				version split: ['ue', 'r', '_']
				{'string': 'ue/r/_', 'rgx': '((ue)|(u))/((r))/((_))$'}
				ANALYSING: uur
					resolving (4)
					> version: u/u/r
					TRYING: r
					> version: u/u/r
					TRYING: r
					> version: u/_/u/r
					TRYING: u
					adding blocked set: V = V >> e, _, a, éé, u
					> version: u/_/u/r
					TRYING: u
					adding blocked set: V = V >> e, _, a, éé, u
					RESULT:  ['_']
				adding dashed alternative: ['u', 'u', '_', 'r']
				adding dashed alternative: ['u', 'u', '_', 'r']
				adding dashed alternative: ['u', '_', '_', 'u', 'r']
				adding dashed alternative: ['u', '_', '_', 'u', 'r']
				u/u/r(CCC)
u/u/r(VVC)
u/_/u/r(AAAC)
u/_/u/r(AAAC)
u/u/_/r(AAAC)
u/u/_/r(AAAC)
u/_/_/u/r(AAAAC)
u/_/_/u/r(AAAAC)
				version split: ['u', 'u', 'r']
				{'string': 'u/u/r', 'rgx': '((u))/((_))/((_))$'}
				_____REMOVING________['u', 'u', 'r']
				version split: ['u', 'u', 'r']
				{'string': 'u/u/r', 'rgx': '((u))/((_))/((_))$'}
				_____REMOVING________['u', 'u', 'r']
				version split: ['u', '_', 'u', 'r']
				{'string': 'u/_/u/r', 'rgx': '((u))/((_))/((_))$'}
				_____REMOVING________['u', '_', 'u', 'r']
				version split: ['u', '_', 'u', 'r']
				{'string': 'u/_/u/r', 'rgx': '((u))/((_))/((_))$'}
				_____REMOVING________['u', '_', 'u', 'r']
				version split: ['u', 'u', '_', 'r']
				{'string': 'u/u/_/r', 'rgx': '((u))/((_))/((_))$'}
				_____REMOVING________['u', 'u', '_', 'r']
				version split: ['u', 'u', '_', 'r']
				{'string': 'u/u/_/r', 'rgx': '((u))/((_))/((_))$'}
				_____REMOVING________['u', 'u', '_', 'r']
				version split: ['u', '_', '_', 'u', 'r']
				{'string': 'u/_/_/u', 'rgx': '((u))/((_))/((_))$'}
				_____REMOVING________['u', '_', '_', 'u', 'r']
				version split: ['u', '_', '_', 'u', 'r']
				{'string': 'u/_/_/u', 'rgx': '((u))/((_))/((_))$'}
				_____REMOVING________['u', '_', '_', 'u', 'r']
				ANALYSING: ver
					resolving (8)
					> version: v/e/r
					TRYING: r
					> version: v/e/r
					TRYING: r
					> version: _/v/e/r
					TRYING: e
					> version: _/v/e/r
					TRYING: e
					> version: v/_/e/r
					TRYING: e
					> version: v/_/e/r
					TRYING: e
					> version: _/_/v/e/r
					TRYING: v
					adding blocked set: V = V >> v, e, _, a, éé
					> version: _/_/v/e/r
					TRYING: v
					adding blocked set: V = V >> v, e, _, a, éé
					RESULT:  ['e']
				version split: ['v', 'e', 'r']
				{'string': 'v/e/r', 'rgx': '((_))/((_))/((e))$'}
				_____REMOVING________['v', 'e', 'r']
				version split: ['v', 'e', 'r']
				{'string': 'v/e/r', 'rgx': '((_))/((_))/((e))$'}
				_____REMOVING________['v', 'e', 'r']
				version split: ['_', 'v', 'e', 'r']
				{'string': '_/v/e/r', 'rgx': '((_))/((_))/((e))$'}
				_____REMOVING________['_', 'v', 'e', 'r']
				version split: ['_', 'v', 'e', 'r']
				{'string': '_/v/e/r', 'rgx': '((_))/((_))/((e))$'}
				_____REMOVING________['_', 'v', 'e', 'r']
				version split: ['v', '_', 'e', 'r']
				{'string': 'v/_/e/r', 'rgx': '((_))/((_))/((e))$'}
				_____REMOVING________['v', '_', 'e', 'r']
				version split: ['v', '_', 'e', 'r']
				{'string': 'v/_/e/r', 'rgx': '((_))/((_))/((e))$'}
				_____REMOVING________['v', '_', 'e', 'r']
				version split: ['_', '_', 'v', 'e', 'r']
				{'string': '_/_/v/e', 'rgx': '((_))/((_))/((e))$'}
				_____REMOVING________['_', '_', 'v', 'e', 'r']
				version split: ['_', '_', 'v', 'e', 'r']
				{'string': '_/_/v/e', 'rgx': '((_))/((_))/((e))$'}
				_____REMOVING________['_', '_', 'v', 'e', 'r']
				ANALYSING: vur
					resolving (8)
					> version: v/u/r
					TRYING: r
					> version: v/u/r
					TRYING: r
					> version: _/v/u/r
					TRYING: u
					adding blocked set: V = V >> e, _, a, éé, u
					> version: _/v/u/r
					TRYING: u
					adding blocked set: V = V >> e, _, a, éé, u
					> version: v/_/u/r
					TRYING: u
					adding blocked set: V = V >> e, _, a, éé, u
					> version: v/_/u/r
					TRYING: u
					adding blocked set: V = V >> e, _, a, éé, u
					> version: _/_/v/u/r
					TRYING: v
					adding blocked set: V = V >> v, e, _, a, éé
					> version: _/_/v/u/r
					TRYING: v
					adding blocked set: V = V >> v, e, _, a, éé
					RESULT:  ['_']
				adding dashed alternative: ['v', 'u', '_', 'r']
				adding dashed alternative: ['v', 'u', '_', 'r']
				adding dashed alternative: ['_', 'v', '_', 'u', 'r']
				adding dashed alternative: ['_', 'v', '_', 'u', 'r']
				adding dashed alternative: ['v', '_', '_', 'u', 'r']
				adding dashed alternative: ['v', '_', '_', 'u', 'r']
				adding dashed alternative: ['_', '_', '_', 'v', 'u', 'r']
				adding dashed alternative: ['_', '_', '_', 'v', 'u', 'r']
				v/u/r(CCC)
v/u/r(VVC)
_/v/u/r(AAAC)
_/v/u/r(AAAC)
v/_/u/r(AAAC)
v/_/u/r(AAAC)
_/_/v/u/r(AAAAC)
_/_/v/u/r(AAAAC)
v/u/_/r(AAAC)
v/u/_/r(AAAC)
_/v/_/u/r(AAAAC)
_/v/_/u/r(AAAAC)
v/_/_/u/r(AAAAC)
v/_/_/u/r(AAAAC)
_/_/_/v/u/r(AAAAAC)
_/_/_/v/u/r(AAAAAC)
				version split: ['v', 'u', 'r']
				{'string': 'v/u/r', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['v', 'u', 'r']
				version split: ['v', 'u', 'r']
				{'string': 'v/u/r', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['v', 'u', 'r']
				version split: ['_', 'v', 'u', 'r']
				{'string': '_/v/u/r', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', 'v', 'u', 'r']
				version split: ['_', 'v', 'u', 'r']
				{'string': '_/v/u/r', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', 'v', 'u', 'r']
				version split: ['v', '_', 'u', 'r']
				{'string': 'v/_/u/r', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['v', '_', 'u', 'r']
				version split: ['v', '_', 'u', 'r']
				{'string': 'v/_/u/r', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['v', '_', 'u', 'r']
				version split: ['_', '_', 'v', 'u', 'r']
				{'string': '_/_/v/u', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'v', 'u', 'r']
				version split: ['_', '_', 'v', 'u', 'r']
				{'string': '_/_/v/u', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'v', 'u', 'r']
				version split: ['v', 'u', '_', 'r']
				{'string': 'v/u/_/r', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['v', 'u', '_', 'r']
				version split: ['v', 'u', '_', 'r']
				{'string': 'v/u/_/r', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['v', 'u', '_', 'r']
				version split: ['_', 'v', '_', 'u', 'r']
				{'string': '_/v/_/u', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', 'v', '_', 'u', 'r']
				version split: ['_', 'v', '_', 'u', 'r']
				{'string': '_/v/_/u', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', 'v', '_', 'u', 'r']
				version split: ['v', '_', '_', 'u', 'r']
				{'string': 'v/_/_/u', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['v', '_', '_', 'u', 'r']
				version split: ['v', '_', '_', 'u', 'r']
				{'string': 'v/_/_/u', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['v', '_', '_', 'u', 'r']
				version split: ['_', '_', '_', 'v', 'u', 'r']
				{'string': '_/_/_/v', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', 'v', 'u', 'r']
				version split: ['_', '_', '_', 'v', 'u', 'r']
				{'string': '_/_/_/v', 'rgx': '((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', 'v', 'u', 'r']
		FAIL: 
		FAIL: 
		FAIL: 
		FAIL: 
		FAIL: 
		FAIL: 
		FAIL: 
		FAIL: 
		FAIL: 
		FAIL: 
		FAIL: 
		FAIL: 
		FAIL: 
		FAIL: 
		FAIL: 
		FAIL: 
		FAIL: 
		FAIL: 
		FAIL: 
		only one version left: ['ue', 'r', '_']
		FAIL: 
		FAIL: 
		FAIL: 
		SPLIT: ['ue', 'r', 'e']
		SPLIT: ['ue', 'r', 'éé']
		SPLIT: ['_', '_', 'a', '----!']
		SPLIT: ['_', '_', 'a', '----!']
		SPLIT: ['_', '_', 'e', '----!']
		SPLIT: ['_', '_', 'e', '----!']
		SPLIT: ['_', '_', 'e', '----!']
		SPLIT: ['_', '_', 'e', '----!']
		SPLIT: ['_', '_', '_', '----!']
		SPLIT: ['_', '_', '_', '----!']
		SPLIT: ['_', '_', '_', '----!']
		SPLIT: ['_', '_', '_', '----!']
		SPLIT: ['_', '_', '_', '----!']
		SPLIT: ['_', '_', '_', '----!']
		SPLIT: ['_', '_', '_', '----!']
		SPLIT: ['_', '_', '_', '----!']
		SPLIT: ['_', '_', '_', '----!']
		SPLIT: ['_', '_', '_', '----!']
		SPLIT: ['_', '_', '_', '----!']
		SPLIT: ['_', '_', '_', '----!']
		SPLIT: ['_', '_', '_', '----!']
		SPLIT: ['ue', 'r', '_']
		['ue', 'r', '_']
		SPLIT: ['u', '_', '_', '----!']
		SPLIT: ['_', '_', 'e', '----!']
		SPLIT: ['_', '_', '_', '----!']
		version for pattern VCV is INVALID
		[]
		22
		OVERVIEW: version for pattern VCV

faulty splits: 22
a----! <-! fair
a----! <-! far
e----! <-! fer
e----! <-! fere
e----! <-! fier
e----! <-! fiere
----! <-! fir
----! <-! fire
----! <-! fires
----! <-! fu
----! <-! fuir
----! <-! fuire
----! <-! fur
----! <-! fure
----! <-! fures
----! <-! fuyr
----! <-! fuyre
----! <-! fyr
----! <-! fyre
u----! <-! uur
e----! <-! ver
----! <-! vur
ue | r | e
ue | r | éé
_ | _ | a | ----!
_ | _ | a | ----!
_ | _ | e | ----!
_ | _ | e | ----!
_ | _ | e | ----!
_ | _ | e | ----!
_ | _ | _ | ----!
_ | _ | _ | ----!
_ | _ | _ | ----!
_ | _ | _ | ----!
_ | _ | _ | ----!
_ | _ | _ | ----!
_ | _ | _ | ----!
_ | _ | _ | ----!
_ | _ | _ | ----!
_ | _ | _ | ----!
_ | _ | _ | ----!
_ | _ | _ | ----!
_ | _ | _ | ----!
ue | r | _
u | _ | _ | ----!
_ | _ | e | ----!
_ | _ | _ | ----!
0 : {'v', 'ue', 'u', '_'}
1 : {'_', 'y', 'r'},{'_', 'v', 'r'},{'f', 'r'},{'r', 'i', '_'},{'_', 'f', 'r'},{'_', 'u', 'r'},{'r', 'f', '_'},{'r', 'y', '_'},{'r', 'v', '_'},{'_', 'i', 'r'},{'r', 'u', '_'}
2 : {'uy', 'e', '_', 'a', 'éé'},{'éé', 'e', 'a', 'i'},{'e', '_', 'ui', 'a', 'éé'},{'e', '_', 'a', 'éé', 'u'},{'e', '_', 'a', 'éé', 'i'},{'e', '_', 'a', 'éé', 'y'},{'v', 'e', '_', 'a', 'éé'}
	[[{'lit': 'ai', 'ln': 2, 'index': 1}]]
	[[{'lit': 'ie', 'ln': 2, 'index': 1}]]
	[[{'lit': 'ie', 'ln': 2, 'index': 1}]]
	[[{'lit': 'ui', 'ln': 2, 'index': 1}]]
	[[{'lit': 'ui', 'ln': 2, 'index': 1}]]
	[[{'lit': 'uy', 'ln': 2, 'index': 1}]]
	[[{'lit': 'uy', 'ln': 2, 'index': 1}]]
	[[{'lit': 'ue', 'ln': 2, 'index': 0}]]
	[[{'lit': 'ue', 'ln': 2, 'index': 0}]]
	[[{'lit': 'éé', 'ln': 2, 'index': 3}], [{'lit': 'ue', 'ln': 2, 'index': 0}]]
	[[{'lit': 'éé', 'ln': 2, 'index': 3}], [{'lit': 'ue', 'ln': 2, 'index': 0}], [{'lit': 'éé', 'ln': 2, 'index': 3}, {'lit': 'ue', 'ln': 2, 'index': 0}]]
	MIN pattern length=3
	Pattern CVCV is valid
	Pattern VVCV is invalid
	Pattern CCCVC is valid
	Pattern CVVCV is invalid
	Pattern CVCVV is invalid
	Pattern CC is invalid
	Pattern CCVCV is valid
	Pattern VVCVV is invalid
	Pattern CCCCV is invalid
	Pattern CCC is valid
	Pattern CCCC is invalid
	Pattern VCVV is invalid
	Pattern CV is invalid
	Pattern VC is invalid
	Pattern CVC is valid
	Pattern CVCVC is valid
	Pattern VCV is valid
	Pattern CVVC is invalid
	Pattern VVC is invalid
	Pattern CCCV is valid
	Pattern CVCC is valid
	Pattern CCVC is valid
	Making the selection for pattern: CCCV
	Selection for pattern: CCCV completed
	Making a version for pattern: CCCV
			___CCCV : 0___
				ANALYSING: fire
				adding littera based on matching pattern
				ANALYSING: fure
				adding littera based on matching pattern
				ANALYSING: fyre
				adding littera based on matching pattern
				ANALYSING: fair
					resolving (3)
					> version: f/a/i/r
					TRYING: f
					> version: f/a/i/r
					TRYING: f
					> version: f/ai/r
					TRYING: f
					RESULT:  ['f']
				ANALYSING: far
					resolving (1)
					> version: f/a/r
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fer
					resolving (1)
					> version: f/e/r
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fere
					resolving (1)
					> version: f/e/r/e
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fier
					resolving (3)
					> version: f/i/e/r
					TRYING: f
					> version: f/i/e/r
					TRYING: f
					> version: f/ie/r
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fiere
					resolving (3)
					> version: f/i/e/r/e
					TRYING: f
					> version: f/i/e/r/e
					TRYING: f
					> version: f/ie/r/e
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fir
					resolving (2)
					> version: f/i/r
					TRYING: f
					> version: f/i/r
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fires
					resolving (2)
					> version: f/i/r/e/s
					TRYING: f
					> version: f/i/r/e/s
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fu
					resolving (2)
					> version: f/u
					TRYING: f
					> version: f/u
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fuir
					resolving (3)
					> version: f/u/i/r
					TRYING: f
					> version: f/u/i/r
					TRYING: f
					> version: f/ui/r
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fuire
					resolving (3)
					> version: f/u/i/r/e
					TRYING: f
					> version: f/u/i/r/e
					TRYING: f
					> version: f/ui/r/e
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fur
					resolving (2)
					> version: f/u/r
					TRYING: f
					> version: f/u/r
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fures
					resolving (2)
					> version: f/u/r/e/s
					TRYING: f
					> version: f/u/r/e/s
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fuyr
					resolving (3)
					> version: f/u/y/r
					TRYING: f
					> version: f/u/y/r
					TRYING: f
					> version: f/uy/r
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fuyre
					resolving (3)
					> version: f/u/y/r/e
					TRYING: f
					> version: f/u/y/r/e
					TRYING: f
					> version: f/uy/r/e
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fyr
					resolving (2)
					> version: f/y/r
					TRYING: f
					> version: f/y/r
					TRYING: f
					RESULT:  ['f']
				ANALYSING: uer
					resolving (3)
					> version: u/e/r
					TRYING: u
					> version: u/e/r
					TRYING: u
					> version: ue/r
					TRYING: ue
					RESULT:  ['u']
				ANALYSING: uere
					resolving (3)
					> version: u/e/r/e
					TRYING: u
					> version: u/e/r/e
					TRYING: u
					> version: ue/r/e
					TRYING: ue
					RESULT:  ['u']
				ANALYSING: ueréé
					resolving (6)
					> version: u/e/r/é/é
					TRYING: u
					> version: u/e/r/é/é
					TRYING: u
					> version: u/e/r/éé
					TRYING: u
					> version: u/e/r/éé
					TRYING: u
					> version: ue/r/é/é
					TRYING: ue
					> version: ue/r/éé
					TRYING: ue
					RESULT:  ['u']
				ANALYSING: uur
					resolving (2)
					> version: u/u/r
					TRYING: u
					> version: u/u/r
					TRYING: u
					RESULT:  ['u']
				ANALYSING: ver
					resolving (2)
					> version: v/e/r
					TRYING: v
					> version: v/e/r
					TRYING: v
					RESULT:  ['v']
				ANALYSING: vur
					resolving (2)
					> version: v/u/r
					TRYING: v
					> version: v/u/r
					TRYING: v
					RESULT:  ['v']
			___CCCV : 1___
				ANALYSING: fire
				adding littera based on matching pattern
				ANALYSING: fure
				adding littera based on matching pattern
				ANALYSING: fyre
				adding littera based on matching pattern
				ANALYSING: fair
					resolving (3)
					> version: f/a/i/r
					TRYING: a
					> version: f/a/i/r
					TRYING: a
					> version: f/ai/r
					TRYING: ai
					>>> MULTIPLE RESOLVE OPTIONS: {'ai', 'a'}
					RESULT:  ['ai', 'a']
				ANALYSING: far
					resolving (1)
					> version: f/a/r
					TRYING: a
					RESULT:  ['a']
				ANALYSING: fer
					resolving (1)
					> version: f/e/r
					TRYING: e
					RESULT:  ['e']
				ANALYSING: fere
					resolving (1)
					> version: f/e/r/e
					TRYING: e
					RESULT:  ['e']
				ANALYSING: fier
					resolving (3)
					> version: f/i/e/r
					TRYING: i
					> version: f/i/e/r
					TRYING: i
					> version: f/ie/r
					TRYING: ie
					>>> MULTIPLE RESOLVE OPTIONS: {'ie', 'i'}
					RESULT:  ['ie', 'i']
				ANALYSING: fiere
					resolving (3)
					> version: f/i/e/r/e
					TRYING: i
					> version: f/i/e/r/e
					TRYING: i
					> version: f/ie/r/e
					TRYING: ie
					>>> MULTIPLE RESOLVE OPTIONS: {'ie', 'i'}
					RESULT:  ['ie', 'i']
				ANALYSING: fir
					resolving (2)
					> version: f/i/r
					TRYING: i
					> version: f/i/r
					TRYING: i
					RESULT:  ['i']
				ANALYSING: fires
					resolving (2)
					> version: f/i/r/e/s
					TRYING: i
					> version: f/i/r/e/s
					TRYING: i
					RESULT:  ['i']
				ANALYSING: fu
					resolving (2)
					> version: f/u
					TRYING: u
					> version: f/u
					TRYING: u
					RESULT:  ['u']
				ANALYSING: fuir
					resolving (3)
					> version: f/u/i/r
					TRYING: u
					> version: f/u/i/r
					TRYING: u
					> version: f/ui/r
					TRYING: ui
					>>> MULTIPLE RESOLVE OPTIONS: {'ui', 'u'}
					RESULT:  ['ui', 'u']
				ANALYSING: fuire
					resolving (3)
					> version: f/u/i/r/e
					TRYING: u
					> version: f/u/i/r/e
					TRYING: u
					> version: f/ui/r/e
					TRYING: ui
					>>> MULTIPLE RESOLVE OPTIONS: {'ui', 'u'}
					RESULT:  ['ui', 'u']
				ANALYSING: fur
					resolving (2)
					> version: f/u/r
					TRYING: u
					> version: f/u/r
					TRYING: u
					RESULT:  ['u']
				ANALYSING: fures
					resolving (2)
					> version: f/u/r/e/s
					TRYING: u
					> version: f/u/r/e/s
					TRYING: u
					RESULT:  ['u']
				ANALYSING: fuyr
					resolving (3)
					> version: f/u/y/r
					TRYING: u
					> version: f/u/y/r
					TRYING: u
					> version: f/uy/r
					TRYING: uy
					>>> MULTIPLE RESOLVE OPTIONS: {'uy', 'u'}
					RESULT:  ['uy', 'u']
				ANALYSING: fuyre
					resolving (3)
					> version: f/u/y/r/e
					TRYING: u
					> version: f/u/y/r/e
					TRYING: u
					> version: f/uy/r/e
					TRYING: uy
					>>> MULTIPLE RESOLVE OPTIONS: {'uy', 'u'}
					RESULT:  ['uy', 'u']
				ANALYSING: fyr
					resolving (2)
					> version: f/y/r
					TRYING: y
					> version: f/y/r
					TRYING: y
					RESULT:  ['y']
				ANALYSING: uer
					resolving (3)
					> version: u/e/r
					TRYING: e
					> version: u/e/r
					TRYING: e
					> version: ue/r
					TRYING: r
					RESULT:  ['e']
				ANALYSING: uere
					resolving (3)
					> version: u/e/r/e
					TRYING: e
					> version: u/e/r/e
					TRYING: e
					> version: ue/r/e
					TRYING: r
					RESULT:  ['e']
				ANALYSING: ueréé
					resolving (6)
					> version: u/e/r/é/é
					TRYING: e
					> version: u/e/r/é/é
					TRYING: e
					> version: u/e/r/éé
					TRYING: e
					> version: u/e/r/éé
					TRYING: e
					> version: ue/r/é/é
					TRYING: r
					> version: ue/r/éé
					TRYING: r
					RESULT:  ['e']
				ANALYSING: uur
					resolving (2)
					> version: u/u/r
					TRYING: u
					> version: u/u/r
					TRYING: u
					RESULT:  ['u']
				ANALYSING: ver
					resolving (2)
					> version: v/e/r
					TRYING: e
					> version: v/e/r
					TRYING: e
					RESULT:  ['e']
				ANALYSING: vur
					resolving (2)
					> version: v/u/r
					TRYING: u
					> version: v/u/r
					TRYING: u
					RESULT:  ['u']
			___CCCV : 2___
				ANALYSING: fire
				adding littera based on matching pattern
				ANALYSING: fure
				adding littera based on matching pattern
				ANALYSING: fyre
				adding littera based on matching pattern
				ANALYSING: fair
					resolving (3)
					> version: f/a/i/r
					TRYING: i
					adding blocked set: C = C >> i, r
					> version: f/a/i/r
					TRYING: i
					adding blocked set: C = C >> i, r
					> version: f/ai/r
					TRYING: r
					RESULT:  ['r']
				ANALYSING: far
					resolving (1)
					> version: f/a/r
					TRYING: r
					RESULT:  ['r']
				ANALYSING: fer
					resolving (1)
					> version: f/e/r
					TRYING: r
					RESULT:  ['r']
				ANALYSING: fere
					resolving (1)
					> version: f/e/r/e
					TRYING: r
					RESULT:  ['r']
				ANALYSING: fier
					resolving (3)
					> version: f/i/e/r
					TRYING: e
					> version: f/i/e/r
					TRYING: e
					> version: f/ie/r
					TRYING: r
					RESULT:  ['r']
				ANALYSING: fiere
					resolving (3)
					> version: f/i/e/r/e
					TRYING: e
					> version: f/i/e/r/e
					TRYING: e
					> version: f/ie/r/e
					TRYING: r
					RESULT:  ['r']
				ANALYSING: fir
					resolving (2)
					> version: f/i/r
					TRYING: r
					> version: f/i/r
					TRYING: r
					RESULT:  ['r']
				ANALYSING: fires
					resolving (2)
					> version: f/i/r/e/s
					TRYING: r
					> version: f/i/r/e/s
					TRYING: r
					RESULT:  ['r']
				ANALYSING: fu
					resolving (2)
					> version: f/u
					> version: f/u
					RESULT:  ['_']
				adding dashed alternative: ['f', 'u', '_']
				adding dashed alternative: ['f', 'u', '_']
				f/u(CC)
f/u(CV)
f/u/_(CAA)
f/u/_(CAA)
				ANALYSING: fuir
					resolving (3)
					> version: f/u/i/r
					TRYING: i
					adding blocked set: C = C >> r, i, _
					> version: f/u/i/r
					TRYING: i
					adding blocked set: C = C >> r, i, _
					> version: f/ui/r
					TRYING: r
					RESULT:  ['r']
				ANALYSING: fuire
					resolving (3)
					> version: f/u/i/r/e
					TRYING: i
					adding blocked set: C = C >> _, i, r
					> version: f/u/i/r/e
					TRYING: i
					adding blocked set: C = C >> _, i, r
					> version: f/ui/r/e
					TRYING: r
					RESULT:  ['r']
				ANALYSING: fur
					resolving (2)
					> version: f/u/r
					TRYING: r
					> version: f/u/r
					TRYING: r
					RESULT:  ['r']
				ANALYSING: fures
					resolving (2)
					> version: f/u/r/e/s
					TRYING: r
					> version: f/u/r/e/s
					TRYING: r
					RESULT:  ['r']
				ANALYSING: fuyr
					resolving (3)
					> version: f/u/y/r
					TRYING: y
					adding blocked set: C = C >> r, y, _
					> version: f/u/y/r
					TRYING: y
					adding blocked set: C = C >> r, y, _
					> version: f/uy/r
					TRYING: r
					RESULT:  ['r']
				ANALYSING: fuyre
					resolving (3)
					> version: f/u/y/r/e
					TRYING: y
					adding blocked set: C = C >> _, y, r
					> version: f/u/y/r/e
					TRYING: y
					adding blocked set: C = C >> _, y, r
					> version: f/uy/r/e
					TRYING: r
					RESULT:  ['r']
				ANALYSING: fyr
					resolving (2)
					> version: f/y/r
					TRYING: r
					> version: f/y/r
					TRYING: r
					RESULT:  ['r']
				ANALYSING: uer
					resolving (3)
					> version: u/e/r
					TRYING: r
					> version: u/e/r
					TRYING: r
					> version: ue/r
					RESULT:  ['r']
				ANALYSING: uere
					resolving (3)
					> version: u/e/r/e
					TRYING: r
					> version: u/e/r/e
					TRYING: r
					> version: ue/r/e
					TRYING: e
					RESULT:  ['r']
				ANALYSING: ueréé
					resolving (6)
					> version: u/e/r/é/é
					TRYING: r
					> version: u/e/r/é/é
					TRYING: r
					> version: u/e/r/éé
					TRYING: r
					> version: u/e/r/éé
					TRYING: r
					> version: ue/r/é/é
					TRYING: é
					> version: ue/r/éé
					TRYING: éé
					RESULT:  ['r']
				ANALYSING: uur
					resolving (2)
					> version: u/u/r
					TRYING: r
					> version: u/u/r
					TRYING: r
					RESULT:  ['r']
				ANALYSING: ver
					resolving (2)
					> version: v/e/r
					TRYING: r
					> version: v/e/r
					TRYING: r
					RESULT:  ['r']
				ANALYSING: vur
					resolving (2)
					> version: v/u/r
					TRYING: r
					> version: v/u/r
					TRYING: r
					RESULT:  ['r']
			___CCCV : 3___
				ANALYSING: fire
				adding littera based on matching pattern
				ANALYSING: fure
				adding littera based on matching pattern
				ANALYSING: fyre
				adding littera based on matching pattern
				ANALYSING: fair
					resolving (3)
					> version: f/a/i/r
					TRYING: r
					> version: f/a/i/r
					TRYING: r
					> version: f/ai/r
					RESULT:  ['_']
				adding dashed alternative: ['f', 'a', 'i', '_', 'r']
				adding dashed alternative: ['f', 'a', 'i', '_', 'r']
				adding dashed alternative: ['f', 'ai', 'r', '_']
				f/a/i/r(CVCC)
f/a/i/r(CVVC)
f/ai/r(CVC)
f/a/i/_/r(CVAAC)
f/a/i/_/r(CVAAC)
f/ai/r/_(CVCA)
				version split: ['f', 'a', 'i', 'r']
				{'string': 'f/a/i/r', 'rgx': '((f))/((ai)|(a))/((r))/((_))$'}
				_____REMOVING________['f', 'a', 'i', 'r']
				version split: ['f', 'a', 'i', 'r']
				{'string': 'f/a/i/r', 'rgx': '((f))/((ai)|(a))/((r))/((_))$'}
				_____REMOVING________['f', 'a', 'i', 'r']
				version split: ['f', 'ai', 'r']
				{'string': 'f/ai/r', 'rgx': '((f))/((ai)|(a))/((r))/((_))$'}
				_____REMOVING________['f', 'ai', 'r']
				version split: ['f', 'a', 'i', '_', 'r']
				{'string': 'f/a/i/_/r', 'rgx': '((f))/((ai)|(a))/((r))/((_))$'}
				_____REMOVING________['f', 'a', 'i', '_', 'r']
				version split: ['f', 'a', 'i', '_', 'r']
				{'string': 'f/a/i/_/r', 'rgx': '((f))/((ai)|(a))/((r))/((_))$'}
				_____REMOVING________['f', 'a', 'i', '_', 'r']
				version split: ['f', 'ai', 'r', '_']
				{'string': 'f/ai/r/_', 'rgx': '((f))/((ai)|(a))/((r))/((_))$'}
				ANALYSING: far
					resolving (1)
					> version: f/a/r
					RESULT:  ['_']
				adding dashed alternative: ['f', 'a', 'r', '_']
				f/a/r(CVC)
f/a/r/_(CVCA)
				version split: ['f', 'a', 'r']
				{'string': 'f/a/r', 'rgx': '((f))/((a))/((r))/((_))$'}
				_____REMOVING________['f', 'a', 'r']
				version split: ['f', 'a', 'r', '_']
				{'string': 'f/a/r/_', 'rgx': '((f))/((a))/((r))/((_))$'}
				ANALYSING: fer
					resolving (1)
					> version: f/e/r
					RESULT:  ['_']
				adding dashed alternative: ['f', 'e', 'r', '_']
				f/e/r(CVC)
f/e/r/_(CVCA)
				version split: ['f', 'e', 'r']
				{'string': 'f/e/r', 'rgx': '((f))/((e))/((r))/((_))$'}
				_____REMOVING________['f', 'e', 'r']
				version split: ['f', 'e', 'r', '_']
				{'string': 'f/e/r/_', 'rgx': '((f))/((e))/((r))/((_))$'}
				ANALYSING: fere
					resolving (1)
					> version: f/e/r/e
					TRYING: e
					RESULT:  ['e']
				version split: ['f', 'e', 'r', 'e']
				{'string': 'f/e/r/e', 'rgx': '((f))/((e))/((r))/((e))$'}
				ANALYSING: fier
					resolving (3)
					> version: f/i/e/r
					TRYING: r
					> version: f/i/e/r
					TRYING: r
					> version: f/ie/r
					RESULT:  ['_']
				adding dashed alternative: ['f', 'i', 'e', '_', 'r']
				adding dashed alternative: ['f', 'i', 'e', '_', 'r']
				adding dashed alternative: ['f', 'ie', 'r', '_']
				f/i/e/r(CCVC)
f/i/e/r(CVVC)
f/ie/r(CVC)
f/i/e/_/r(CAVAC)
f/i/e/_/r(CAVAC)
f/ie/r/_(CVCA)
				version split: ['f', 'i', 'e', 'r']
				{'string': 'f/i/e/r', 'rgx': '((f))/((ie)|(i))/((r))/((_))$'}
				_____REMOVING________['f', 'i', 'e', 'r']
				version split: ['f', 'i', 'e', 'r']
				{'string': 'f/i/e/r', 'rgx': '((f))/((ie)|(i))/((r))/((_))$'}
				_____REMOVING________['f', 'i', 'e', 'r']
				version split: ['f', 'ie', 'r']
				{'string': 'f/ie/r', 'rgx': '((f))/((ie)|(i))/((r))/((_))$'}
				_____REMOVING________['f', 'ie', 'r']
				version split: ['f', 'i', 'e', '_', 'r']
				{'string': 'f/i/e/_/r', 'rgx': '((f))/((ie)|(i))/((r))/((_))$'}
				_____REMOVING________['f', 'i', 'e', '_', 'r']
				version split: ['f', 'i', 'e', '_', 'r']
				{'string': 'f/i/e/_/r', 'rgx': '((f))/((ie)|(i))/((r))/((_))$'}
				_____REMOVING________['f', 'i', 'e', '_', 'r']
				version split: ['f', 'ie', 'r', '_']
				{'string': 'f/ie/r/_', 'rgx': '((f))/((ie)|(i))/((r))/((_))$'}
				ANALYSING: fiere
					resolving (3)
					> version: f/i/e/r/e
					TRYING: r
					> version: f/i/e/r/e
					TRYING: r
					> version: f/ie/r/e
					TRYING: e
					RESULT:  ['e']
				version split: ['f', 'i', 'e', 'r', 'e']
				{'string': 'f/i/e/r/e', 'rgx': '((f))/((ie)|(i))/((r))/((e))$'}
				_____REMOVING________['f', 'i', 'e', 'r', 'e']
				version split: ['f', 'i', 'e', 'r', 'e']
				{'string': 'f/i/e/r/e', 'rgx': '((f))/((ie)|(i))/((r))/((e))$'}
				_____REMOVING________['f', 'i', 'e', 'r', 'e']
				version split: ['f', 'ie', 'r', 'e']
				{'string': 'f/ie/r/e', 'rgx': '((f))/((ie)|(i))/((r))/((e))$'}
				ANALYSING: fir
					resolving (2)
					> version: f/i/r
					> version: f/i/r
					RESULT:  ['_']
				adding dashed alternative: ['f', 'i', 'r', '_']
				adding dashed alternative: ['f', 'i', 'r', '_']
				f/i/r(CCC)
f/i/r(CVC)
f/i/r/_(CACA)
f/i/r/_(CACA)
				version split: ['f', 'i', 'r']
				{'string': 'f/i/r', 'rgx': '((f))/((i))/((r))/((_))$'}
				_____REMOVING________['f', 'i', 'r']
				version split: ['f', 'i', 'r']
				{'string': 'f/i/r', 'rgx': '((f))/((i))/((r))/((_))$'}
				_____REMOVING________['f', 'i', 'r']
				version split: ['f', 'i', 'r', '_']
				{'string': 'f/i/r/_', 'rgx': '((f))/((i))/((r))/((_))$'}
				version split: ['f', 'i', 'r', '_']
				{'string': 'f/i/r/_', 'rgx': '((f))/((i))/((r))/((_))$'}
				ANALYSING: fires
					resolving (2)
					> version: f/i/r/e/s
					TRYING: e
					> version: f/i/r/e/s
					TRYING: e
					RESULT:  ['e']
				version split: ['f', 'i', 'r', 'e', 's']
				{'string': 'f/i/r/e/s', 'rgx': '((f))/((i))/((r))/((e))$'}
				_____REMOVING________['f', 'i', 'r', 'e', 's']
				version split: ['f', 'i', 'r', 'e', 's']
				{'string': 'f/i/r/e/s', 'rgx': '((f))/((i))/((r))/((e))$'}
				_____REMOVING________['f', 'i', 'r', 'e', 's']
				ANALYSING: fu
					resolving (4)
					> version: f/u
					> version: f/u
					> version: f/u/_
					> version: f/u/_
					RESULT:  ['_']
				adding dashed alternative: ['f', 'u', '_']
				adding dashed alternative: ['f', 'u', '_']
				adding dashed alternative: ['f', 'u', '_', '_']
				adding dashed alternative: ['f', 'u', '_', '_']
				f/u(CC)
f/u(CV)
f/u/_(CAA)
f/u/_(CAA)
f/u/_(CAA)
f/u/_(CAA)
f/u/_/_(CAAA)
f/u/_/_(CAAA)
				version split: ['f', 'u']
				{'string': 'f/u', 'rgx': '((f))/((u))/((_))/((_))$'}
				_____REMOVING________['f', 'u']
				version split: ['f', 'u']
				{'string': 'f/u', 'rgx': '((f))/((u))/((_))/((_))$'}
				_____REMOVING________['f', 'u']
				version split: ['f', 'u', '_']
				{'string': 'f/u/_', 'rgx': '((f))/((u))/((_))/((_))$'}
				_____REMOVING________['f', 'u', '_']
				version split: ['f', 'u', '_']
				{'string': 'f/u/_', 'rgx': '((f))/((u))/((_))/((_))$'}
				_____REMOVING________['f', 'u', '_']
				version split: ['f', 'u', '_']
				{'string': 'f/u/_', 'rgx': '((f))/((u))/((_))/((_))$'}
				_____REMOVING________['f', 'u', '_']
				version split: ['f', 'u', '_']
				{'string': 'f/u/_', 'rgx': '((f))/((u))/((_))/((_))$'}
				_____REMOVING________['f', 'u', '_']
				version split: ['f', 'u', '_', '_']
				{'string': 'f/u/_/_', 'rgx': '((f))/((u))/((_))/((_))$'}
				version split: ['f', 'u', '_', '_']
				{'string': 'f/u/_/_', 'rgx': '((f))/((u))/((_))/((_))$'}
				ANALYSING: fuir
					resolving (3)
					> version: f/u/i/r
					TRYING: r
					> version: f/u/i/r
					TRYING: r
					> version: f/ui/r
					RESULT:  ['_']
				adding dashed alternative: ['f', 'u', 'i', '_', 'r']
				adding dashed alternative: ['f', 'u', 'i', '_', 'r']
				adding dashed alternative: ['f', 'ui', 'r', '_']
				f/u/i/r(CCCC)
f/u/i/r(CVVC)
f/ui/r(CVC)
f/u/i/_/r(CAAAC)
f/u/i/_/r(CAAAC)
f/ui/r/_(CVCA)
				version split: ['f', 'u', 'i', 'r']
				{'string': 'f/u/i/r', 'rgx': '((f))/((ui)|(u))/((r))/((_))$'}
				_____REMOVING________['f', 'u', 'i', 'r']
				version split: ['f', 'u', 'i', 'r']
				{'string': 'f/u/i/r', 'rgx': '((f))/((ui)|(u))/((r))/((_))$'}
				_____REMOVING________['f', 'u', 'i', 'r']
				version split: ['f', 'ui', 'r']
				{'string': 'f/ui/r', 'rgx': '((f))/((ui)|(u))/((r))/((_))$'}
				_____REMOVING________['f', 'ui', 'r']
				version split: ['f', 'u', 'i', '_', 'r']
				{'string': 'f/u/i/_/r', 'rgx': '((f))/((ui)|(u))/((r))/((_))$'}
				_____REMOVING________['f', 'u', 'i', '_', 'r']
				version split: ['f', 'u', 'i', '_', 'r']
				{'string': 'f/u/i/_/r', 'rgx': '((f))/((ui)|(u))/((r))/((_))$'}
				_____REMOVING________['f', 'u', 'i', '_', 'r']
				version split: ['f', 'ui', 'r', '_']
				{'string': 'f/ui/r/_', 'rgx': '((f))/((ui)|(u))/((r))/((_))$'}
				ANALYSING: fuire
					resolving (3)
					> version: f/u/i/r/e
					TRYING: r
					> version: f/u/i/r/e
					TRYING: r
					> version: f/ui/r/e
					TRYING: e
					RESULT:  ['e']
				version split: ['f', 'u', 'i', 'r', 'e']
				{'string': 'f/u/i/r/e', 'rgx': '((f))/((ui)|(u))/((r))/((e))$'}
				_____REMOVING________['f', 'u', 'i', 'r', 'e']
				version split: ['f', 'u', 'i', 'r', 'e']
				{'string': 'f/u/i/r/e', 'rgx': '((f))/((ui)|(u))/((r))/((e))$'}
				_____REMOVING________['f', 'u', 'i', 'r', 'e']
				version split: ['f', 'ui', 'r', 'e']
				{'string': 'f/ui/r/e', 'rgx': '((f))/((ui)|(u))/((r))/((e))$'}
				ANALYSING: fur
					resolving (2)
					> version: f/u/r
					> version: f/u/r
					RESULT:  ['_']
				adding dashed alternative: ['f', 'u', 'r', '_']
				adding dashed alternative: ['f', 'u', 'r', '_']
				f/u/r(CCC)
f/u/r(CVC)
f/u/r/_(CACA)
f/u/r/_(CACA)
				version split: ['f', 'u', 'r']
				{'string': 'f/u/r', 'rgx': '((f))/((u))/((r))/((_))$'}
				_____REMOVING________['f', 'u', 'r']
				version split: ['f', 'u', 'r']
				{'string': 'f/u/r', 'rgx': '((f))/((u))/((r))/((_))$'}
				_____REMOVING________['f', 'u', 'r']
				version split: ['f', 'u', 'r', '_']
				{'string': 'f/u/r/_', 'rgx': '((f))/((u))/((r))/((_))$'}
				version split: ['f', 'u', 'r', '_']
				{'string': 'f/u/r/_', 'rgx': '((f))/((u))/((r))/((_))$'}
				ANALYSING: fures
					resolving (2)
					> version: f/u/r/e/s
					TRYING: e
					> version: f/u/r/e/s
					TRYING: e
					RESULT:  ['e']
				version split: ['f', 'u', 'r', 'e', 's']
				{'string': 'f/u/r/e/s', 'rgx': '((f))/((u))/((r))/((e))$'}
				_____REMOVING________['f', 'u', 'r', 'e', 's']
				version split: ['f', 'u', 'r', 'e', 's']
				{'string': 'f/u/r/e/s', 'rgx': '((f))/((u))/((r))/((e))$'}
				_____REMOVING________['f', 'u', 'r', 'e', 's']
				ANALYSING: fuyr
					resolving (3)
					> version: f/u/y/r
					TRYING: r
					> version: f/u/y/r
					TRYING: r
					> version: f/uy/r
					RESULT:  ['_']
				adding dashed alternative: ['f', 'u', 'y', '_', 'r']
				adding dashed alternative: ['f', 'u', 'y', '_', 'r']
				adding dashed alternative: ['f', 'uy', 'r', '_']
				f/u/y/r(CCCC)
f/u/y/r(CVVC)
f/uy/r(CVC)
f/u/y/_/r(CAAAC)
f/u/y/_/r(CAAAC)
f/uy/r/_(CVCA)
				version split: ['f', 'u', 'y', 'r']
				{'string': 'f/u/y/r', 'rgx': '((f))/((uy)|(u))/((r))/((_))$'}
				_____REMOVING________['f', 'u', 'y', 'r']
				version split: ['f', 'u', 'y', 'r']
				{'string': 'f/u/y/r', 'rgx': '((f))/((uy)|(u))/((r))/((_))$'}
				_____REMOVING________['f', 'u', 'y', 'r']
				version split: ['f', 'uy', 'r']
				{'string': 'f/uy/r', 'rgx': '((f))/((uy)|(u))/((r))/((_))$'}
				_____REMOVING________['f', 'uy', 'r']
				version split: ['f', 'u', 'y', '_', 'r']
				{'string': 'f/u/y/_/r', 'rgx': '((f))/((uy)|(u))/((r))/((_))$'}
				_____REMOVING________['f', 'u', 'y', '_', 'r']
				version split: ['f', 'u', 'y', '_', 'r']
				{'string': 'f/u/y/_/r', 'rgx': '((f))/((uy)|(u))/((r))/((_))$'}
				_____REMOVING________['f', 'u', 'y', '_', 'r']
				version split: ['f', 'uy', 'r', '_']
				{'string': 'f/uy/r/_', 'rgx': '((f))/((uy)|(u))/((r))/((_))$'}
				ANALYSING: fuyre
					resolving (3)
					> version: f/u/y/r/e
					TRYING: r
					> version: f/u/y/r/e
					TRYING: r
					> version: f/uy/r/e
					TRYING: e
					RESULT:  ['e']
				version split: ['f', 'u', 'y', 'r', 'e']
				{'string': 'f/u/y/r/e', 'rgx': '((f))/((uy)|(u))/((r))/((e))$'}
				_____REMOVING________['f', 'u', 'y', 'r', 'e']
				version split: ['f', 'u', 'y', 'r', 'e']
				{'string': 'f/u/y/r/e', 'rgx': '((f))/((uy)|(u))/((r))/((e))$'}
				_____REMOVING________['f', 'u', 'y', 'r', 'e']
				version split: ['f', 'uy', 'r', 'e']
				{'string': 'f/uy/r/e', 'rgx': '((f))/((uy)|(u))/((r))/((e))$'}
				ANALYSING: fyr
					resolving (2)
					> version: f/y/r
					> version: f/y/r
					RESULT:  ['_']
				adding dashed alternative: ['f', 'y', 'r', '_']
				adding dashed alternative: ['f', 'y', 'r', '_']
				f/y/r(CCC)
f/y/r(CVC)
f/y/r/_(CACA)
f/y/r/_(CACA)
				version split: ['f', 'y', 'r']
				{'string': 'f/y/r', 'rgx': '((f))/((y))/((r))/((_))$'}
				_____REMOVING________['f', 'y', 'r']
				version split: ['f', 'y', 'r']
				{'string': 'f/y/r', 'rgx': '((f))/((y))/((r))/((_))$'}
				_____REMOVING________['f', 'y', 'r']
				version split: ['f', 'y', 'r', '_']
				{'string': 'f/y/r/_', 'rgx': '((f))/((y))/((r))/((_))$'}
				version split: ['f', 'y', 'r', '_']
				{'string': 'f/y/r/_', 'rgx': '((f))/((y))/((r))/((_))$'}
				ANALYSING: uer
					resolving (3)
					> version: u/e/r
					> version: u/e/r
					> version: ue/r
					RESULT:  ['_']
				adding dashed alternative: ['u', 'e', 'r', '_']
				adding dashed alternative: ['u', 'e', 'r', '_']
				adding dashed alternative: ['ue', 'r', '_']
				u/e/r(CVC)
u/e/r(VVC)
ue/r(VC)
u/e/r/_(AVCA)
u/e/r/_(AVCA)
ue/r/_(VCA)
				version split: ['u', 'e', 'r']
				{'string': 'u/e/r', 'rgx': '((u))/((e))/((r))/((_))$'}
				_____REMOVING________['u', 'e', 'r']
				version split: ['u', 'e', 'r']
				{'string': 'u/e/r', 'rgx': '((u))/((e))/((r))/((_))$'}
				_____REMOVING________['u', 'e', 'r']
				version split: ['ue', 'r']
				{'string': 'ue/r', 'rgx': '((u))/((e))/((r))/((_))$'}
				_____REMOVING________['ue', 'r']
				version split: ['u', 'e', 'r', '_']
				{'string': 'u/e/r/_', 'rgx': '((u))/((e))/((r))/((_))$'}
				version split: ['u', 'e', 'r', '_']
				{'string': 'u/e/r/_', 'rgx': '((u))/((e))/((r))/((_))$'}
				version split: ['ue', 'r', '_']
				{'string': 'ue/r/_', 'rgx': '((u))/((e))/((r))/((_))$'}
				_____REMOVING________['ue', 'r', '_']
				ANALYSING: uere
					resolving (3)
					> version: u/e/r/e
					TRYING: e
					> version: u/e/r/e
					TRYING: e
					> version: ue/r/e
					RESULT:  ['e']
				version split: ['u', 'e', 'r', 'e']
				{'string': 'u/e/r/e', 'rgx': '((u))/((e))/((r))/((e))$'}
				version split: ['u', 'e', 'r', 'e']
				{'string': 'u/e/r/e', 'rgx': '((u))/((e))/((r))/((e))$'}
				version split: ['ue', 'r', 'e']
				{'string': 'ue/r/e', 'rgx': '((u))/((e))/((r))/((e))$'}
				_____REMOVING________['ue', 'r', 'e']
				ANALYSING: ueréé
					resolving (6)
					> version: u/e/r/é/é
					TRYING: é
					> version: u/e/r/é/é
					TRYING: é
					> version: u/e/r/éé
					TRYING: éé
					>>> MULTIPLE RESOLVE OPTIONS: {'é', 'éé'}
					> version: u/e/r/éé
					TRYING: éé
					>>> MULTIPLE RESOLVE OPTIONS: {'é', 'éé'}
					> version: ue/r/é/é
					TRYING: é
					>>> MULTIPLE RESOLVE OPTIONS: {'é', 'éé'}
					> version: ue/r/éé
					>>> MULTIPLE RESOLVE OPTIONS: {'é', 'éé'}
					RESULT:  ['é', 'éé']
				version split: ['u', 'e', 'r', 'é', 'é']
				{'string': 'u/e/r/é/é', 'rgx': '((u))/((e))/((r))/((é)|(éé))$'}
				_____REMOVING________['u', 'e', 'r', 'é', 'é']
				version split: ['u', 'e', 'r', 'é', 'é']
				{'string': 'u/e/r/é/é', 'rgx': '((u))/((e))/((r))/((é)|(éé))$'}
				_____REMOVING________['u', 'e', 'r', 'é', 'é']
				version split: ['u', 'e', 'r', 'éé']
				{'string': 'u/e/r/éé', 'rgx': '((u))/((e))/((r))/((é)|(éé))$'}
				version split: ['u', 'e', 'r', 'éé']
				{'string': 'u/e/r/éé', 'rgx': '((u))/((e))/((r))/((é)|(éé))$'}
				version split: ['ue', 'r', 'é', 'é']
				{'string': 'ue/r/é/é', 'rgx': '((u))/((e))/((r))/((é)|(éé))$'}
				_____REMOVING________['ue', 'r', 'é', 'é']
				version split: ['ue', 'r', 'éé']
				{'string': 'ue/r/éé', 'rgx': '((u))/((e))/((r))/((é)|(éé))$'}
				_____REMOVING________['ue', 'r', 'éé']
				ANALYSING: uur
					resolving (2)
					> version: u/u/r
					> version: u/u/r
					RESULT:  ['_']
				adding dashed alternative: ['u', 'u', 'r', '_']
				adding dashed alternative: ['u', 'u', 'r', '_']
				u/u/r(CCC)
u/u/r(VVC)
u/u/r/_(AACA)
u/u/r/_(AACA)
				version split: ['u', 'u', 'r']
				{'string': 'u/u/r', 'rgx': '((u))/((u))/((r))/((_))$'}
				_____REMOVING________['u', 'u', 'r']
				version split: ['u', 'u', 'r']
				{'string': 'u/u/r', 'rgx': '((u))/((u))/((r))/((_))$'}
				_____REMOVING________['u', 'u', 'r']
				version split: ['u', 'u', 'r', '_']
				{'string': 'u/u/r/_', 'rgx': '((u))/((u))/((r))/((_))$'}
				version split: ['u', 'u', 'r', '_']
				{'string': 'u/u/r/_', 'rgx': '((u))/((u))/((r))/((_))$'}
				ANALYSING: ver
					resolving (2)
					> version: v/e/r
					> version: v/e/r
					RESULT:  ['_']
				adding dashed alternative: ['v', 'e', 'r', '_']
				adding dashed alternative: ['v', 'e', 'r', '_']
				v/e/r(CVC)
v/e/r(VVC)
v/e/r/_(AVCA)
v/e/r/_(AVCA)
				version split: ['v', 'e', 'r']
				{'string': 'v/e/r', 'rgx': '((v))/((e))/((r))/((_))$'}
				_____REMOVING________['v', 'e', 'r']
				version split: ['v', 'e', 'r']
				{'string': 'v/e/r', 'rgx': '((v))/((e))/((r))/((_))$'}
				_____REMOVING________['v', 'e', 'r']
				version split: ['v', 'e', 'r', '_']
				{'string': 'v/e/r/_', 'rgx': '((v))/((e))/((r))/((_))$'}
				version split: ['v', 'e', 'r', '_']
				{'string': 'v/e/r/_', 'rgx': '((v))/((e))/((r))/((_))$'}
				ANALYSING: vur
					resolving (2)
					> version: v/u/r
					> version: v/u/r
					RESULT:  ['_']
				adding dashed alternative: ['v', 'u', 'r', '_']
				adding dashed alternative: ['v', 'u', 'r', '_']
				v/u/r(CCC)
v/u/r(VVC)
v/u/r/_(AACA)
v/u/r/_(AACA)
				version split: ['v', 'u', 'r']
				{'string': 'v/u/r', 'rgx': '((v))/((u))/((r))/((_))$'}
				_____REMOVING________['v', 'u', 'r']
				version split: ['v', 'u', 'r']
				{'string': 'v/u/r', 'rgx': '((v))/((u))/((r))/((_))$'}
				_____REMOVING________['v', 'u', 'r']
				version split: ['v', 'u', 'r', '_']
				{'string': 'v/u/r/_', 'rgx': '((v))/((u))/((r))/((_))$'}
				version split: ['v', 'u', 'r', '_']
				{'string': 'v/u/r/_', 'rgx': '((v))/((u))/((r))/((_))$'}
		only one version left: ['f', 'ai', 'r', '_']
		only one version left: ['f', 'a', 'r', '_']
		only one version left: ['f', 'e', 'r', '_']
		only one version left: ['f', 'e', 'r', 'e']
		only one version left: ['f', 'ie', 'r', '_']
		only one version left: ['f', 'ie', 'r', 'e']
		only one version left: ['f', 'i', 'r', '_']
		FAIL: 
		only one version left: ['f', 'u', '_', '_']
		only one version left: ['f', 'ui', 'r', '_']
		only one version left: ['f', 'ui', 'r', 'e']
		only one version left: ['f', 'u', 'r', '_']
		FAIL: 
		only one version left: ['f', 'uy', 'r', '_']
		only one version left: ['f', 'uy', 'r', 'e']
		only one version left: ['f', 'y', 'r', '_']
		only one version left: ['u', 'e', 'r', '_']
		only one version left: ['u', 'e', 'r', 'e']
		only one version left: ['u', 'e', 'r', 'éé']
		only one version left: ['u', 'u', 'r', '_']
		only one version left: ['v', 'e', 'r', '_']
		only one version left: ['v', 'u', 'r', '_']
		SPLIT: ['f', 'i', 'r', 'e']
		SPLIT: ['f', 'u', 'r', 'e']
		SPLIT: ['f', 'y', 'r', 'e']
		SPLIT: ['f', 'ai', 'r', '_']
		['f', 'ai', 'r', '_']
		SPLIT: ['f', 'a', 'r', '_']
		['f', 'a', 'r', '_']
		SPLIT: ['f', 'e', 'r', '_']
		['f', 'e', 'r', '_']
		SPLIT: ['f', 'e', 'r', 'e']
		['f', 'e', 'r', 'e']
		SPLIT: ['f', 'ie', 'r', '_']
		['f', 'ie', 'r', '_']
		SPLIT: ['f', 'ie', 'r', 'e']
		['f', 'ie', 'r', 'e']
		SPLIT: ['f', 'i', 'r', '_']
		['f', 'i', 'r', '_']
		['f', 'i', 'r', '_']
		SPLIT: ['f', 'i', 'r', 'e', '----!']
		SPLIT: ['f', 'u', '_', '_']
		['f', 'u', '_', '_']
		['f', 'u', '_', '_']
		SPLIT: ['f', 'ui', 'r', '_']
		['f', 'ui', 'r', '_']
		SPLIT: ['f', 'ui', 'r', 'e']
		['f', 'ui', 'r', 'e']
		SPLIT: ['f', 'u', 'r', '_']
		['f', 'u', 'r', '_']
		['f', 'u', 'r', '_']
		SPLIT: ['f', 'u', 'r', 'e', '----!']
		SPLIT: ['f', 'uy', 'r', '_']
		['f', 'uy', 'r', '_']
		SPLIT: ['f', 'uy', 'r', 'e']
		['f', 'uy', 'r', 'e']
		SPLIT: ['f', 'y', 'r', '_']
		['f', 'y', 'r', '_']
		['f', 'y', 'r', '_']
		SPLIT: ['u', 'e', 'r', '_']
		['u', 'e', 'r', '_']
		['u', 'e', 'r', '_']
		SPLIT: ['u', 'e', 'r', 'e']
		['u', 'e', 'r', 'e']
		['u', 'e', 'r', 'e']
		SPLIT: ['u', 'e', 'r', 'éé']
		['u', 'e', 'r', 'éé']
		['u', 'e', 'r', 'éé']
		SPLIT: ['u', 'u', 'r', '_']
		['u', 'u', 'r', '_']
		['u', 'u', 'r', '_']
		SPLIT: ['v', 'e', 'r', '_']
		['v', 'e', 'r', '_']
		['v', 'e', 'r', '_']
		SPLIT: ['v', 'u', 'r', '_']
		['v', 'u', 'r', '_']
		['v', 'u', 'r', '_']
		version for pattern CCCV is INVALID
		[]
		2
		POSSIBLE CHANGE: 0 : Initial Fricative Voicing
		OVERVIEW: version for pattern CCCV

faulty splits: 2
fire----! <-! fires
fure----! <-! fures
f | i | r | e
f | u | r | e
f | y | r | e
f | ai | r | _
f | a | r | _
f | e | r | _
f | e | r | e
f | ie | r | _
f | ie | r | e
f | i | r | _
f | i | r | e | ----!
f | u | _ | _
f | ui | r | _
f | ui | r | e
f | u | r | _
f | u | r | e | ----!
f | uy | r | _
f | uy | r | e
f | y | r | _
u | e | r | _
u | e | r | e
u | e | r | éé
u | u | r | _
v | e | r | _
v | u | r | _
	[[{'lit': 'ai', 'ln': 2, 'index': 1}]]
	[[{'lit': 'ie', 'ln': 2, 'index': 1}]]
	[[{'lit': 'ie', 'ln': 2, 'index': 1}]]
	[[{'lit': 'ui', 'ln': 2, 'index': 1}]]
	[[{'lit': 'ui', 'ln': 2, 'index': 1}]]
	[[{'lit': 'uy', 'ln': 2, 'index': 1}]]
	[[{'lit': 'uy', 'ln': 2, 'index': 1}]]
	[[{'lit': 'ue', 'ln': 2, 'index': 0}]]
	[[{'lit': 'ue', 'ln': 2, 'index': 0}]]
	[[{'lit': 'éé', 'ln': 2, 'index': 3}], [{'lit': 'ue', 'ln': 2, 'index': 0}]]
	[[{'lit': 'éé', 'ln': 2, 'index': 3}], [{'lit': 'ue', 'ln': 2, 'index': 0}], [{'lit': 'éé', 'ln': 2, 'index': 3}, {'lit': 'ue', 'ln': 2, 'index': 0}]]
	MIN pattern length=3
	Pattern CVCV is valid
	Pattern VVCV is invalid
	Pattern CCCVC is valid
	Pattern CVVCV is invalid
	Pattern CVCVV is invalid
	Pattern CC is invalid
	Pattern CCVCV is valid
	Pattern VVCVV is invalid
	Pattern CCCCV is invalid
	Pattern CCC is valid
	Pattern CCCC is invalid
	Pattern VCVV is invalid
	Pattern CV is invalid
	Pattern VC is invalid
	Pattern CVC is valid
	Pattern CVCVC is valid
	Pattern VCV is valid
	Pattern CVVC is invalid
	Pattern VVC is invalid
	Pattern CCCV is valid
	Pattern CVCC is valid
	Pattern CCVC is valid
	Making the selection for pattern: CVCC
	Selection for pattern: CVCC completed
	Making a version for pattern: CVCC
			___CVCC : 0___
				ANALYSING: fair
				adding littera based on matching pattern
				ANALYSING: far
					resolving (1)
					> version: f/a/r
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fer
					resolving (1)
					> version: f/e/r
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fere
					resolving (1)
					> version: f/e/r/e
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fier
					resolving (3)
					> version: f/i/e/r
					TRYING: f
					> version: f/i/e/r
					TRYING: f
					> version: f/ie/r
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fiere
					resolving (3)
					> version: f/i/e/r/e
					TRYING: f
					> version: f/i/e/r/e
					TRYING: f
					> version: f/ie/r/e
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fir
					resolving (2)
					> version: f/i/r
					TRYING: f
					> version: f/i/r
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fire
					resolving (2)
					> version: f/i/r/e
					TRYING: f
					> version: f/i/r/e
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fires
					resolving (2)
					> version: f/i/r/e/s
					TRYING: f
					> version: f/i/r/e/s
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fu
					resolving (2)
					> version: f/u
					TRYING: f
					> version: f/u
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fuir
					resolving (3)
					> version: f/u/i/r
					TRYING: f
					> version: f/u/i/r
					TRYING: f
					> version: f/ui/r
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fuire
					resolving (3)
					> version: f/u/i/r/e
					TRYING: f
					> version: f/u/i/r/e
					TRYING: f
					> version: f/ui/r/e
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fur
					resolving (2)
					> version: f/u/r
					TRYING: f
					> version: f/u/r
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fure
					resolving (2)
					> version: f/u/r/e
					TRYING: f
					> version: f/u/r/e
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fures
					resolving (2)
					> version: f/u/r/e/s
					TRYING: f
					> version: f/u/r/e/s
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fuyr
					resolving (3)
					> version: f/u/y/r
					TRYING: f
					> version: f/u/y/r
					TRYING: f
					> version: f/uy/r
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fuyre
					resolving (3)
					> version: f/u/y/r/e
					TRYING: f
					> version: f/u/y/r/e
					TRYING: f
					> version: f/uy/r/e
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fyr
					resolving (2)
					> version: f/y/r
					TRYING: f
					> version: f/y/r
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fyre
					resolving (2)
					> version: f/y/r/e
					TRYING: f
					> version: f/y/r/e
					TRYING: f
					RESULT:  ['f']
				ANALYSING: uer
					resolving (3)
					> version: u/e/r
					TRYING: u
					> version: u/e/r
					TRYING: u
					> version: ue/r
					TRYING: ue
					RESULT:  ['u']
				ANALYSING: uere
					resolving (3)
					> version: u/e/r/e
					TRYING: u
					> version: u/e/r/e
					TRYING: u
					> version: ue/r/e
					TRYING: ue
					RESULT:  ['u']
				ANALYSING: ueréé
					resolving (6)
					> version: u/e/r/é/é
					TRYING: u
					> version: u/e/r/é/é
					TRYING: u
					> version: u/e/r/éé
					TRYING: u
					> version: u/e/r/éé
					TRYING: u
					> version: ue/r/é/é
					TRYING: ue
					> version: ue/r/éé
					TRYING: ue
					RESULT:  ['u']
				ANALYSING: uur
					resolving (2)
					> version: u/u/r
					TRYING: u
					> version: u/u/r
					TRYING: u
					RESULT:  ['u']
				ANALYSING: ver
					resolving (2)
					> version: v/e/r
					TRYING: v
					> version: v/e/r
					TRYING: v
					RESULT:  ['v']
				ANALYSING: vur
					resolving (2)
					> version: v/u/r
					TRYING: v
					> version: v/u/r
					TRYING: v
					RESULT:  ['v']
			___CVCC : 1___
				ANALYSING: fair
				adding littera based on matching pattern
				ANALYSING: far
					resolving (1)
					> version: f/a/r
					TRYING: a
					RESULT:  ['a']
				ANALYSING: fer
					resolving (1)
					> version: f/e/r
					TRYING: e
					RESULT:  ['e']
				ANALYSING: fere
					resolving (1)
					> version: f/e/r/e
					TRYING: e
					RESULT:  ['e']
				ANALYSING: fier
					resolving (3)
					> version: f/i/e/r
					TRYING: i
					> version: f/i/e/r
					TRYING: i
					> version: f/ie/r
					TRYING: ie
					>>> MULTIPLE RESOLVE OPTIONS: {'ie', 'i'}
					RESULT:  ['ie', 'i']
				ANALYSING: fiere
					resolving (3)
					> version: f/i/e/r/e
					TRYING: i
					> version: f/i/e/r/e
					TRYING: i
					> version: f/ie/r/e
					TRYING: ie
					>>> MULTIPLE RESOLVE OPTIONS: {'ie', 'i'}
					RESULT:  ['ie', 'i']
				ANALYSING: fir
					resolving (2)
					> version: f/i/r
					TRYING: i
					> version: f/i/r
					TRYING: i
					RESULT:  ['i']
				ANALYSING: fire
					resolving (2)
					> version: f/i/r/e
					TRYING: i
					> version: f/i/r/e
					TRYING: i
					RESULT:  ['i']
				ANALYSING: fires
					resolving (2)
					> version: f/i/r/e/s
					TRYING: i
					> version: f/i/r/e/s
					TRYING: i
					RESULT:  ['i']
				ANALYSING: fu
					resolving (2)
					> version: f/u
					TRYING: u
					> version: f/u
					TRYING: u
					RESULT:  ['u']
				ANALYSING: fuir
					resolving (3)
					> version: f/u/i/r
					TRYING: u
					> version: f/u/i/r
					TRYING: u
					> version: f/ui/r
					TRYING: ui
					>>> MULTIPLE RESOLVE OPTIONS: {'ui', 'u'}
					RESULT:  ['ui', 'u']
				ANALYSING: fuire
					resolving (3)
					> version: f/u/i/r/e
					TRYING: u
					> version: f/u/i/r/e
					TRYING: u
					> version: f/ui/r/e
					TRYING: ui
					>>> MULTIPLE RESOLVE OPTIONS: {'ui', 'u'}
					RESULT:  ['ui', 'u']
				ANALYSING: fur
					resolving (2)
					> version: f/u/r
					TRYING: u
					> version: f/u/r
					TRYING: u
					RESULT:  ['u']
				ANALYSING: fure
					resolving (2)
					> version: f/u/r/e
					TRYING: u
					> version: f/u/r/e
					TRYING: u
					RESULT:  ['u']
				ANALYSING: fures
					resolving (2)
					> version: f/u/r/e/s
					TRYING: u
					> version: f/u/r/e/s
					TRYING: u
					RESULT:  ['u']
				ANALYSING: fuyr
					resolving (3)
					> version: f/u/y/r
					TRYING: u
					> version: f/u/y/r
					TRYING: u
					> version: f/uy/r
					TRYING: uy
					>>> MULTIPLE RESOLVE OPTIONS: {'uy', 'u'}
					RESULT:  ['uy', 'u']
				ANALYSING: fuyre
					resolving (3)
					> version: f/u/y/r/e
					TRYING: u
					> version: f/u/y/r/e
					TRYING: u
					> version: f/uy/r/e
					TRYING: uy
					>>> MULTIPLE RESOLVE OPTIONS: {'uy', 'u'}
					RESULT:  ['uy', 'u']
				ANALYSING: fyr
					resolving (2)
					> version: f/y/r
					TRYING: y
					> version: f/y/r
					TRYING: y
					RESULT:  ['y']
				ANALYSING: fyre
					resolving (2)
					> version: f/y/r/e
					TRYING: y
					> version: f/y/r/e
					TRYING: y
					RESULT:  ['y']
				ANALYSING: uer
					resolving (3)
					> version: u/e/r
					TRYING: e
					> version: u/e/r
					TRYING: e
					> version: ue/r
					TRYING: r
					RESULT:  ['e']
				ANALYSING: uere
					resolving (3)
					> version: u/e/r/e
					TRYING: e
					> version: u/e/r/e
					TRYING: e
					> version: ue/r/e
					TRYING: r
					RESULT:  ['e']
				ANALYSING: ueréé
					resolving (6)
					> version: u/e/r/é/é
					TRYING: e
					> version: u/e/r/é/é
					TRYING: e
					> version: u/e/r/éé
					TRYING: e
					> version: u/e/r/éé
					TRYING: e
					> version: ue/r/é/é
					TRYING: r
					> version: ue/r/éé
					TRYING: r
					RESULT:  ['e']
				ANALYSING: uur
					resolving (2)
					> version: u/u/r
					TRYING: u
					> version: u/u/r
					TRYING: u
					RESULT:  ['u']
				ANALYSING: ver
					resolving (2)
					> version: v/e/r
					TRYING: e
					> version: v/e/r
					TRYING: e
					RESULT:  ['e']
				ANALYSING: vur
					resolving (2)
					> version: v/u/r
					TRYING: u
					> version: v/u/r
					TRYING: u
					RESULT:  ['u']
			___CVCC : 2___
				ANALYSING: fair
				adding littera based on matching pattern
				ANALYSING: far
					resolving (1)
					> version: f/a/r
					TRYING: r
					adding blocked set: C = C >> r, i
					RESULT:  ['_']
				adding dashed alternative: ['f', 'a', '_', 'r']
				f/a/r(CVC)
f/a/_/r(CVAC)
				ANALYSING: fer
					resolving (1)
					> version: f/e/r
					TRYING: r
					adding blocked set: C = C >> r, i, _
					RESULT:  ['_']
				adding dashed alternative: ['f', 'e', '_', 'r']
				f/e/r(CVC)
f/e/_/r(CVAC)
				ANALYSING: fere
					resolving (1)
					> version: f/e/r/e
					TRYING: r
					adding blocked set: C = C >> _, r, i
					RESULT:  ['_']
				adding dashed alternative: ['f', 'e', '_', 'r', 'e']
				f/e/r/e(CVCV)
f/e/_/r/e(CVACV)
				ANALYSING: fier
					resolving (3)
					> version: f/i/e/r
					TRYING: e
					> version: f/i/e/r
					TRYING: e
					> version: f/ie/r
					TRYING: r
					adding blocked set: C = C >> r, i, _
					RESULT:  ['e']
				ANALYSING: fiere
					resolving (3)
					> version: f/i/e/r/e
					TRYING: e
					> version: f/i/e/r/e
					TRYING: e
					> version: f/ie/r/e
					TRYING: r
					RESULT:  ['e']
				ANALYSING: fir
					resolving (2)
					> version: f/i/r
					TRYING: r
					> version: f/i/r
					TRYING: r
					RESULT:  ['_']
				adding dashed alternative: ['f', 'i', '_', 'r']
				adding dashed alternative: ['f', 'i', '_', 'r']
				f/i/r(CCC)
f/i/r(CVC)
f/i/_/r(CAAC)
f/i/_/r(CAAC)
				ANALYSING: fire
					resolving (2)
					> version: f/i/r/e
					TRYING: r
					> version: f/i/r/e
					TRYING: r
					RESULT:  ['_']
				adding dashed alternative: ['f', 'i', '_', 'r', 'e']
				adding dashed alternative: ['f', 'i', '_', 'r', 'e']
				f/i/r/e(CCCV)
f/i/r/e(CVCV)
f/i/_/r/e(CAACV)
f/i/_/r/e(CAACV)
				ANALYSING: fires
					resolving (2)
					> version: f/i/r/e/s
					TRYING: r
					> version: f/i/r/e/s
					TRYING: r
					RESULT:  ['_']
				adding dashed alternative: ['f', 'i', '_', 'r', 'e', 's']
				adding dashed alternative: ['f', 'i', '_', 'r', 'e', 's']
				f/i/r/e/s(CCCVC)
f/i/r/e/s(CVCVC)
f/i/_/r/e/s(CAACVC)
f/i/_/r/e/s(CAACVC)
				ANALYSING: fu
					resolving (2)
					> version: f/u
					> version: f/u
					RESULT:  ['_']
				adding dashed alternative: ['f', 'u', '_']
				adding dashed alternative: ['f', 'u', '_']
				f/u(CC)
f/u(CV)
f/u/_(CAA)
f/u/_(CAA)
				ANALYSING: fuir
					resolving (3)
					> version: f/u/i/r
					TRYING: i
					> version: f/u/i/r
					TRYING: i
					> version: f/ui/r
					TRYING: r
					RESULT:  ['i']
				ANALYSING: fuire
					resolving (3)
					> version: f/u/i/r/e
					TRYING: i
					> version: f/u/i/r/e
					TRYING: i
					> version: f/ui/r/e
					TRYING: r
					RESULT:  ['i']
				ANALYSING: fur
					resolving (2)
					> version: f/u/r
					TRYING: r
					> version: f/u/r
					TRYING: r
					RESULT:  ['_']
				adding dashed alternative: ['f', 'u', '_', 'r']
				adding dashed alternative: ['f', 'u', '_', 'r']
				f/u/r(CCC)
f/u/r(CVC)
f/u/_/r(CAAC)
f/u/_/r(CAAC)
				ANALYSING: fure
					resolving (2)
					> version: f/u/r/e
					TRYING: r
					> version: f/u/r/e
					TRYING: r
					RESULT:  ['_']
				adding dashed alternative: ['f', 'u', '_', 'r', 'e']
				adding dashed alternative: ['f', 'u', '_', 'r', 'e']
				f/u/r/e(CCCV)
f/u/r/e(CVCV)
f/u/_/r/e(CAACV)
f/u/_/r/e(CAACV)
				ANALYSING: fures
					resolving (2)
					> version: f/u/r/e/s
					TRYING: r
					> version: f/u/r/e/s
					TRYING: r
					RESULT:  ['_']
				adding dashed alternative: ['f', 'u', '_', 'r', 'e', 's']
				adding dashed alternative: ['f', 'u', '_', 'r', 'e', 's']
				f/u/r/e/s(CCCVC)
f/u/r/e/s(CVCVC)
f/u/_/r/e/s(CAACVC)
f/u/_/r/e/s(CAACVC)
				ANALYSING: fuyr
					resolving (3)
					> version: f/u/y/r
					TRYING: y
					> version: f/u/y/r
					TRYING: y
					> version: f/uy/r
					TRYING: r
					RESULT:  ['y']
				ANALYSING: fuyre
					resolving (3)
					> version: f/u/y/r/e
					TRYING: y
					> version: f/u/y/r/e
					TRYING: y
					> version: f/uy/r/e
					TRYING: r
					RESULT:  ['y']
				ANALYSING: fyr
					resolving (2)
					> version: f/y/r
					TRYING: r
					> version: f/y/r
					TRYING: r
					RESULT:  ['_']
				adding dashed alternative: ['f', 'y', '_', 'r']
				adding dashed alternative: ['f', 'y', '_', 'r']
				f/y/r(CCC)
f/y/r(CVC)
f/y/_/r(CAAC)
f/y/_/r(CAAC)
				ANALYSING: fyre
					resolving (2)
					> version: f/y/r/e
					TRYING: r
					> version: f/y/r/e
					TRYING: r
					RESULT:  ['_']
				adding dashed alternative: ['f', 'y', '_', 'r', 'e']
				adding dashed alternative: ['f', 'y', '_', 'r', 'e']
				f/y/r/e(CCCV)
f/y/r/e(CVCV)
f/y/_/r/e(CAACV)
f/y/_/r/e(CAACV)
				ANALYSING: uer
					resolving (3)
					> version: u/e/r
					TRYING: r
					> version: u/e/r
					TRYING: r
					> version: ue/r
					RESULT:  ['_']
				adding dashed alternative: ['u', 'e', '_', 'r']
				adding dashed alternative: ['u', 'e', '_', 'r']
				adding dashed alternative: ['ue', 'r', '_']
				u/e/r(CVC)
u/e/r(VVC)
ue/r(VC)
u/e/_/r(AVAC)
u/e/_/r(AVAC)
ue/r/_(VCA)
				ANALYSING: uere
					resolving (3)
					> version: u/e/r/e
					TRYING: r
					> version: u/e/r/e
					TRYING: r
					> version: ue/r/e
					TRYING: e
					RESULT:  ['e']
				ANALYSING: ueréé
					resolving (6)
					> version: u/e/r/é/é
					TRYING: r
					> version: u/e/r/é/é
					TRYING: r
					> version: u/e/r/éé
					TRYING: r
					> version: u/e/r/éé
					TRYING: r
					> version: ue/r/é/é
					TRYING: é
					> version: ue/r/éé
					TRYING: éé
					RESULT:  ['_']
				adding dashed alternative: ['u', 'e', '_', 'r', 'é', 'é']
				adding dashed alternative: ['u', 'e', '_', 'r', 'é', 'é']
				adding dashed alternative: ['u', 'e', '_', 'r', 'éé']
				adding dashed alternative: ['u', 'e', '_', 'r', 'éé']
				adding dashed alternative: ['ue', 'r', '_', 'é', 'é']
				adding dashed alternative: ['ue', 'r', '_', 'éé']
				u/e/r/é/é(CVCVV)
u/e/r/é/é(VVCVV)
u/e/r/éé(CVCV)
u/e/r/éé(VVCV)
ue/r/é/é(VCVV)
ue/r/éé(VCV)
u/e/_/r/é/é(AVACVV)
u/e/_/r/é/é(AVACVV)
u/e/_/r/éé(AVACV)
u/e/_/r/éé(AVACV)
ue/r/_/é/é(VCAVV)
ue/r/_/éé(VCAV)
				ANALYSING: uur
					resolving (2)
					> version: u/u/r
					TRYING: r
					> version: u/u/r
					TRYING: r
					RESULT:  ['_']
				adding dashed alternative: ['u', 'u', '_', 'r']
				adding dashed alternative: ['u', 'u', '_', 'r']
				u/u/r(CCC)
u/u/r(VVC)
u/u/_/r(AAAC)
u/u/_/r(AAAC)
				ANALYSING: ver
					resolving (2)
					> version: v/e/r
					TRYING: r
					> version: v/e/r
					TRYING: r
					RESULT:  ['_']
				adding dashed alternative: ['v', 'e', '_', 'r']
				adding dashed alternative: ['v', 'e', '_', 'r']
				v/e/r(CVC)
v/e/r(VVC)
v/e/_/r(AVAC)
v/e/_/r(AVAC)
				ANALYSING: vur
					resolving (2)
					> version: v/u/r
					TRYING: r
					> version: v/u/r
					TRYING: r
					RESULT:  ['_']
				adding dashed alternative: ['v', 'u', '_', 'r']
				adding dashed alternative: ['v', 'u', '_', 'r']
				v/u/r(CCC)
v/u/r(VVC)
v/u/_/r(AAAC)
v/u/_/r(AAAC)
			___CVCC : 3___
				ANALYSING: fair
				adding littera based on matching pattern
				ANALYSING: far
					resolving (2)
					> version: f/a/r
					> version: f/a/_/r
					TRYING: r
					RESULT:  ['r']
				version split: ['f', 'a', 'r']
				{'string': 'f/a/r', 'rgx': '((f))/((a))/((_))/((r))$'}
				_____REMOVING________['f', 'a', 'r']
				version split: ['f', 'a', '_', 'r']
				{'string': 'f/a/_/r', 'rgx': '((f))/((a))/((_))/((r))$'}
				ANALYSING: fer
					resolving (2)
					> version: f/e/r
					> version: f/e/_/r
					TRYING: r
					RESULT:  ['r']
				version split: ['f', 'e', 'r']
				{'string': 'f/e/r', 'rgx': '((f))/((e))/((_))/((r))$'}
				_____REMOVING________['f', 'e', 'r']
				version split: ['f', 'e', '_', 'r']
				{'string': 'f/e/_/r', 'rgx': '((f))/((e))/((_))/((r))$'}
				ANALYSING: fere
					resolving (2)
					> version: f/e/r/e
					TRYING: e
					> version: f/e/_/r/e
					TRYING: r
					RESULT:  ['r']
				version split: ['f', 'e', 'r', 'e']
				{'string': 'f/e/r/e', 'rgx': '((f))/((e))/((_))/((r))$'}
				_____REMOVING________['f', 'e', 'r', 'e']
				version split: ['f', 'e', '_', 'r', 'e']
				{'string': 'f/e/_/r/e', 'rgx': '((f))/((e))/((_))/((r))$'}
				_____REMOVING________['f', 'e', '_', 'r', 'e']
				ANALYSING: fier
					resolving (3)
					> version: f/i/e/r
					TRYING: r
					> version: f/i/e/r
					TRYING: r
					> version: f/ie/r
					RESULT:  ['r']
				version split: ['f', 'i', 'e', 'r']
				{'string': 'f/i/e/r', 'rgx': '((f))/((ie)|(i))/((e))/((r))$'}
				version split: ['f', 'i', 'e', 'r']
				{'string': 'f/i/e/r', 'rgx': '((f))/((ie)|(i))/((e))/((r))$'}
				version split: ['f', 'ie', 'r']
				{'string': 'f/ie/r', 'rgx': '((f))/((ie)|(i))/((e))/((r))$'}
				_____REMOVING________['f', 'ie', 'r']
				ANALYSING: fiere
					resolving (3)
					> version: f/i/e/r/e
					TRYING: r
					> version: f/i/e/r/e
					TRYING: r
					> version: f/ie/r/e
					TRYING: e
					RESULT:  ['r']
				version split: ['f', 'i', 'e', 'r', 'e']
				{'string': 'f/i/e/r/e', 'rgx': '((f))/((ie)|(i))/((e))/((r))$'}
				_____REMOVING________['f', 'i', 'e', 'r', 'e']
				version split: ['f', 'i', 'e', 'r', 'e']
				{'string': 'f/i/e/r/e', 'rgx': '((f))/((ie)|(i))/((e))/((r))$'}
				_____REMOVING________['f', 'i', 'e', 'r', 'e']
				version split: ['f', 'ie', 'r', 'e']
				{'string': 'f/ie/r/e', 'rgx': '((f))/((ie)|(i))/((e))/((r))$'}
				_____REMOVING________['f', 'ie', 'r', 'e']
				ANALYSING: fir
					resolving (4)
					> version: f/i/r
					> version: f/i/r
					> version: f/i/_/r
					TRYING: r
					> version: f/i/_/r
					TRYING: r
					RESULT:  ['r']
				version split: ['f', 'i', 'r']
				{'string': 'f/i/r', 'rgx': '((f))/((i))/((_))/((r))$'}
				_____REMOVING________['f', 'i', 'r']
				version split: ['f', 'i', 'r']
				{'string': 'f/i/r', 'rgx': '((f))/((i))/((_))/((r))$'}
				_____REMOVING________['f', 'i', 'r']
				version split: ['f', 'i', '_', 'r']
				{'string': 'f/i/_/r', 'rgx': '((f))/((i))/((_))/((r))$'}
				version split: ['f', 'i', '_', 'r']
				{'string': 'f/i/_/r', 'rgx': '((f))/((i))/((_))/((r))$'}
				ANALYSING: fire
					resolving (4)
					> version: f/i/r/e
					TRYING: e
					> version: f/i/r/e
					TRYING: e
					> version: f/i/_/r/e
					TRYING: r
					> version: f/i/_/r/e
					TRYING: r
					RESULT:  ['r']
				version split: ['f', 'i', 'r', 'e']
				{'string': 'f/i/r/e', 'rgx': '((f))/((i))/((_))/((r))$'}
				_____REMOVING________['f', 'i', 'r', 'e']
				version split: ['f', 'i', 'r', 'e']
				{'string': 'f/i/r/e', 'rgx': '((f))/((i))/((_))/((r))$'}
				_____REMOVING________['f', 'i', 'r', 'e']
				version split: ['f', 'i', '_', 'r', 'e']
				{'string': 'f/i/_/r/e', 'rgx': '((f))/((i))/((_))/((r))$'}
				_____REMOVING________['f', 'i', '_', 'r', 'e']
				version split: ['f', 'i', '_', 'r', 'e']
				{'string': 'f/i/_/r/e', 'rgx': '((f))/((i))/((_))/((r))$'}
				_____REMOVING________['f', 'i', '_', 'r', 'e']
				ANALYSING: fires
					resolving (4)
					> version: f/i/r/e/s
					TRYING: e
					> version: f/i/r/e/s
					TRYING: e
					> version: f/i/_/r/e/s
					TRYING: r
					> version: f/i/_/r/e/s
					TRYING: r
					RESULT:  ['r']
				version split: ['f', 'i', 'r', 'e', 's']
				{'string': 'f/i/r/e/s', 'rgx': '((f))/((i))/((_))/((r))$'}
				_____REMOVING________['f', 'i', 'r', 'e', 's']
				version split: ['f', 'i', 'r', 'e', 's']
				{'string': 'f/i/r/e/s', 'rgx': '((f))/((i))/((_))/((r))$'}
				_____REMOVING________['f', 'i', 'r', 'e', 's']
				version split: ['f', 'i', '_', 'r', 'e', 's']
				{'string': 'f/i/_/r/e', 'rgx': '((f))/((i))/((_))/((r))$'}
				_____REMOVING________['f', 'i', '_', 'r', 'e', 's']
				version split: ['f', 'i', '_', 'r', 'e', 's']
				{'string': 'f/i/_/r/e', 'rgx': '((f))/((i))/((_))/((r))$'}
				_____REMOVING________['f', 'i', '_', 'r', 'e', 's']
				ANALYSING: fu
					resolving (4)
					> version: f/u
					> version: f/u
					> version: f/u/_
					> version: f/u/_
					RESULT:  ['_']
				adding dashed alternative: ['f', 'u', '_']
				adding dashed alternative: ['f', 'u', '_']
				adding dashed alternative: ['f', 'u', '_', '_']
				adding dashed alternative: ['f', 'u', '_', '_']
				f/u(CC)
f/u(CV)
f/u/_(CAA)
f/u/_(CAA)
f/u/_(CAA)
f/u/_(CAA)
f/u/_/_(CAAA)
f/u/_/_(CAAA)
				version split: ['f', 'u']
				{'string': 'f/u', 'rgx': '((f))/((u))/((_))/((_))$'}
				_____REMOVING________['f', 'u']
				version split: ['f', 'u']
				{'string': 'f/u', 'rgx': '((f))/((u))/((_))/((_))$'}
				_____REMOVING________['f', 'u']
				version split: ['f', 'u', '_']
				{'string': 'f/u/_', 'rgx': '((f))/((u))/((_))/((_))$'}
				_____REMOVING________['f', 'u', '_']
				version split: ['f', 'u', '_']
				{'string': 'f/u/_', 'rgx': '((f))/((u))/((_))/((_))$'}
				_____REMOVING________['f', 'u', '_']
				version split: ['f', 'u', '_']
				{'string': 'f/u/_', 'rgx': '((f))/((u))/((_))/((_))$'}
				_____REMOVING________['f', 'u', '_']
				version split: ['f', 'u', '_']
				{'string': 'f/u/_', 'rgx': '((f))/((u))/((_))/((_))$'}
				_____REMOVING________['f', 'u', '_']
				version split: ['f', 'u', '_', '_']
				{'string': 'f/u/_/_', 'rgx': '((f))/((u))/((_))/((_))$'}
				version split: ['f', 'u', '_', '_']
				{'string': 'f/u/_/_', 'rgx': '((f))/((u))/((_))/((_))$'}
				ANALYSING: fuir
					resolving (3)
					> version: f/u/i/r
					TRYING: r
					> version: f/u/i/r
					TRYING: r
					> version: f/ui/r
					RESULT:  ['r']
				version split: ['f', 'u', 'i', 'r']
				{'string': 'f/u/i/r', 'rgx': '((f))/((ui)|(u))/((i))/((r))$'}
				version split: ['f', 'u', 'i', 'r']
				{'string': 'f/u/i/r', 'rgx': '((f))/((ui)|(u))/((i))/((r))$'}
				version split: ['f', 'ui', 'r']
				{'string': 'f/ui/r', 'rgx': '((f))/((ui)|(u))/((i))/((r))$'}
				_____REMOVING________['f', 'ui', 'r']
				ANALYSING: fuire
					resolving (3)
					> version: f/u/i/r/e
					TRYING: r
					> version: f/u/i/r/e
					TRYING: r
					> version: f/ui/r/e
					TRYING: e
					RESULT:  ['r']
				version split: ['f', 'u', 'i', 'r', 'e']
				{'string': 'f/u/i/r/e', 'rgx': '((f))/((ui)|(u))/((i))/((r))$'}
				_____REMOVING________['f', 'u', 'i', 'r', 'e']
				version split: ['f', 'u', 'i', 'r', 'e']
				{'string': 'f/u/i/r/e', 'rgx': '((f))/((ui)|(u))/((i))/((r))$'}
				_____REMOVING________['f', 'u', 'i', 'r', 'e']
				version split: ['f', 'ui', 'r', 'e']
				{'string': 'f/ui/r/e', 'rgx': '((f))/((ui)|(u))/((i))/((r))$'}
				_____REMOVING________['f', 'ui', 'r', 'e']
				ANALYSING: fur
					resolving (4)
					> version: f/u/r
					> version: f/u/r
					> version: f/u/_/r
					TRYING: r
					> version: f/u/_/r
					TRYING: r
					RESULT:  ['r']
				version split: ['f', 'u', 'r']
				{'string': 'f/u/r', 'rgx': '((f))/((u))/((_))/((r))$'}
				_____REMOVING________['f', 'u', 'r']
				version split: ['f', 'u', 'r']
				{'string': 'f/u/r', 'rgx': '((f))/((u))/((_))/((r))$'}
				_____REMOVING________['f', 'u', 'r']
				version split: ['f', 'u', '_', 'r']
				{'string': 'f/u/_/r', 'rgx': '((f))/((u))/((_))/((r))$'}
				version split: ['f', 'u', '_', 'r']
				{'string': 'f/u/_/r', 'rgx': '((f))/((u))/((_))/((r))$'}
				ANALYSING: fure
					resolving (4)
					> version: f/u/r/e
					TRYING: e
					> version: f/u/r/e
					TRYING: e
					> version: f/u/_/r/e
					TRYING: r
					> version: f/u/_/r/e
					TRYING: r
					RESULT:  ['r']
				version split: ['f', 'u', 'r', 'e']
				{'string': 'f/u/r/e', 'rgx': '((f))/((u))/((_))/((r))$'}
				_____REMOVING________['f', 'u', 'r', 'e']
				version split: ['f', 'u', 'r', 'e']
				{'string': 'f/u/r/e', 'rgx': '((f))/((u))/((_))/((r))$'}
				_____REMOVING________['f', 'u', 'r', 'e']
				version split: ['f', 'u', '_', 'r', 'e']
				{'string': 'f/u/_/r/e', 'rgx': '((f))/((u))/((_))/((r))$'}
				_____REMOVING________['f', 'u', '_', 'r', 'e']
				version split: ['f', 'u', '_', 'r', 'e']
				{'string': 'f/u/_/r/e', 'rgx': '((f))/((u))/((_))/((r))$'}
				_____REMOVING________['f', 'u', '_', 'r', 'e']
				ANALYSING: fures
					resolving (4)
					> version: f/u/r/e/s
					TRYING: e
					> version: f/u/r/e/s
					TRYING: e
					> version: f/u/_/r/e/s
					TRYING: r
					> version: f/u/_/r/e/s
					TRYING: r
					RESULT:  ['r']
				version split: ['f', 'u', 'r', 'e', 's']
				{'string': 'f/u/r/e/s', 'rgx': '((f))/((u))/((_))/((r))$'}
				_____REMOVING________['f', 'u', 'r', 'e', 's']
				version split: ['f', 'u', 'r', 'e', 's']
				{'string': 'f/u/r/e/s', 'rgx': '((f))/((u))/((_))/((r))$'}
				_____REMOVING________['f', 'u', 'r', 'e', 's']
				version split: ['f', 'u', '_', 'r', 'e', 's']
				{'string': 'f/u/_/r/e', 'rgx': '((f))/((u))/((_))/((r))$'}
				_____REMOVING________['f', 'u', '_', 'r', 'e', 's']
				version split: ['f', 'u', '_', 'r', 'e', 's']
				{'string': 'f/u/_/r/e', 'rgx': '((f))/((u))/((_))/((r))$'}
				_____REMOVING________['f', 'u', '_', 'r', 'e', 's']
				ANALYSING: fuyr
					resolving (3)
					> version: f/u/y/r
					TRYING: r
					> version: f/u/y/r
					TRYING: r
					> version: f/uy/r
					RESULT:  ['r']
				version split: ['f', 'u', 'y', 'r']
				{'string': 'f/u/y/r', 'rgx': '((f))/((uy)|(u))/((y))/((r))$'}
				version split: ['f', 'u', 'y', 'r']
				{'string': 'f/u/y/r', 'rgx': '((f))/((uy)|(u))/((y))/((r))$'}
				version split: ['f', 'uy', 'r']
				{'string': 'f/uy/r', 'rgx': '((f))/((uy)|(u))/((y))/((r))$'}
				_____REMOVING________['f', 'uy', 'r']
				ANALYSING: fuyre
					resolving (3)
					> version: f/u/y/r/e
					TRYING: r
					> version: f/u/y/r/e
					TRYING: r
					> version: f/uy/r/e
					TRYING: e
					RESULT:  ['r']
				version split: ['f', 'u', 'y', 'r', 'e']
				{'string': 'f/u/y/r/e', 'rgx': '((f))/((uy)|(u))/((y))/((r))$'}
				_____REMOVING________['f', 'u', 'y', 'r', 'e']
				version split: ['f', 'u', 'y', 'r', 'e']
				{'string': 'f/u/y/r/e', 'rgx': '((f))/((uy)|(u))/((y))/((r))$'}
				_____REMOVING________['f', 'u', 'y', 'r', 'e']
				version split: ['f', 'uy', 'r', 'e']
				{'string': 'f/uy/r/e', 'rgx': '((f))/((uy)|(u))/((y))/((r))$'}
				_____REMOVING________['f', 'uy', 'r', 'e']
				ANALYSING: fyr
					resolving (4)
					> version: f/y/r
					> version: f/y/r
					> version: f/y/_/r
					TRYING: r
					> version: f/y/_/r
					TRYING: r
					RESULT:  ['r']
				version split: ['f', 'y', 'r']
				{'string': 'f/y/r', 'rgx': '((f))/((y))/((_))/((r))$'}
				_____REMOVING________['f', 'y', 'r']
				version split: ['f', 'y', 'r']
				{'string': 'f/y/r', 'rgx': '((f))/((y))/((_))/((r))$'}
				_____REMOVING________['f', 'y', 'r']
				version split: ['f', 'y', '_', 'r']
				{'string': 'f/y/_/r', 'rgx': '((f))/((y))/((_))/((r))$'}
				version split: ['f', 'y', '_', 'r']
				{'string': 'f/y/_/r', 'rgx': '((f))/((y))/((_))/((r))$'}
				ANALYSING: fyre
					resolving (4)
					> version: f/y/r/e
					TRYING: e
					> version: f/y/r/e
					TRYING: e
					> version: f/y/_/r/e
					TRYING: r
					> version: f/y/_/r/e
					TRYING: r
					RESULT:  ['r']
				version split: ['f', 'y', 'r', 'e']
				{'string': 'f/y/r/e', 'rgx': '((f))/((y))/((_))/((r))$'}
				_____REMOVING________['f', 'y', 'r', 'e']
				version split: ['f', 'y', 'r', 'e']
				{'string': 'f/y/r/e', 'rgx': '((f))/((y))/((_))/((r))$'}
				_____REMOVING________['f', 'y', 'r', 'e']
				version split: ['f', 'y', '_', 'r', 'e']
				{'string': 'f/y/_/r/e', 'rgx': '((f))/((y))/((_))/((r))$'}
				_____REMOVING________['f', 'y', '_', 'r', 'e']
				version split: ['f', 'y', '_', 'r', 'e']
				{'string': 'f/y/_/r/e', 'rgx': '((f))/((y))/((_))/((r))$'}
				_____REMOVING________['f', 'y', '_', 'r', 'e']
				ANALYSING: uer
					resolving (6)
					> version: u/e/r
					> version: u/e/r
					> version: ue/r
					> version: u/e/_/r
					TRYING: r
					> version: u/e/_/r
					TRYING: r
					> version: ue/r/_
					RESULT:  ['r']
				version split: ['u', 'e', 'r']
				{'string': 'u/e/r', 'rgx': '((u))/((e))/((_))/((r))$'}
				_____REMOVING________['u', 'e', 'r']
				version split: ['u', 'e', 'r']
				{'string': 'u/e/r', 'rgx': '((u))/((e))/((_))/((r))$'}
				_____REMOVING________['u', 'e', 'r']
				version split: ['ue', 'r']
				{'string': 'ue/r', 'rgx': '((u))/((e))/((_))/((r))$'}
				_____REMOVING________['ue', 'r']
				version split: ['u', 'e', '_', 'r']
				{'string': 'u/e/_/r', 'rgx': '((u))/((e))/((_))/((r))$'}
				version split: ['u', 'e', '_', 'r']
				{'string': 'u/e/_/r', 'rgx': '((u))/((e))/((_))/((r))$'}
				version split: ['ue', 'r', '_']
				{'string': 'ue/r/_', 'rgx': '((u))/((e))/((_))/((r))$'}
				_____REMOVING________['ue', 'r', '_']
				ANALYSING: uere
					resolving (3)
					> version: u/e/r/e
					TRYING: e
					> version: u/e/r/e
					TRYING: e
					> version: ue/r/e
					RESULT:  ['_']
				adding dashed alternative: ['u', 'e', 'r', '_', 'e']
				adding dashed alternative: ['u', 'e', 'r', '_', 'e']
				adding dashed alternative: ['ue', 'r', 'e', '_']
				u/e/r/e(CVCV)
u/e/r/e(VVCV)
ue/r/e(VCV)
u/e/r/_/e(AVCAV)
u/e/r/_/e(AVCAV)
ue/r/e/_(VCVA)
				version split: ['u', 'e', 'r', 'e']
				{'string': 'u/e/r/e', 'rgx': '((u))/((e))/((e))/((_))$'}
				_____REMOVING________['u', 'e', 'r', 'e']
				version split: ['u', 'e', 'r', 'e']
				{'string': 'u/e/r/e', 'rgx': '((u))/((e))/((e))/((_))$'}
				_____REMOVING________['u', 'e', 'r', 'e']
				version split: ['ue', 'r', 'e']
				{'string': 'ue/r/e', 'rgx': '((u))/((e))/((e))/((_))$'}
				_____REMOVING________['ue', 'r', 'e']
				version split: ['u', 'e', 'r', '_', 'e']
				{'string': 'u/e/r/_/e', 'rgx': '((u))/((e))/((e))/((_))$'}
				_____REMOVING________['u', 'e', 'r', '_', 'e']
				version split: ['u', 'e', 'r', '_', 'e']
				{'string': 'u/e/r/_/e', 'rgx': '((u))/((e))/((e))/((_))$'}
				_____REMOVING________['u', 'e', 'r', '_', 'e']
				version split: ['ue', 'r', 'e', '_']
				{'string': 'ue/r/e/_', 'rgx': '((u))/((e))/((e))/((_))$'}
				_____REMOVING________['ue', 'r', 'e', '_']
				ANALYSING: ueréé
					resolving (12)
					> version: u/e/r/é/é
					TRYING: é
					> version: u/e/r/é/é
					TRYING: é
					> version: u/e/r/éé
					TRYING: éé
					> version: u/e/r/éé
					TRYING: éé
					> version: ue/r/é/é
					TRYING: é
					> version: ue/r/éé
					> version: u/e/_/r/é/é
					TRYING: r
					> version: u/e/_/r/é/é
					TRYING: r
					> version: u/e/_/r/éé
					TRYING: r
					> version: u/e/_/r/éé
					TRYING: r
					> version: ue/r/_/é/é
					TRYING: é
					> version: ue/r/_/éé
					TRYING: éé
					RESULT:  ['r']
				version split: ['u', 'e', 'r', 'é', 'é']
				{'string': 'u/e/r/é/é', 'rgx': '((u))/((e))/((_))/((r))$'}
				_____REMOVING________['u', 'e', 'r', 'é', 'é']
				version split: ['u', 'e', 'r', 'é', 'é']
				{'string': 'u/e/r/é/é', 'rgx': '((u))/((e))/((_))/((r))$'}
				_____REMOVING________['u', 'e', 'r', 'é', 'é']
				version split: ['u', 'e', 'r', 'éé']
				{'string': 'u/e/r/éé', 'rgx': '((u))/((e))/((_))/((r))$'}
				_____REMOVING________['u', 'e', 'r', 'éé']
				version split: ['u', 'e', 'r', 'éé']
				{'string': 'u/e/r/éé', 'rgx': '((u))/((e))/((_))/((r))$'}
				_____REMOVING________['u', 'e', 'r', 'éé']
				version split: ['ue', 'r', 'é', 'é']
				{'string': 'ue/r/é/é', 'rgx': '((u))/((e))/((_))/((r))$'}
				_____REMOVING________['ue', 'r', 'é', 'é']
				version split: ['ue', 'r', 'éé']
				{'string': 'ue/r/éé', 'rgx': '((u))/((e))/((_))/((r))$'}
				_____REMOVING________['ue', 'r', 'éé']
				version split: ['u', 'e', '_', 'r', 'é', 'é']
				{'string': 'u/e/_/r/é', 'rgx': '((u))/((e))/((_))/((r))$'}
				_____REMOVING________['u', 'e', '_', 'r', 'é', 'é']
				version split: ['u', 'e', '_', 'r', 'é', 'é']
				{'string': 'u/e/_/r/é', 'rgx': '((u))/((e))/((_))/((r))$'}
				_____REMOVING________['u', 'e', '_', 'r', 'é', 'é']
				version split: ['u', 'e', '_', 'r', 'éé']
				{'string': 'u/e/_/r/éé', 'rgx': '((u))/((e))/((_))/((r))$'}
				_____REMOVING________['u', 'e', '_', 'r', 'éé']
				version split: ['u', 'e', '_', 'r', 'éé']
				{'string': 'u/e/_/r/éé', 'rgx': '((u))/((e))/((_))/((r))$'}
				_____REMOVING________['u', 'e', '_', 'r', 'éé']
				version split: ['ue', 'r', '_', 'é', 'é']
				{'string': 'ue/r/_/é/é', 'rgx': '((u))/((e))/((_))/((r))$'}
				_____REMOVING________['ue', 'r', '_', 'é', 'é']
				version split: ['ue', 'r', '_', 'éé']
				{'string': 'ue/r/_/éé', 'rgx': '((u))/((e))/((_))/((r))$'}
				_____REMOVING________['ue', 'r', '_', 'éé']
				ANALYSING: uur
					resolving (4)
					> version: u/u/r
					> version: u/u/r
					> version: u/u/_/r
					TRYING: r
					> version: u/u/_/r
					TRYING: r
					RESULT:  ['r']
				version split: ['u', 'u', 'r']
				{'string': 'u/u/r', 'rgx': '((u))/((u))/((_))/((r))$'}
				_____REMOVING________['u', 'u', 'r']
				version split: ['u', 'u', 'r']
				{'string': 'u/u/r', 'rgx': '((u))/((u))/((_))/((r))$'}
				_____REMOVING________['u', 'u', 'r']
				version split: ['u', 'u', '_', 'r']
				{'string': 'u/u/_/r', 'rgx': '((u))/((u))/((_))/((r))$'}
				version split: ['u', 'u', '_', 'r']
				{'string': 'u/u/_/r', 'rgx': '((u))/((u))/((_))/((r))$'}
				ANALYSING: ver
					resolving (4)
					> version: v/e/r
					> version: v/e/r
					> version: v/e/_/r
					TRYING: r
					> version: v/e/_/r
					TRYING: r
					RESULT:  ['r']
				version split: ['v', 'e', 'r']
				{'string': 'v/e/r', 'rgx': '((v))/((e))/((_))/((r))$'}
				_____REMOVING________['v', 'e', 'r']
				version split: ['v', 'e', 'r']
				{'string': 'v/e/r', 'rgx': '((v))/((e))/((_))/((r))$'}
				_____REMOVING________['v', 'e', 'r']
				version split: ['v', 'e', '_', 'r']
				{'string': 'v/e/_/r', 'rgx': '((v))/((e))/((_))/((r))$'}
				version split: ['v', 'e', '_', 'r']
				{'string': 'v/e/_/r', 'rgx': '((v))/((e))/((_))/((r))$'}
				ANALYSING: vur
					resolving (4)
					> version: v/u/r
					> version: v/u/r
					> version: v/u/_/r
					TRYING: r
					> version: v/u/_/r
					TRYING: r
					RESULT:  ['r']
				version split: ['v', 'u', 'r']
				{'string': 'v/u/r', 'rgx': '((v))/((u))/((_))/((r))$'}
				_____REMOVING________['v', 'u', 'r']
				version split: ['v', 'u', 'r']
				{'string': 'v/u/r', 'rgx': '((v))/((u))/((_))/((r))$'}
				_____REMOVING________['v', 'u', 'r']
				version split: ['v', 'u', '_', 'r']
				{'string': 'v/u/_/r', 'rgx': '((v))/((u))/((_))/((r))$'}
				version split: ['v', 'u', '_', 'r']
				{'string': 'v/u/_/r', 'rgx': '((v))/((u))/((_))/((r))$'}
		only one version left: ['f', 'a', '_', 'r']
		only one version left: ['f', 'e', '_', 'r']
		FAIL: 
		only one version left: ['f', 'i', 'e', 'r']
		FAIL: 
		only one version left: ['f', 'i', '_', 'r']
		FAIL: 
		FAIL: 
		only one version left: ['f', 'u', '_', '_']
		only one version left: ['f', 'u', 'i', 'r']
		FAIL: 
		only one version left: ['f', 'u', '_', 'r']
		FAIL: 
		FAIL: 
		only one version left: ['f', 'u', 'y', 'r']
		FAIL: 
		only one version left: ['f', 'y', '_', 'r']
		FAIL: 
		only one version left: ['u', 'e', '_', 'r']
		FAIL: 
		FAIL: 
		only one version left: ['u', 'u', '_', 'r']
		only one version left: ['v', 'e', '_', 'r']
		only one version left: ['v', 'u', '_', 'r']
		SPLIT: ['f', 'a', 'i', 'r']
		SPLIT: ['f', 'a', '_', 'r']
		['f', 'a', '_', 'r']
		SPLIT: ['f', 'e', '_', 'r']
		['f', 'e', '_', 'r']
		SPLIT: ['f', 'e', '_', 'r', '----!']
		SPLIT: ['f', 'i', 'e', 'r']
		['f', 'i', 'e', 'r']
		['f', 'i', 'e', 'r']
		SPLIT: ['f', 'ie.i', 'e', 'r', '----!']
		SPLIT: ['f', 'i', '_', 'r']
		['f', 'i', '_', 'r']
		['f', 'i', '_', 'r']
		SPLIT: ['f', 'i', '_', 'r', '----!']
		SPLIT: ['f', 'i', '_', 'r', '----!']
		SPLIT: ['f', 'u', '_', '_']
		['f', 'u', '_', '_']
		['f', 'u', '_', '_']
		SPLIT: ['f', 'u', 'i', 'r']
		['f', 'u', 'i', 'r']
		['f', 'u', 'i', 'r']
		SPLIT: ['f', 'ui.u', 'i', 'r', '----!']
		SPLIT: ['f', 'u', '_', 'r']
		['f', 'u', '_', 'r']
		['f', 'u', '_', 'r']
		SPLIT: ['f', 'u', '_', 'r', '----!']
		SPLIT: ['f', 'u', '_', 'r', '----!']
		SPLIT: ['f', 'u', 'y', 'r']
		['f', 'u', 'y', 'r']
		['f', 'u', 'y', 'r']
		SPLIT: ['f', 'uy.u', 'y', 'r', '----!']
		SPLIT: ['f', 'y', '_', 'r']
		['f', 'y', '_', 'r']
		['f', 'y', '_', 'r']
		SPLIT: ['f', 'y', '_', 'r', '----!']
		SPLIT: ['u', 'e', '_', 'r']
		['u', 'e', '_', 'r']
		['u', 'e', '_', 'r']
		SPLIT: ['u', 'e', 'e', '_', '----!']
		SPLIT: ['u', 'e', '_', 'r', '----!']
		SPLIT: ['u', 'u', '_', 'r']
		['u', 'u', '_', 'r']
		['u', 'u', '_', 'r']
		SPLIT: ['v', 'e', '_', 'r']
		['v', 'e', '_', 'r']
		['v', 'e', '_', 'r']
		SPLIT: ['v', 'u', '_', 'r']
		['v', 'u', '_', 'r']
		['v', 'u', '_', 'r']
		version for pattern CVCC is INVALID
		[]
		11
		POSSIBLE CHANGE: 0 : Initial Fricative Voicing
		OVERVIEW: version for pattern CVCC

faulty splits: 11
fer----! <-! fere
fie.ier----! <-! fiere
fir----! <-! fire
fir----! <-! fires
fui.uir----! <-! fuire
fur----! <-! fure
fur----! <-! fures
fuy.uyr----! <-! fuyre
fyr----! <-! fyre
uee----! <-! uere
uer----! <-! ueréé
f | a | i | r
f | a | _ | r
f | e | _ | r
f | e | _ | r | ----!
f | i | e | r
f | ie.i | e | r | ----!
f | i | _ | r
f | i | _ | r | ----!
f | i | _ | r | ----!
f | u | _ | _
f | u | i | r
f | ui.u | i | r | ----!
f | u | _ | r
f | u | _ | r | ----!
f | u | _ | r | ----!
f | u | y | r
f | uy.u | y | r | ----!
f | y | _ | r
f | y | _ | r | ----!
u | e | _ | r
u | e | e | _ | ----!
u | e | _ | r | ----!
u | u | _ | r
v | e | _ | r
v | u | _ | r
2 : {'r', 'i', '_'},{'r', 'i'},{'_', 'r', 'i'}
	[[{'lit': 'ai', 'ln': 2, 'index': 1}]]
	[[{'lit': 'ie', 'ln': 2, 'index': 1}]]
	[[{'lit': 'ie', 'ln': 2, 'index': 1}]]
	[[{'lit': 'ui', 'ln': 2, 'index': 1}]]
	[[{'lit': 'ui', 'ln': 2, 'index': 1}]]
	[[{'lit': 'uy', 'ln': 2, 'index': 1}]]
	[[{'lit': 'uy', 'ln': 2, 'index': 1}]]
	[[{'lit': 'ue', 'ln': 2, 'index': 0}]]
	[[{'lit': 'ue', 'ln': 2, 'index': 0}]]
	[[{'lit': 'éé', 'ln': 2, 'index': 3}], [{'lit': 'ue', 'ln': 2, 'index': 0}]]
	[[{'lit': 'éé', 'ln': 2, 'index': 3}], [{'lit': 'ue', 'ln': 2, 'index': 0}], [{'lit': 'éé', 'ln': 2, 'index': 3}, {'lit': 'ue', 'ln': 2, 'index': 0}]]
	MIN pattern length=3
	Pattern CVCV is valid
	Pattern VVCV is invalid
	Pattern CCCVC is valid
	Pattern CVVCV is invalid
	Pattern CVCVV is invalid
	Pattern CC is invalid
	Pattern CCVCV is valid
	Pattern VVCVV is invalid
	Pattern CCCCV is invalid
	Pattern CCC is valid
	Pattern CCCC is invalid
	Pattern VCVV is invalid
	Pattern CV is invalid
	Pattern VC is invalid
	Pattern CVC is valid
	Pattern CVCVC is valid
	Pattern VCV is valid
	Pattern CVVC is invalid
	Pattern VVC is invalid
	Pattern CCCV is valid
	Pattern CVCC is valid
	Pattern CCVC is valid
	Making the selection for pattern: CCVC
	Selection for pattern: CCVC completed
	Making a version for pattern: CCVC
			___CCVC : 0___
				ANALYSING: fier
				adding littera based on matching pattern
				ANALYSING: fair
					resolving (3)
					> version: f/a/i/r
					TRYING: f
					> version: f/a/i/r
					TRYING: f
					> version: f/ai/r
					TRYING: f
					RESULT:  ['f']
				ANALYSING: far
					resolving (1)
					> version: f/a/r
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fer
					resolving (1)
					> version: f/e/r
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fere
					resolving (1)
					> version: f/e/r/e
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fiere
					resolving (3)
					> version: f/i/e/r/e
					TRYING: f
					> version: f/i/e/r/e
					TRYING: f
					> version: f/ie/r/e
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fir
					resolving (2)
					> version: f/i/r
					TRYING: f
					> version: f/i/r
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fire
					resolving (2)
					> version: f/i/r/e
					TRYING: f
					> version: f/i/r/e
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fires
					resolving (2)
					> version: f/i/r/e/s
					TRYING: f
					> version: f/i/r/e/s
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fu
					resolving (2)
					> version: f/u
					TRYING: f
					> version: f/u
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fuir
					resolving (3)
					> version: f/u/i/r
					TRYING: f
					> version: f/u/i/r
					TRYING: f
					> version: f/ui/r
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fuire
					resolving (3)
					> version: f/u/i/r/e
					TRYING: f
					> version: f/u/i/r/e
					TRYING: f
					> version: f/ui/r/e
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fur
					resolving (2)
					> version: f/u/r
					TRYING: f
					> version: f/u/r
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fure
					resolving (2)
					> version: f/u/r/e
					TRYING: f
					> version: f/u/r/e
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fures
					resolving (2)
					> version: f/u/r/e/s
					TRYING: f
					> version: f/u/r/e/s
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fuyr
					resolving (3)
					> version: f/u/y/r
					TRYING: f
					> version: f/u/y/r
					TRYING: f
					> version: f/uy/r
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fuyre
					resolving (3)
					> version: f/u/y/r/e
					TRYING: f
					> version: f/u/y/r/e
					TRYING: f
					> version: f/uy/r/e
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fyr
					resolving (2)
					> version: f/y/r
					TRYING: f
					> version: f/y/r
					TRYING: f
					RESULT:  ['f']
				ANALYSING: fyre
					resolving (2)
					> version: f/y/r/e
					TRYING: f
					> version: f/y/r/e
					TRYING: f
					RESULT:  ['f']
				ANALYSING: uer
					resolving (3)
					> version: u/e/r
					TRYING: u
					> version: u/e/r
					TRYING: u
					> version: ue/r
					TRYING: ue
					RESULT:  ['u']
				ANALYSING: uere
					resolving (3)
					> version: u/e/r/e
					TRYING: u
					> version: u/e/r/e
					TRYING: u
					> version: ue/r/e
					TRYING: ue
					RESULT:  ['u']
				ANALYSING: ueréé
					resolving (6)
					> version: u/e/r/é/é
					TRYING: u
					> version: u/e/r/é/é
					TRYING: u
					> version: u/e/r/éé
					TRYING: u
					> version: u/e/r/éé
					TRYING: u
					> version: ue/r/é/é
					TRYING: ue
					> version: ue/r/éé
					TRYING: ue
					RESULT:  ['u']
				ANALYSING: uur
					resolving (2)
					> version: u/u/r
					TRYING: u
					> version: u/u/r
					TRYING: u
					RESULT:  ['u']
				ANALYSING: ver
					resolving (2)
					> version: v/e/r
					TRYING: v
					> version: v/e/r
					TRYING: v
					RESULT:  ['v']
				ANALYSING: vur
					resolving (2)
					> version: v/u/r
					TRYING: v
					> version: v/u/r
					TRYING: v
					RESULT:  ['v']
			___CCVC : 1___
				ANALYSING: fier
				adding littera based on matching pattern
				ANALYSING: fair
					resolving (3)
					> version: f/a/i/r
					TRYING: a
					> version: f/a/i/r
					TRYING: a
					> version: f/ai/r
					TRYING: ai
					>>> MULTIPLE RESOLVE OPTIONS: {'ai', 'a'}
					RESULT:  ['ai', 'a']
				ANALYSING: far
					resolving (1)
					> version: f/a/r
					TRYING: a
					RESULT:  ['a']
				ANALYSING: fer
					resolving (1)
					> version: f/e/r
					TRYING: e
					RESULT:  ['e']
				ANALYSING: fere
					resolving (1)
					> version: f/e/r/e
					TRYING: e
					RESULT:  ['e']
				ANALYSING: fiere
					resolving (3)
					> version: f/i/e/r/e
					TRYING: i
					> version: f/i/e/r/e
					TRYING: i
					> version: f/ie/r/e
					TRYING: ie
					>>> MULTIPLE RESOLVE OPTIONS: {'ie', 'i'}
					RESULT:  ['ie', 'i']
				ANALYSING: fir
					resolving (2)
					> version: f/i/r
					TRYING: i
					> version: f/i/r
					TRYING: i
					RESULT:  ['i']
				ANALYSING: fire
					resolving (2)
					> version: f/i/r/e
					TRYING: i
					> version: f/i/r/e
					TRYING: i
					RESULT:  ['i']
				ANALYSING: fires
					resolving (2)
					> version: f/i/r/e/s
					TRYING: i
					> version: f/i/r/e/s
					TRYING: i
					RESULT:  ['i']
				ANALYSING: fu
					resolving (2)
					> version: f/u
					TRYING: u
					> version: f/u
					TRYING: u
					RESULT:  ['u']
				ANALYSING: fuir
					resolving (3)
					> version: f/u/i/r
					TRYING: u
					> version: f/u/i/r
					TRYING: u
					> version: f/ui/r
					TRYING: ui
					>>> MULTIPLE RESOLVE OPTIONS: {'ui', 'u'}
					RESULT:  ['ui', 'u']
				ANALYSING: fuire
					resolving (3)
					> version: f/u/i/r/e
					TRYING: u
					> version: f/u/i/r/e
					TRYING: u
					> version: f/ui/r/e
					TRYING: ui
					>>> MULTIPLE RESOLVE OPTIONS: {'ui', 'u'}
					RESULT:  ['ui', 'u']
				ANALYSING: fur
					resolving (2)
					> version: f/u/r
					TRYING: u
					> version: f/u/r
					TRYING: u
					RESULT:  ['u']
				ANALYSING: fure
					resolving (2)
					> version: f/u/r/e
					TRYING: u
					> version: f/u/r/e
					TRYING: u
					RESULT:  ['u']
				ANALYSING: fures
					resolving (2)
					> version: f/u/r/e/s
					TRYING: u
					> version: f/u/r/e/s
					TRYING: u
					RESULT:  ['u']
				ANALYSING: fuyr
					resolving (3)
					> version: f/u/y/r
					TRYING: u
					> version: f/u/y/r
					TRYING: u
					> version: f/uy/r
					TRYING: uy
					>>> MULTIPLE RESOLVE OPTIONS: {'uy', 'u'}
					RESULT:  ['uy', 'u']
				ANALYSING: fuyre
					resolving (3)
					> version: f/u/y/r/e
					TRYING: u
					> version: f/u/y/r/e
					TRYING: u
					> version: f/uy/r/e
					TRYING: uy
					>>> MULTIPLE RESOLVE OPTIONS: {'uy', 'u'}
					RESULT:  ['uy', 'u']
				ANALYSING: fyr
					resolving (2)
					> version: f/y/r
					TRYING: y
					> version: f/y/r
					TRYING: y
					RESULT:  ['y']
				ANALYSING: fyre
					resolving (2)
					> version: f/y/r/e
					TRYING: y
					> version: f/y/r/e
					TRYING: y
					RESULT:  ['y']
				ANALYSING: uer
					resolving (3)
					> version: u/e/r
					TRYING: e
					> version: u/e/r
					TRYING: e
					> version: ue/r
					TRYING: r
					RESULT:  ['e']
				ANALYSING: uere
					resolving (3)
					> version: u/e/r/e
					TRYING: e
					> version: u/e/r/e
					TRYING: e
					> version: ue/r/e
					TRYING: r
					RESULT:  ['e']
				ANALYSING: ueréé
					resolving (6)
					> version: u/e/r/é/é
					TRYING: e
					> version: u/e/r/é/é
					TRYING: e
					> version: u/e/r/éé
					TRYING: e
					> version: u/e/r/éé
					TRYING: e
					> version: ue/r/é/é
					TRYING: r
					> version: ue/r/éé
					TRYING: r
					RESULT:  ['e']
				ANALYSING: uur
					resolving (2)
					> version: u/u/r
					TRYING: u
					> version: u/u/r
					TRYING: u
					RESULT:  ['u']
				ANALYSING: ver
					resolving (2)
					> version: v/e/r
					TRYING: e
					> version: v/e/r
					TRYING: e
					RESULT:  ['e']
				ANALYSING: vur
					resolving (2)
					> version: v/u/r
					TRYING: u
					> version: v/u/r
					TRYING: u
					RESULT:  ['u']
			___CCVC : 2___
				ANALYSING: fier
				adding littera based on matching pattern
				ANALYSING: fair
					resolving (3)
					> version: f/a/i/r
					TRYING: i
					> version: f/a/i/r
					TRYING: i
					> version: f/ai/r
					TRYING: r
					RESULT:  ['i']
				ANALYSING: far
					resolving (1)
					> version: f/a/r
					TRYING: r
					RESULT:  ['_']
				adding dashed alternative: ['f', 'a', '_', 'r']
				f/a/r(CVC)
f/a/_/r(CVAC)
				ANALYSING: fer
					resolving (1)
					> version: f/e/r
					TRYING: r
					RESULT:  ['_']
				adding dashed alternative: ['f', 'e', '_', 'r']
				f/e/r(CVC)
f/e/_/r(CVAC)
				ANALYSING: fere
					resolving (1)
					> version: f/e/r/e
					TRYING: r
					RESULT:  ['_']
				adding dashed alternative: ['f', 'e', '_', 'r', 'e']
				f/e/r/e(CVCV)
f/e/_/r/e(CVACV)
				ANALYSING: fiere
					resolving (3)
					> version: f/i/e/r/e
					TRYING: e
					> version: f/i/e/r/e
					TRYING: e
					> version: f/ie/r/e
					TRYING: r
					RESULT:  ['e']
				ANALYSING: fir
					resolving (2)
					> version: f/i/r
					TRYING: r
					> version: f/i/r
					TRYING: r
					RESULT:  ['_']
				adding dashed alternative: ['f', 'i', '_', 'r']
				adding dashed alternative: ['f', 'i', '_', 'r']
				f/i/r(CCC)
f/i/r(CVC)
f/i/_/r(CAAC)
f/i/_/r(CAAC)
				ANALYSING: fire
					resolving (2)
					> version: f/i/r/e
					TRYING: r
					> version: f/i/r/e
					TRYING: r
					RESULT:  ['_']
				adding dashed alternative: ['f', 'i', '_', 'r', 'e']
				adding dashed alternative: ['f', 'i', '_', 'r', 'e']
				f/i/r/e(CCCV)
f/i/r/e(CVCV)
f/i/_/r/e(CAACV)
f/i/_/r/e(CAACV)
				ANALYSING: fires
					resolving (2)
					> version: f/i/r/e/s
					TRYING: r
					> version: f/i/r/e/s
					TRYING: r
					RESULT:  ['_']
				adding dashed alternative: ['f', 'i', '_', 'r', 'e', 's']
				adding dashed alternative: ['f', 'i', '_', 'r', 'e', 's']
				f/i/r/e/s(CCCVC)
f/i/r/e/s(CVCVC)
f/i/_/r/e/s(CAACVC)
f/i/_/r/e/s(CAACVC)
				ANALYSING: fu
					resolving (2)
					> version: f/u
					> version: f/u
					RESULT:  ['_']
				adding dashed alternative: ['f', 'u', '_']
				adding dashed alternative: ['f', 'u', '_']
				f/u(CC)
f/u(CV)
f/u/_(CAA)
f/u/_(CAA)
				ANALYSING: fuir
					resolving (3)
					> version: f/u/i/r
					TRYING: i
					> version: f/u/i/r
					TRYING: i
					> version: f/ui/r
					TRYING: r
					RESULT:  ['i']
				ANALYSING: fuire
					resolving (3)
					> version: f/u/i/r/e
					TRYING: i
					> version: f/u/i/r/e
					TRYING: i
					> version: f/ui/r/e
					TRYING: r
					RESULT:  ['i']
				ANALYSING: fur
					resolving (2)
					> version: f/u/r
					TRYING: r
					> version: f/u/r
					TRYING: r
					RESULT:  ['_']
				adding dashed alternative: ['f', 'u', '_', 'r']
				adding dashed alternative: ['f', 'u', '_', 'r']
				f/u/r(CCC)
f/u/r(CVC)
f/u/_/r(CAAC)
f/u/_/r(CAAC)
				ANALYSING: fure
					resolving (2)
					> version: f/u/r/e
					TRYING: r
					> version: f/u/r/e
					TRYING: r
					RESULT:  ['_']
				adding dashed alternative: ['f', 'u', '_', 'r', 'e']
				adding dashed alternative: ['f', 'u', '_', 'r', 'e']
				f/u/r/e(CCCV)
f/u/r/e(CVCV)
f/u/_/r/e(CAACV)
f/u/_/r/e(CAACV)
				ANALYSING: fures
					resolving (2)
					> version: f/u/r/e/s
					TRYING: r
					> version: f/u/r/e/s
					TRYING: r
					RESULT:  ['_']
				adding dashed alternative: ['f', 'u', '_', 'r', 'e', 's']
				adding dashed alternative: ['f', 'u', '_', 'r', 'e', 's']
				f/u/r/e/s(CCCVC)
f/u/r/e/s(CVCVC)
f/u/_/r/e/s(CAACVC)
f/u/_/r/e/s(CAACVC)
				ANALYSING: fuyr
					resolving (3)
					> version: f/u/y/r
					TRYING: y
					> version: f/u/y/r
					TRYING: y
					> version: f/uy/r
					TRYING: r
					RESULT:  ['y']
				ANALYSING: fuyre
					resolving (3)
					> version: f/u/y/r/e
					TRYING: y
					> version: f/u/y/r/e
					TRYING: y
					> version: f/uy/r/e
					TRYING: r
					RESULT:  ['y']
				ANALYSING: fyr
					resolving (2)
					> version: f/y/r
					TRYING: r
					> version: f/y/r
					TRYING: r
					RESULT:  ['_']
				adding dashed alternative: ['f', 'y', '_', 'r']
				adding dashed alternative: ['f', 'y', '_', 'r']
				f/y/r(CCC)
f/y/r(CVC)
f/y/_/r(CAAC)
f/y/_/r(CAAC)
				ANALYSING: fyre
					resolving (2)
					> version: f/y/r/e
					TRYING: r
					> version: f/y/r/e
					TRYING: r
					RESULT:  ['_']
				adding dashed alternative: ['f', 'y', '_', 'r', 'e']
				adding dashed alternative: ['f', 'y', '_', 'r', 'e']
				f/y/r/e(CCCV)
f/y/r/e(CVCV)
f/y/_/r/e(CAACV)
f/y/_/r/e(CAACV)
				ANALYSING: uer
					resolving (3)
					> version: u/e/r
					TRYING: r
					> version: u/e/r
					TRYING: r
					> version: ue/r
					RESULT:  ['_']
				adding dashed alternative: ['u', 'e', '_', 'r']
				adding dashed alternative: ['u', 'e', '_', 'r']
				adding dashed alternative: ['ue', 'r', '_']
				u/e/r(CVC)
u/e/r(VVC)
ue/r(VC)
u/e/_/r(AVAC)
u/e/_/r(AVAC)
ue/r/_(VCA)
				ANALYSING: uere
					resolving (3)
					> version: u/e/r/e
					TRYING: r
					> version: u/e/r/e
					TRYING: r
					> version: ue/r/e
					TRYING: e
					RESULT:  ['e']
				ANALYSING: ueréé
					resolving (6)
					> version: u/e/r/é/é
					TRYING: r
					> version: u/e/r/é/é
					TRYING: r
					> version: u/e/r/éé
					TRYING: r
					> version: u/e/r/éé
					TRYING: r
					> version: ue/r/é/é
					TRYING: é
					adding blocked set: V = V >> e, _, é, y, i
					> version: ue/r/éé
					TRYING: éé
					adding blocked set: V = V >> e, _, éé, y, i
					RESULT:  ['_']
				adding dashed alternative: ['u', 'e', '_', 'r', 'é', 'é']
				adding dashed alternative: ['u', 'e', '_', 'r', 'é', 'é']
				adding dashed alternative: ['u', 'e', '_', 'r', 'éé']
				adding dashed alternative: ['u', 'e', '_', 'r', 'éé']
				adding dashed alternative: ['ue', 'r', '_', 'é', 'é']
				adding dashed alternative: ['ue', 'r', '_', 'éé']
				u/e/r/é/é(CVCVV)
u/e/r/é/é(VVCVV)
u/e/r/éé(CVCV)
u/e/r/éé(VVCV)
ue/r/é/é(VCVV)
ue/r/éé(VCV)
u/e/_/r/é/é(AVACVV)
u/e/_/r/é/é(AVACVV)
u/e/_/r/éé(AVACV)
u/e/_/r/éé(AVACV)
ue/r/_/é/é(VCAVV)
ue/r/_/éé(VCAV)
				ANALYSING: uur
					resolving (2)
					> version: u/u/r
					TRYING: r
					> version: u/u/r
					TRYING: r
					RESULT:  ['_']
				adding dashed alternative: ['u', 'u', '_', 'r']
				adding dashed alternative: ['u', 'u', '_', 'r']
				u/u/r(CCC)
u/u/r(VVC)
u/u/_/r(AAAC)
u/u/_/r(AAAC)
				ANALYSING: ver
					resolving (2)
					> version: v/e/r
					TRYING: r
					> version: v/e/r
					TRYING: r
					RESULT:  ['_']
				adding dashed alternative: ['v', 'e', '_', 'r']
				adding dashed alternative: ['v', 'e', '_', 'r']
				v/e/r(CVC)
v/e/r(VVC)
v/e/_/r(AVAC)
v/e/_/r(AVAC)
				ANALYSING: vur
					resolving (2)
					> version: v/u/r
					TRYING: r
					> version: v/u/r
					TRYING: r
					RESULT:  ['_']
				adding dashed alternative: ['v', 'u', '_', 'r']
				adding dashed alternative: ['v', 'u', '_', 'r']
				v/u/r(CCC)
v/u/r(VVC)
v/u/_/r(AAAC)
v/u/_/r(AAAC)
			___CCVC : 3___
				ANALYSING: fier
				adding littera based on matching pattern
				ANALYSING: fair
					resolving (3)
					> version: f/a/i/r
					TRYING: r
					> version: f/a/i/r
					TRYING: r
					> version: f/ai/r
					RESULT:  ['r']
				version split: ['f', 'a', 'i', 'r']
				{'string': 'f/a/i/r', 'rgx': '((f))/((ai)|(a))/((i))/((r))$'}
				version split: ['f', 'a', 'i', 'r']
				{'string': 'f/a/i/r', 'rgx': '((f))/((ai)|(a))/((i))/((r))$'}
				version split: ['f', 'ai', 'r']
				{'string': 'f/ai/r', 'rgx': '((f))/((ai)|(a))/((i))/((r))$'}
				_____REMOVING________['f', 'ai', 'r']
				ANALYSING: far
					resolving (2)
					> version: f/a/r
					> version: f/a/_/r
					TRYING: r
					RESULT:  ['r']
				version split: ['f', 'a', 'r']
				{'string': 'f/a/r', 'rgx': '((f))/((a))/((_))/((r))$'}
				_____REMOVING________['f', 'a', 'r']
				version split: ['f', 'a', '_', 'r']
				{'string': 'f/a/_/r', 'rgx': '((f))/((a))/((_))/((r))$'}
				ANALYSING: fer
					resolving (2)
					> version: f/e/r
					> version: f/e/_/r
					TRYING: r
					RESULT:  ['r']
				version split: ['f', 'e', 'r']
				{'string': 'f/e/r', 'rgx': '((f))/((e))/((_))/((r))$'}
				_____REMOVING________['f', 'e', 'r']
				version split: ['f', 'e', '_', 'r']
				{'string': 'f/e/_/r', 'rgx': '((f))/((e))/((_))/((r))$'}
				ANALYSING: fere
					resolving (2)
					> version: f/e/r/e
					TRYING: e
					> version: f/e/_/r/e
					TRYING: r
					RESULT:  ['r']
				version split: ['f', 'e', 'r', 'e']
				{'string': 'f/e/r/e', 'rgx': '((f))/((e))/((_))/((r))$'}
				_____REMOVING________['f', 'e', 'r', 'e']
				version split: ['f', 'e', '_', 'r', 'e']
				{'string': 'f/e/_/r/e', 'rgx': '((f))/((e))/((_))/((r))$'}
				_____REMOVING________['f', 'e', '_', 'r', 'e']
				ANALYSING: fiere
					resolving (3)
					> version: f/i/e/r/e
					TRYING: r
					> version: f/i/e/r/e
					TRYING: r
					> version: f/ie/r/e
					TRYING: e
					RESULT:  ['r']
				version split: ['f', 'i', 'e', 'r', 'e']
				{'string': 'f/i/e/r/e', 'rgx': '((f))/((ie)|(i))/((e))/((r))$'}
				_____REMOVING________['f', 'i', 'e', 'r', 'e']
				version split: ['f', 'i', 'e', 'r', 'e']
				{'string': 'f/i/e/r/e', 'rgx': '((f))/((ie)|(i))/((e))/((r))$'}
				_____REMOVING________['f', 'i', 'e', 'r', 'e']
				version split: ['f', 'ie', 'r', 'e']
				{'string': 'f/ie/r/e', 'rgx': '((f))/((ie)|(i))/((e))/((r))$'}
				_____REMOVING________['f', 'ie', 'r', 'e']
				ANALYSING: fir
					resolving (4)
					> version: f/i/r
					> version: f/i/r
					> version: f/i/_/r
					TRYING: r
					> version: f/i/_/r
					TRYING: r
					RESULT:  ['r']
				version split: ['f', 'i', 'r']
				{'string': 'f/i/r', 'rgx': '((f))/((i))/((_))/((r))$'}
				_____REMOVING________['f', 'i', 'r']
				version split: ['f', 'i', 'r']
				{'string': 'f/i/r', 'rgx': '((f))/((i))/((_))/((r))$'}
				_____REMOVING________['f', 'i', 'r']
				version split: ['f', 'i', '_', 'r']
				{'string': 'f/i/_/r', 'rgx': '((f))/((i))/((_))/((r))$'}
				version split: ['f', 'i', '_', 'r']
				{'string': 'f/i/_/r', 'rgx': '((f))/((i))/((_))/((r))$'}
				ANALYSING: fire
					resolving (4)
					> version: f/i/r/e
					TRYING: e
					> version: f/i/r/e
					TRYING: e
					> version: f/i/_/r/e
					TRYING: r
					> version: f/i/_/r/e
					TRYING: r
					RESULT:  ['r']
				version split: ['f', 'i', 'r', 'e']
				{'string': 'f/i/r/e', 'rgx': '((f))/((i))/((_))/((r))$'}
				_____REMOVING________['f', 'i', 'r', 'e']
				version split: ['f', 'i', 'r', 'e']
				{'string': 'f/i/r/e', 'rgx': '((f))/((i))/((_))/((r))$'}
				_____REMOVING________['f', 'i', 'r', 'e']
				version split: ['f', 'i', '_', 'r', 'e']
				{'string': 'f/i/_/r/e', 'rgx': '((f))/((i))/((_))/((r))$'}
				_____REMOVING________['f', 'i', '_', 'r', 'e']
				version split: ['f', 'i', '_', 'r', 'e']
				{'string': 'f/i/_/r/e', 'rgx': '((f))/((i))/((_))/((r))$'}
				_____REMOVING________['f', 'i', '_', 'r', 'e']
				ANALYSING: fires
					resolving (4)
					> version: f/i/r/e/s
					TRYING: e
					> version: f/i/r/e/s
					TRYING: e
					> version: f/i/_/r/e/s
					TRYING: r
					> version: f/i/_/r/e/s
					TRYING: r
					RESULT:  ['r']
				version split: ['f', 'i', 'r', 'e', 's']
				{'string': 'f/i/r/e/s', 'rgx': '((f))/((i))/((_))/((r))$'}
				_____REMOVING________['f', 'i', 'r', 'e', 's']
				version split: ['f', 'i', 'r', 'e', 's']
				{'string': 'f/i/r/e/s', 'rgx': '((f))/((i))/((_))/((r))$'}
				_____REMOVING________['f', 'i', 'r', 'e', 's']
				version split: ['f', 'i', '_', 'r', 'e', 's']
				{'string': 'f/i/_/r/e', 'rgx': '((f))/((i))/((_))/((r))$'}
				_____REMOVING________['f', 'i', '_', 'r', 'e', 's']
				version split: ['f', 'i', '_', 'r', 'e', 's']
				{'string': 'f/i/_/r/e', 'rgx': '((f))/((i))/((_))/((r))$'}
				_____REMOVING________['f', 'i', '_', 'r', 'e', 's']
				ANALYSING: fu
					resolving (4)
					> version: f/u
					> version: f/u
					> version: f/u/_
					> version: f/u/_
					RESULT:  ['_']
				adding dashed alternative: ['f', 'u', '_']
				adding dashed alternative: ['f', 'u', '_']
				adding dashed alternative: ['f', 'u', '_', '_']
				adding dashed alternative: ['f', 'u', '_', '_']
				f/u(CC)
f/u(CV)
f/u/_(CAA)
f/u/_(CAA)
f/u/_(CAA)
f/u/_(CAA)
f/u/_/_(CAAA)
f/u/_/_(CAAA)
				version split: ['f', 'u']
				{'string': 'f/u', 'rgx': '((f))/((u))/((_))/((_))$'}
				_____REMOVING________['f', 'u']
				version split: ['f', 'u']
				{'string': 'f/u', 'rgx': '((f))/((u))/((_))/((_))$'}
				_____REMOVING________['f', 'u']
				version split: ['f', 'u', '_']
				{'string': 'f/u/_', 'rgx': '((f))/((u))/((_))/((_))$'}
				_____REMOVING________['f', 'u', '_']
				version split: ['f', 'u', '_']
				{'string': 'f/u/_', 'rgx': '((f))/((u))/((_))/((_))$'}
				_____REMOVING________['f', 'u', '_']
				version split: ['f', 'u', '_']
				{'string': 'f/u/_', 'rgx': '((f))/((u))/((_))/((_))$'}
				_____REMOVING________['f', 'u', '_']
				version split: ['f', 'u', '_']
				{'string': 'f/u/_', 'rgx': '((f))/((u))/((_))/((_))$'}
				_____REMOVING________['f', 'u', '_']
				version split: ['f', 'u', '_', '_']
				{'string': 'f/u/_/_', 'rgx': '((f))/((u))/((_))/((_))$'}
				version split: ['f', 'u', '_', '_']
				{'string': 'f/u/_/_', 'rgx': '((f))/((u))/((_))/((_))$'}
				ANALYSING: fuir
					resolving (3)
					> version: f/u/i/r
					TRYING: r
					> version: f/u/i/r
					TRYING: r
					> version: f/ui/r
					RESULT:  ['r']
				version split: ['f', 'u', 'i', 'r']
				{'string': 'f/u/i/r', 'rgx': '((f))/((ui)|(u))/((i))/((r))$'}
				version split: ['f', 'u', 'i', 'r']
				{'string': 'f/u/i/r', 'rgx': '((f))/((ui)|(u))/((i))/((r))$'}
				version split: ['f', 'ui', 'r']
				{'string': 'f/ui/r', 'rgx': '((f))/((ui)|(u))/((i))/((r))$'}
				_____REMOVING________['f', 'ui', 'r']
				ANALYSING: fuire
					resolving (3)
					> version: f/u/i/r/e
					TRYING: r
					> version: f/u/i/r/e
					TRYING: r
					> version: f/ui/r/e
					TRYING: e
					RESULT:  ['r']
				version split: ['f', 'u', 'i', 'r', 'e']
				{'string': 'f/u/i/r/e', 'rgx': '((f))/((ui)|(u))/((i))/((r))$'}
				_____REMOVING________['f', 'u', 'i', 'r', 'e']
				version split: ['f', 'u', 'i', 'r', 'e']
				{'string': 'f/u/i/r/e', 'rgx': '((f))/((ui)|(u))/((i))/((r))$'}
				_____REMOVING________['f', 'u', 'i', 'r', 'e']
				version split: ['f', 'ui', 'r', 'e']
				{'string': 'f/ui/r/e', 'rgx': '((f))/((ui)|(u))/((i))/((r))$'}
				_____REMOVING________['f', 'ui', 'r', 'e']
				ANALYSING: fur
					resolving (4)
					> version: f/u/r
					> version: f/u/r
					> version: f/u/_/r
					TRYING: r
					> version: f/u/_/r
					TRYING: r
					RESULT:  ['r']
				version split: ['f', 'u', 'r']
				{'string': 'f/u/r', 'rgx': '((f))/((u))/((_))/((r))$'}
				_____REMOVING________['f', 'u', 'r']
				version split: ['f', 'u', 'r']
				{'string': 'f/u/r', 'rgx': '((f))/((u))/((_))/((r))$'}
				_____REMOVING________['f', 'u', 'r']
				version split: ['f', 'u', '_', 'r']
				{'string': 'f/u/_/r', 'rgx': '((f))/((u))/((_))/((r))$'}
				version split: ['f', 'u', '_', 'r']
				{'string': 'f/u/_/r', 'rgx': '((f))/((u))/((_))/((r))$'}
				ANALYSING: fure
					resolving (4)
					> version: f/u/r/e
					TRYING: e
					> version: f/u/r/e
					TRYING: e
					> version: f/u/_/r/e
					TRYING: r
					> version: f/u/_/r/e
					TRYING: r
					RESULT:  ['r']
				version split: ['f', 'u', 'r', 'e']
				{'string': 'f/u/r/e', 'rgx': '((f))/((u))/((_))/((r))$'}
				_____REMOVING________['f', 'u', 'r', 'e']
				version split: ['f', 'u', 'r', 'e']
				{'string': 'f/u/r/e', 'rgx': '((f))/((u))/((_))/((r))$'}
				_____REMOVING________['f', 'u', 'r', 'e']
				version split: ['f', 'u', '_', 'r', 'e']
				{'string': 'f/u/_/r/e', 'rgx': '((f))/((u))/((_))/((r))$'}
				_____REMOVING________['f', 'u', '_', 'r', 'e']
				version split: ['f', 'u', '_', 'r', 'e']
				{'string': 'f/u/_/r/e', 'rgx': '((f))/((u))/((_))/((r))$'}
				_____REMOVING________['f', 'u', '_', 'r', 'e']
				ANALYSING: fures
					resolving (4)
					> version: f/u/r/e/s
					TRYING: e
					> version: f/u/r/e/s
					TRYING: e
					> version: f/u/_/r/e/s
					TRYING: r
					> version: f/u/_/r/e/s
					TRYING: r
					RESULT:  ['r']
				version split: ['f', 'u', 'r', 'e', 's']
				{'string': 'f/u/r/e/s', 'rgx': '((f))/((u))/((_))/((r))$'}
				_____REMOVING________['f', 'u', 'r', 'e', 's']
				version split: ['f', 'u', 'r', 'e', 's']
				{'string': 'f/u/r/e/s', 'rgx': '((f))/((u))/((_))/((r))$'}
				_____REMOVING________['f', 'u', 'r', 'e', 's']
				version split: ['f', 'u', '_', 'r', 'e', 's']
				{'string': 'f/u/_/r/e', 'rgx': '((f))/((u))/((_))/((r))$'}
				_____REMOVING________['f', 'u', '_', 'r', 'e', 's']
				version split: ['f', 'u', '_', 'r', 'e', 's']
				{'string': 'f/u/_/r/e', 'rgx': '((f))/((u))/((_))/((r))$'}
				_____REMOVING________['f', 'u', '_', 'r', 'e', 's']
				ANALYSING: fuyr
					resolving (3)
					> version: f/u/y/r
					TRYING: r
					> version: f/u/y/r
					TRYING: r
					> version: f/uy/r
					RESULT:  ['r']
				version split: ['f', 'u', 'y', 'r']
				{'string': 'f/u/y/r', 'rgx': '((f))/((uy)|(u))/((y))/((r))$'}
				version split: ['f', 'u', 'y', 'r']
				{'string': 'f/u/y/r', 'rgx': '((f))/((uy)|(u))/((y))/((r))$'}
				version split: ['f', 'uy', 'r']
				{'string': 'f/uy/r', 'rgx': '((f))/((uy)|(u))/((y))/((r))$'}
				_____REMOVING________['f', 'uy', 'r']
				ANALYSING: fuyre
					resolving (3)
					> version: f/u/y/r/e
					TRYING: r
					> version: f/u/y/r/e
					TRYING: r
					> version: f/uy/r/e
					TRYING: e
					RESULT:  ['r']
				version split: ['f', 'u', 'y', 'r', 'e']
				{'string': 'f/u/y/r/e', 'rgx': '((f))/((uy)|(u))/((y))/((r))$'}
				_____REMOVING________['f', 'u', 'y', 'r', 'e']
				version split: ['f', 'u', 'y', 'r', 'e']
				{'string': 'f/u/y/r/e', 'rgx': '((f))/((uy)|(u))/((y))/((r))$'}
				_____REMOVING________['f', 'u', 'y', 'r', 'e']
				version split: ['f', 'uy', 'r', 'e']
				{'string': 'f/uy/r/e', 'rgx': '((f))/((uy)|(u))/((y))/((r))$'}
				_____REMOVING________['f', 'uy', 'r', 'e']
				ANALYSING: fyr
					resolving (4)
					> version: f/y/r
					> version: f/y/r
					> version: f/y/_/r
					TRYING: r
					> version: f/y/_/r
					TRYING: r
					RESULT:  ['r']
				version split: ['f', 'y', 'r']
				{'string': 'f/y/r', 'rgx': '((f))/((y))/((_))/((r))$'}
				_____REMOVING________['f', 'y', 'r']
				version split: ['f', 'y', 'r']
				{'string': 'f/y/r', 'rgx': '((f))/((y))/((_))/((r))$'}
				_____REMOVING________['f', 'y', 'r']
				version split: ['f', 'y', '_', 'r']
				{'string': 'f/y/_/r', 'rgx': '((f))/((y))/((_))/((r))$'}
				version split: ['f', 'y', '_', 'r']
				{'string': 'f/y/_/r', 'rgx': '((f))/((y))/((_))/((r))$'}
				ANALYSING: fyre
					resolving (4)
					> version: f/y/r/e
					TRYING: e
					> version: f/y/r/e
					TRYING: e
					> version: f/y/_/r/e
					TRYING: r
					> version: f/y/_/r/e
					TRYING: r
					RESULT:  ['r']
				version split: ['f', 'y', 'r', 'e']
				{'string': 'f/y/r/e', 'rgx': '((f))/((y))/((_))/((r))$'}
				_____REMOVING________['f', 'y', 'r', 'e']
				version split: ['f', 'y', 'r', 'e']
				{'string': 'f/y/r/e', 'rgx': '((f))/((y))/((_))/((r))$'}
				_____REMOVING________['f', 'y', 'r', 'e']
				version split: ['f', 'y', '_', 'r', 'e']
				{'string': 'f/y/_/r/e', 'rgx': '((f))/((y))/((_))/((r))$'}
				_____REMOVING________['f', 'y', '_', 'r', 'e']
				version split: ['f', 'y', '_', 'r', 'e']
				{'string': 'f/y/_/r/e', 'rgx': '((f))/((y))/((_))/((r))$'}
				_____REMOVING________['f', 'y', '_', 'r', 'e']
				ANALYSING: uer
					resolving (6)
					> version: u/e/r
					> version: u/e/r
					> version: ue/r
					> version: u/e/_/r
					TRYING: r
					> version: u/e/_/r
					TRYING: r
					> version: ue/r/_
					RESULT:  ['r']
				version split: ['u', 'e', 'r']
				{'string': 'u/e/r', 'rgx': '((u))/((e))/((_))/((r))$'}
				_____REMOVING________['u', 'e', 'r']
				version split: ['u', 'e', 'r']
				{'string': 'u/e/r', 'rgx': '((u))/((e))/((_))/((r))$'}
				_____REMOVING________['u', 'e', 'r']
				version split: ['ue', 'r']
				{'string': 'ue/r', 'rgx': '((u))/((e))/((_))/((r))$'}
				_____REMOVING________['ue', 'r']
				version split: ['u', 'e', '_', 'r']
				{'string': 'u/e/_/r', 'rgx': '((u))/((e))/((_))/((r))$'}
				version split: ['u', 'e', '_', 'r']
				{'string': 'u/e/_/r', 'rgx': '((u))/((e))/((_))/((r))$'}
				version split: ['ue', 'r', '_']
				{'string': 'ue/r/_', 'rgx': '((u))/((e))/((_))/((r))$'}
				_____REMOVING________['ue', 'r', '_']
				ANALYSING: uere
					resolving (3)
					> version: u/e/r/e
					TRYING: e
					> version: u/e/r/e
					TRYING: e
					> version: ue/r/e
					RESULT:  ['_']
				adding dashed alternative: ['u', 'e', 'r', '_', 'e']
				adding dashed alternative: ['u', 'e', 'r', '_', 'e']
				adding dashed alternative: ['ue', 'r', 'e', '_']
				u/e/r/e(CVCV)
u/e/r/e(VVCV)
ue/r/e(VCV)
u/e/r/_/e(AVCAV)
u/e/r/_/e(AVCAV)
ue/r/e/_(VCVA)
				version split: ['u', 'e', 'r', 'e']
				{'string': 'u/e/r/e', 'rgx': '((u))/((e))/((e))/((_))$'}
				_____REMOVING________['u', 'e', 'r', 'e']
				version split: ['u', 'e', 'r', 'e']
				{'string': 'u/e/r/e', 'rgx': '((u))/((e))/((e))/((_))$'}
				_____REMOVING________['u', 'e', 'r', 'e']
				version split: ['ue', 'r', 'e']
				{'string': 'ue/r/e', 'rgx': '((u))/((e))/((e))/((_))$'}
				_____REMOVING________['ue', 'r', 'e']
				version split: ['u', 'e', 'r', '_', 'e']
				{'string': 'u/e/r/_/e', 'rgx': '((u))/((e))/((e))/((_))$'}
				_____REMOVING________['u', 'e', 'r', '_', 'e']
				version split: ['u', 'e', 'r', '_', 'e']
				{'string': 'u/e/r/_/e', 'rgx': '((u))/((e))/((e))/((_))$'}
				_____REMOVING________['u', 'e', 'r', '_', 'e']
				version split: ['ue', 'r', 'e', '_']
				{'string': 'ue/r/e/_', 'rgx': '((u))/((e))/((e))/((_))$'}
				_____REMOVING________['ue', 'r', 'e', '_']
				ANALYSING: ueréé
					resolving (12)
					> version: u/e/r/é/é
					TRYING: é
					> version: u/e/r/é/é
					TRYING: é
					> version: u/e/r/éé
					TRYING: éé
					> version: u/e/r/éé
					TRYING: éé
					> version: ue/r/é/é
					TRYING: é
					> version: ue/r/éé
					> version: u/e/_/r/é/é
					TRYING: r
					> version: u/e/_/r/é/é
					TRYING: r
					> version: u/e/_/r/éé
					TRYING: r
					> version: u/e/_/r/éé
					TRYING: r
					> version: ue/r/_/é/é
					TRYING: é
					> version: ue/r/_/éé
					TRYING: éé
					RESULT:  ['r']
				version split: ['u', 'e', 'r', 'é', 'é']
				{'string': 'u/e/r/é/é', 'rgx': '((u))/((e))/((_))/((r))$'}
				_____REMOVING________['u', 'e', 'r', 'é', 'é']
				version split: ['u', 'e', 'r', 'é', 'é']
				{'string': 'u/e/r/é/é', 'rgx': '((u))/((e))/((_))/((r))$'}
				_____REMOVING________['u', 'e', 'r', 'é', 'é']
				version split: ['u', 'e', 'r', 'éé']
				{'string': 'u/e/r/éé', 'rgx': '((u))/((e))/((_))/((r))$'}
				_____REMOVING________['u', 'e', 'r', 'éé']
				version split: ['u', 'e', 'r', 'éé']
				{'string': 'u/e/r/éé', 'rgx': '((u))/((e))/((_))/((r))$'}
				_____REMOVING________['u', 'e', 'r', 'éé']
				version split: ['ue', 'r', 'é', 'é']
				{'string': 'ue/r/é/é', 'rgx': '((u))/((e))/((_))/((r))$'}
				_____REMOVING________['ue', 'r', 'é', 'é']
				version split: ['ue', 'r', 'éé']
				{'string': 'ue/r/éé', 'rgx': '((u))/((e))/((_))/((r))$'}
				_____REMOVING________['ue', 'r', 'éé']
				version split: ['u', 'e', '_', 'r', 'é', 'é']
				{'string': 'u/e/_/r/é', 'rgx': '((u))/((e))/((_))/((r))$'}
				_____REMOVING________['u', 'e', '_', 'r', 'é', 'é']
				version split: ['u', 'e', '_', 'r', 'é', 'é']
				{'string': 'u/e/_/r/é', 'rgx': '((u))/((e))/((_))/((r))$'}
				_____REMOVING________['u', 'e', '_', 'r', 'é', 'é']
				version split: ['u', 'e', '_', 'r', 'éé']
				{'string': 'u/e/_/r/éé', 'rgx': '((u))/((e))/((_))/((r))$'}
				_____REMOVING________['u', 'e', '_', 'r', 'éé']
				version split: ['u', 'e', '_', 'r', 'éé']
				{'string': 'u/e/_/r/éé', 'rgx': '((u))/((e))/((_))/((r))$'}
				_____REMOVING________['u', 'e', '_', 'r', 'éé']
				version split: ['ue', 'r', '_', 'é', 'é']
				{'string': 'ue/r/_/é/é', 'rgx': '((u))/((e))/((_))/((r))$'}
				_____REMOVING________['ue', 'r', '_', 'é', 'é']
				version split: ['ue', 'r', '_', 'éé']
				{'string': 'ue/r/_/éé', 'rgx': '((u))/((e))/((_))/((r))$'}
				_____REMOVING________['ue', 'r', '_', 'éé']
				ANALYSING: uur
					resolving (4)
					> version: u/u/r
					> version: u/u/r
					> version: u/u/_/r
					TRYING: r
					> version: u/u/_/r
					TRYING: r
					RESULT:  ['r']
				version split: ['u', 'u', 'r']
				{'string': 'u/u/r', 'rgx': '((u))/((u))/((_))/((r))$'}
				_____REMOVING________['u', 'u', 'r']
				version split: ['u', 'u', 'r']
				{'string': 'u/u/r', 'rgx': '((u))/((u))/((_))/((r))$'}
				_____REMOVING________['u', 'u', 'r']
				version split: ['u', 'u', '_', 'r']
				{'string': 'u/u/_/r', 'rgx': '((u))/((u))/((_))/((r))$'}
				version split: ['u', 'u', '_', 'r']
				{'string': 'u/u/_/r', 'rgx': '((u))/((u))/((_))/((r))$'}
				ANALYSING: ver
					resolving (4)
					> version: v/e/r
					> version: v/e/r
					> version: v/e/_/r
					TRYING: r
					> version: v/e/_/r
					TRYING: r
					RESULT:  ['r']
				version split: ['v', 'e', 'r']
				{'string': 'v/e/r', 'rgx': '((v))/((e))/((_))/((r))$'}
				_____REMOVING________['v', 'e', 'r']
				version split: ['v', 'e', 'r']
				{'string': 'v/e/r', 'rgx': '((v))/((e))/((_))/((r))$'}
				_____REMOVING________['v', 'e', 'r']
				version split: ['v', 'e', '_', 'r']
				{'string': 'v/e/_/r', 'rgx': '((v))/((e))/((_))/((r))$'}
				version split: ['v', 'e', '_', 'r']
				{'string': 'v/e/_/r', 'rgx': '((v))/((e))/((_))/((r))$'}
				ANALYSING: vur
					resolving (4)
					> version: v/u/r
					> version: v/u/r
					> version: v/u/_/r
					TRYING: r
					> version: v/u/_/r
					TRYING: r
					RESULT:  ['r']
				version split: ['v', 'u', 'r']
				{'string': 'v/u/r', 'rgx': '((v))/((u))/((_))/((r))$'}
				_____REMOVING________['v', 'u', 'r']
				version split: ['v', 'u', 'r']
				{'string': 'v/u/r', 'rgx': '((v))/((u))/((_))/((r))$'}
				_____REMOVING________['v', 'u', 'r']
				version split: ['v', 'u', '_', 'r']
				{'string': 'v/u/_/r', 'rgx': '((v))/((u))/((_))/((r))$'}
				version split: ['v', 'u', '_', 'r']
				{'string': 'v/u/_/r', 'rgx': '((v))/((u))/((_))/((r))$'}
		only one version left: ['f', 'a', 'i', 'r']
		only one version left: ['f', 'a', '_', 'r']
		only one version left: ['f', 'e', '_', 'r']
		FAIL: 
		FAIL: 
		only one version left: ['f', 'i', '_', 'r']
		FAIL: 
		FAIL: 
		only one version left: ['f', 'u', '_', '_']
		only one version left: ['f', 'u', 'i', 'r']
		FAIL: 
		only one version left: ['f', 'u', '_', 'r']
		FAIL: 
		FAIL: 
		only one version left: ['f', 'u', 'y', 'r']
		FAIL: 
		only one version left: ['f', 'y', '_', 'r']
		FAIL: 
		only one version left: ['u', 'e', '_', 'r']
		FAIL: 
		FAIL: 
		only one version left: ['u', 'u', '_', 'r']
		only one version left: ['v', 'e', '_', 'r']
		only one version left: ['v', 'u', '_', 'r']
		SPLIT: ['f', 'i', 'e', 'r']
		SPLIT: ['f', 'a', 'i', 'r']
		['f', 'a', 'i', 'r']
		['f', 'a', 'i', 'r']
		SPLIT: ['f', 'a', '_', 'r']
		['f', 'a', '_', 'r']
		SPLIT: ['f', 'e', '_', 'r']
		['f', 'e', '_', 'r']
		SPLIT: ['f', 'e', '_', 'r', '----!']
		SPLIT: ['f', 'ie.i', 'e', 'r', '----!']
		SPLIT: ['f', 'i', '_', 'r']
		['f', 'i', '_', 'r']
		['f', 'i', '_', 'r']
		SPLIT: ['f', 'i', '_', 'r', '----!']
		SPLIT: ['f', 'i', '_', 'r', '----!']
		SPLIT: ['f', 'u', '_', '_']
		['f', 'u', '_', '_']
		['f', 'u', '_', '_']
		SPLIT: ['f', 'u', 'i', 'r']
		['f', 'u', 'i', 'r']
		['f', 'u', 'i', 'r']
		SPLIT: ['f', 'ui.u', 'i', 'r', '----!']
		SPLIT: ['f', 'u', '_', 'r']
		['f', 'u', '_', 'r']
		['f', 'u', '_', 'r']
		SPLIT: ['f', 'u', '_', 'r', '----!']
		SPLIT: ['f', 'u', '_', 'r', '----!']
		SPLIT: ['f', 'u', 'y', 'r']
		['f', 'u', 'y', 'r']
		['f', 'u', 'y', 'r']
		SPLIT: ['f', 'uy.u', 'y', 'r', '----!']
		SPLIT: ['f', 'y', '_', 'r']
		['f', 'y', '_', 'r']
		['f', 'y', '_', 'r']
		SPLIT: ['f', 'y', '_', 'r', '----!']
		SPLIT: ['u', 'e', '_', 'r']
		['u', 'e', '_', 'r']
		['u', 'e', '_', 'r']
		SPLIT: ['u', 'e', 'e', '_', '----!']
		SPLIT: ['u', 'e', '_', 'r', '----!']
		SPLIT: ['u', 'u', '_', 'r']
		['u', 'u', '_', 'r']
		['u', 'u', '_', 'r']
		SPLIT: ['v', 'e', '_', 'r']
		['v', 'e', '_', 'r']
		['v', 'e', '_', 'r']
		SPLIT: ['v', 'u', '_', 'r']
		['v', 'u', '_', 'r']
		['v', 'u', '_', 'r']
		version for pattern CCVC is INVALID
		[]
		11
		POSSIBLE CHANGE: 0 : Initial Fricative Voicing
		OVERVIEW: version for pattern CCVC

faulty splits: 11
fer----! <-! fere
fie.ier----! <-! fiere
fir----! <-! fire
fir----! <-! fires
fui.uir----! <-! fuire
fur----! <-! fure
fur----! <-! fures
fuy.uyr----! <-! fuyre
fyr----! <-! fyre
uee----! <-! uere
uer----! <-! ueréé
f | i | e | r
f | a | i | r
f | a | _ | r
f | e | _ | r
f | e | _ | r | ----!
f | ie.i | e | r | ----!
f | i | _ | r
f | i | _ | r | ----!
f | i | _ | r | ----!
f | u | _ | _
f | u | i | r
f | ui.u | i | r | ----!
f | u | _ | r
f | u | _ | r | ----!
f | u | _ | r | ----!
f | u | y | r
f | uy.u | y | r | ----!
f | y | _ | r
f | y | _ | r | ----!
u | e | _ | r
u | e | e | _ | ----!
u | e | _ | r | ----!
u | u | _ | r
v | e | _ | r
v | u | _ | r
2 : {'e', '_', 'éé', 'y', 'i'},{'e', '_', 'é', 'y', 'i'}
	FOUND __ 2 __ VALID VERSION(S)
	POSSIBLE CHANGE: 0 : Initial Fricative Voicing
	OVERVIEW: version for pattern CCCVC

faulty splits: 0
f | i | r | e | s
f | u | r | e | s
f | ai | r | _ | _
f | a | r | _ | _
f | e | r | _ | _
f | e | r | e | _
f | ie | r | _ | _
f | ie | r | e | _
f | i | r | _ | _
f | i | r | e | _
f | u | _ | _ | _
f | ui | r | _ | _
f | ui | r | e | _
f | u | r | _ | _
f | u | r | e | _
f | uy | r | _ | _
f | uy | r | e | _
f | y | r | _ | _
f | y | r | e | _
u | e | r | _ | _
u | e | r | e | _
u | e | r | éé | _
u | u | r | _ | _
v | e | r | _ | _
v | u | r | _ | _
4 : {'r', 's', '_'},{'s', 'r'}
	{'CCVCC', 'CVCCC', 'VCVC', 'VCCV', 'CCVCCV'}
