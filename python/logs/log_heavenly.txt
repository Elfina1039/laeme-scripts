Analysis object initialized
{'eue': 1, 'he': 4, 'heo': 6, 'heofen': 2, 'heofenn': 1, 'heofon': 1, 'heoue': 1, 'heouen': 51, 'heouene': 5, 'heue': 1, 'heuen': 62, 'heuene': 2, 'houen': 1, 'lich': 1, 'liche': 1}
Lexel initialized
[[{'lit': 'eu', 'ln': 2, 'index': 0}], [{'lit': 'ue', 'ln': 2, 'index': 1}]]
[[{'lit': 'eu', 'ln': 2, 'index': 0}], [{'lit': 'ue', 'ln': 2, 'index': 1}], [{'lit': 'eu', 'ln': 2, 'index': 0}, {'lit': 'ue', 'ln': 2, 'index': 1}]]
[[{'lit': 'eo', 'ln': 2, 'index': 1}]]
[[{'lit': 'eo', 'ln': 2, 'index': 1}]]
[[{'lit': 'nn', 'ln': 2, 'index': 5}], [{'lit': 'eo', 'ln': 2, 'index': 1}]]
[[{'lit': 'nn', 'ln': 2, 'index': 5}], [{'lit': 'eo', 'ln': 2, 'index': 1}], [{'lit': 'nn', 'ln': 2, 'index': 5}, {'lit': 'eo', 'ln': 2, 'index': 1}]]
[[{'lit': 'eo', 'ln': 2, 'index': 1}]]
[[{'lit': 'ou', 'ln': 2, 'index': 2}], [{'lit': 'eo', 'ln': 2, 'index': 1}], [{'lit': 'ue', 'ln': 2, 'index': 3}]]
[[{'lit': 'ou', 'ln': 2, 'index': 2}], [{'lit': 'eo', 'ln': 2, 'index': 1}], [{'lit': 'ue', 'ln': 2, 'index': 3}], [{'lit': 'ou', 'ln': 2, 'index': 2}, {'lit': 'eo', 'ln': 2, 'index': 1}], [{'lit': 'ou', 'ln': 2, 'index': 2}, {'lit': 'ue', 'ln': 2, 'index': 3}], [{'lit': 'eo', 'ln': 2, 'index': 1}, {'lit': 'ue', 'ln': 2, 'index': 3}]]
[[{'lit': 'ou', 'ln': 2, 'index': 2}], [{'lit': 'eo', 'ln': 2, 'index': 1}], [{'lit': 'ue', 'ln': 2, 'index': 3}], [{'lit': 'ou', 'ln': 2, 'index': 2}, {'lit': 'eo', 'ln': 2, 'index': 1}], [{'lit': 'ou', 'ln': 2, 'index': 2}, {'lit': 'ue', 'ln': 2, 'index': 3}], [{'lit': 'eo', 'ln': 2, 'index': 1}, {'lit': 'ue', 'ln': 2, 'index': 3}], [{'lit': 'ou', 'ln': 2, 'index': 2}, {'lit': 'eo', 'ln': 2, 'index': 1}, {'lit': 'ue', 'ln': 2, 'index': 3}]]
[[{'lit': 'ou', 'ln': 2, 'index': 2}], [{'lit': 'eo', 'ln': 2, 'index': 1}], [{'lit': 'ue', 'ln': 2, 'index': 3}]]
[[{'lit': 'ou', 'ln': 2, 'index': 2}], [{'lit': 'eo', 'ln': 2, 'index': 1}], [{'lit': 'ue', 'ln': 2, 'index': 3}], [{'lit': 'ou', 'ln': 2, 'index': 2}, {'lit': 'eo', 'ln': 2, 'index': 1}], [{'lit': 'ou', 'ln': 2, 'index': 2}, {'lit': 'ue', 'ln': 2, 'index': 3}], [{'lit': 'eo', 'ln': 2, 'index': 1}, {'lit': 'ue', 'ln': 2, 'index': 3}]]
[[{'lit': 'ou', 'ln': 2, 'index': 2}], [{'lit': 'eo', 'ln': 2, 'index': 1}], [{'lit': 'ue', 'ln': 2, 'index': 3}], [{'lit': 'ou', 'ln': 2, 'index': 2}, {'lit': 'eo', 'ln': 2, 'index': 1}], [{'lit': 'ou', 'ln': 2, 'index': 2}, {'lit': 'ue', 'ln': 2, 'index': 3}], [{'lit': 'eo', 'ln': 2, 'index': 1}, {'lit': 'ue', 'ln': 2, 'index': 3}], [{'lit': 'ou', 'ln': 2, 'index': 2}, {'lit': 'eo', 'ln': 2, 'index': 1}, {'lit': 'ue', 'ln': 2, 'index': 3}]]
[[{'lit': 'ou', 'ln': 2, 'index': 2}], [{'lit': 'eo', 'ln': 2, 'index': 1}], [{'lit': 'ue', 'ln': 2, 'index': 3}]]
[[{'lit': 'ou', 'ln': 2, 'index': 2}], [{'lit': 'eo', 'ln': 2, 'index': 1}], [{'lit': 'ue', 'ln': 2, 'index': 3}], [{'lit': 'ou', 'ln': 2, 'index': 2}, {'lit': 'eo', 'ln': 2, 'index': 1}], [{'lit': 'ou', 'ln': 2, 'index': 2}, {'lit': 'ue', 'ln': 2, 'index': 3}], [{'lit': 'eo', 'ln': 2, 'index': 1}, {'lit': 'ue', 'ln': 2, 'index': 3}]]
[[{'lit': 'ou', 'ln': 2, 'index': 2}], [{'lit': 'eo', 'ln': 2, 'index': 1}], [{'lit': 'ue', 'ln': 2, 'index': 3}], [{'lit': 'ou', 'ln': 2, 'index': 2}, {'lit': 'eo', 'ln': 2, 'index': 1}], [{'lit': 'ou', 'ln': 2, 'index': 2}, {'lit': 'ue', 'ln': 2, 'index': 3}], [{'lit': 'eo', 'ln': 2, 'index': 1}, {'lit': 'ue', 'ln': 2, 'index': 3}], [{'lit': 'ou', 'ln': 2, 'index': 2}, {'lit': 'eo', 'ln': 2, 'index': 1}, {'lit': 'ue', 'ln': 2, 'index': 3}]]
[[{'lit': 'eu', 'ln': 2, 'index': 1}], [{'lit': 'ue', 'ln': 2, 'index': 2}]]
[[{'lit': 'eu', 'ln': 2, 'index': 1}], [{'lit': 'ue', 'ln': 2, 'index': 2}], [{'lit': 'eu', 'ln': 2, 'index': 1}, {'lit': 'ue', 'ln': 2, 'index': 2}]]
[[{'lit': 'eu', 'ln': 2, 'index': 1}], [{'lit': 'ue', 'ln': 2, 'index': 2}]]
[[{'lit': 'eu', 'ln': 2, 'index': 1}], [{'lit': 'ue', 'ln': 2, 'index': 2}], [{'lit': 'eu', 'ln': 2, 'index': 1}, {'lit': 'ue', 'ln': 2, 'index': 2}]]
[[{'lit': 'eu', 'ln': 2, 'index': 1}], [{'lit': 'ue', 'ln': 2, 'index': 2}]]
[[{'lit': 'eu', 'ln': 2, 'index': 1}], [{'lit': 'ue', 'ln': 2, 'index': 2}], [{'lit': 'eu', 'ln': 2, 'index': 1}, {'lit': 'ue', 'ln': 2, 'index': 2}]]
[[{'lit': 'ou', 'ln': 2, 'index': 1}], [{'lit': 'ue', 'ln': 2, 'index': 2}]]
[[{'lit': 'ou', 'ln': 2, 'index': 1}], [{'lit': 'ue', 'ln': 2, 'index': 2}], [{'lit': 'ou', 'ln': 2, 'index': 1}, {'lit': 'ue', 'ln': 2, 'index': 2}]]
[[{'lit': 'ch', 'ln': 2, 'index': 2}]]
[[{'lit': 'ch', 'ln': 2, 'index': 2}]]
MIN pattern length=5
Pattern VV is invalid
Pattern CV is invalid
Pattern CVV is invalid
Pattern CVVCVC is invalid
Pattern CVVCVCV is invalid
Pattern CVVVVC is invalid
Pattern CVVCV is invalid
Pattern CVVVCV is invalid
Pattern VCV is invalid
Pattern VVV is invalid
Pattern CVVC is invalid
Pattern CVC is invalid
Pattern CVCVCV is valid
Pattern CCCC is invalid
Pattern CVVVVCV is invalid
Pattern CVVV is invalid
Pattern CVVVC is invalid
Pattern CVVVV is invalid
Pattern CVCCV is valid
Pattern CVCVCC is valid
Pattern CVCC is invalid
Pattern CVCVC is valid
Pattern CCCV is invalid
Pattern CVVCVCC is invalid
Pattern CVCV is invalid
Pattern CCCCV is invalid
Pattern CCC is invalid
{'value': 6, 'patterns': ['CVCVC']}
	[[{'lit': 'eu', 'ln': 2, 'index': 0}], [{'lit': 'ue', 'ln': 2, 'index': 1}]]
	[[{'lit': 'eu', 'ln': 2, 'index': 0}], [{'lit': 'ue', 'ln': 2, 'index': 1}], [{'lit': 'eu', 'ln': 2, 'index': 0}, {'lit': 'ue', 'ln': 2, 'index': 1}]]
	[[{'lit': 'eo', 'ln': 2, 'index': 1}]]
	[[{'lit': 'eo', 'ln': 2, 'index': 1}]]
	[[{'lit': 'nn', 'ln': 2, 'index': 5}], [{'lit': 'eo', 'ln': 2, 'index': 1}]]
	[[{'lit': 'nn', 'ln': 2, 'index': 5}], [{'lit': 'eo', 'ln': 2, 'index': 1}], [{'lit': 'nn', 'ln': 2, 'index': 5}, {'lit': 'eo', 'ln': 2, 'index': 1}]]
	[[{'lit': 'eo', 'ln': 2, 'index': 1}]]
	[[{'lit': 'ou', 'ln': 2, 'index': 2}], [{'lit': 'eo', 'ln': 2, 'index': 1}], [{'lit': 'ue', 'ln': 2, 'index': 3}]]
	[[{'lit': 'ou', 'ln': 2, 'index': 2}], [{'lit': 'eo', 'ln': 2, 'index': 1}], [{'lit': 'ue', 'ln': 2, 'index': 3}], [{'lit': 'ou', 'ln': 2, 'index': 2}, {'lit': 'eo', 'ln': 2, 'index': 1}], [{'lit': 'ou', 'ln': 2, 'index': 2}, {'lit': 'ue', 'ln': 2, 'index': 3}], [{'lit': 'eo', 'ln': 2, 'index': 1}, {'lit': 'ue', 'ln': 2, 'index': 3}]]
	[[{'lit': 'ou', 'ln': 2, 'index': 2}], [{'lit': 'eo', 'ln': 2, 'index': 1}], [{'lit': 'ue', 'ln': 2, 'index': 3}], [{'lit': 'ou', 'ln': 2, 'index': 2}, {'lit': 'eo', 'ln': 2, 'index': 1}], [{'lit': 'ou', 'ln': 2, 'index': 2}, {'lit': 'ue', 'ln': 2, 'index': 3}], [{'lit': 'eo', 'ln': 2, 'index': 1}, {'lit': 'ue', 'ln': 2, 'index': 3}], [{'lit': 'ou', 'ln': 2, 'index': 2}, {'lit': 'eo', 'ln': 2, 'index': 1}, {'lit': 'ue', 'ln': 2, 'index': 3}]]
	[[{'lit': 'ou', 'ln': 2, 'index': 2}], [{'lit': 'eo', 'ln': 2, 'index': 1}], [{'lit': 'ue', 'ln': 2, 'index': 3}]]
	[[{'lit': 'ou', 'ln': 2, 'index': 2}], [{'lit': 'eo', 'ln': 2, 'index': 1}], [{'lit': 'ue', 'ln': 2, 'index': 3}], [{'lit': 'ou', 'ln': 2, 'index': 2}, {'lit': 'eo', 'ln': 2, 'index': 1}], [{'lit': 'ou', 'ln': 2, 'index': 2}, {'lit': 'ue', 'ln': 2, 'index': 3}], [{'lit': 'eo', 'ln': 2, 'index': 1}, {'lit': 'ue', 'ln': 2, 'index': 3}]]
	[[{'lit': 'ou', 'ln': 2, 'index': 2}], [{'lit': 'eo', 'ln': 2, 'index': 1}], [{'lit': 'ue', 'ln': 2, 'index': 3}], [{'lit': 'ou', 'ln': 2, 'index': 2}, {'lit': 'eo', 'ln': 2, 'index': 1}], [{'lit': 'ou', 'ln': 2, 'index': 2}, {'lit': 'ue', 'ln': 2, 'index': 3}], [{'lit': 'eo', 'ln': 2, 'index': 1}, {'lit': 'ue', 'ln': 2, 'index': 3}], [{'lit': 'ou', 'ln': 2, 'index': 2}, {'lit': 'eo', 'ln': 2, 'index': 1}, {'lit': 'ue', 'ln': 2, 'index': 3}]]
	[[{'lit': 'ou', 'ln': 2, 'index': 2}], [{'lit': 'eo', 'ln': 2, 'index': 1}], [{'lit': 'ue', 'ln': 2, 'index': 3}]]
	[[{'lit': 'ou', 'ln': 2, 'index': 2}], [{'lit': 'eo', 'ln': 2, 'index': 1}], [{'lit': 'ue', 'ln': 2, 'index': 3}], [{'lit': 'ou', 'ln': 2, 'index': 2}, {'lit': 'eo', 'ln': 2, 'index': 1}], [{'lit': 'ou', 'ln': 2, 'index': 2}, {'lit': 'ue', 'ln': 2, 'index': 3}], [{'lit': 'eo', 'ln': 2, 'index': 1}, {'lit': 'ue', 'ln': 2, 'index': 3}]]
	[[{'lit': 'ou', 'ln': 2, 'index': 2}], [{'lit': 'eo', 'ln': 2, 'index': 1}], [{'lit': 'ue', 'ln': 2, 'index': 3}], [{'lit': 'ou', 'ln': 2, 'index': 2}, {'lit': 'eo', 'ln': 2, 'index': 1}], [{'lit': 'ou', 'ln': 2, 'index': 2}, {'lit': 'ue', 'ln': 2, 'index': 3}], [{'lit': 'eo', 'ln': 2, 'index': 1}, {'lit': 'ue', 'ln': 2, 'index': 3}], [{'lit': 'ou', 'ln': 2, 'index': 2}, {'lit': 'eo', 'ln': 2, 'index': 1}, {'lit': 'ue', 'ln': 2, 'index': 3}]]
	[[{'lit': 'eu', 'ln': 2, 'index': 1}], [{'lit': 'ue', 'ln': 2, 'index': 2}]]
	[[{'lit': 'eu', 'ln': 2, 'index': 1}], [{'lit': 'ue', 'ln': 2, 'index': 2}], [{'lit': 'eu', 'ln': 2, 'index': 1}, {'lit': 'ue', 'ln': 2, 'index': 2}]]
	[[{'lit': 'eu', 'ln': 2, 'index': 1}], [{'lit': 'ue', 'ln': 2, 'index': 2}]]
	[[{'lit': 'eu', 'ln': 2, 'index': 1}], [{'lit': 'ue', 'ln': 2, 'index': 2}], [{'lit': 'eu', 'ln': 2, 'index': 1}, {'lit': 'ue', 'ln': 2, 'index': 2}]]
	[[{'lit': 'eu', 'ln': 2, 'index': 1}], [{'lit': 'ue', 'ln': 2, 'index': 2}]]
	[[{'lit': 'eu', 'ln': 2, 'index': 1}], [{'lit': 'ue', 'ln': 2, 'index': 2}], [{'lit': 'eu', 'ln': 2, 'index': 1}, {'lit': 'ue', 'ln': 2, 'index': 2}]]
	[[{'lit': 'ou', 'ln': 2, 'index': 1}], [{'lit': 'ue', 'ln': 2, 'index': 2}]]
	[[{'lit': 'ou', 'ln': 2, 'index': 1}], [{'lit': 'ue', 'ln': 2, 'index': 2}], [{'lit': 'ou', 'ln': 2, 'index': 1}, {'lit': 'ue', 'ln': 2, 'index': 2}]]
	[[{'lit': 'ch', 'ln': 2, 'index': 2}]]
	[[{'lit': 'ch', 'ln': 2, 'index': 2}]]
	MIN pattern length=5
	Pattern VV is invalid
	Pattern CV is invalid
	Pattern CVV is invalid
	Pattern CVVCVC is invalid
	Pattern CVVCVCV is invalid
	Pattern CVVVVC is invalid
	Pattern CVVCV is invalid
	Pattern CVVVCV is invalid
	Pattern VCV is invalid
	Pattern VVV is invalid
	Pattern CVVC is invalid
	Pattern CVC is invalid
	Pattern CVCVCV is valid
	Pattern CCCC is invalid
	Pattern CVVVVCV is invalid
	Pattern CVVV is invalid
	Pattern CVVVC is invalid
	Pattern CVVVV is invalid
	Pattern CVCCV is valid
	Pattern CVCVCC is valid
	Pattern CVCC is invalid
	Pattern CVCVC is valid
	Pattern CCCV is invalid
	Pattern CVVCVCC is invalid
	Pattern CVCV is invalid
	Pattern CCCCV is invalid
	Pattern CCC is invalid
	Making the selection for pattern: CVCVCV
	Selection for pattern: CVCVCV completed
	Making a version for pattern: CVCVCV
			___CVCVCV : 0___
				ANALYSING: heouene
				adding littera based on matching pattern
				ANALYSING: heuene
				adding littera based on matching pattern
				ANALYSING: eue
					resolving (5)
					> version: e/u/e
					TRYING: e
					> version: e/u/e
					TRYING: e
					> version: eu/e
					TRYING: eu
					> version: e/ue
					TRYING: e
					> version: eu/e
					TRYING: eu
					RESULT:  ['_']
				adding dashed alternative: ['_', 'e', 'u', 'e']
				adding dashed alternative: ['_', 'e', 'u', 'e']
				adding dashed alternative: ['_', 'eu', 'e']
				adding dashed alternative: ['_', 'e', 'ue']
				adding dashed alternative: ['_', 'eu', 'e']
				e/u/e(VCV)
e/u/e(VVV)
eu/e(VV)
e/ue(VV)
eu/e(VV)
_/e/u/e(AVAV)
_/e/u/e(AVAV)
_/eu/e(AVV)
_/e/ue(AVV)
_/eu/e(AVV)
				ANALYSING: he
					resolving (1)
					> version: h/e
					TRYING: h
					RESULT:  ['h']
				ANALYSING: heo
					resolving (2)
					> version: h/e/o
					TRYING: h
					> version: h/eo
					TRYING: h
					RESULT:  ['h']
				ANALYSING: heofen
					resolving (2)
					> version: h/e/o/f/e/n
					TRYING: h
					> version: h/eo/f/e/n
					TRYING: h
					RESULT:  ['h']
				ANALYSING: heofenn
					resolving (4)
					> version: h/e/o/f/e/n/n
					TRYING: h
					> version: h/e/o/f/e/nn
					TRYING: h
					> version: h/eo/f/e/n/n
					TRYING: h
					> version: h/eo/f/e/nn
					TRYING: h
					RESULT:  ['h']
				ANALYSING: heofon
					resolving (2)
					> version: h/e/o/f/o/n
					TRYING: h
					> version: h/eo/f/o/n
					TRYING: h
					RESULT:  ['h']
				ANALYSING: heoue
					resolving (11)
					> version: h/e/o/u/e
					TRYING: h
					> version: h/e/o/u/e
					TRYING: h
					> version: h/e/ou/e
					TRYING: h
					> version: h/eo/u/e
					TRYING: h
					> version: h/eo/u/e
					TRYING: h
					> version: h/e/o/ue
					TRYING: h
					> version: h/eo/u/e
					TRYING: h
					> version: h/eo/u/e
					TRYING: h
					> version: h/e/ou/e
					TRYING: h
					> version: h/eo/ue
					TRYING: h
					> version: h/eo/ue
					TRYING: h
					RESULT:  ['h']
				ANALYSING: heouen
					resolving (11)
					> version: h/e/o/u/e/n
					TRYING: h
					> version: h/e/o/u/e/n
					TRYING: h
					> version: h/e/ou/e/n
					TRYING: h
					> version: h/eo/u/e/n
					TRYING: h
					> version: h/eo/u/e/n
					TRYING: h
					> version: h/e/o/ue/n
					TRYING: h
					> version: h/eo/u/e/n
					TRYING: h
					> version: h/eo/u/e/n
					TRYING: h
					> version: h/e/ou/e/n
					TRYING: h
					> version: h/eo/ue/n
					TRYING: h
					> version: h/eo/ue/n
					TRYING: h
					RESULT:  ['h']
				ANALYSING: heue
					resolving (5)
					> version: h/e/u/e
					TRYING: h
					> version: h/e/u/e
					TRYING: h
					> version: h/eu/e
					TRYING: h
					> version: h/e/ue
					TRYING: h
					> version: h/eu/e
					TRYING: h
					RESULT:  ['h']
				ANALYSING: heuen
					resolving (5)
					> version: h/e/u/e/n
					TRYING: h
					> version: h/e/u/e/n
					TRYING: h
					> version: h/eu/e/n
					TRYING: h
					> version: h/e/ue/n
					TRYING: h
					> version: h/eu/e/n
					TRYING: h
					RESULT:  ['h']
				ANALYSING: houen
					resolving (5)
					> version: h/o/u/e/n
					TRYING: h
					> version: h/o/u/e/n
					TRYING: h
					> version: h/ou/e/n
					TRYING: h
					> version: h/o/ue/n
					TRYING: h
					> version: h/ou/e/n
					TRYING: h
					RESULT:  ['h']
				ANALYSING: lich
					resolving (4)
					> version: l/i/c/h
					TRYING: l
					adding blocked set: C = C >> h, _, l
					> version: l/i/c/h
					TRYING: l
					adding blocked set: C = C >> h, _, l
					> version: l/i/ch
					TRYING: l
					adding blocked set: C = C >> h, _, l
					> version: l/i/ch
					TRYING: l
					adding blocked set: C = C >> h, _, l
					RESULT:  ['_']
				adding dashed alternative: ['_', 'l', 'i', 'c', 'h']
				adding dashed alternative: ['_', 'l', 'i', 'c', 'h']
				adding dashed alternative: ['_', 'l', 'i', 'ch']
				adding dashed alternative: ['_', 'l', 'i', 'ch']
				l/i/c/h(CCCC)
l/i/c/h(CVCC)
l/i/ch(CCC)
l/i/ch(CVC)
_/l/i/c/h(ACACC)
_/l/i/c/h(ACACC)
_/l/i/ch(ACAC)
_/l/i/ch(ACAC)
				ANALYSING: liche
					resolving (4)
					> version: l/i/c/h/e
					TRYING: l
					adding blocked set: C = C >> h, _, l
					> version: l/i/c/h/e
					TRYING: l
					adding blocked set: C = C >> h, _, l
					> version: l/i/ch/e
					TRYING: l
					adding blocked set: C = C >> h, _, l
					> version: l/i/ch/e
					TRYING: l
					adding blocked set: C = C >> h, _, l
					RESULT:  ['_']
				adding dashed alternative: ['_', 'l', 'i', 'c', 'h', 'e']
				adding dashed alternative: ['_', 'l', 'i', 'c', 'h', 'e']
				adding dashed alternative: ['_', 'l', 'i', 'ch', 'e']
				adding dashed alternative: ['_', 'l', 'i', 'ch', 'e']
				l/i/c/h/e(CCCCV)
l/i/c/h/e(CVCCV)
l/i/ch/e(CCCV)
l/i/ch/e(CVCV)
_/l/i/c/h/e(ACACCV)
_/l/i/c/h/e(ACACCV)
_/l/i/ch/e(ACACV)
_/l/i/ch/e(ACACV)
			___CVCVCV : 1___
				ANALYSING: heouene
				adding littera based on matching pattern
				ANALYSING: heuene
				adding littera based on matching pattern
				ANALYSING: eue
					resolving (10)
					> version: e/u/e
					TRYING: u
					> version: e/u/e
					TRYING: u
					> version: eu/e
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e'}
					> version: e/ue
					TRYING: ue
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: eu/e
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: _/e/u/e
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: _/e/u/e
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: _/eu/e
					TRYING: eu
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'eu', 'ue'}
					> version: _/e/ue
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'eu', 'ue'}
					> version: _/eu/e
					TRYING: eu
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'eu', 'ue'}
					RESULT:  ['u', 'e', 'eu', 'ue']
				ANALYSING: he
					resolving (1)
					> version: h/e
					TRYING: e
					adding blocked set: V = V >> u, eu, ue, eo, e
					RESULT:  ['_']
				adding dashed alternative: ['h', '_', 'e']
				h/e(CV)
h/_/e(CAV)
				ANALYSING: heo
					resolving (2)
					> version: h/e/o
					TRYING: e
					adding blocked set: V = V >> u, eu, ue, _, eo, e
					> version: h/eo
					TRYING: eo
					adding blocked set: V = V >> u, eu, ue, _, eo, e
					RESULT:  ['_']
				adding dashed alternative: ['h', '_', 'e', 'o']
				adding dashed alternative: ['h', '_', 'eo']
				h/e/o(CVV)
h/eo(CV)
h/_/e/o(CAVV)
h/_/eo(CAV)
				ANALYSING: heofen
					resolving (2)
					> version: h/e/o/f/e/n
					TRYING: e
					adding blocked set: V = V >> u, eu, ue, _, eo, e
					> version: h/eo/f/e/n
					TRYING: eo
					adding blocked set: V = V >> u, eu, ue, _, eo, e
					RESULT:  ['_']
				adding dashed alternative: ['h', '_', 'e', 'o', 'f', 'e', 'n']
				adding dashed alternative: ['h', '_', 'eo', 'f', 'e', 'n']
				h/e/o/f/e/n(CVVCVC)
h/eo/f/e/n(CVCVC)
h/_/e/o/f/e/n(CAVVCVC)
h/_/eo/f/e/n(CAVCVC)
				ANALYSING: heofenn
					resolving (4)
					> version: h/e/o/f/e/n/n
					TRYING: e
					adding blocked set: V = V >> u, eu, ue, _, eo, e
					> version: h/e/o/f/e/nn
					TRYING: e
					adding blocked set: V = V >> u, eu, ue, _, eo, e
					> version: h/eo/f/e/n/n
					TRYING: eo
					adding blocked set: V = V >> u, eu, ue, _, eo, e
					> version: h/eo/f/e/nn
					TRYING: eo
					adding blocked set: V = V >> u, eu, ue, _, eo, e
					RESULT:  ['_']
				adding dashed alternative: ['h', '_', 'e', 'o', 'f', 'e', 'n', 'n']
				adding dashed alternative: ['h', '_', 'e', 'o', 'f', 'e', 'nn']
				adding dashed alternative: ['h', '_', 'eo', 'f', 'e', 'n', 'n']
				adding dashed alternative: ['h', '_', 'eo', 'f', 'e', 'nn']
				h/e/o/f/e/n/n(CVVCVCC)
h/e/o/f/e/nn(CVVCVC)
h/eo/f/e/n/n(CVCVCC)
h/eo/f/e/nn(CVCVC)
h/_/e/o/f/e/n/n(CAVVCVCC)
h/_/e/o/f/e/nn(CAVVCVC)
h/_/eo/f/e/n/n(CAVCVCC)
h/_/eo/f/e/nn(CAVCVC)
				ANALYSING: heofon
					resolving (2)
					> version: h/e/o/f/o/n
					TRYING: e
					adding blocked set: V = V >> u, eu, ue, _, eo, e
					> version: h/eo/f/o/n
					TRYING: eo
					adding blocked set: V = V >> u, eu, ue, _, eo, e
					RESULT:  ['_']
				adding dashed alternative: ['h', '_', 'e', 'o', 'f', 'o', 'n']
				adding dashed alternative: ['h', '_', 'eo', 'f', 'o', 'n']
				h/e/o/f/o/n(CVVCVC)
h/eo/f/o/n(CVCVC)
h/_/e/o/f/o/n(CAVVCVC)
h/_/eo/f/o/n(CAVCVC)
				ANALYSING: heoue
					resolving (11)
					> version: h/e/o/u/e
					TRYING: e
					adding blocked set: V = V >> u, eu, ue, _, eo, e
					> version: h/e/o/u/e
					TRYING: e
					adding blocked set: V = V >> u, eu, ue, _, eo, e
					> version: h/e/ou/e
					TRYING: e
					adding blocked set: V = V >> u, eu, ue, _, eo, e
					> version: h/eo/u/e
					TRYING: eo
					adding blocked set: V = V >> u, eu, ue, _, eo, e
					> version: h/eo/u/e
					TRYING: eo
					adding blocked set: V = V >> u, eu, ue, _, eo, e
					> version: h/e/o/ue
					TRYING: e
					adding blocked set: V = V >> u, eu, ue, _, eo, e
					> version: h/eo/u/e
					TRYING: eo
					adding blocked set: V = V >> u, eu, ue, _, eo, e
					> version: h/eo/u/e
					TRYING: eo
					adding blocked set: V = V >> u, eu, ue, _, eo, e
					> version: h/e/ou/e
					TRYING: e
					adding blocked set: V = V >> u, eu, ue, _, eo, e
					> version: h/eo/ue
					TRYING: eo
					adding blocked set: V = V >> u, eu, ue, _, eo, e
					> version: h/eo/ue
					TRYING: eo
					adding blocked set: V = V >> u, eu, ue, _, eo, e
					RESULT:  ['_']
				adding dashed alternative: ['h', '_', 'e', 'o', 'u', 'e']
				adding dashed alternative: ['h', '_', 'e', 'o', 'u', 'e']
				adding dashed alternative: ['h', '_', 'e', 'ou', 'e']
				adding dashed alternative: ['h', '_', 'eo', 'u', 'e']
				adding dashed alternative: ['h', '_', 'eo', 'u', 'e']
				adding dashed alternative: ['h', '_', 'e', 'o', 'ue']
				adding dashed alternative: ['h', '_', 'eo', 'u', 'e']
				adding dashed alternative: ['h', '_', 'eo', 'u', 'e']
				adding dashed alternative: ['h', '_', 'e', 'ou', 'e']
				adding dashed alternative: ['h', '_', 'eo', 'ue']
				adding dashed alternative: ['h', '_', 'eo', 'ue']
				h/e/o/u/e(CVVCV)
h/e/o/u/e(CVVVV)
h/e/ou/e(CVVV)
h/eo/u/e(CVCV)
h/eo/u/e(CVVV)
h/e/o/ue(CVVV)
h/eo/u/e(CVCV)
h/eo/u/e(CVVV)
h/e/ou/e(CVVV)
h/eo/ue(CVV)
h/eo/ue(CVV)
h/_/e/o/u/e(CAVVAV)
h/_/e/o/u/e(CAVVAV)
h/_/e/ou/e(CAVVV)
h/_/eo/u/e(CAVAV)
h/_/eo/u/e(CAVAV)
h/_/e/o/ue(CAVVV)
h/_/eo/u/e(CAVAV)
h/_/eo/u/e(CAVAV)
h/_/e/ou/e(CAVVV)
h/_/eo/ue(CAVV)
h/_/eo/ue(CAVV)
				ANALYSING: heouen
					resolving (11)
					> version: h/e/o/u/e/n
					TRYING: e
					adding blocked set: V = V >> u, eu, ue, _, eo, e
					> version: h/e/o/u/e/n
					TRYING: e
					adding blocked set: V = V >> u, eu, ue, _, eo, e
					> version: h/e/ou/e/n
					TRYING: e
					adding blocked set: V = V >> u, eu, ue, _, eo, e
					> version: h/eo/u/e/n
					TRYING: eo
					adding blocked set: V = V >> u, eu, ue, _, eo, e
					> version: h/eo/u/e/n
					TRYING: eo
					adding blocked set: V = V >> u, eu, ue, _, eo, e
					> version: h/e/o/ue/n
					TRYING: e
					adding blocked set: V = V >> u, eu, ue, _, eo, e
					> version: h/eo/u/e/n
					TRYING: eo
					adding blocked set: V = V >> u, eu, ue, _, eo, e
					> version: h/eo/u/e/n
					TRYING: eo
					adding blocked set: V = V >> u, eu, ue, _, eo, e
					> version: h/e/ou/e/n
					TRYING: e
					adding blocked set: V = V >> u, eu, ue, _, eo, e
					> version: h/eo/ue/n
					TRYING: eo
					adding blocked set: V = V >> u, eu, ue, _, eo, e
					> version: h/eo/ue/n
					TRYING: eo
					adding blocked set: V = V >> u, eu, ue, _, eo, e
					RESULT:  ['_']
				adding dashed alternative: ['h', '_', 'e', 'o', 'u', 'e', 'n']
				adding dashed alternative: ['h', '_', 'e', 'o', 'u', 'e', 'n']
				adding dashed alternative: ['h', '_', 'e', 'ou', 'e', 'n']
				adding dashed alternative: ['h', '_', 'eo', 'u', 'e', 'n']
				adding dashed alternative: ['h', '_', 'eo', 'u', 'e', 'n']
				adding dashed alternative: ['h', '_', 'e', 'o', 'ue', 'n']
				adding dashed alternative: ['h', '_', 'eo', 'u', 'e', 'n']
				adding dashed alternative: ['h', '_', 'eo', 'u', 'e', 'n']
				adding dashed alternative: ['h', '_', 'e', 'ou', 'e', 'n']
				adding dashed alternative: ['h', '_', 'eo', 'ue', 'n']
				adding dashed alternative: ['h', '_', 'eo', 'ue', 'n']
				h/e/o/u/e/n(CVVCVC)
h/e/o/u/e/n(CVVVVC)
h/e/ou/e/n(CVVVC)
h/eo/u/e/n(CVCVC)
h/eo/u/e/n(CVVVC)
h/e/o/ue/n(CVVVC)
h/eo/u/e/n(CVCVC)
h/eo/u/e/n(CVVVC)
h/e/ou/e/n(CVVVC)
h/eo/ue/n(CVVC)
h/eo/ue/n(CVVC)
h/_/e/o/u/e/n(CAVVAVC)
h/_/e/o/u/e/n(CAVVAVC)
h/_/e/ou/e/n(CAVVVC)
h/_/eo/u/e/n(CAVAVC)
h/_/eo/u/e/n(CAVAVC)
h/_/e/o/ue/n(CAVVVC)
h/_/eo/u/e/n(CAVAVC)
h/_/eo/u/e/n(CAVAVC)
h/_/e/ou/e/n(CAVVVC)
h/_/eo/ue/n(CAVVC)
h/_/eo/ue/n(CAVVC)
				ANALYSING: heue
					resolving (5)
					> version: h/e/u/e
					TRYING: e
					adding blocked set: V = V >> u, eu, ue, _, eo, e
					> version: h/e/u/e
					TRYING: e
					adding blocked set: V = V >> u, eu, ue, _, eo, e
					> version: h/eu/e
					TRYING: eu
					adding blocked set: V = V >> u, eu, ue, _, eo, e
					> version: h/e/ue
					TRYING: e
					adding blocked set: V = V >> u, eu, ue, _, eo, e
					> version: h/eu/e
					TRYING: eu
					adding blocked set: V = V >> u, eu, ue, _, eo, e
					RESULT:  ['_']
				adding dashed alternative: ['h', '_', 'e', 'u', 'e']
				adding dashed alternative: ['h', '_', 'e', 'u', 'e']
				adding dashed alternative: ['h', '_', 'eu', 'e']
				adding dashed alternative: ['h', '_', 'e', 'ue']
				adding dashed alternative: ['h', '_', 'eu', 'e']
				h/e/u/e(CVCV)
h/e/u/e(CVVV)
h/eu/e(CVV)
h/e/ue(CVV)
h/eu/e(CVV)
h/_/e/u/e(CAVAV)
h/_/e/u/e(CAVAV)
h/_/eu/e(CAVV)
h/_/e/ue(CAVV)
h/_/eu/e(CAVV)
				ANALYSING: heuen
					resolving (5)
					> version: h/e/u/e/n
					TRYING: e
					adding blocked set: V = V >> u, eu, ue, _, eo, e
					> version: h/e/u/e/n
					TRYING: e
					adding blocked set: V = V >> u, eu, ue, _, eo, e
					> version: h/eu/e/n
					TRYING: eu
					adding blocked set: V = V >> u, eu, ue, _, eo, e
					> version: h/e/ue/n
					TRYING: e
					adding blocked set: V = V >> u, eu, ue, _, eo, e
					> version: h/eu/e/n
					TRYING: eu
					adding blocked set: V = V >> u, eu, ue, _, eo, e
					RESULT:  ['_']
				adding dashed alternative: ['h', '_', 'e', 'u', 'e', 'n']
				adding dashed alternative: ['h', '_', 'e', 'u', 'e', 'n']
				adding dashed alternative: ['h', '_', 'eu', 'e', 'n']
				adding dashed alternative: ['h', '_', 'e', 'ue', 'n']
				adding dashed alternative: ['h', '_', 'eu', 'e', 'n']
				h/e/u/e/n(CVCVC)
h/e/u/e/n(CVVVC)
h/eu/e/n(CVVC)
h/e/ue/n(CVVC)
h/eu/e/n(CVVC)
h/_/e/u/e/n(CAVAVC)
h/_/e/u/e/n(CAVAVC)
h/_/eu/e/n(CAVVC)
h/_/e/ue/n(CAVVC)
h/_/eu/e/n(CAVVC)
				ANALYSING: houen
					resolving (5)
					> version: h/o/u/e/n
					TRYING: o
					adding blocked set: V = V >> u, eu, ue, _, eo, e, o
					> version: h/o/u/e/n
					TRYING: o
					adding blocked set: V = V >> u, eu, ue, _, eo, e, o
					> version: h/ou/e/n
					TRYING: ou
					adding blocked set: V = V >> u, eu, ue, _, eo, ou, e
					> version: h/o/ue/n
					TRYING: o
					adding blocked set: V = V >> u, eu, ue, _, eo, e, o
					> version: h/ou/e/n
					TRYING: ou
					adding blocked set: V = V >> u, eu, ue, _, eo, ou, e
					RESULT:  ['_']
				adding dashed alternative: ['h', '_', 'o', 'u', 'e', 'n']
				adding dashed alternative: ['h', '_', 'o', 'u', 'e', 'n']
				adding dashed alternative: ['h', '_', 'ou', 'e', 'n']
				adding dashed alternative: ['h', '_', 'o', 'ue', 'n']
				adding dashed alternative: ['h', '_', 'ou', 'e', 'n']
				h/o/u/e/n(CVCVC)
h/o/u/e/n(CVVVC)
h/ou/e/n(CVVC)
h/o/ue/n(CVVC)
h/ou/e/n(CVVC)
h/_/o/u/e/n(CAVAVC)
h/_/o/u/e/n(CAVAVC)
h/_/ou/e/n(CAVVC)
h/_/o/ue/n(CAVVC)
h/_/ou/e/n(CAVVC)
				ANALYSING: lich
					resolving (8)
					> version: l/i/c/h
					TRYING: i
					adding blocked set: V = V >> u, eu, i, ue, _, eo, e
					> version: l/i/c/h
					TRYING: i
					adding blocked set: V = V >> u, eu, i, ue, _, eo, e
					> version: l/i/ch
					TRYING: i
					adding blocked set: V = V >> u, eu, i, ue, _, eo, e
					> version: l/i/ch
					TRYING: i
					adding blocked set: V = V >> u, eu, i, ue, _, eo, e
					> version: _/l/i/c/h
					TRYING: l
					> version: _/l/i/c/h
					TRYING: l
					> version: _/l/i/ch
					TRYING: l
					> version: _/l/i/ch
					TRYING: l
					RESULT:  ['_']
				adding dashed alternative: ['l', '_', 'i', 'c', 'h']
				adding dashed alternative: ['l', '_', 'i', 'c', 'h']
				adding dashed alternative: ['l', '_', 'i', 'ch']
				adding dashed alternative: ['l', '_', 'i', 'ch']
				adding dashed alternative: ['_', '_', 'l', 'i', 'c', 'h']
				adding dashed alternative: ['_', '_', 'l', 'i', 'c', 'h']
				adding dashed alternative: ['_', '_', 'l', 'i', 'ch']
				adding dashed alternative: ['_', '_', 'l', 'i', 'ch']
				l/i/c/h(CCCC)
l/i/c/h(CVCC)
l/i/ch(CCC)
l/i/ch(CVC)
_/l/i/c/h(ACACC)
_/l/i/c/h(ACACC)
_/l/i/ch(ACAC)
_/l/i/ch(ACAC)
l/_/i/c/h(CAACC)
l/_/i/c/h(CAACC)
l/_/i/ch(CAAC)
l/_/i/ch(CAAC)
_/_/l/i/c/h(AACACC)
_/_/l/i/c/h(AACACC)
_/_/l/i/ch(AACAC)
_/_/l/i/ch(AACAC)
				ANALYSING: liche
					resolving (8)
					> version: l/i/c/h/e
					TRYING: i
					adding blocked set: V = V >> u, eu, i, ue, _, eo, e
					> version: l/i/c/h/e
					TRYING: i
					adding blocked set: V = V >> u, eu, i, ue, _, eo, e
					> version: l/i/ch/e
					TRYING: i
					adding blocked set: V = V >> u, eu, i, ue, _, eo, e
					> version: l/i/ch/e
					TRYING: i
					adding blocked set: V = V >> u, eu, i, ue, _, eo, e
					> version: _/l/i/c/h/e
					TRYING: l
					> version: _/l/i/c/h/e
					TRYING: l
					> version: _/l/i/ch/e
					TRYING: l
					> version: _/l/i/ch/e
					TRYING: l
					RESULT:  ['_']
				adding dashed alternative: ['l', '_', 'i', 'c', 'h', 'e']
				adding dashed alternative: ['l', '_', 'i', 'c', 'h', 'e']
				adding dashed alternative: ['l', '_', 'i', 'ch', 'e']
				adding dashed alternative: ['l', '_', 'i', 'ch', 'e']
				adding dashed alternative: ['_', '_', 'l', 'i', 'c', 'h', 'e']
				adding dashed alternative: ['_', '_', 'l', 'i', 'c', 'h', 'e']
				adding dashed alternative: ['_', '_', 'l', 'i', 'ch', 'e']
				adding dashed alternative: ['_', '_', 'l', 'i', 'ch', 'e']
				l/i/c/h/e(CCCCV)
l/i/c/h/e(CVCCV)
l/i/ch/e(CCCV)
l/i/ch/e(CVCV)
_/l/i/c/h/e(ACACCV)
_/l/i/c/h/e(ACACCV)
_/l/i/ch/e(ACACV)
_/l/i/ch/e(ACACV)
l/_/i/c/h/e(CAACCV)
l/_/i/c/h/e(CAACCV)
l/_/i/ch/e(CAACV)
l/_/i/ch/e(CAACV)
_/_/l/i/c/h/e(AACACCV)
_/_/l/i/c/h/e(AACACCV)
_/_/l/i/ch/e(AACACV)
_/_/l/i/ch/e(AACACV)
			___CVCVCV : 2___
				ANALYSING: heouene
				adding littera based on matching pattern
				ANALYSING: heuene
				adding littera based on matching pattern
				ANALYSING: eue
					resolving (10)
					> version: e/u/e
					TRYING: e
					> version: e/u/e
					TRYING: e
					> version: eu/e
					> version: e/ue
					> version: eu/e
					> version: _/e/u/e
					TRYING: u
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e'}
					> version: _/e/u/e
					TRYING: u
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e'}
					> version: _/eu/e
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e'}
					> version: _/e/ue
					TRYING: ue
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: _/eu/e
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					RESULT:  ['u', 'e', 'ue']
				ANALYSING: he
					resolving (2)
					> version: h/e
					> version: h/_/e
					TRYING: e
					RESULT:  ['e']
				ANALYSING: heo
					resolving (4)
					> version: h/e/o
					TRYING: o
					> version: h/eo
					> version: h/_/e/o
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'e', 'o'}
					> version: h/_/eo
					TRYING: eo
					>>> MULTIPLE RESOLVE OPTIONS: {'e', 'eo', 'o'}
					RESULT:  ['e', 'eo', 'o']
				ANALYSING: heofen
					resolving (4)
					> version: h/e/o/f/e/n
					TRYING: o
					> version: h/eo/f/e/n
					TRYING: f
					> version: h/_/e/o/f/e/n
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'e', 'o'}
					> version: h/_/eo/f/e/n
					TRYING: eo
					>>> MULTIPLE RESOLVE OPTIONS: {'e', 'eo', 'o'}
					RESULT:  ['e', 'eo', 'o']
				ANALYSING: heofenn
					resolving (8)
					> version: h/e/o/f/e/n/n
					TRYING: o
					> version: h/e/o/f/e/nn
					TRYING: o
					> version: h/eo/f/e/n/n
					TRYING: f
					> version: h/eo/f/e/nn
					TRYING: f
					> version: h/_/e/o/f/e/n/n
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'e', 'o'}
					> version: h/_/e/o/f/e/nn
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'e', 'o'}
					> version: h/_/eo/f/e/n/n
					TRYING: eo
					>>> MULTIPLE RESOLVE OPTIONS: {'e', 'eo', 'o'}
					> version: h/_/eo/f/e/nn
					TRYING: eo
					>>> MULTIPLE RESOLVE OPTIONS: {'e', 'eo', 'o'}
					RESULT:  ['e', 'eo', 'o']
				ANALYSING: heofon
					resolving (4)
					> version: h/e/o/f/o/n
					TRYING: o
					> version: h/eo/f/o/n
					TRYING: f
					> version: h/_/e/o/f/o/n
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'e', 'o'}
					> version: h/_/eo/f/o/n
					TRYING: eo
					>>> MULTIPLE RESOLVE OPTIONS: {'e', 'eo', 'o'}
					RESULT:  ['e', 'eo', 'o']
				ANALYSING: heoue
					resolving (22)
					> version: h/e/o/u/e
					TRYING: o
					> version: h/e/o/u/e
					TRYING: o
					> version: h/e/ou/e
					TRYING: ou
					> version: h/eo/u/e
					TRYING: u
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'o'}
					> version: h/eo/u/e
					TRYING: u
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'o'}
					> version: h/e/o/ue
					TRYING: o
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'o'}
					> version: h/eo/u/e
					TRYING: u
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'o'}
					> version: h/eo/u/e
					TRYING: u
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'o'}
					> version: h/e/ou/e
					TRYING: ou
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'o'}
					> version: h/eo/ue
					TRYING: ue
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'ue', 'o'}
					> version: h/eo/ue
					TRYING: ue
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'ue', 'o'}
					> version: h/_/e/o/u/e
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue', 'o'}
					> version: h/_/e/o/u/e
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue', 'o'}
					> version: h/_/e/ou/e
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue', 'o'}
					> version: h/_/eo/u/e
					TRYING: eo
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'ue', 'eo', 'e', 'o'}
					> version: h/_/eo/u/e
					TRYING: eo
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'ue', 'eo', 'e', 'o'}
					> version: h/_/e/o/ue
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'ue', 'eo', 'e', 'o'}
					> version: h/_/eo/u/e
					TRYING: eo
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'ue', 'eo', 'e', 'o'}
					> version: h/_/eo/u/e
					TRYING: eo
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'ue', 'eo', 'e', 'o'}
					> version: h/_/e/ou/e
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'ue', 'eo', 'e', 'o'}
					> version: h/_/eo/ue
					TRYING: eo
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'ue', 'eo', 'e', 'o'}
					> version: h/_/eo/ue
					TRYING: eo
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'ue', 'eo', 'e', 'o'}
					RESULT:  ['u', 'ue', 'eo', 'e', 'o']
				ANALYSING: heouen
					resolving (22)
					> version: h/e/o/u/e/n
					TRYING: o
					> version: h/e/o/u/e/n
					TRYING: o
					> version: h/e/ou/e/n
					TRYING: ou
					> version: h/eo/u/e/n
					TRYING: u
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'o'}
					> version: h/eo/u/e/n
					TRYING: u
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'o'}
					> version: h/e/o/ue/n
					TRYING: o
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'o'}
					> version: h/eo/u/e/n
					TRYING: u
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'o'}
					> version: h/eo/u/e/n
					TRYING: u
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'o'}
					> version: h/e/ou/e/n
					TRYING: ou
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'o'}
					> version: h/eo/ue/n
					TRYING: ue
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'ue', 'o'}
					> version: h/eo/ue/n
					TRYING: ue
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'ue', 'o'}
					> version: h/_/e/o/u/e/n
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue', 'o'}
					> version: h/_/e/o/u/e/n
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue', 'o'}
					> version: h/_/e/ou/e/n
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue', 'o'}
					> version: h/_/eo/u/e/n
					TRYING: eo
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'ue', 'eo', 'e', 'o'}
					> version: h/_/eo/u/e/n
					TRYING: eo
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'ue', 'eo', 'e', 'o'}
					> version: h/_/e/o/ue/n
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'ue', 'eo', 'e', 'o'}
					> version: h/_/eo/u/e/n
					TRYING: eo
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'ue', 'eo', 'e', 'o'}
					> version: h/_/eo/u/e/n
					TRYING: eo
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'ue', 'eo', 'e', 'o'}
					> version: h/_/e/ou/e/n
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'ue', 'eo', 'e', 'o'}
					> version: h/_/eo/ue/n
					TRYING: eo
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'ue', 'eo', 'e', 'o'}
					> version: h/_/eo/ue/n
					TRYING: eo
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'ue', 'eo', 'e', 'o'}
					RESULT:  ['u', 'ue', 'eo', 'e', 'o']
				ANALYSING: heue
					resolving (10)
					> version: h/e/u/e
					TRYING: u
					> version: h/e/u/e
					TRYING: u
					> version: h/eu/e
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e'}
					> version: h/e/ue
					TRYING: ue
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: h/eu/e
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: h/_/e/u/e
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: h/_/e/u/e
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: h/_/eu/e
					TRYING: eu
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: h/_/e/ue
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: h/_/eu/e
					TRYING: eu
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					RESULT:  ['u', 'e', 'ue']
				ANALYSING: heuen
					resolving (10)
					> version: h/e/u/e/n
					TRYING: u
					> version: h/e/u/e/n
					TRYING: u
					> version: h/eu/e/n
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e'}
					> version: h/e/ue/n
					TRYING: ue
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: h/eu/e/n
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: h/_/e/u/e/n
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: h/_/e/u/e/n
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: h/_/eu/e/n
					TRYING: eu
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: h/_/e/ue/n
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: h/_/eu/e/n
					TRYING: eu
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					RESULT:  ['u', 'e', 'ue']
				ANALYSING: houen
					resolving (10)
					> version: h/o/u/e/n
					TRYING: u
					> version: h/o/u/e/n
					TRYING: u
					> version: h/ou/e/n
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e'}
					> version: h/o/ue/n
					TRYING: ue
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: h/ou/e/n
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: h/_/o/u/e/n
					TRYING: o
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue', 'o'}
					> version: h/_/o/u/e/n
					TRYING: o
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue', 'o'}
					> version: h/_/ou/e/n
					TRYING: ou
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue', 'o'}
					> version: h/_/o/ue/n
					TRYING: o
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue', 'o'}
					> version: h/_/ou/e/n
					TRYING: ou
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue', 'o'}
					RESULT:  ['u', 'e', 'ue', 'o']
				ANALYSING: lich
					resolving (16)
					> version: l/i/c/h
					TRYING: c
					> version: l/i/c/h
					TRYING: c
					> version: l/i/ch
					TRYING: ch
					> version: l/i/ch
					TRYING: ch
					> version: _/l/i/c/h
					TRYING: i
					> version: _/l/i/c/h
					TRYING: i
					> version: _/l/i/ch
					TRYING: i
					> version: _/l/i/ch
					TRYING: i
					> version: l/_/i/c/h
					TRYING: i
					> version: l/_/i/c/h
					TRYING: i
					> version: l/_/i/ch
					TRYING: i
					> version: l/_/i/ch
					TRYING: i
					> version: _/_/l/i/c/h
					TRYING: l
					> version: _/_/l/i/c/h
					TRYING: l
					> version: _/_/l/i/ch
					TRYING: l
					> version: _/_/l/i/ch
					TRYING: l
					RESULT:  ['_']
				adding dashed alternative: ['l', 'i', '_', 'c', 'h']
				adding dashed alternative: ['l', 'i', '_', 'c', 'h']
				adding dashed alternative: ['l', 'i', '_', 'ch']
				adding dashed alternative: ['l', 'i', '_', 'ch']
				adding dashed alternative: ['_', 'l', '_', 'i', 'c', 'h']
				adding dashed alternative: ['_', 'l', '_', 'i', 'c', 'h']
				adding dashed alternative: ['_', 'l', '_', 'i', 'ch']
				adding dashed alternative: ['_', 'l', '_', 'i', 'ch']
				adding dashed alternative: ['l', '_', '_', 'i', 'c', 'h']
				adding dashed alternative: ['l', '_', '_', 'i', 'c', 'h']
				adding dashed alternative: ['l', '_', '_', 'i', 'ch']
				adding dashed alternative: ['l', '_', '_', 'i', 'ch']
				adding dashed alternative: ['_', '_', '_', 'l', 'i', 'c', 'h']
				adding dashed alternative: ['_', '_', '_', 'l', 'i', 'c', 'h']
				adding dashed alternative: ['_', '_', '_', 'l', 'i', 'ch']
				adding dashed alternative: ['_', '_', '_', 'l', 'i', 'ch']
				l/i/c/h(CCCC)
l/i/c/h(CVCC)
l/i/ch(CCC)
l/i/ch(CVC)
_/l/i/c/h(ACACC)
_/l/i/c/h(ACACC)
_/l/i/ch(ACAC)
_/l/i/ch(ACAC)
l/_/i/c/h(CAACC)
l/_/i/c/h(CAACC)
l/_/i/ch(CAAC)
l/_/i/ch(CAAC)
_/_/l/i/c/h(AACACC)
_/_/l/i/c/h(AACACC)
_/_/l/i/ch(AACAC)
_/_/l/i/ch(AACAC)
l/i/_/c/h(CAACC)
l/i/_/c/h(CAACC)
l/i/_/ch(CAAC)
l/i/_/ch(CAAC)
_/l/_/i/c/h(ACAACC)
_/l/_/i/c/h(ACAACC)
_/l/_/i/ch(ACAAC)
_/l/_/i/ch(ACAAC)
l/_/_/i/c/h(CAAACC)
l/_/_/i/c/h(CAAACC)
l/_/_/i/ch(CAAAC)
l/_/_/i/ch(CAAAC)
_/_/_/l/i/c/h(AAACACC)
_/_/_/l/i/c/h(AAACACC)
_/_/_/l/i/ch(AAACAC)
_/_/_/l/i/ch(AAACAC)
				ANALYSING: liche
					resolving (16)
					> version: l/i/c/h/e
					TRYING: c
					> version: l/i/c/h/e
					TRYING: c
					> version: l/i/ch/e
					TRYING: ch
					> version: l/i/ch/e
					TRYING: ch
					> version: _/l/i/c/h/e
					TRYING: i
					> version: _/l/i/c/h/e
					TRYING: i
					> version: _/l/i/ch/e
					TRYING: i
					> version: _/l/i/ch/e
					TRYING: i
					> version: l/_/i/c/h/e
					TRYING: i
					> version: l/_/i/c/h/e
					TRYING: i
					> version: l/_/i/ch/e
					TRYING: i
					> version: l/_/i/ch/e
					TRYING: i
					> version: _/_/l/i/c/h/e
					TRYING: l
					> version: _/_/l/i/c/h/e
					TRYING: l
					> version: _/_/l/i/ch/e
					TRYING: l
					> version: _/_/l/i/ch/e
					TRYING: l
					RESULT:  ['_']
				adding dashed alternative: ['l', 'i', '_', 'c', 'h', 'e']
				adding dashed alternative: ['l', 'i', '_', 'c', 'h', 'e']
				adding dashed alternative: ['l', 'i', '_', 'ch', 'e']
				adding dashed alternative: ['l', 'i', '_', 'ch', 'e']
				adding dashed alternative: ['_', 'l', '_', 'i', 'c', 'h', 'e']
				adding dashed alternative: ['_', 'l', '_', 'i', 'c', 'h', 'e']
				adding dashed alternative: ['_', 'l', '_', 'i', 'ch', 'e']
				adding dashed alternative: ['_', 'l', '_', 'i', 'ch', 'e']
				adding dashed alternative: ['l', '_', '_', 'i', 'c', 'h', 'e']
				adding dashed alternative: ['l', '_', '_', 'i', 'c', 'h', 'e']
				adding dashed alternative: ['l', '_', '_', 'i', 'ch', 'e']
				adding dashed alternative: ['l', '_', '_', 'i', 'ch', 'e']
				adding dashed alternative: ['_', '_', '_', 'l', 'i', 'c', 'h', 'e']
				adding dashed alternative: ['_', '_', '_', 'l', 'i', 'c', 'h', 'e']
				adding dashed alternative: ['_', '_', '_', 'l', 'i', 'ch', 'e']
				adding dashed alternative: ['_', '_', '_', 'l', 'i', 'ch', 'e']
				l/i/c/h/e(CCCCV)
l/i/c/h/e(CVCCV)
l/i/ch/e(CCCV)
l/i/ch/e(CVCV)
_/l/i/c/h/e(ACACCV)
_/l/i/c/h/e(ACACCV)
_/l/i/ch/e(ACACV)
_/l/i/ch/e(ACACV)
l/_/i/c/h/e(CAACCV)
l/_/i/c/h/e(CAACCV)
l/_/i/ch/e(CAACV)
l/_/i/ch/e(CAACV)
_/_/l/i/c/h/e(AACACCV)
_/_/l/i/c/h/e(AACACCV)
_/_/l/i/ch/e(AACACV)
_/_/l/i/ch/e(AACACV)
l/i/_/c/h/e(CAACCV)
l/i/_/c/h/e(CAACCV)
l/i/_/ch/e(CAACV)
l/i/_/ch/e(CAACV)
_/l/_/i/c/h/e(ACAACCV)
_/l/_/i/c/h/e(ACAACCV)
_/l/_/i/ch/e(ACAACV)
_/l/_/i/ch/e(ACAACV)
l/_/_/i/c/h/e(CAAACCV)
l/_/_/i/c/h/e(CAAACCV)
l/_/_/i/ch/e(CAAACV)
l/_/_/i/ch/e(CAAACV)
_/_/_/l/i/c/h/e(AAACACCV)
_/_/_/l/i/c/h/e(AAACACCV)
_/_/_/l/i/ch/e(AAACACV)
_/_/_/l/i/ch/e(AAACACV)
			___CVCVCV : 3___
				ANALYSING: heouene
				adding littera based on matching pattern
				ANALYSING: heuene
				adding littera based on matching pattern
				ANALYSING: eue
					resolving (10)
					> version: e/u/e
					> version: e/u/e
					> version: eu/e
					> version: e/ue
					> version: eu/e
					> version: _/e/u/e
					TRYING: e
					> version: _/e/u/e
					TRYING: e
					> version: _/eu/e
					> version: _/e/ue
					> version: _/eu/e
					RESULT:  ['e']
				ANALYSING: he
					resolving (2)
					> version: h/e
					> version: h/_/e
					RESULT:  ['_']
				adding dashed alternative: ['h', 'e', '_']
				adding dashed alternative: ['h', '_', 'e', '_']
				h/e(CV)
h/_/e(CAV)
h/e/_(CVA)
h/_/e/_(CAVA)
				ANALYSING: heo
					resolving (4)
					> version: h/e/o
					> version: h/eo
					> version: h/_/e/o
					TRYING: o
					> version: h/_/eo
					RESULT:  ['o']
				ANALYSING: heofen
					resolving (4)
					> version: h/e/o/f/e/n
					TRYING: f
					> version: h/eo/f/e/n
					TRYING: e
					> version: h/_/e/o/f/e/n
					TRYING: o
					>>> MULTIPLE RESOLVE OPTIONS: {'e', 'o'}
					> version: h/_/eo/f/e/n
					TRYING: f
					>>> MULTIPLE RESOLVE OPTIONS: {'e', 'o'}
					RESULT:  ['e', 'o']
				ANALYSING: heofenn
					resolving (8)
					> version: h/e/o/f/e/n/n
					TRYING: f
					> version: h/e/o/f/e/nn
					TRYING: f
					> version: h/eo/f/e/n/n
					TRYING: e
					> version: h/eo/f/e/nn
					TRYING: e
					> version: h/_/e/o/f/e/n/n
					TRYING: o
					>>> MULTIPLE RESOLVE OPTIONS: {'e', 'o'}
					> version: h/_/e/o/f/e/nn
					TRYING: o
					>>> MULTIPLE RESOLVE OPTIONS: {'e', 'o'}
					> version: h/_/eo/f/e/n/n
					TRYING: f
					>>> MULTIPLE RESOLVE OPTIONS: {'e', 'o'}
					> version: h/_/eo/f/e/nn
					TRYING: f
					>>> MULTIPLE RESOLVE OPTIONS: {'e', 'o'}
					RESULT:  ['e', 'o']
				ANALYSING: heofon
					resolving (4)
					> version: h/e/o/f/o/n
					TRYING: f
					> version: h/eo/f/o/n
					TRYING: o
					> version: h/_/e/o/f/o/n
					TRYING: o
					> version: h/_/eo/f/o/n
					TRYING: f
					RESULT:  ['o']
				ANALYSING: heoue
					resolving (22)
					> version: h/e/o/u/e
					TRYING: u
					> version: h/e/o/u/e
					TRYING: u
					> version: h/e/ou/e
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e'}
					> version: h/eo/u/e
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e'}
					> version: h/eo/u/e
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e'}
					> version: h/e/o/ue
					TRYING: ue
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: h/eo/u/e
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: h/eo/u/e
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: h/e/ou/e
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: h/eo/ue
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: h/eo/ue
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: h/_/e/o/u/e
					TRYING: o
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue', 'o'}
					> version: h/_/e/o/u/e
					TRYING: o
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue', 'o'}
					> version: h/_/e/ou/e
					TRYING: ou
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'ue', 'ou', 'e', 'o'}
					> version: h/_/eo/u/e
					TRYING: u
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'ue', 'ou', 'e', 'o'}
					> version: h/_/eo/u/e
					TRYING: u
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'ue', 'ou', 'e', 'o'}
					> version: h/_/e/o/ue
					TRYING: o
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'ue', 'ou', 'e', 'o'}
					> version: h/_/eo/u/e
					TRYING: u
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'ue', 'ou', 'e', 'o'}
					> version: h/_/eo/u/e
					TRYING: u
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'ue', 'ou', 'e', 'o'}
					> version: h/_/e/ou/e
					TRYING: ou
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'ue', 'ou', 'e', 'o'}
					> version: h/_/eo/ue
					TRYING: ue
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'ue', 'ou', 'e', 'o'}
					> version: h/_/eo/ue
					TRYING: ue
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'ue', 'ou', 'e', 'o'}
					RESULT:  ['u', 'ue', 'ou', 'e', 'o']
				ANALYSING: heouen
					resolving (22)
					> version: h/e/o/u/e/n
					TRYING: u
					adding blocked set: V = V >> u, ue, _, ou, e, o
					> version: h/e/o/u/e/n
					TRYING: u
					adding blocked set: V = V >> u, ue, _, ou, e, o
					> version: h/e/ou/e/n
					TRYING: e
					adding blocked set: V = V >> u, ue, _, ou, e, o
					> version: h/eo/u/e/n
					TRYING: e
					adding blocked set: V = V >> u, ue, _, ou, e, o
					> version: h/eo/u/e/n
					TRYING: e
					adding blocked set: V = V >> u, ue, _, ou, e, o
					> version: h/e/o/ue/n
					TRYING: ue
					adding blocked set: V = V >> u, ue, _, ou, e, o
					> version: h/eo/u/e/n
					TRYING: e
					adding blocked set: V = V >> u, ue, _, ou, e, o
					> version: h/eo/u/e/n
					TRYING: e
					adding blocked set: V = V >> u, ue, _, ou, e, o
					> version: h/e/ou/e/n
					TRYING: e
					adding blocked set: V = V >> u, ue, _, ou, e, o
					> version: h/eo/ue/n
					TRYING: n
					> version: h/eo/ue/n
					TRYING: n
					> version: h/_/e/o/u/e/n
					TRYING: o
					adding blocked set: V = V >> u, ue, _, ou, e, o
					> version: h/_/e/o/u/e/n
					TRYING: o
					adding blocked set: V = V >> u, ue, _, ou, e, o
					> version: h/_/e/ou/e/n
					TRYING: ou
					adding blocked set: V = V >> u, ue, _, ou, e, o
					> version: h/_/eo/u/e/n
					TRYING: u
					adding blocked set: V = V >> u, ue, _, ou, e, o
					> version: h/_/eo/u/e/n
					TRYING: u
					adding blocked set: V = V >> u, ue, _, ou, e, o
					> version: h/_/e/o/ue/n
					TRYING: o
					adding blocked set: V = V >> u, ue, _, ou, e, o
					> version: h/_/eo/u/e/n
					TRYING: u
					adding blocked set: V = V >> u, ue, _, ou, e, o
					> version: h/_/eo/u/e/n
					TRYING: u
					adding blocked set: V = V >> u, ue, _, ou, e, o
					> version: h/_/e/ou/e/n
					TRYING: ou
					adding blocked set: V = V >> u, ue, _, ou, e, o
					> version: h/_/eo/ue/n
					TRYING: ue
					adding blocked set: V = V >> u, ue, _, ou, e, o
					> version: h/_/eo/ue/n
					TRYING: ue
					adding blocked set: V = V >> u, ue, _, ou, e, o
					RESULT:  ['_']
				adding dashed alternative: ['h', 'e', 'o', '_', 'u', 'e', 'n']
				adding dashed alternative: ['h', 'e', 'o', '_', 'u', 'e', 'n']
				adding dashed alternative: ['h', 'e', 'ou', '_', 'e', 'n']
				adding dashed alternative: ['h', 'eo', 'u', '_', 'e', 'n']
				adding dashed alternative: ['h', 'eo', 'u', '_', 'e', 'n']
				adding dashed alternative: ['h', 'e', 'o', '_', 'ue', 'n']
				adding dashed alternative: ['h', 'eo', 'u', '_', 'e', 'n']
				adding dashed alternative: ['h', 'eo', 'u', '_', 'e', 'n']
				adding dashed alternative: ['h', 'e', 'ou', '_', 'e', 'n']
				adding dashed alternative: ['h', 'eo', 'ue', '_', 'n']
				adding dashed alternative: ['h', 'eo', 'ue', '_', 'n']
				adding dashed alternative: ['h', '_', 'e', '_', 'o', 'u', 'e', 'n']
				adding dashed alternative: ['h', '_', 'e', '_', 'o', 'u', 'e', 'n']
				adding dashed alternative: ['h', '_', 'e', '_', 'ou', 'e', 'n']
				adding dashed alternative: ['h', '_', 'eo', '_', 'u', 'e', 'n']
				adding dashed alternative: ['h', '_', 'eo', '_', 'u', 'e', 'n']
				adding dashed alternative: ['h', '_', 'e', '_', 'o', 'ue', 'n']
				adding dashed alternative: ['h', '_', 'eo', '_', 'u', 'e', 'n']
				adding dashed alternative: ['h', '_', 'eo', '_', 'u', 'e', 'n']
				adding dashed alternative: ['h', '_', 'e', '_', 'ou', 'e', 'n']
				adding dashed alternative: ['h', '_', 'eo', '_', 'ue', 'n']
				adding dashed alternative: ['h', '_', 'eo', '_', 'ue', 'n']
				h/e/o/u/e/n(CVVCVC)
h/e/o/u/e/n(CVVVVC)
h/e/ou/e/n(CVVVC)
h/eo/u/e/n(CVCVC)
h/eo/u/e/n(CVVVC)
h/e/o/ue/n(CVVVC)
h/eo/u/e/n(CVCVC)
h/eo/u/e/n(CVVVC)
h/e/ou/e/n(CVVVC)
h/eo/ue/n(CVVC)
h/eo/ue/n(CVVC)
h/_/e/o/u/e/n(CAVVAVC)
h/_/e/o/u/e/n(CAVVAVC)
h/_/e/ou/e/n(CAVVVC)
h/_/eo/u/e/n(CAVAVC)
h/_/eo/u/e/n(CAVAVC)
h/_/e/o/ue/n(CAVVVC)
h/_/eo/u/e/n(CAVAVC)
h/_/eo/u/e/n(CAVAVC)
h/_/e/ou/e/n(CAVVVC)
h/_/eo/ue/n(CAVVC)
h/_/eo/ue/n(CAVVC)
h/e/o/_/u/e/n(CVVAAVC)
h/e/o/_/u/e/n(CVVAAVC)
h/e/ou/_/e/n(CVVAVC)
h/eo/u/_/e/n(CVAAVC)
h/eo/u/_/e/n(CVAAVC)
h/e/o/_/ue/n(CVVAVC)
h/eo/u/_/e/n(CVAAVC)
h/eo/u/_/e/n(CVAAVC)
h/e/ou/_/e/n(CVVAVC)
h/eo/ue/_/n(CVVAC)
h/eo/ue/_/n(CVVAC)
h/_/e/_/o/u/e/n(CAVAVAVC)
h/_/e/_/o/u/e/n(CAVAVAVC)
h/_/e/_/ou/e/n(CAVAVVC)
h/_/eo/_/u/e/n(CAVAAVC)
h/_/eo/_/u/e/n(CAVAAVC)
h/_/e/_/o/ue/n(CAVAVVC)
h/_/eo/_/u/e/n(CAVAAVC)
h/_/eo/_/u/e/n(CAVAAVC)
h/_/e/_/ou/e/n(CAVAVVC)
h/_/eo/_/ue/n(CAVAVC)
h/_/eo/_/ue/n(CAVAVC)
				ANALYSING: heue
					resolving (10)
					> version: h/e/u/e
					TRYING: e
					adding blocked set: V = V >> u, ue, _, ou, e, o
					> version: h/e/u/e
					TRYING: e
					adding blocked set: V = V >> u, ue, _, ou, e, o
					> version: h/eu/e
					> version: h/e/ue
					> version: h/eu/e
					> version: h/_/e/u/e
					TRYING: u
					adding blocked set: V = V >> u, ue, _, ou, e, o
					> version: h/_/e/u/e
					TRYING: u
					adding blocked set: V = V >> u, ue, _, ou, e, o
					> version: h/_/eu/e
					TRYING: e
					adding blocked set: V = V >> u, ue, _, ou, e, o
					> version: h/_/e/ue
					TRYING: ue
					adding blocked set: V = V >> u, ue, _, ou, e, o
					> version: h/_/eu/e
					TRYING: e
					adding blocked set: V = V >> u, ue, _, ou, e, o
					RESULT:  ['_']
				adding dashed alternative: ['h', 'e', 'u', '_', 'e']
				adding dashed alternative: ['h', 'e', 'u', '_', 'e']
				adding dashed alternative: ['h', 'eu', 'e', '_']
				adding dashed alternative: ['h', 'e', 'ue', '_']
				adding dashed alternative: ['h', 'eu', 'e', '_']
				adding dashed alternative: ['h', '_', 'e', '_', 'u', 'e']
				adding dashed alternative: ['h', '_', 'e', '_', 'u', 'e']
				adding dashed alternative: ['h', '_', 'eu', '_', 'e']
				adding dashed alternative: ['h', '_', 'e', '_', 'ue']
				adding dashed alternative: ['h', '_', 'eu', '_', 'e']
				h/e/u/e(CVCV)
h/e/u/e(CVVV)
h/eu/e(CVV)
h/e/ue(CVV)
h/eu/e(CVV)
h/_/e/u/e(CAVAV)
h/_/e/u/e(CAVAV)
h/_/eu/e(CAVV)
h/_/e/ue(CAVV)
h/_/eu/e(CAVV)
h/e/u/_/e(CVAAV)
h/e/u/_/e(CVAAV)
h/eu/e/_(CVVA)
h/e/ue/_(CVVA)
h/eu/e/_(CVVA)
h/_/e/_/u/e(CAVAAV)
h/_/e/_/u/e(CAVAAV)
h/_/eu/_/e(CAVAV)
h/_/e/_/ue(CAVAV)
h/_/eu/_/e(CAVAV)
				ANALYSING: heuen
					resolving (10)
					> version: h/e/u/e/n
					TRYING: e
					adding blocked set: V = V >> u, ue, _, ou, e, o
					> version: h/e/u/e/n
					TRYING: e
					adding blocked set: V = V >> u, ue, _, ou, e, o
					> version: h/eu/e/n
					TRYING: n
					> version: h/e/ue/n
					TRYING: n
					> version: h/eu/e/n
					TRYING: n
					> version: h/_/e/u/e/n
					TRYING: u
					adding blocked set: V = V >> u, ue, _, ou, e, o
					> version: h/_/e/u/e/n
					TRYING: u
					adding blocked set: V = V >> u, ue, _, ou, e, o
					> version: h/_/eu/e/n
					TRYING: e
					adding blocked set: V = V >> u, ue, _, ou, e, o
					> version: h/_/e/ue/n
					TRYING: ue
					adding blocked set: V = V >> u, ue, _, ou, e, o
					> version: h/_/eu/e/n
					TRYING: e
					adding blocked set: V = V >> u, ue, _, ou, e, o
					RESULT:  ['_']
				adding dashed alternative: ['h', 'e', 'u', '_', 'e', 'n']
				adding dashed alternative: ['h', 'e', 'u', '_', 'e', 'n']
				adding dashed alternative: ['h', 'eu', 'e', '_', 'n']
				adding dashed alternative: ['h', 'e', 'ue', '_', 'n']
				adding dashed alternative: ['h', 'eu', 'e', '_', 'n']
				adding dashed alternative: ['h', '_', 'e', '_', 'u', 'e', 'n']
				adding dashed alternative: ['h', '_', 'e', '_', 'u', 'e', 'n']
				adding dashed alternative: ['h', '_', 'eu', '_', 'e', 'n']
				adding dashed alternative: ['h', '_', 'e', '_', 'ue', 'n']
				adding dashed alternative: ['h', '_', 'eu', '_', 'e', 'n']
				h/e/u/e/n(CVCVC)
h/e/u/e/n(CVVVC)
h/eu/e/n(CVVC)
h/e/ue/n(CVVC)
h/eu/e/n(CVVC)
h/_/e/u/e/n(CAVAVC)
h/_/e/u/e/n(CAVAVC)
h/_/eu/e/n(CAVVC)
h/_/e/ue/n(CAVVC)
h/_/eu/e/n(CAVVC)
h/e/u/_/e/n(CVAAVC)
h/e/u/_/e/n(CVAAVC)
h/eu/e/_/n(CVVAC)
h/e/ue/_/n(CVVAC)
h/eu/e/_/n(CVVAC)
h/_/e/_/u/e/n(CAVAAVC)
h/_/e/_/u/e/n(CAVAAVC)
h/_/eu/_/e/n(CAVAVC)
h/_/e/_/ue/n(CAVAVC)
h/_/eu/_/e/n(CAVAVC)
				ANALYSING: houen
					resolving (10)
					> version: h/o/u/e/n
					TRYING: e
					adding blocked set: V = V >> u, ue, _, ou, e, o
					> version: h/o/u/e/n
					TRYING: e
					adding blocked set: V = V >> u, ue, _, ou, e, o
					> version: h/ou/e/n
					TRYING: n
					> version: h/o/ue/n
					TRYING: n
					> version: h/ou/e/n
					TRYING: n
					> version: h/_/o/u/e/n
					TRYING: u
					adding blocked set: V = V >> u, ue, _, ou, e, o
					> version: h/_/o/u/e/n
					TRYING: u
					adding blocked set: V = V >> u, ue, _, ou, e, o
					> version: h/_/ou/e/n
					TRYING: e
					adding blocked set: V = V >> u, ue, _, ou, e, o
					> version: h/_/o/ue/n
					TRYING: ue
					adding blocked set: V = V >> u, ue, _, ou, e, o
					> version: h/_/ou/e/n
					TRYING: e
					adding blocked set: V = V >> u, ue, _, ou, e, o
					RESULT:  ['_']
				adding dashed alternative: ['h', 'o', 'u', '_', 'e', 'n']
				adding dashed alternative: ['h', 'o', 'u', '_', 'e', 'n']
				adding dashed alternative: ['h', 'ou', 'e', '_', 'n']
				adding dashed alternative: ['h', 'o', 'ue', '_', 'n']
				adding dashed alternative: ['h', 'ou', 'e', '_', 'n']
				adding dashed alternative: ['h', '_', 'o', '_', 'u', 'e', 'n']
				adding dashed alternative: ['h', '_', 'o', '_', 'u', 'e', 'n']
				adding dashed alternative: ['h', '_', 'ou', '_', 'e', 'n']
				adding dashed alternative: ['h', '_', 'o', '_', 'ue', 'n']
				adding dashed alternative: ['h', '_', 'ou', '_', 'e', 'n']
				h/o/u/e/n(CVCVC)
h/o/u/e/n(CVVVC)
h/ou/e/n(CVVC)
h/o/ue/n(CVVC)
h/ou/e/n(CVVC)
h/_/o/u/e/n(CAVAVC)
h/_/o/u/e/n(CAVAVC)
h/_/ou/e/n(CAVVC)
h/_/o/ue/n(CAVVC)
h/_/ou/e/n(CAVVC)
h/o/u/_/e/n(CVAAVC)
h/o/u/_/e/n(CVAAVC)
h/ou/e/_/n(CVVAC)
h/o/ue/_/n(CVVAC)
h/ou/e/_/n(CVVAC)
h/_/o/_/u/e/n(CAVAAVC)
h/_/o/_/u/e/n(CAVAAVC)
h/_/ou/_/e/n(CAVAVC)
h/_/o/_/ue/n(CAVAVC)
h/_/ou/_/e/n(CAVAVC)
				ANALYSING: lich
					resolving (32)
					> version: l/i/c/h
					TRYING: h
					> version: l/i/c/h
					TRYING: h
					> version: l/i/ch
					> version: l/i/ch
					> version: _/l/i/c/h
					TRYING: c
					> version: _/l/i/c/h
					TRYING: c
					> version: _/l/i/ch
					TRYING: ch
					> version: _/l/i/ch
					TRYING: ch
					> version: l/_/i/c/h
					TRYING: c
					> version: l/_/i/c/h
					TRYING: c
					> version: l/_/i/ch
					TRYING: ch
					> version: l/_/i/ch
					TRYING: ch
					> version: _/_/l/i/c/h
					TRYING: i
					adding blocked set: V = V >> u, i, ue, _, ou, e, o
					> version: _/_/l/i/c/h
					TRYING: i
					adding blocked set: V = V >> u, i, ue, _, ou, e, o
					> version: _/_/l/i/ch
					TRYING: i
					adding blocked set: V = V >> u, i, ue, _, ou, e, o
					> version: _/_/l/i/ch
					TRYING: i
					adding blocked set: V = V >> u, i, ue, _, ou, e, o
					> version: l/i/_/c/h
					TRYING: c
					> version: l/i/_/c/h
					TRYING: c
					> version: l/i/_/ch
					TRYING: ch
					> version: l/i/_/ch
					TRYING: ch
					> version: _/l/_/i/c/h
					TRYING: i
					adding blocked set: V = V >> u, i, ue, _, ou, e, o
					> version: _/l/_/i/c/h
					TRYING: i
					adding blocked set: V = V >> u, i, ue, _, ou, e, o
					> version: _/l/_/i/ch
					TRYING: i
					adding blocked set: V = V >> u, i, ue, _, ou, e, o
					> version: _/l/_/i/ch
					TRYING: i
					adding blocked set: V = V >> u, i, ue, _, ou, e, o
					> version: l/_/_/i/c/h
					TRYING: i
					adding blocked set: V = V >> u, i, ue, _, ou, e, o
					> version: l/_/_/i/c/h
					TRYING: i
					adding blocked set: V = V >> u, i, ue, _, ou, e, o
					> version: l/_/_/i/ch
					TRYING: i
					adding blocked set: V = V >> u, i, ue, _, ou, e, o
					> version: l/_/_/i/ch
					TRYING: i
					adding blocked set: V = V >> u, i, ue, _, ou, e, o
					> version: _/_/_/l/i/c/h
					TRYING: l
					> version: _/_/_/l/i/c/h
					TRYING: l
					> version: _/_/_/l/i/ch
					TRYING: l
					> version: _/_/_/l/i/ch
					TRYING: l
					RESULT:  ['_']
				adding dashed alternative: ['l', 'i', 'c', '_', 'h']
				adding dashed alternative: ['l', 'i', 'c', '_', 'h']
				adding dashed alternative: ['l', 'i', 'ch', '_']
				adding dashed alternative: ['l', 'i', 'ch', '_']
				adding dashed alternative: ['_', 'l', 'i', '_', 'c', 'h']
				adding dashed alternative: ['_', 'l', 'i', '_', 'c', 'h']
				adding dashed alternative: ['_', 'l', 'i', '_', 'ch']
				adding dashed alternative: ['_', 'l', 'i', '_', 'ch']
				adding dashed alternative: ['l', '_', 'i', '_', 'c', 'h']
				adding dashed alternative: ['l', '_', 'i', '_', 'c', 'h']
				adding dashed alternative: ['l', '_', 'i', '_', 'ch']
				adding dashed alternative: ['l', '_', 'i', '_', 'ch']
				adding dashed alternative: ['_', '_', 'l', '_', 'i', 'c', 'h']
				adding dashed alternative: ['_', '_', 'l', '_', 'i', 'c', 'h']
				adding dashed alternative: ['_', '_', 'l', '_', 'i', 'ch']
				adding dashed alternative: ['_', '_', 'l', '_', 'i', 'ch']
				adding dashed alternative: ['l', 'i', '_', '_', 'c', 'h']
				adding dashed alternative: ['l', 'i', '_', '_', 'c', 'h']
				adding dashed alternative: ['l', 'i', '_', '_', 'ch']
				adding dashed alternative: ['l', 'i', '_', '_', 'ch']
				adding dashed alternative: ['_', 'l', '_', '_', 'i', 'c', 'h']
				adding dashed alternative: ['_', 'l', '_', '_', 'i', 'c', 'h']
				adding dashed alternative: ['_', 'l', '_', '_', 'i', 'ch']
				adding dashed alternative: ['_', 'l', '_', '_', 'i', 'ch']
				adding dashed alternative: ['l', '_', '_', '_', 'i', 'c', 'h']
				adding dashed alternative: ['l', '_', '_', '_', 'i', 'c', 'h']
				adding dashed alternative: ['l', '_', '_', '_', 'i', 'ch']
				adding dashed alternative: ['l', '_', '_', '_', 'i', 'ch']
				adding dashed alternative: ['_', '_', '_', '_', 'l', 'i', 'c', 'h']
				adding dashed alternative: ['_', '_', '_', '_', 'l', 'i', 'c', 'h']
				adding dashed alternative: ['_', '_', '_', '_', 'l', 'i', 'ch']
				adding dashed alternative: ['_', '_', '_', '_', 'l', 'i', 'ch']
				l/i/c/h(CCCC)
l/i/c/h(CVCC)
l/i/ch(CCC)
l/i/ch(CVC)
_/l/i/c/h(ACACC)
_/l/i/c/h(ACACC)
_/l/i/ch(ACAC)
_/l/i/ch(ACAC)
l/_/i/c/h(CAACC)
l/_/i/c/h(CAACC)
l/_/i/ch(CAAC)
l/_/i/ch(CAAC)
_/_/l/i/c/h(AACACC)
_/_/l/i/c/h(AACACC)
_/_/l/i/ch(AACAC)
_/_/l/i/ch(AACAC)
l/i/_/c/h(CAACC)
l/i/_/c/h(CAACC)
l/i/_/ch(CAAC)
l/i/_/ch(CAAC)
_/l/_/i/c/h(ACAACC)
_/l/_/i/c/h(ACAACC)
_/l/_/i/ch(ACAAC)
_/l/_/i/ch(ACAAC)
l/_/_/i/c/h(CAAACC)
l/_/_/i/c/h(CAAACC)
l/_/_/i/ch(CAAAC)
l/_/_/i/ch(CAAAC)
_/_/_/l/i/c/h(AAACACC)
_/_/_/l/i/c/h(AAACACC)
_/_/_/l/i/ch(AAACAC)
_/_/_/l/i/ch(AAACAC)
l/i/c/_/h(CACAC)
l/i/c/_/h(CACAC)
l/i/ch/_(CACA)
l/i/ch/_(CACA)
_/l/i/_/c/h(ACAACC)
_/l/i/_/c/h(ACAACC)
_/l/i/_/ch(ACAAC)
_/l/i/_/ch(ACAAC)
l/_/i/_/c/h(CAAACC)
l/_/i/_/c/h(CAAACC)
l/_/i/_/ch(CAAAC)
l/_/i/_/ch(CAAAC)
_/_/l/_/i/c/h(AACAACC)
_/_/l/_/i/c/h(AACAACC)
_/_/l/_/i/ch(AACAAC)
_/_/l/_/i/ch(AACAAC)
l/i/_/_/c/h(CAAACC)
l/i/_/_/c/h(CAAACC)
l/i/_/_/ch(CAAAC)
l/i/_/_/ch(CAAAC)
_/l/_/_/i/c/h(ACAAACC)
_/l/_/_/i/c/h(ACAAACC)
_/l/_/_/i/ch(ACAAAC)
_/l/_/_/i/ch(ACAAAC)
l/_/_/_/i/c/h(CAAAACC)
l/_/_/_/i/c/h(CAAAACC)
l/_/_/_/i/ch(CAAAAC)
l/_/_/_/i/ch(CAAAAC)
_/_/_/_/l/i/c/h(AAAACACC)
_/_/_/_/l/i/c/h(AAAACACC)
_/_/_/_/l/i/ch(AAAACAC)
_/_/_/_/l/i/ch(AAAACAC)
				ANALYSING: liche
					resolving (32)
					> version: l/i/c/h/e
					TRYING: h
					> version: l/i/c/h/e
					TRYING: h
					> version: l/i/ch/e
					TRYING: e
					adding blocked set: V = V >> u, ue, _, ou, e, o
					> version: l/i/ch/e
					TRYING: e
					adding blocked set: V = V >> u, ue, _, ou, e, o
					> version: _/l/i/c/h/e
					TRYING: c
					> version: _/l/i/c/h/e
					TRYING: c
					> version: _/l/i/ch/e
					TRYING: ch
					> version: _/l/i/ch/e
					TRYING: ch
					> version: l/_/i/c/h/e
					TRYING: c
					> version: l/_/i/c/h/e
					TRYING: c
					> version: l/_/i/ch/e
					TRYING: ch
					> version: l/_/i/ch/e
					TRYING: ch
					> version: _/_/l/i/c/h/e
					TRYING: i
					adding blocked set: V = V >> u, i, ue, _, ou, e, o
					> version: _/_/l/i/c/h/e
					TRYING: i
					adding blocked set: V = V >> u, i, ue, _, ou, e, o
					> version: _/_/l/i/ch/e
					TRYING: i
					adding blocked set: V = V >> u, i, ue, _, ou, e, o
					> version: _/_/l/i/ch/e
					TRYING: i
					adding blocked set: V = V >> u, i, ue, _, ou, e, o
					> version: l/i/_/c/h/e
					TRYING: c
					> version: l/i/_/c/h/e
					TRYING: c
					> version: l/i/_/ch/e
					TRYING: ch
					> version: l/i/_/ch/e
					TRYING: ch
					> version: _/l/_/i/c/h/e
					TRYING: i
					adding blocked set: V = V >> u, i, ue, _, ou, e, o
					> version: _/l/_/i/c/h/e
					TRYING: i
					adding blocked set: V = V >> u, i, ue, _, ou, e, o
					> version: _/l/_/i/ch/e
					TRYING: i
					adding blocked set: V = V >> u, i, ue, _, ou, e, o
					> version: _/l/_/i/ch/e
					TRYING: i
					adding blocked set: V = V >> u, i, ue, _, ou, e, o
					> version: l/_/_/i/c/h/e
					TRYING: i
					adding blocked set: V = V >> u, i, ue, _, ou, e, o
					> version: l/_/_/i/c/h/e
					TRYING: i
					adding blocked set: V = V >> u, i, ue, _, ou, e, o
					> version: l/_/_/i/ch/e
					TRYING: i
					adding blocked set: V = V >> u, i, ue, _, ou, e, o
					> version: l/_/_/i/ch/e
					TRYING: i
					adding blocked set: V = V >> u, i, ue, _, ou, e, o
					> version: _/_/_/l/i/c/h/e
					TRYING: l
					> version: _/_/_/l/i/c/h/e
					TRYING: l
					> version: _/_/_/l/i/ch/e
					TRYING: l
					> version: _/_/_/l/i/ch/e
					TRYING: l
					RESULT:  ['_']
				adding dashed alternative: ['l', 'i', 'c', '_', 'h', 'e']
				adding dashed alternative: ['l', 'i', 'c', '_', 'h', 'e']
				adding dashed alternative: ['l', 'i', 'ch', '_', 'e']
				adding dashed alternative: ['l', 'i', 'ch', '_', 'e']
				adding dashed alternative: ['_', 'l', 'i', '_', 'c', 'h', 'e']
				adding dashed alternative: ['_', 'l', 'i', '_', 'c', 'h', 'e']
				adding dashed alternative: ['_', 'l', 'i', '_', 'ch', 'e']
				adding dashed alternative: ['_', 'l', 'i', '_', 'ch', 'e']
				adding dashed alternative: ['l', '_', 'i', '_', 'c', 'h', 'e']
				adding dashed alternative: ['l', '_', 'i', '_', 'c', 'h', 'e']
				adding dashed alternative: ['l', '_', 'i', '_', 'ch', 'e']
				adding dashed alternative: ['l', '_', 'i', '_', 'ch', 'e']
				adding dashed alternative: ['_', '_', 'l', '_', 'i', 'c', 'h', 'e']
				adding dashed alternative: ['_', '_', 'l', '_', 'i', 'c', 'h', 'e']
				adding dashed alternative: ['_', '_', 'l', '_', 'i', 'ch', 'e']
				adding dashed alternative: ['_', '_', 'l', '_', 'i', 'ch', 'e']
				adding dashed alternative: ['l', 'i', '_', '_', 'c', 'h', 'e']
				adding dashed alternative: ['l', 'i', '_', '_', 'c', 'h', 'e']
				adding dashed alternative: ['l', 'i', '_', '_', 'ch', 'e']
				adding dashed alternative: ['l', 'i', '_', '_', 'ch', 'e']
				adding dashed alternative: ['_', 'l', '_', '_', 'i', 'c', 'h', 'e']
				adding dashed alternative: ['_', 'l', '_', '_', 'i', 'c', 'h', 'e']
				adding dashed alternative: ['_', 'l', '_', '_', 'i', 'ch', 'e']
				adding dashed alternative: ['_', 'l', '_', '_', 'i', 'ch', 'e']
				adding dashed alternative: ['l', '_', '_', '_', 'i', 'c', 'h', 'e']
				adding dashed alternative: ['l', '_', '_', '_', 'i', 'c', 'h', 'e']
				adding dashed alternative: ['l', '_', '_', '_', 'i', 'ch', 'e']
				adding dashed alternative: ['l', '_', '_', '_', 'i', 'ch', 'e']
				adding dashed alternative: ['_', '_', '_', '_', 'l', 'i', 'c', 'h', 'e']
				adding dashed alternative: ['_', '_', '_', '_', 'l', 'i', 'c', 'h', 'e']
				adding dashed alternative: ['_', '_', '_', '_', 'l', 'i', 'ch', 'e']
				adding dashed alternative: ['_', '_', '_', '_', 'l', 'i', 'ch', 'e']
				l/i/c/h/e(CCCCV)
l/i/c/h/e(CVCCV)
l/i/ch/e(CCCV)
l/i/ch/e(CVCV)
_/l/i/c/h/e(ACACCV)
_/l/i/c/h/e(ACACCV)
_/l/i/ch/e(ACACV)
_/l/i/ch/e(ACACV)
l/_/i/c/h/e(CAACCV)
l/_/i/c/h/e(CAACCV)
l/_/i/ch/e(CAACV)
l/_/i/ch/e(CAACV)
_/_/l/i/c/h/e(AACACCV)
_/_/l/i/c/h/e(AACACCV)
_/_/l/i/ch/e(AACACV)
_/_/l/i/ch/e(AACACV)
l/i/_/c/h/e(CAACCV)
l/i/_/c/h/e(CAACCV)
l/i/_/ch/e(CAACV)
l/i/_/ch/e(CAACV)
_/l/_/i/c/h/e(ACAACCV)
_/l/_/i/c/h/e(ACAACCV)
_/l/_/i/ch/e(ACAACV)
_/l/_/i/ch/e(ACAACV)
l/_/_/i/c/h/e(CAAACCV)
l/_/_/i/c/h/e(CAAACCV)
l/_/_/i/ch/e(CAAACV)
l/_/_/i/ch/e(CAAACV)
_/_/_/l/i/c/h/e(AAACACCV)
_/_/_/l/i/c/h/e(AAACACCV)
_/_/_/l/i/ch/e(AAACACV)
_/_/_/l/i/ch/e(AAACACV)
l/i/c/_/h/e(CACACV)
l/i/c/_/h/e(CACACV)
l/i/ch/_/e(CACAV)
l/i/ch/_/e(CACAV)
_/l/i/_/c/h/e(ACAACCV)
_/l/i/_/c/h/e(ACAACCV)
_/l/i/_/ch/e(ACAACV)
_/l/i/_/ch/e(ACAACV)
l/_/i/_/c/h/e(CAAACCV)
l/_/i/_/c/h/e(CAAACCV)
l/_/i/_/ch/e(CAAACV)
l/_/i/_/ch/e(CAAACV)
_/_/l/_/i/c/h/e(AACAACCV)
_/_/l/_/i/c/h/e(AACAACCV)
_/_/l/_/i/ch/e(AACAACV)
_/_/l/_/i/ch/e(AACAACV)
l/i/_/_/c/h/e(CAAACCV)
l/i/_/_/c/h/e(CAAACCV)
l/i/_/_/ch/e(CAAACV)
l/i/_/_/ch/e(CAAACV)
_/l/_/_/i/c/h/e(ACAAACCV)
_/l/_/_/i/c/h/e(ACAAACCV)
_/l/_/_/i/ch/e(ACAAACV)
_/l/_/_/i/ch/e(ACAAACV)
l/_/_/_/i/c/h/e(CAAAACCV)
l/_/_/_/i/c/h/e(CAAAACCV)
l/_/_/_/i/ch/e(CAAAACV)
l/_/_/_/i/ch/e(CAAAACV)
_/_/_/_/l/i/c/h/e(AAAACACCV)
_/_/_/_/l/i/c/h/e(AAAACACCV)
_/_/_/_/l/i/ch/e(AAAACACV)
_/_/_/_/l/i/ch/e(AAAACACV)
			___CVCVCV : 4___
				ANALYSING: heouene
				adding littera based on matching pattern
				ANALYSING: heuene
				adding littera based on matching pattern
				ANALYSING: eue
					resolving (10)
					> version: e/u/e
					> version: e/u/e
					> version: eu/e
					> version: e/ue
					> version: eu/e
					> version: _/e/u/e
					> version: _/e/u/e
					> version: _/eu/e
					> version: _/e/ue
					> version: _/eu/e
					RESULT:  ['_']
				adding dashed alternative: ['e', 'u', 'e', '_']
				adding dashed alternative: ['e', 'u', 'e', '_']
				adding dashed alternative: ['eu', 'e', '_']
				adding dashed alternative: ['e', 'ue', '_']
				adding dashed alternative: ['eu', 'e', '_']
				adding dashed alternative: ['_', 'e', 'u', 'e', '_']
				adding dashed alternative: ['_', 'e', 'u', 'e', '_']
				adding dashed alternative: ['_', 'eu', 'e', '_']
				adding dashed alternative: ['_', 'e', 'ue', '_']
				adding dashed alternative: ['_', 'eu', 'e', '_']
				e/u/e(VCV)
e/u/e(VVV)
eu/e(VV)
e/ue(VV)
eu/e(VV)
_/e/u/e(AVAV)
_/e/u/e(AVAV)
_/eu/e(AVV)
_/e/ue(AVV)
_/eu/e(AVV)
e/u/e/_(VAVA)
e/u/e/_(VAVA)
eu/e/_(VVA)
e/ue/_(VVA)
eu/e/_(VVA)
_/e/u/e/_(AVAVA)
_/e/u/e/_(AVAVA)
_/eu/e/_(AVVA)
_/e/ue/_(AVVA)
_/eu/e/_(AVVA)
				ANALYSING: he
					resolving (4)
					> version: h/e
					> version: h/_/e
					> version: h/e/_
					> version: h/_/e/_
					RESULT:  ['_']
				adding dashed alternative: ['h', 'e', '_']
				adding dashed alternative: ['h', '_', 'e', '_']
				adding dashed alternative: ['h', 'e', '_', '_']
				adding dashed alternative: ['h', '_', 'e', '_', '_']
				h/e(CV)
h/_/e(CAV)
h/e/_(CVA)
h/_/e/_(CAVA)
h/e/_(CVA)
h/_/e/_(CAVA)
h/e/_/_(CVAA)
h/_/e/_/_(CAVAA)
				ANALYSING: heo
					resolving (4)
					> version: h/e/o
					> version: h/eo
					> version: h/_/e/o
					> version: h/_/eo
					RESULT:  ['_']
				adding dashed alternative: ['h', 'e', 'o', '_']
				adding dashed alternative: ['h', 'eo', '_']
				adding dashed alternative: ['h', '_', 'e', 'o', '_']
				adding dashed alternative: ['h', '_', 'eo', '_']
				h/e/o(CVV)
h/eo(CV)
h/_/e/o(CAVV)
h/_/eo(CAV)
h/e/o/_(CVVA)
h/eo/_(CVA)
h/_/e/o/_(CAVVA)
h/_/eo/_(CAVA)
				ANALYSING: heofen
					resolving (4)
					> version: h/e/o/f/e/n
					TRYING: e
					> version: h/eo/f/e/n
					TRYING: n
					> version: h/_/e/o/f/e/n
					TRYING: f
					adding blocked set: C = C >> f, _, n
					> version: h/_/eo/f/e/n
					TRYING: e
					RESULT:  ['n']
				ANALYSING: heofenn
					resolving (8)
					> version: h/e/o/f/e/n/n
					TRYING: e
					> version: h/e/o/f/e/nn
					TRYING: e
					> version: h/eo/f/e/n/n
					TRYING: n
					> version: h/eo/f/e/nn
					TRYING: nn
					>>> MULTIPLE RESOLVE OPTIONS: {'nn', 'n'}
					> version: h/_/e/o/f/e/n/n
					TRYING: f
					adding blocked set: C = C >> f, _, n
					>>> MULTIPLE RESOLVE OPTIONS: {'nn', 'n'}
					> version: h/_/e/o/f/e/nn
					TRYING: f
					adding blocked set: C = C >> f, _, n
					>>> MULTIPLE RESOLVE OPTIONS: {'nn', 'n'}
					> version: h/_/eo/f/e/n/n
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'nn', 'n'}
					> version: h/_/eo/f/e/nn
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'nn', 'n'}
					RESULT:  ['nn', 'n']
				ANALYSING: heofon
					resolving (4)
					> version: h/e/o/f/o/n
					TRYING: o
					> version: h/eo/f/o/n
					TRYING: n
					> version: h/_/e/o/f/o/n
					TRYING: f
					adding blocked set: C = C >> nn, f, _, n
					> version: h/_/eo/f/o/n
					TRYING: o
					RESULT:  ['n']
				ANALYSING: heoue
					resolving (22)
					> version: h/e/o/u/e
					TRYING: e
					> version: h/e/o/u/e
					TRYING: e
					> version: h/e/ou/e
					> version: h/eo/u/e
					> version: h/eo/u/e
					> version: h/e/o/ue
					> version: h/eo/u/e
					> version: h/eo/u/e
					> version: h/e/ou/e
					> version: h/eo/ue
					> version: h/eo/ue
					> version: h/_/e/o/u/e
					TRYING: u
					adding blocked set: C = C >> u, nn, _, n
					> version: h/_/e/o/u/e
					TRYING: u
					adding blocked set: C = C >> u, nn, _, n
					> version: h/_/e/ou/e
					TRYING: e
					> version: h/_/eo/u/e
					TRYING: e
					> version: h/_/eo/u/e
					TRYING: e
					> version: h/_/e/o/ue
					TRYING: ue
					> version: h/_/eo/u/e
					TRYING: e
					> version: h/_/eo/u/e
					TRYING: e
					> version: h/_/e/ou/e
					TRYING: e
					> version: h/_/eo/ue
					> version: h/_/eo/ue
					RESULT:  ['_']
				adding dashed alternative: ['h', 'e', 'o', 'u', '_', 'e']
				adding dashed alternative: ['h', 'e', 'o', 'u', '_', 'e']
				adding dashed alternative: ['h', 'e', 'ou', 'e', '_']
				adding dashed alternative: ['h', 'eo', 'u', 'e', '_']
				adding dashed alternative: ['h', 'eo', 'u', 'e', '_']
				adding dashed alternative: ['h', 'e', 'o', 'ue', '_']
				adding dashed alternative: ['h', 'eo', 'u', 'e', '_']
				adding dashed alternative: ['h', 'eo', 'u', 'e', '_']
				adding dashed alternative: ['h', 'e', 'ou', 'e', '_']
				adding dashed alternative: ['h', 'eo', 'ue', '_']
				adding dashed alternative: ['h', 'eo', 'ue', '_']
				adding dashed alternative: ['h', '_', 'e', 'o', '_', 'u', 'e']
				adding dashed alternative: ['h', '_', 'e', 'o', '_', 'u', 'e']
				adding dashed alternative: ['h', '_', 'e', 'ou', '_', 'e']
				adding dashed alternative: ['h', '_', 'eo', 'u', '_', 'e']
				adding dashed alternative: ['h', '_', 'eo', 'u', '_', 'e']
				adding dashed alternative: ['h', '_', 'e', 'o', '_', 'ue']
				adding dashed alternative: ['h', '_', 'eo', 'u', '_', 'e']
				adding dashed alternative: ['h', '_', 'eo', 'u', '_', 'e']
				adding dashed alternative: ['h', '_', 'e', 'ou', '_', 'e']
				adding dashed alternative: ['h', '_', 'eo', 'ue', '_']
				adding dashed alternative: ['h', '_', 'eo', 'ue', '_']
				h/e/o/u/e(CVVCV)
h/e/o/u/e(CVVVV)
h/e/ou/e(CVVV)
h/eo/u/e(CVCV)
h/eo/u/e(CVVV)
h/e/o/ue(CVVV)
h/eo/u/e(CVCV)
h/eo/u/e(CVVV)
h/e/ou/e(CVVV)
h/eo/ue(CVV)
h/eo/ue(CVV)
h/_/e/o/u/e(CAVVAV)
h/_/e/o/u/e(CAVVAV)
h/_/e/ou/e(CAVVV)
h/_/eo/u/e(CAVAV)
h/_/eo/u/e(CAVAV)
h/_/e/o/ue(CAVVV)
h/_/eo/u/e(CAVAV)
h/_/eo/u/e(CAVAV)
h/_/e/ou/e(CAVVV)
h/_/eo/ue(CAVV)
h/_/eo/ue(CAVV)
h/e/o/u/_/e(CVVAAV)
h/e/o/u/_/e(CVVAAV)
h/e/ou/e/_(CVVVA)
h/eo/u/e/_(CVAVA)
h/eo/u/e/_(CVAVA)
h/e/o/ue/_(CVVVA)
h/eo/u/e/_(CVAVA)
h/eo/u/e/_(CVAVA)
h/e/ou/e/_(CVVVA)
h/eo/ue/_(CVVA)
h/eo/ue/_(CVVA)
h/_/e/o/_/u/e(CAVVAAV)
h/_/e/o/_/u/e(CAVVAAV)
h/_/e/ou/_/e(CAVVAV)
h/_/eo/u/_/e(CAVAAV)
h/_/eo/u/_/e(CAVAAV)
h/_/e/o/_/ue(CAVVAV)
h/_/eo/u/_/e(CAVAAV)
h/_/eo/u/_/e(CAVAAV)
h/_/e/ou/_/e(CAVVAV)
h/_/eo/ue/_(CAVVA)
h/_/eo/ue/_(CAVVA)
				ANALYSING: heouen
					resolving (44)
					> version: h/e/o/u/e/n
					TRYING: e
					> version: h/e/o/u/e/n
					TRYING: e
					> version: h/e/ou/e/n
					TRYING: n
					> version: h/eo/u/e/n
					TRYING: n
					> version: h/eo/u/e/n
					TRYING: n
					> version: h/e/o/ue/n
					TRYING: n
					> version: h/eo/u/e/n
					TRYING: n
					> version: h/eo/u/e/n
					TRYING: n
					> version: h/e/ou/e/n
					TRYING: n
					> version: h/eo/ue/n
					> version: h/eo/ue/n
					> version: h/_/e/o/u/e/n
					TRYING: u
					adding blocked set: C = C >> u, nn, _, n
					> version: h/_/e/o/u/e/n
					TRYING: u
					adding blocked set: C = C >> u, nn, _, n
					> version: h/_/e/ou/e/n
					TRYING: e
					> version: h/_/eo/u/e/n
					TRYING: e
					> version: h/_/eo/u/e/n
					TRYING: e
					> version: h/_/e/o/ue/n
					TRYING: ue
					> version: h/_/eo/u/e/n
					TRYING: e
					> version: h/_/eo/u/e/n
					TRYING: e
					> version: h/_/e/ou/e/n
					TRYING: e
					> version: h/_/eo/ue/n
					TRYING: n
					> version: h/_/eo/ue/n
					TRYING: n
					> version: h/e/o/_/u/e/n
					TRYING: u
					adding blocked set: C = C >> u, nn, _, n
					> version: h/e/o/_/u/e/n
					TRYING: u
					adding blocked set: C = C >> u, nn, _, n
					> version: h/e/ou/_/e/n
					TRYING: e
					> version: h/eo/u/_/e/n
					TRYING: e
					> version: h/eo/u/_/e/n
					TRYING: e
					> version: h/e/o/_/ue/n
					TRYING: ue
					> version: h/eo/u/_/e/n
					TRYING: e
					> version: h/eo/u/_/e/n
					TRYING: e
					> version: h/e/ou/_/e/n
					TRYING: e
					> version: h/eo/ue/_/n
					TRYING: n
					> version: h/eo/ue/_/n
					TRYING: n
					> version: h/_/e/_/o/u/e/n
					TRYING: o
					> version: h/_/e/_/o/u/e/n
					TRYING: o
					> version: h/_/e/_/ou/e/n
					TRYING: ou
					> version: h/_/eo/_/u/e/n
					TRYING: u
					adding blocked set: C = C >> u, nn, _, n
					> version: h/_/eo/_/u/e/n
					TRYING: u
					adding blocked set: C = C >> u, nn, _, n
					> version: h/_/e/_/o/ue/n
					TRYING: o
					> version: h/_/eo/_/u/e/n
					TRYING: u
					adding blocked set: C = C >> u, nn, _, n
					> version: h/_/eo/_/u/e/n
					TRYING: u
					adding blocked set: C = C >> u, nn, _, n
					> version: h/_/e/_/ou/e/n
					TRYING: ou
					> version: h/_/eo/_/ue/n
					TRYING: ue
					> version: h/_/eo/_/ue/n
					TRYING: ue
					RESULT:  ['n']
				ANALYSING: heue
					resolving (20)
					> version: h/e/u/e
					> version: h/e/u/e
					> version: h/eu/e
					> version: h/e/ue
					> version: h/eu/e
					> version: h/_/e/u/e
					TRYING: e
					> version: h/_/e/u/e
					TRYING: e
					> version: h/_/eu/e
					> version: h/_/e/ue
					> version: h/_/eu/e
					> version: h/e/u/_/e
					TRYING: e
					> version: h/e/u/_/e
					TRYING: e
					> version: h/eu/e/_
					> version: h/e/ue/_
					> version: h/eu/e/_
					> version: h/_/e/_/u/e
					TRYING: u
					adding blocked set: C = C >> u, nn, _, n
					> version: h/_/e/_/u/e
					TRYING: u
					adding blocked set: C = C >> u, nn, _, n
					> version: h/_/eu/_/e
					TRYING: e
					> version: h/_/e/_/ue
					TRYING: ue
					> version: h/_/eu/_/e
					TRYING: e
					RESULT:  ['_']
				adding dashed alternative: ['h', 'e', 'u', 'e', '_']
				adding dashed alternative: ['h', 'e', 'u', 'e', '_']
				adding dashed alternative: ['h', 'eu', 'e', '_']
				adding dashed alternative: ['h', 'e', 'ue', '_']
				adding dashed alternative: ['h', 'eu', 'e', '_']
				adding dashed alternative: ['h', '_', 'e', 'u', '_', 'e']
				adding dashed alternative: ['h', '_', 'e', 'u', '_', 'e']
				adding dashed alternative: ['h', '_', 'eu', 'e', '_']
				adding dashed alternative: ['h', '_', 'e', 'ue', '_']
				adding dashed alternative: ['h', '_', 'eu', 'e', '_']
				adding dashed alternative: ['h', 'e', 'u', '_', '_', 'e']
				adding dashed alternative: ['h', 'e', 'u', '_', '_', 'e']
				adding dashed alternative: ['h', 'eu', 'e', '_', '_']
				adding dashed alternative: ['h', 'e', 'ue', '_', '_']
				adding dashed alternative: ['h', 'eu', 'e', '_', '_']
				adding dashed alternative: ['h', '_', 'e', '_', '_', 'u', 'e']
				adding dashed alternative: ['h', '_', 'e', '_', '_', 'u', 'e']
				adding dashed alternative: ['h', '_', 'eu', '_', '_', 'e']
				adding dashed alternative: ['h', '_', 'e', '_', '_', 'ue']
				adding dashed alternative: ['h', '_', 'eu', '_', '_', 'e']
				h/e/u/e(CVCV)
h/e/u/e(CVVV)
h/eu/e(CVV)
h/e/ue(CVV)
h/eu/e(CVV)
h/_/e/u/e(CAVAV)
h/_/e/u/e(CAVAV)
h/_/eu/e(CAVV)
h/_/e/ue(CAVV)
h/_/eu/e(CAVV)
h/e/u/_/e(CVAAV)
h/e/u/_/e(CVAAV)
h/eu/e/_(CVVA)
h/e/ue/_(CVVA)
h/eu/e/_(CVVA)
h/_/e/_/u/e(CAVAAV)
h/_/e/_/u/e(CAVAAV)
h/_/eu/_/e(CAVAV)
h/_/e/_/ue(CAVAV)
h/_/eu/_/e(CAVAV)
h/e/u/e/_(CVAVA)
h/e/u/e/_(CVAVA)
h/eu/e/_(CVVA)
h/e/ue/_(CVVA)
h/eu/e/_(CVVA)
h/_/e/u/_/e(CAVAAV)
h/_/e/u/_/e(CAVAAV)
h/_/eu/e/_(CAVVA)
h/_/e/ue/_(CAVVA)
h/_/eu/e/_(CAVVA)
h/e/u/_/_/e(CVAAAV)
h/e/u/_/_/e(CVAAAV)
h/eu/e/_/_(CVVAA)
h/e/ue/_/_(CVVAA)
h/eu/e/_/_(CVVAA)
h/_/e/_/_/u/e(CAVAAAV)
h/_/e/_/_/u/e(CAVAAAV)
h/_/eu/_/_/e(CAVAAV)
h/_/e/_/_/ue(CAVAAV)
h/_/eu/_/_/e(CAVAAV)
				ANALYSING: heuen
					resolving (20)
					> version: h/e/u/e/n
					TRYING: n
					> version: h/e/u/e/n
					TRYING: n
					> version: h/eu/e/n
					> version: h/e/ue/n
					> version: h/eu/e/n
					> version: h/_/e/u/e/n
					TRYING: e
					> version: h/_/e/u/e/n
					TRYING: e
					> version: h/_/eu/e/n
					TRYING: n
					> version: h/_/e/ue/n
					TRYING: n
					> version: h/_/eu/e/n
					TRYING: n
					> version: h/e/u/_/e/n
					TRYING: e
					> version: h/e/u/_/e/n
					TRYING: e
					> version: h/eu/e/_/n
					TRYING: n
					> version: h/e/ue/_/n
					TRYING: n
					> version: h/eu/e/_/n
					TRYING: n
					> version: h/_/e/_/u/e/n
					TRYING: u
					adding blocked set: C = C >> u, nn, _, n
					> version: h/_/e/_/u/e/n
					TRYING: u
					adding blocked set: C = C >> u, nn, _, n
					> version: h/_/eu/_/e/n
					TRYING: e
					> version: h/_/e/_/ue/n
					TRYING: ue
					> version: h/_/eu/_/e/n
					TRYING: e
					RESULT:  ['n']
				ANALYSING: houen
					resolving (20)
					> version: h/o/u/e/n
					TRYING: n
					> version: h/o/u/e/n
					TRYING: n
					> version: h/ou/e/n
					> version: h/o/ue/n
					> version: h/ou/e/n
					> version: h/_/o/u/e/n
					TRYING: e
					> version: h/_/o/u/e/n
					TRYING: e
					> version: h/_/ou/e/n
					TRYING: n
					> version: h/_/o/ue/n
					TRYING: n
					> version: h/_/ou/e/n
					TRYING: n
					> version: h/o/u/_/e/n
					TRYING: e
					> version: h/o/u/_/e/n
					TRYING: e
					> version: h/ou/e/_/n
					TRYING: n
					> version: h/o/ue/_/n
					TRYING: n
					> version: h/ou/e/_/n
					TRYING: n
					> version: h/_/o/_/u/e/n
					TRYING: u
					adding blocked set: C = C >> u, nn, _, n
					> version: h/_/o/_/u/e/n
					TRYING: u
					adding blocked set: C = C >> u, nn, _, n
					> version: h/_/ou/_/e/n
					TRYING: e
					> version: h/_/o/_/ue/n
					TRYING: ue
					> version: h/_/ou/_/e/n
					TRYING: e
					RESULT:  ['n']
				ANALYSING: lich
					resolving (64)
					> version: l/i/c/h
					> version: l/i/c/h
					> version: l/i/ch
					> version: l/i/ch
					> version: _/l/i/c/h
					TRYING: h
					adding blocked set: C = C >> nn, h, _, n
					> version: _/l/i/c/h
					TRYING: h
					adding blocked set: C = C >> nn, h, _, n
					> version: _/l/i/ch
					> version: _/l/i/ch
					> version: l/_/i/c/h
					TRYING: h
					adding blocked set: C = C >> nn, h, _, n
					> version: l/_/i/c/h
					TRYING: h
					adding blocked set: C = C >> nn, h, _, n
					> version: l/_/i/ch
					> version: l/_/i/ch
					> version: _/_/l/i/c/h
					TRYING: c
					adding blocked set: C = C >> nn, c, _, n
					> version: _/_/l/i/c/h
					TRYING: c
					adding blocked set: C = C >> nn, c, _, n
					> version: _/_/l/i/ch
					TRYING: ch
					adding blocked set: C = C >> ch, nn, _, n
					> version: _/_/l/i/ch
					TRYING: ch
					adding blocked set: C = C >> ch, nn, _, n
					> version: l/i/_/c/h
					TRYING: h
					adding blocked set: C = C >> nn, h, _, n
					> version: l/i/_/c/h
					TRYING: h
					adding blocked set: C = C >> nn, h, _, n
					> version: l/i/_/ch
					> version: l/i/_/ch
					> version: _/l/_/i/c/h
					TRYING: c
					adding blocked set: C = C >> nn, c, _, n
					> version: _/l/_/i/c/h
					TRYING: c
					adding blocked set: C = C >> nn, c, _, n
					> version: _/l/_/i/ch
					TRYING: ch
					adding blocked set: C = C >> ch, nn, _, n
					> version: _/l/_/i/ch
					TRYING: ch
					adding blocked set: C = C >> ch, nn, _, n
					> version: l/_/_/i/c/h
					TRYING: c
					adding blocked set: C = C >> nn, c, _, n
					> version: l/_/_/i/c/h
					TRYING: c
					adding blocked set: C = C >> nn, c, _, n
					> version: l/_/_/i/ch
					TRYING: ch
					adding blocked set: C = C >> ch, nn, _, n
					> version: l/_/_/i/ch
					TRYING: ch
					adding blocked set: C = C >> ch, nn, _, n
					> version: _/_/_/l/i/c/h
					TRYING: i
					adding blocked set: C = C >> nn, i, _, n
					> version: _/_/_/l/i/c/h
					TRYING: i
					adding blocked set: C = C >> nn, i, _, n
					> version: _/_/_/l/i/ch
					TRYING: i
					adding blocked set: C = C >> nn, i, _, n
					> version: _/_/_/l/i/ch
					TRYING: i
					adding blocked set: C = C >> nn, i, _, n
					> version: l/i/c/_/h
					TRYING: h
					adding blocked set: C = C >> nn, h, _, n
					> version: l/i/c/_/h
					TRYING: h
					adding blocked set: C = C >> nn, h, _, n
					> version: l/i/ch/_
					> version: l/i/ch/_
					> version: _/l/i/_/c/h
					TRYING: c
					adding blocked set: C = C >> nn, c, _, n
					> version: _/l/i/_/c/h
					TRYING: c
					adding blocked set: C = C >> nn, c, _, n
					> version: _/l/i/_/ch
					TRYING: ch
					adding blocked set: C = C >> ch, nn, _, n
					> version: _/l/i/_/ch
					TRYING: ch
					adding blocked set: C = C >> ch, nn, _, n
					> version: l/_/i/_/c/h
					TRYING: c
					adding blocked set: C = C >> nn, c, _, n
					> version: l/_/i/_/c/h
					TRYING: c
					adding blocked set: C = C >> nn, c, _, n
					> version: l/_/i/_/ch
					TRYING: ch
					adding blocked set: C = C >> ch, nn, _, n
					> version: l/_/i/_/ch
					TRYING: ch
					adding blocked set: C = C >> ch, nn, _, n
					> version: _/_/l/_/i/c/h
					TRYING: i
					adding blocked set: C = C >> nn, i, _, n
					> version: _/_/l/_/i/c/h
					TRYING: i
					adding blocked set: C = C >> nn, i, _, n
					> version: _/_/l/_/i/ch
					TRYING: i
					adding blocked set: C = C >> nn, i, _, n
					> version: _/_/l/_/i/ch
					TRYING: i
					adding blocked set: C = C >> nn, i, _, n
					> version: l/i/_/_/c/h
					TRYING: c
					adding blocked set: C = C >> nn, c, _, n
					> version: l/i/_/_/c/h
					TRYING: c
					adding blocked set: C = C >> nn, c, _, n
					> version: l/i/_/_/ch
					TRYING: ch
					adding blocked set: C = C >> ch, nn, _, n
					> version: l/i/_/_/ch
					TRYING: ch
					adding blocked set: C = C >> ch, nn, _, n
					> version: _/l/_/_/i/c/h
					TRYING: i
					adding blocked set: C = C >> nn, i, _, n
					> version: _/l/_/_/i/c/h
					TRYING: i
					adding blocked set: C = C >> nn, i, _, n
					> version: _/l/_/_/i/ch
					TRYING: i
					adding blocked set: C = C >> nn, i, _, n
					> version: _/l/_/_/i/ch
					TRYING: i
					adding blocked set: C = C >> nn, i, _, n
					> version: l/_/_/_/i/c/h
					TRYING: i
					adding blocked set: C = C >> nn, i, _, n
					> version: l/_/_/_/i/c/h
					TRYING: i
					adding blocked set: C = C >> nn, i, _, n
					> version: l/_/_/_/i/ch
					TRYING: i
					adding blocked set: C = C >> nn, i, _, n
					> version: l/_/_/_/i/ch
					TRYING: i
					adding blocked set: C = C >> nn, i, _, n
					> version: _/_/_/_/l/i/c/h
					TRYING: l
					adding blocked set: C = C >> nn, _, l, n
					> version: _/_/_/_/l/i/c/h
					TRYING: l
					adding blocked set: C = C >> nn, _, l, n
					> version: _/_/_/_/l/i/ch
					TRYING: l
					adding blocked set: C = C >> nn, _, l, n
					> version: _/_/_/_/l/i/ch
					TRYING: l
					adding blocked set: C = C >> nn, _, l, n
					RESULT:  ['_']
				adding dashed alternative: ['l', 'i', 'c', 'h', '_']
				adding dashed alternative: ['l', 'i', 'c', 'h', '_']
				adding dashed alternative: ['l', 'i', 'ch', '_']
				adding dashed alternative: ['l', 'i', 'ch', '_']
				adding dashed alternative: ['_', 'l', 'i', 'c', '_', 'h']
				adding dashed alternative: ['_', 'l', 'i', 'c', '_', 'h']
				adding dashed alternative: ['_', 'l', 'i', 'ch', '_']
				adding dashed alternative: ['_', 'l', 'i', 'ch', '_']
				adding dashed alternative: ['l', '_', 'i', 'c', '_', 'h']
				adding dashed alternative: ['l', '_', 'i', 'c', '_', 'h']
				adding dashed alternative: ['l', '_', 'i', 'ch', '_']
				adding dashed alternative: ['l', '_', 'i', 'ch', '_']
				adding dashed alternative: ['_', '_', 'l', 'i', '_', 'c', 'h']
				adding dashed alternative: ['_', '_', 'l', 'i', '_', 'c', 'h']
				adding dashed alternative: ['_', '_', 'l', 'i', '_', 'ch']
				adding dashed alternative: ['_', '_', 'l', 'i', '_', 'ch']
				adding dashed alternative: ['l', 'i', '_', 'c', '_', 'h']
				adding dashed alternative: ['l', 'i', '_', 'c', '_', 'h']
				adding dashed alternative: ['l', 'i', '_', 'ch', '_']
				adding dashed alternative: ['l', 'i', '_', 'ch', '_']
				adding dashed alternative: ['_', 'l', '_', 'i', '_', 'c', 'h']
				adding dashed alternative: ['_', 'l', '_', 'i', '_', 'c', 'h']
				adding dashed alternative: ['_', 'l', '_', 'i', '_', 'ch']
				adding dashed alternative: ['_', 'l', '_', 'i', '_', 'ch']
				adding dashed alternative: ['l', '_', '_', 'i', '_', 'c', 'h']
				adding dashed alternative: ['l', '_', '_', 'i', '_', 'c', 'h']
				adding dashed alternative: ['l', '_', '_', 'i', '_', 'ch']
				adding dashed alternative: ['l', '_', '_', 'i', '_', 'ch']
				adding dashed alternative: ['_', '_', '_', 'l', '_', 'i', 'c', 'h']
				adding dashed alternative: ['_', '_', '_', 'l', '_', 'i', 'c', 'h']
				adding dashed alternative: ['_', '_', '_', 'l', '_', 'i', 'ch']
				adding dashed alternative: ['_', '_', '_', 'l', '_', 'i', 'ch']
				adding dashed alternative: ['l', 'i', 'c', '_', '_', 'h']
				adding dashed alternative: ['l', 'i', 'c', '_', '_', 'h']
				adding dashed alternative: ['l', 'i', 'ch', '_', '_']
				adding dashed alternative: ['l', 'i', 'ch', '_', '_']
				adding dashed alternative: ['_', 'l', 'i', '_', '_', 'c', 'h']
				adding dashed alternative: ['_', 'l', 'i', '_', '_', 'c', 'h']
				adding dashed alternative: ['_', 'l', 'i', '_', '_', 'ch']
				adding dashed alternative: ['_', 'l', 'i', '_', '_', 'ch']
				adding dashed alternative: ['l', '_', 'i', '_', '_', 'c', 'h']
				adding dashed alternative: ['l', '_', 'i', '_', '_', 'c', 'h']
				adding dashed alternative: ['l', '_', 'i', '_', '_', 'ch']
				adding dashed alternative: ['l', '_', 'i', '_', '_', 'ch']
				adding dashed alternative: ['_', '_', 'l', '_', '_', 'i', 'c', 'h']
				adding dashed alternative: ['_', '_', 'l', '_', '_', 'i', 'c', 'h']
				adding dashed alternative: ['_', '_', 'l', '_', '_', 'i', 'ch']
				adding dashed alternative: ['_', '_', 'l', '_', '_', 'i', 'ch']
				adding dashed alternative: ['l', 'i', '_', '_', '_', 'c', 'h']
				adding dashed alternative: ['l', 'i', '_', '_', '_', 'c', 'h']
				adding dashed alternative: ['l', 'i', '_', '_', '_', 'ch']
				adding dashed alternative: ['l', 'i', '_', '_', '_', 'ch']
				adding dashed alternative: ['_', 'l', '_', '_', '_', 'i', 'c', 'h']
				adding dashed alternative: ['_', 'l', '_', '_', '_', 'i', 'c', 'h']
				adding dashed alternative: ['_', 'l', '_', '_', '_', 'i', 'ch']
				adding dashed alternative: ['_', 'l', '_', '_', '_', 'i', 'ch']
				adding dashed alternative: ['l', '_', '_', '_', '_', 'i', 'c', 'h']
				adding dashed alternative: ['l', '_', '_', '_', '_', 'i', 'c', 'h']
				adding dashed alternative: ['l', '_', '_', '_', '_', 'i', 'ch']
				adding dashed alternative: ['l', '_', '_', '_', '_', 'i', 'ch']
				adding dashed alternative: ['_', '_', '_', '_', '_', 'l', 'i', 'c', 'h']
				adding dashed alternative: ['_', '_', '_', '_', '_', 'l', 'i', 'c', 'h']
				adding dashed alternative: ['_', '_', '_', '_', '_', 'l', 'i', 'ch']
				adding dashed alternative: ['_', '_', '_', '_', '_', 'l', 'i', 'ch']
				l/i/c/h(CCCC)
l/i/c/h(CVCC)
l/i/ch(CCC)
l/i/ch(CVC)
_/l/i/c/h(ACACC)
_/l/i/c/h(ACACC)
_/l/i/ch(ACAC)
_/l/i/ch(ACAC)
l/_/i/c/h(CAACC)
l/_/i/c/h(CAACC)
l/_/i/ch(CAAC)
l/_/i/ch(CAAC)
_/_/l/i/c/h(AACACC)
_/_/l/i/c/h(AACACC)
_/_/l/i/ch(AACAC)
_/_/l/i/ch(AACAC)
l/i/_/c/h(CAACC)
l/i/_/c/h(CAACC)
l/i/_/ch(CAAC)
l/i/_/ch(CAAC)
_/l/_/i/c/h(ACAACC)
_/l/_/i/c/h(ACAACC)
_/l/_/i/ch(ACAAC)
_/l/_/i/ch(ACAAC)
l/_/_/i/c/h(CAAACC)
l/_/_/i/c/h(CAAACC)
l/_/_/i/ch(CAAAC)
l/_/_/i/ch(CAAAC)
_/_/_/l/i/c/h(AAACACC)
_/_/_/l/i/c/h(AAACACC)
_/_/_/l/i/ch(AAACAC)
_/_/_/l/i/ch(AAACAC)
l/i/c/_/h(CACAC)
l/i/c/_/h(CACAC)
l/i/ch/_(CACA)
l/i/ch/_(CACA)
_/l/i/_/c/h(ACAACC)
_/l/i/_/c/h(ACAACC)
_/l/i/_/ch(ACAAC)
_/l/i/_/ch(ACAAC)
l/_/i/_/c/h(CAAACC)
l/_/i/_/c/h(CAAACC)
l/_/i/_/ch(CAAAC)
l/_/i/_/ch(CAAAC)
_/_/l/_/i/c/h(AACAACC)
_/_/l/_/i/c/h(AACAACC)
_/_/l/_/i/ch(AACAAC)
_/_/l/_/i/ch(AACAAC)
l/i/_/_/c/h(CAAACC)
l/i/_/_/c/h(CAAACC)
l/i/_/_/ch(CAAAC)
l/i/_/_/ch(CAAAC)
_/l/_/_/i/c/h(ACAAACC)
_/l/_/_/i/c/h(ACAAACC)
_/l/_/_/i/ch(ACAAAC)
_/l/_/_/i/ch(ACAAAC)
l/_/_/_/i/c/h(CAAAACC)
l/_/_/_/i/c/h(CAAAACC)
l/_/_/_/i/ch(CAAAAC)
l/_/_/_/i/ch(CAAAAC)
_/_/_/_/l/i/c/h(AAAACACC)
_/_/_/_/l/i/c/h(AAAACACC)
_/_/_/_/l/i/ch(AAAACAC)
_/_/_/_/l/i/ch(AAAACAC)
l/i/c/h/_(CACCA)
l/i/c/h/_(CACCA)
l/i/ch/_(CACA)
l/i/ch/_(CACA)
_/l/i/c/_/h(ACACAC)
_/l/i/c/_/h(ACACAC)
_/l/i/ch/_(ACACA)
_/l/i/ch/_(ACACA)
l/_/i/c/_/h(CAACAC)
l/_/i/c/_/h(CAACAC)
l/_/i/ch/_(CAACA)
l/_/i/ch/_(CAACA)
_/_/l/i/_/c/h(AACAACC)
_/_/l/i/_/c/h(AACAACC)
_/_/l/i/_/ch(AACAAC)
_/_/l/i/_/ch(AACAAC)
l/i/_/c/_/h(CAACAC)
l/i/_/c/_/h(CAACAC)
l/i/_/ch/_(CAACA)
l/i/_/ch/_(CAACA)
_/l/_/i/_/c/h(ACAAACC)
_/l/_/i/_/c/h(ACAAACC)
_/l/_/i/_/ch(ACAAAC)
_/l/_/i/_/ch(ACAAAC)
l/_/_/i/_/c/h(CAAAACC)
l/_/_/i/_/c/h(CAAAACC)
l/_/_/i/_/ch(CAAAAC)
l/_/_/i/_/ch(CAAAAC)
_/_/_/l/_/i/c/h(AAACAACC)
_/_/_/l/_/i/c/h(AAACAACC)
_/_/_/l/_/i/ch(AAACAAC)
_/_/_/l/_/i/ch(AAACAAC)
l/i/c/_/_/h(CACAAC)
l/i/c/_/_/h(CACAAC)
l/i/ch/_/_(CACAA)
l/i/ch/_/_(CACAA)
_/l/i/_/_/c/h(ACAAACC)
_/l/i/_/_/c/h(ACAAACC)
_/l/i/_/_/ch(ACAAAC)
_/l/i/_/_/ch(ACAAAC)
l/_/i/_/_/c/h(CAAAACC)
l/_/i/_/_/c/h(CAAAACC)
l/_/i/_/_/ch(CAAAAC)
l/_/i/_/_/ch(CAAAAC)
_/_/l/_/_/i/c/h(AACAAACC)
_/_/l/_/_/i/c/h(AACAAACC)
_/_/l/_/_/i/ch(AACAAAC)
_/_/l/_/_/i/ch(AACAAAC)
l/i/_/_/_/c/h(CAAAACC)
l/i/_/_/_/c/h(CAAAACC)
l/i/_/_/_/ch(CAAAAC)
l/i/_/_/_/ch(CAAAAC)
_/l/_/_/_/i/c/h(ACAAAACC)
_/l/_/_/_/i/c/h(ACAAAACC)
_/l/_/_/_/i/ch(ACAAAAC)
_/l/_/_/_/i/ch(ACAAAAC)
l/_/_/_/_/i/c/h(CAAAAACC)
l/_/_/_/_/i/c/h(CAAAAACC)
l/_/_/_/_/i/ch(CAAAAAC)
l/_/_/_/_/i/ch(CAAAAAC)
_/_/_/_/_/l/i/c/h(AAAAACACC)
_/_/_/_/_/l/i/c/h(AAAAACACC)
_/_/_/_/_/l/i/ch(AAAAACAC)
_/_/_/_/_/l/i/ch(AAAAACAC)
				ANALYSING: liche
					resolving (64)
					> version: l/i/c/h/e
					TRYING: e
					> version: l/i/c/h/e
					TRYING: e
					> version: l/i/ch/e
					> version: l/i/ch/e
					> version: _/l/i/c/h/e
					TRYING: h
					adding blocked set: C = C >> nn, h, _, n
					> version: _/l/i/c/h/e
					TRYING: h
					adding blocked set: C = C >> nn, h, _, n
					> version: _/l/i/ch/e
					TRYING: e
					> version: _/l/i/ch/e
					TRYING: e
					> version: l/_/i/c/h/e
					TRYING: h
					adding blocked set: C = C >> nn, h, _, n
					> version: l/_/i/c/h/e
					TRYING: h
					adding blocked set: C = C >> nn, h, _, n
					> version: l/_/i/ch/e
					TRYING: e
					> version: l/_/i/ch/e
					TRYING: e
					> version: _/_/l/i/c/h/e
					TRYING: c
					adding blocked set: C = C >> nn, c, _, n
					> version: _/_/l/i/c/h/e
					TRYING: c
					adding blocked set: C = C >> nn, c, _, n
					> version: _/_/l/i/ch/e
					TRYING: ch
					adding blocked set: C = C >> ch, nn, _, n
					> version: _/_/l/i/ch/e
					TRYING: ch
					adding blocked set: C = C >> ch, nn, _, n
					> version: l/i/_/c/h/e
					TRYING: h
					adding blocked set: C = C >> nn, h, _, n
					> version: l/i/_/c/h/e
					TRYING: h
					adding blocked set: C = C >> nn, h, _, n
					> version: l/i/_/ch/e
					TRYING: e
					> version: l/i/_/ch/e
					TRYING: e
					> version: _/l/_/i/c/h/e
					TRYING: c
					adding blocked set: C = C >> nn, c, _, n
					> version: _/l/_/i/c/h/e
					TRYING: c
					adding blocked set: C = C >> nn, c, _, n
					> version: _/l/_/i/ch/e
					TRYING: ch
					adding blocked set: C = C >> ch, nn, _, n
					> version: _/l/_/i/ch/e
					TRYING: ch
					adding blocked set: C = C >> ch, nn, _, n
					> version: l/_/_/i/c/h/e
					TRYING: c
					adding blocked set: C = C >> nn, c, _, n
					> version: l/_/_/i/c/h/e
					TRYING: c
					adding blocked set: C = C >> nn, c, _, n
					> version: l/_/_/i/ch/e
					TRYING: ch
					adding blocked set: C = C >> ch, nn, _, n
					> version: l/_/_/i/ch/e
					TRYING: ch
					adding blocked set: C = C >> ch, nn, _, n
					> version: _/_/_/l/i/c/h/e
					TRYING: i
					adding blocked set: C = C >> nn, i, _, n
					> version: _/_/_/l/i/c/h/e
					TRYING: i
					adding blocked set: C = C >> nn, i, _, n
					> version: _/_/_/l/i/ch/e
					TRYING: i
					adding blocked set: C = C >> nn, i, _, n
					> version: _/_/_/l/i/ch/e
					TRYING: i
					adding blocked set: C = C >> nn, i, _, n
					> version: l/i/c/_/h/e
					TRYING: h
					adding blocked set: C = C >> nn, h, _, n
					> version: l/i/c/_/h/e
					TRYING: h
					adding blocked set: C = C >> nn, h, _, n
					> version: l/i/ch/_/e
					TRYING: e
					> version: l/i/ch/_/e
					TRYING: e
					> version: _/l/i/_/c/h/e
					TRYING: c
					adding blocked set: C = C >> nn, c, _, n
					> version: _/l/i/_/c/h/e
					TRYING: c
					adding blocked set: C = C >> nn, c, _, n
					> version: _/l/i/_/ch/e
					TRYING: ch
					adding blocked set: C = C >> ch, nn, _, n
					> version: _/l/i/_/ch/e
					TRYING: ch
					adding blocked set: C = C >> ch, nn, _, n
					> version: l/_/i/_/c/h/e
					TRYING: c
					adding blocked set: C = C >> nn, c, _, n
					> version: l/_/i/_/c/h/e
					TRYING: c
					adding blocked set: C = C >> nn, c, _, n
					> version: l/_/i/_/ch/e
					TRYING: ch
					adding blocked set: C = C >> ch, nn, _, n
					> version: l/_/i/_/ch/e
					TRYING: ch
					adding blocked set: C = C >> ch, nn, _, n
					> version: _/_/l/_/i/c/h/e
					TRYING: i
					adding blocked set: C = C >> nn, i, _, n
					> version: _/_/l/_/i/c/h/e
					TRYING: i
					adding blocked set: C = C >> nn, i, _, n
					> version: _/_/l/_/i/ch/e
					TRYING: i
					adding blocked set: C = C >> nn, i, _, n
					> version: _/_/l/_/i/ch/e
					TRYING: i
					adding blocked set: C = C >> nn, i, _, n
					> version: l/i/_/_/c/h/e
					TRYING: c
					adding blocked set: C = C >> nn, c, _, n
					> version: l/i/_/_/c/h/e
					TRYING: c
					adding blocked set: C = C >> nn, c, _, n
					> version: l/i/_/_/ch/e
					TRYING: ch
					adding blocked set: C = C >> ch, nn, _, n
					> version: l/i/_/_/ch/e
					TRYING: ch
					adding blocked set: C = C >> ch, nn, _, n
					> version: _/l/_/_/i/c/h/e
					TRYING: i
					adding blocked set: C = C >> nn, i, _, n
					> version: _/l/_/_/i/c/h/e
					TRYING: i
					adding blocked set: C = C >> nn, i, _, n
					> version: _/l/_/_/i/ch/e
					TRYING: i
					adding blocked set: C = C >> nn, i, _, n
					> version: _/l/_/_/i/ch/e
					TRYING: i
					adding blocked set: C = C >> nn, i, _, n
					> version: l/_/_/_/i/c/h/e
					TRYING: i
					adding blocked set: C = C >> nn, i, _, n
					> version: l/_/_/_/i/c/h/e
					TRYING: i
					adding blocked set: C = C >> nn, i, _, n
					> version: l/_/_/_/i/ch/e
					TRYING: i
					adding blocked set: C = C >> nn, i, _, n
					> version: l/_/_/_/i/ch/e
					TRYING: i
					adding blocked set: C = C >> nn, i, _, n
					> version: _/_/_/_/l/i/c/h/e
					TRYING: l
					adding blocked set: C = C >> nn, _, l, n
					> version: _/_/_/_/l/i/c/h/e
					TRYING: l
					adding blocked set: C = C >> nn, _, l, n
					> version: _/_/_/_/l/i/ch/e
					TRYING: l
					adding blocked set: C = C >> nn, _, l, n
					> version: _/_/_/_/l/i/ch/e
					TRYING: l
					adding blocked set: C = C >> nn, _, l, n
					RESULT:  ['_']
				adding dashed alternative: ['l', 'i', 'c', 'h', '_', 'e']
				adding dashed alternative: ['l', 'i', 'c', 'h', '_', 'e']
				adding dashed alternative: ['l', 'i', 'ch', 'e', '_']
				adding dashed alternative: ['l', 'i', 'ch', 'e', '_']
				adding dashed alternative: ['_', 'l', 'i', 'c', '_', 'h', 'e']
				adding dashed alternative: ['_', 'l', 'i', 'c', '_', 'h', 'e']
				adding dashed alternative: ['_', 'l', 'i', 'ch', '_', 'e']
				adding dashed alternative: ['_', 'l', 'i', 'ch', '_', 'e']
				adding dashed alternative: ['l', '_', 'i', 'c', '_', 'h', 'e']
				adding dashed alternative: ['l', '_', 'i', 'c', '_', 'h', 'e']
				adding dashed alternative: ['l', '_', 'i', 'ch', '_', 'e']
				adding dashed alternative: ['l', '_', 'i', 'ch', '_', 'e']
				adding dashed alternative: ['_', '_', 'l', 'i', '_', 'c', 'h', 'e']
				adding dashed alternative: ['_', '_', 'l', 'i', '_', 'c', 'h', 'e']
				adding dashed alternative: ['_', '_', 'l', 'i', '_', 'ch', 'e']
				adding dashed alternative: ['_', '_', 'l', 'i', '_', 'ch', 'e']
				adding dashed alternative: ['l', 'i', '_', 'c', '_', 'h', 'e']
				adding dashed alternative: ['l', 'i', '_', 'c', '_', 'h', 'e']
				adding dashed alternative: ['l', 'i', '_', 'ch', '_', 'e']
				adding dashed alternative: ['l', 'i', '_', 'ch', '_', 'e']
				adding dashed alternative: ['_', 'l', '_', 'i', '_', 'c', 'h', 'e']
				adding dashed alternative: ['_', 'l', '_', 'i', '_', 'c', 'h', 'e']
				adding dashed alternative: ['_', 'l', '_', 'i', '_', 'ch', 'e']
				adding dashed alternative: ['_', 'l', '_', 'i', '_', 'ch', 'e']
				adding dashed alternative: ['l', '_', '_', 'i', '_', 'c', 'h', 'e']
				adding dashed alternative: ['l', '_', '_', 'i', '_', 'c', 'h', 'e']
				adding dashed alternative: ['l', '_', '_', 'i', '_', 'ch', 'e']
				adding dashed alternative: ['l', '_', '_', 'i', '_', 'ch', 'e']
				adding dashed alternative: ['_', '_', '_', 'l', '_', 'i', 'c', 'h', 'e']
				adding dashed alternative: ['_', '_', '_', 'l', '_', 'i', 'c', 'h', 'e']
				adding dashed alternative: ['_', '_', '_', 'l', '_', 'i', 'ch', 'e']
				adding dashed alternative: ['_', '_', '_', 'l', '_', 'i', 'ch', 'e']
				adding dashed alternative: ['l', 'i', 'c', '_', '_', 'h', 'e']
				adding dashed alternative: ['l', 'i', 'c', '_', '_', 'h', 'e']
				adding dashed alternative: ['l', 'i', 'ch', '_', '_', 'e']
				adding dashed alternative: ['l', 'i', 'ch', '_', '_', 'e']
				adding dashed alternative: ['_', 'l', 'i', '_', '_', 'c', 'h', 'e']
				adding dashed alternative: ['_', 'l', 'i', '_', '_', 'c', 'h', 'e']
				adding dashed alternative: ['_', 'l', 'i', '_', '_', 'ch', 'e']
				adding dashed alternative: ['_', 'l', 'i', '_', '_', 'ch', 'e']
				adding dashed alternative: ['l', '_', 'i', '_', '_', 'c', 'h', 'e']
				adding dashed alternative: ['l', '_', 'i', '_', '_', 'c', 'h', 'e']
				adding dashed alternative: ['l', '_', 'i', '_', '_', 'ch', 'e']
				adding dashed alternative: ['l', '_', 'i', '_', '_', 'ch', 'e']
				adding dashed alternative: ['_', '_', 'l', '_', '_', 'i', 'c', 'h', 'e']
				adding dashed alternative: ['_', '_', 'l', '_', '_', 'i', 'c', 'h', 'e']
				adding dashed alternative: ['_', '_', 'l', '_', '_', 'i', 'ch', 'e']
				adding dashed alternative: ['_', '_', 'l', '_', '_', 'i', 'ch', 'e']
				adding dashed alternative: ['l', 'i', '_', '_', '_', 'c', 'h', 'e']
				adding dashed alternative: ['l', 'i', '_', '_', '_', 'c', 'h', 'e']
				adding dashed alternative: ['l', 'i', '_', '_', '_', 'ch', 'e']
				adding dashed alternative: ['l', 'i', '_', '_', '_', 'ch', 'e']
				adding dashed alternative: ['_', 'l', '_', '_', '_', 'i', 'c', 'h', 'e']
				adding dashed alternative: ['_', 'l', '_', '_', '_', 'i', 'c', 'h', 'e']
				adding dashed alternative: ['_', 'l', '_', '_', '_', 'i', 'ch', 'e']
				adding dashed alternative: ['_', 'l', '_', '_', '_', 'i', 'ch', 'e']
				adding dashed alternative: ['l', '_', '_', '_', '_', 'i', 'c', 'h', 'e']
				adding dashed alternative: ['l', '_', '_', '_', '_', 'i', 'c', 'h', 'e']
				adding dashed alternative: ['l', '_', '_', '_', '_', 'i', 'ch', 'e']
				adding dashed alternative: ['l', '_', '_', '_', '_', 'i', 'ch', 'e']
				adding dashed alternative: ['_', '_', '_', '_', '_', 'l', 'i', 'c', 'h', 'e']
				adding dashed alternative: ['_', '_', '_', '_', '_', 'l', 'i', 'c', 'h', 'e']
				adding dashed alternative: ['_', '_', '_', '_', '_', 'l', 'i', 'ch', 'e']
				adding dashed alternative: ['_', '_', '_', '_', '_', 'l', 'i', 'ch', 'e']
				l/i/c/h/e(CCCCV)
l/i/c/h/e(CVCCV)
l/i/ch/e(CCCV)
l/i/ch/e(CVCV)
_/l/i/c/h/e(ACACCV)
_/l/i/c/h/e(ACACCV)
_/l/i/ch/e(ACACV)
_/l/i/ch/e(ACACV)
l/_/i/c/h/e(CAACCV)
l/_/i/c/h/e(CAACCV)
l/_/i/ch/e(CAACV)
l/_/i/ch/e(CAACV)
_/_/l/i/c/h/e(AACACCV)
_/_/l/i/c/h/e(AACACCV)
_/_/l/i/ch/e(AACACV)
_/_/l/i/ch/e(AACACV)
l/i/_/c/h/e(CAACCV)
l/i/_/c/h/e(CAACCV)
l/i/_/ch/e(CAACV)
l/i/_/ch/e(CAACV)
_/l/_/i/c/h/e(ACAACCV)
_/l/_/i/c/h/e(ACAACCV)
_/l/_/i/ch/e(ACAACV)
_/l/_/i/ch/e(ACAACV)
l/_/_/i/c/h/e(CAAACCV)
l/_/_/i/c/h/e(CAAACCV)
l/_/_/i/ch/e(CAAACV)
l/_/_/i/ch/e(CAAACV)
_/_/_/l/i/c/h/e(AAACACCV)
_/_/_/l/i/c/h/e(AAACACCV)
_/_/_/l/i/ch/e(AAACACV)
_/_/_/l/i/ch/e(AAACACV)
l/i/c/_/h/e(CACACV)
l/i/c/_/h/e(CACACV)
l/i/ch/_/e(CACAV)
l/i/ch/_/e(CACAV)
_/l/i/_/c/h/e(ACAACCV)
_/l/i/_/c/h/e(ACAACCV)
_/l/i/_/ch/e(ACAACV)
_/l/i/_/ch/e(ACAACV)
l/_/i/_/c/h/e(CAAACCV)
l/_/i/_/c/h/e(CAAACCV)
l/_/i/_/ch/e(CAAACV)
l/_/i/_/ch/e(CAAACV)
_/_/l/_/i/c/h/e(AACAACCV)
_/_/l/_/i/c/h/e(AACAACCV)
_/_/l/_/i/ch/e(AACAACV)
_/_/l/_/i/ch/e(AACAACV)
l/i/_/_/c/h/e(CAAACCV)
l/i/_/_/c/h/e(CAAACCV)
l/i/_/_/ch/e(CAAACV)
l/i/_/_/ch/e(CAAACV)
_/l/_/_/i/c/h/e(ACAAACCV)
_/l/_/_/i/c/h/e(ACAAACCV)
_/l/_/_/i/ch/e(ACAAACV)
_/l/_/_/i/ch/e(ACAAACV)
l/_/_/_/i/c/h/e(CAAAACCV)
l/_/_/_/i/c/h/e(CAAAACCV)
l/_/_/_/i/ch/e(CAAAACV)
l/_/_/_/i/ch/e(CAAAACV)
_/_/_/_/l/i/c/h/e(AAAACACCV)
_/_/_/_/l/i/c/h/e(AAAACACCV)
_/_/_/_/l/i/ch/e(AAAACACV)
_/_/_/_/l/i/ch/e(AAAACACV)
l/i/c/h/_/e(CACCAV)
l/i/c/h/_/e(CACCAV)
l/i/ch/e/_(CACVA)
l/i/ch/e/_(CACVA)
_/l/i/c/_/h/e(ACACACV)
_/l/i/c/_/h/e(ACACACV)
_/l/i/ch/_/e(ACACAV)
_/l/i/ch/_/e(ACACAV)
l/_/i/c/_/h/e(CAACACV)
l/_/i/c/_/h/e(CAACACV)
l/_/i/ch/_/e(CAACAV)
l/_/i/ch/_/e(CAACAV)
_/_/l/i/_/c/h/e(AACAACCV)
_/_/l/i/_/c/h/e(AACAACCV)
_/_/l/i/_/ch/e(AACAACV)
_/_/l/i/_/ch/e(AACAACV)
l/i/_/c/_/h/e(CAACACV)
l/i/_/c/_/h/e(CAACACV)
l/i/_/ch/_/e(CAACAV)
l/i/_/ch/_/e(CAACAV)
_/l/_/i/_/c/h/e(ACAAACCV)
_/l/_/i/_/c/h/e(ACAAACCV)
_/l/_/i/_/ch/e(ACAAACV)
_/l/_/i/_/ch/e(ACAAACV)
l/_/_/i/_/c/h/e(CAAAACCV)
l/_/_/i/_/c/h/e(CAAAACCV)
l/_/_/i/_/ch/e(CAAAACV)
l/_/_/i/_/ch/e(CAAAACV)
_/_/_/l/_/i/c/h/e(AAACAACCV)
_/_/_/l/_/i/c/h/e(AAACAACCV)
_/_/_/l/_/i/ch/e(AAACAACV)
_/_/_/l/_/i/ch/e(AAACAACV)
l/i/c/_/_/h/e(CACAACV)
l/i/c/_/_/h/e(CACAACV)
l/i/ch/_/_/e(CACAAV)
l/i/ch/_/_/e(CACAAV)
_/l/i/_/_/c/h/e(ACAAACCV)
_/l/i/_/_/c/h/e(ACAAACCV)
_/l/i/_/_/ch/e(ACAAACV)
_/l/i/_/_/ch/e(ACAAACV)
l/_/i/_/_/c/h/e(CAAAACCV)
l/_/i/_/_/c/h/e(CAAAACCV)
l/_/i/_/_/ch/e(CAAAACV)
l/_/i/_/_/ch/e(CAAAACV)
_/_/l/_/_/i/c/h/e(AACAAACCV)
_/_/l/_/_/i/c/h/e(AACAAACCV)
_/_/l/_/_/i/ch/e(AACAAACV)
_/_/l/_/_/i/ch/e(AACAAACV)
l/i/_/_/_/c/h/e(CAAAACCV)
l/i/_/_/_/c/h/e(CAAAACCV)
l/i/_/_/_/ch/e(CAAAACV)
l/i/_/_/_/ch/e(CAAAACV)
_/l/_/_/_/i/c/h/e(ACAAAACCV)
_/l/_/_/_/i/c/h/e(ACAAAACCV)
_/l/_/_/_/i/ch/e(ACAAAACV)
_/l/_/_/_/i/ch/e(ACAAAACV)
l/_/_/_/_/i/c/h/e(CAAAAACCV)
l/_/_/_/_/i/c/h/e(CAAAAACCV)
l/_/_/_/_/i/ch/e(CAAAAACV)
l/_/_/_/_/i/ch/e(CAAAAACV)
_/_/_/_/_/l/i/c/h/e(AAAAACACCV)
_/_/_/_/_/l/i/c/h/e(AAAAACACCV)
_/_/_/_/_/l/i/ch/e(AAAAACACV)
_/_/_/_/_/l/i/ch/e(AAAAACACV)
			___CVCVCV : 5___
				ANALYSING: heouene
				adding littera based on matching pattern
				ANALYSING: heuene
				adding littera based on matching pattern
				ANALYSING: eue
					resolving (20)
					> version: e/u/e
					> version: e/u/e
					> version: eu/e
					> version: e/ue
					> version: eu/e
					> version: _/e/u/e
					> version: _/e/u/e
					> version: _/eu/e
					> version: _/e/ue
					> version: _/eu/e
					> version: e/u/e/_
					> version: e/u/e/_
					> version: eu/e/_
					> version: e/ue/_
					> version: eu/e/_
					> version: _/e/u/e/_
					> version: _/e/u/e/_
					> version: _/eu/e/_
					> version: _/e/ue/_
					> version: _/eu/e/_
					RESULT:  ['_']
				adding dashed alternative: ['e', 'u', 'e', '_']
				adding dashed alternative: ['e', 'u', 'e', '_']
				adding dashed alternative: ['eu', 'e', '_']
				adding dashed alternative: ['e', 'ue', '_']
				adding dashed alternative: ['eu', 'e', '_']
				adding dashed alternative: ['_', 'e', 'u', 'e', '_']
				adding dashed alternative: ['_', 'e', 'u', 'e', '_']
				adding dashed alternative: ['_', 'eu', 'e', '_']
				adding dashed alternative: ['_', 'e', 'ue', '_']
				adding dashed alternative: ['_', 'eu', 'e', '_']
				adding dashed alternative: ['e', 'u', 'e', '_', '_']
				adding dashed alternative: ['e', 'u', 'e', '_', '_']
				adding dashed alternative: ['eu', 'e', '_', '_']
				adding dashed alternative: ['e', 'ue', '_', '_']
				adding dashed alternative: ['eu', 'e', '_', '_']
				adding dashed alternative: ['_', 'e', 'u', 'e', '_', '_']
				adding dashed alternative: ['_', 'e', 'u', 'e', '_', '_']
				adding dashed alternative: ['_', 'eu', 'e', '_', '_']
				adding dashed alternative: ['_', 'e', 'ue', '_', '_']
				adding dashed alternative: ['_', 'eu', 'e', '_', '_']
				e/u/e(VCV)
e/u/e(VVV)
eu/e(VV)
e/ue(VV)
eu/e(VV)
_/e/u/e(AVAV)
_/e/u/e(AVAV)
_/eu/e(AVV)
_/e/ue(AVV)
_/eu/e(AVV)
e/u/e/_(VAVA)
e/u/e/_(VAVA)
eu/e/_(VVA)
e/ue/_(VVA)
eu/e/_(VVA)
_/e/u/e/_(AVAVA)
_/e/u/e/_(AVAVA)
_/eu/e/_(AVVA)
_/e/ue/_(AVVA)
_/eu/e/_(AVVA)
e/u/e/_(VAVA)
e/u/e/_(VAVA)
eu/e/_(VVA)
e/ue/_(VVA)
eu/e/_(VVA)
_/e/u/e/_(AVAVA)
_/e/u/e/_(AVAVA)
_/eu/e/_(AVVA)
_/e/ue/_(AVVA)
_/eu/e/_(AVVA)
e/u/e/_/_(VAVAA)
e/u/e/_/_(VAVAA)
eu/e/_/_(VVAA)
e/ue/_/_(VVAA)
eu/e/_/_(VVAA)
_/e/u/e/_/_(AVAVAA)
_/e/u/e/_/_(AVAVAA)
_/eu/e/_/_(AVVAA)
_/e/ue/_/_(AVVAA)
_/eu/e/_/_(AVVAA)
				version split: ['e', 'u', 'e']
				{'string': 'e/u/e', 'rgx': '((_))/((u)|(e)|(eu)|(ue))/((u)|(e)|(ue))/((e))/((_))/((_))$'}
				_____REMOVING________['e', 'u', 'e']
				version split: ['e', 'u', 'e']
				{'string': 'e/u/e', 'rgx': '((_))/((u)|(e)|(eu)|(ue))/((u)|(e)|(ue))/((e))/((_))/((_))$'}
				_____REMOVING________['e', 'u', 'e']
				version split: ['eu', 'e']
				{'string': 'eu/e', 'rgx': '((_))/((u)|(e)|(eu)|(ue))/((u)|(e)|(ue))/((e))/((_))/((_))$'}
				_____REMOVING________['eu', 'e']
				version split: ['e', 'ue']
				{'string': 'e/ue', 'rgx': '((_))/((u)|(e)|(eu)|(ue))/((u)|(e)|(ue))/((e))/((_))/((_))$'}
				_____REMOVING________['e', 'ue']
				version split: ['eu', 'e']
				{'string': 'eu/e', 'rgx': '((_))/((u)|(e)|(eu)|(ue))/((u)|(e)|(ue))/((e))/((_))/((_))$'}
				_____REMOVING________['eu', 'e']
				version split: ['_', 'e', 'u', 'e']
				{'string': '_/e/u/e', 'rgx': '((_))/((u)|(e)|(eu)|(ue))/((u)|(e)|(ue))/((e))/((_))/((_))$'}
				_____REMOVING________['_', 'e', 'u', 'e']
				version split: ['_', 'e', 'u', 'e']
				{'string': '_/e/u/e', 'rgx': '((_))/((u)|(e)|(eu)|(ue))/((u)|(e)|(ue))/((e))/((_))/((_))$'}
				_____REMOVING________['_', 'e', 'u', 'e']
				version split: ['_', 'eu', 'e']
				{'string': '_/eu/e', 'rgx': '((_))/((u)|(e)|(eu)|(ue))/((u)|(e)|(ue))/((e))/((_))/((_))$'}
				_____REMOVING________['_', 'eu', 'e']
				version split: ['_', 'e', 'ue']
				{'string': '_/e/ue', 'rgx': '((_))/((u)|(e)|(eu)|(ue))/((u)|(e)|(ue))/((e))/((_))/((_))$'}
				_____REMOVING________['_', 'e', 'ue']
				version split: ['_', 'eu', 'e']
				{'string': '_/eu/e', 'rgx': '((_))/((u)|(e)|(eu)|(ue))/((u)|(e)|(ue))/((e))/((_))/((_))$'}
				_____REMOVING________['_', 'eu', 'e']
				version split: ['e', 'u', 'e', '_']
				{'string': 'e/u/e/_', 'rgx': '((_))/((u)|(e)|(eu)|(ue))/((u)|(e)|(ue))/((e))/((_))/((_))$'}
				_____REMOVING________['e', 'u', 'e', '_']
				version split: ['e', 'u', 'e', '_']
				{'string': 'e/u/e/_', 'rgx': '((_))/((u)|(e)|(eu)|(ue))/((u)|(e)|(ue))/((e))/((_))/((_))$'}
				_____REMOVING________['e', 'u', 'e', '_']
				version split: ['eu', 'e', '_']
				{'string': 'eu/e/_', 'rgx': '((_))/((u)|(e)|(eu)|(ue))/((u)|(e)|(ue))/((e))/((_))/((_))$'}
				_____REMOVING________['eu', 'e', '_']
				version split: ['e', 'ue', '_']
				{'string': 'e/ue/_', 'rgx': '((_))/((u)|(e)|(eu)|(ue))/((u)|(e)|(ue))/((e))/((_))/((_))$'}
				_____REMOVING________['e', 'ue', '_']
				version split: ['eu', 'e', '_']
				{'string': 'eu/e/_', 'rgx': '((_))/((u)|(e)|(eu)|(ue))/((u)|(e)|(ue))/((e))/((_))/((_))$'}
				_____REMOVING________['eu', 'e', '_']
				version split: ['_', 'e', 'u', 'e', '_']
				{'string': '_/e/u/e/_', 'rgx': '((_))/((u)|(e)|(eu)|(ue))/((u)|(e)|(ue))/((e))/((_))/((_))$'}
				_____REMOVING________['_', 'e', 'u', 'e', '_']
				version split: ['_', 'e', 'u', 'e', '_']
				{'string': '_/e/u/e/_', 'rgx': '((_))/((u)|(e)|(eu)|(ue))/((u)|(e)|(ue))/((e))/((_))/((_))$'}
				_____REMOVING________['_', 'e', 'u', 'e', '_']
				version split: ['_', 'eu', 'e', '_']
				{'string': '_/eu/e/_', 'rgx': '((_))/((u)|(e)|(eu)|(ue))/((u)|(e)|(ue))/((e))/((_))/((_))$'}
				_____REMOVING________['_', 'eu', 'e', '_']
				version split: ['_', 'e', 'ue', '_']
				{'string': '_/e/ue/_', 'rgx': '((_))/((u)|(e)|(eu)|(ue))/((u)|(e)|(ue))/((e))/((_))/((_))$'}
				_____REMOVING________['_', 'e', 'ue', '_']
				version split: ['_', 'eu', 'e', '_']
				{'string': '_/eu/e/_', 'rgx': '((_))/((u)|(e)|(eu)|(ue))/((u)|(e)|(ue))/((e))/((_))/((_))$'}
				_____REMOVING________['_', 'eu', 'e', '_']
				version split: ['e', 'u', 'e', '_']
				{'string': 'e/u/e/_', 'rgx': '((_))/((u)|(e)|(eu)|(ue))/((u)|(e)|(ue))/((e))/((_))/((_))$'}
				_____REMOVING________['e', 'u', 'e', '_']
				version split: ['e', 'u', 'e', '_']
				{'string': 'e/u/e/_', 'rgx': '((_))/((u)|(e)|(eu)|(ue))/((u)|(e)|(ue))/((e))/((_))/((_))$'}
				_____REMOVING________['e', 'u', 'e', '_']
				version split: ['eu', 'e', '_']
				{'string': 'eu/e/_', 'rgx': '((_))/((u)|(e)|(eu)|(ue))/((u)|(e)|(ue))/((e))/((_))/((_))$'}
				_____REMOVING________['eu', 'e', '_']
				version split: ['e', 'ue', '_']
				{'string': 'e/ue/_', 'rgx': '((_))/((u)|(e)|(eu)|(ue))/((u)|(e)|(ue))/((e))/((_))/((_))$'}
				_____REMOVING________['e', 'ue', '_']
				version split: ['eu', 'e', '_']
				{'string': 'eu/e/_', 'rgx': '((_))/((u)|(e)|(eu)|(ue))/((u)|(e)|(ue))/((e))/((_))/((_))$'}
				_____REMOVING________['eu', 'e', '_']
				version split: ['_', 'e', 'u', 'e', '_']
				{'string': '_/e/u/e/_', 'rgx': '((_))/((u)|(e)|(eu)|(ue))/((u)|(e)|(ue))/((e))/((_))/((_))$'}
				_____REMOVING________['_', 'e', 'u', 'e', '_']
				version split: ['_', 'e', 'u', 'e', '_']
				{'string': '_/e/u/e/_', 'rgx': '((_))/((u)|(e)|(eu)|(ue))/((u)|(e)|(ue))/((e))/((_))/((_))$'}
				_____REMOVING________['_', 'e', 'u', 'e', '_']
				version split: ['_', 'eu', 'e', '_']
				{'string': '_/eu/e/_', 'rgx': '((_))/((u)|(e)|(eu)|(ue))/((u)|(e)|(ue))/((e))/((_))/((_))$'}
				_____REMOVING________['_', 'eu', 'e', '_']
				version split: ['_', 'e', 'ue', '_']
				{'string': '_/e/ue/_', 'rgx': '((_))/((u)|(e)|(eu)|(ue))/((u)|(e)|(ue))/((e))/((_))/((_))$'}
				_____REMOVING________['_', 'e', 'ue', '_']
				version split: ['_', 'eu', 'e', '_']
				{'string': '_/eu/e/_', 'rgx': '((_))/((u)|(e)|(eu)|(ue))/((u)|(e)|(ue))/((e))/((_))/((_))$'}
				_____REMOVING________['_', 'eu', 'e', '_']
				version split: ['e', 'u', 'e', '_', '_']
				{'string': 'e/u/e/_/_', 'rgx': '((_))/((u)|(e)|(eu)|(ue))/((u)|(e)|(ue))/((e))/((_))/((_))$'}
				_____REMOVING________['e', 'u', 'e', '_', '_']
				version split: ['e', 'u', 'e', '_', '_']
				{'string': 'e/u/e/_/_', 'rgx': '((_))/((u)|(e)|(eu)|(ue))/((u)|(e)|(ue))/((e))/((_))/((_))$'}
				_____REMOVING________['e', 'u', 'e', '_', '_']
				version split: ['eu', 'e', '_', '_']
				{'string': 'eu/e/_/_', 'rgx': '((_))/((u)|(e)|(eu)|(ue))/((u)|(e)|(ue))/((e))/((_))/((_))$'}
				_____REMOVING________['eu', 'e', '_', '_']
				version split: ['e', 'ue', '_', '_']
				{'string': 'e/ue/_/_', 'rgx': '((_))/((u)|(e)|(eu)|(ue))/((u)|(e)|(ue))/((e))/((_))/((_))$'}
				_____REMOVING________['e', 'ue', '_', '_']
				version split: ['eu', 'e', '_', '_']
				{'string': 'eu/e/_/_', 'rgx': '((_))/((u)|(e)|(eu)|(ue))/((u)|(e)|(ue))/((e))/((_))/((_))$'}
				_____REMOVING________['eu', 'e', '_', '_']
				version split: ['_', 'e', 'u', 'e', '_', '_']
				{'string': '_/e/u/e/_/_', 'rgx': '((_))/((u)|(e)|(eu)|(ue))/((u)|(e)|(ue))/((e))/((_))/((_))$'}
				version split: ['_', 'e', 'u', 'e', '_', '_']
				{'string': '_/e/u/e/_/_', 'rgx': '((_))/((u)|(e)|(eu)|(ue))/((u)|(e)|(ue))/((e))/((_))/((_))$'}
				version split: ['_', 'eu', 'e', '_', '_']
				{'string': '_/eu/e/_/_', 'rgx': '((_))/((u)|(e)|(eu)|(ue))/((u)|(e)|(ue))/((e))/((_))/((_))$'}
				_____REMOVING________['_', 'eu', 'e', '_', '_']
				version split: ['_', 'e', 'ue', '_', '_']
				{'string': '_/e/ue/_/_', 'rgx': '((_))/((u)|(e)|(eu)|(ue))/((u)|(e)|(ue))/((e))/((_))/((_))$'}
				_____REMOVING________['_', 'e', 'ue', '_', '_']
				version split: ['_', 'eu', 'e', '_', '_']
				{'string': '_/eu/e/_/_', 'rgx': '((_))/((u)|(e)|(eu)|(ue))/((u)|(e)|(ue))/((e))/((_))/((_))$'}
				_____REMOVING________['_', 'eu', 'e', '_', '_']
				ANALYSING: he
					resolving (8)
					> version: h/e
					> version: h/_/e
					> version: h/e/_
					> version: h/_/e/_
					> version: h/e/_
					> version: h/_/e/_
					> version: h/e/_/_
					> version: h/_/e/_/_
					RESULT:  ['_']
				adding dashed alternative: ['h', 'e', '_']
				adding dashed alternative: ['h', '_', 'e', '_']
				adding dashed alternative: ['h', 'e', '_', '_']
				adding dashed alternative: ['h', '_', 'e', '_', '_']
				adding dashed alternative: ['h', 'e', '_', '_']
				adding dashed alternative: ['h', '_', 'e', '_', '_']
				adding dashed alternative: ['h', 'e', '_', '_', '_']
				adding dashed alternative: ['h', '_', 'e', '_', '_', '_']
				h/e(CV)
h/_/e(CAV)
h/e/_(CVA)
h/_/e/_(CAVA)
h/e/_(CVA)
h/_/e/_(CAVA)
h/e/_/_(CVAA)
h/_/e/_/_(CAVAA)
h/e/_(CVA)
h/_/e/_(CAVA)
h/e/_/_(CVAA)
h/_/e/_/_(CAVAA)
h/e/_/_(CVAA)
h/_/e/_/_(CAVAA)
h/e/_/_/_(CVAAA)
h/_/e/_/_/_(CAVAAA)
				version split: ['h', 'e']
				{'string': 'h/e', 'rgx': '((h))/((_))/((e))/((_))/((_))/((_))$'}
				_____REMOVING________['h', 'e']
				version split: ['h', '_', 'e']
				{'string': 'h/_/e', 'rgx': '((h))/((_))/((e))/((_))/((_))/((_))$'}
				_____REMOVING________['h', '_', 'e']
				version split: ['h', 'e', '_']
				{'string': 'h/e/_', 'rgx': '((h))/((_))/((e))/((_))/((_))/((_))$'}
				_____REMOVING________['h', 'e', '_']
				version split: ['h', '_', 'e', '_']
				{'string': 'h/_/e/_', 'rgx': '((h))/((_))/((e))/((_))/((_))/((_))$'}
				_____REMOVING________['h', '_', 'e', '_']
				version split: ['h', 'e', '_']
				{'string': 'h/e/_', 'rgx': '((h))/((_))/((e))/((_))/((_))/((_))$'}
				_____REMOVING________['h', 'e', '_']
				version split: ['h', '_', 'e', '_']
				{'string': 'h/_/e/_', 'rgx': '((h))/((_))/((e))/((_))/((_))/((_))$'}
				_____REMOVING________['h', '_', 'e', '_']
				version split: ['h', 'e', '_', '_']
				{'string': 'h/e/_/_', 'rgx': '((h))/((_))/((e))/((_))/((_))/((_))$'}
				_____REMOVING________['h', 'e', '_', '_']
				version split: ['h', '_', 'e', '_', '_']
				{'string': 'h/_/e/_/_', 'rgx': '((h))/((_))/((e))/((_))/((_))/((_))$'}
				_____REMOVING________['h', '_', 'e', '_', '_']
				version split: ['h', 'e', '_']
				{'string': 'h/e/_', 'rgx': '((h))/((_))/((e))/((_))/((_))/((_))$'}
				_____REMOVING________['h', 'e', '_']
				version split: ['h', '_', 'e', '_']
				{'string': 'h/_/e/_', 'rgx': '((h))/((_))/((e))/((_))/((_))/((_))$'}
				_____REMOVING________['h', '_', 'e', '_']
				version split: ['h', 'e', '_', '_']
				{'string': 'h/e/_/_', 'rgx': '((h))/((_))/((e))/((_))/((_))/((_))$'}
				_____REMOVING________['h', 'e', '_', '_']
				version split: ['h', '_', 'e', '_', '_']
				{'string': 'h/_/e/_/_', 'rgx': '((h))/((_))/((e))/((_))/((_))/((_))$'}
				_____REMOVING________['h', '_', 'e', '_', '_']
				version split: ['h', 'e', '_', '_']
				{'string': 'h/e/_/_', 'rgx': '((h))/((_))/((e))/((_))/((_))/((_))$'}
				_____REMOVING________['h', 'e', '_', '_']
				version split: ['h', '_', 'e', '_', '_']
				{'string': 'h/_/e/_/_', 'rgx': '((h))/((_))/((e))/((_))/((_))/((_))$'}
				_____REMOVING________['h', '_', 'e', '_', '_']
				version split: ['h', 'e', '_', '_', '_']
				{'string': 'h/e/_/_/_', 'rgx': '((h))/((_))/((e))/((_))/((_))/((_))$'}
				_____REMOVING________['h', 'e', '_', '_', '_']
				version split: ['h', '_', 'e', '_', '_', '_']
				{'string': 'h/_/e/_/_/_', 'rgx': '((h))/((_))/((e))/((_))/((_))/((_))$'}
				ANALYSING: heo
					resolving (8)
					> version: h/e/o
					> version: h/eo
					> version: h/_/e/o
					> version: h/_/eo
					> version: h/e/o/_
					> version: h/eo/_
					> version: h/_/e/o/_
					> version: h/_/eo/_
					RESULT:  ['_']
				adding dashed alternative: ['h', 'e', 'o', '_']
				adding dashed alternative: ['h', 'eo', '_']
				adding dashed alternative: ['h', '_', 'e', 'o', '_']
				adding dashed alternative: ['h', '_', 'eo', '_']
				adding dashed alternative: ['h', 'e', 'o', '_', '_']
				adding dashed alternative: ['h', 'eo', '_', '_']
				adding dashed alternative: ['h', '_', 'e', 'o', '_', '_']
				adding dashed alternative: ['h', '_', 'eo', '_', '_']
				h/e/o(CVV)
h/eo(CV)
h/_/e/o(CAVV)
h/_/eo(CAV)
h/e/o/_(CVVA)
h/eo/_(CVA)
h/_/e/o/_(CAVVA)
h/_/eo/_(CAVA)
h/e/o/_(CVVA)
h/eo/_(CVA)
h/_/e/o/_(CAVVA)
h/_/eo/_(CAVA)
h/e/o/_/_(CVVAA)
h/eo/_/_(CVAA)
h/_/e/o/_/_(CAVVAA)
h/_/eo/_/_(CAVAA)
				version split: ['h', 'e', 'o']
				{'string': 'h/e/o', 'rgx': '((h))/((_))/((e)|(eo)|(o))/((o))/((_))/((_))$'}
				_____REMOVING________['h', 'e', 'o']
				version split: ['h', 'eo']
				{'string': 'h/eo', 'rgx': '((h))/((_))/((e)|(eo)|(o))/((o))/((_))/((_))$'}
				_____REMOVING________['h', 'eo']
				version split: ['h', '_', 'e', 'o']
				{'string': 'h/_/e/o', 'rgx': '((h))/((_))/((e)|(eo)|(o))/((o))/((_))/((_))$'}
				_____REMOVING________['h', '_', 'e', 'o']
				version split: ['h', '_', 'eo']
				{'string': 'h/_/eo', 'rgx': '((h))/((_))/((e)|(eo)|(o))/((o))/((_))/((_))$'}
				_____REMOVING________['h', '_', 'eo']
				version split: ['h', 'e', 'o', '_']
				{'string': 'h/e/o/_', 'rgx': '((h))/((_))/((e)|(eo)|(o))/((o))/((_))/((_))$'}
				_____REMOVING________['h', 'e', 'o', '_']
				version split: ['h', 'eo', '_']
				{'string': 'h/eo/_', 'rgx': '((h))/((_))/((e)|(eo)|(o))/((o))/((_))/((_))$'}
				_____REMOVING________['h', 'eo', '_']
				version split: ['h', '_', 'e', 'o', '_']
				{'string': 'h/_/e/o/_', 'rgx': '((h))/((_))/((e)|(eo)|(o))/((o))/((_))/((_))$'}
				_____REMOVING________['h', '_', 'e', 'o', '_']
				version split: ['h', '_', 'eo', '_']
				{'string': 'h/_/eo/_', 'rgx': '((h))/((_))/((e)|(eo)|(o))/((o))/((_))/((_))$'}
				_____REMOVING________['h', '_', 'eo', '_']
				version split: ['h', 'e', 'o', '_']
				{'string': 'h/e/o/_', 'rgx': '((h))/((_))/((e)|(eo)|(o))/((o))/((_))/((_))$'}
				_____REMOVING________['h', 'e', 'o', '_']
				version split: ['h', 'eo', '_']
				{'string': 'h/eo/_', 'rgx': '((h))/((_))/((e)|(eo)|(o))/((o))/((_))/((_))$'}
				_____REMOVING________['h', 'eo', '_']
				version split: ['h', '_', 'e', 'o', '_']
				{'string': 'h/_/e/o/_', 'rgx': '((h))/((_))/((e)|(eo)|(o))/((o))/((_))/((_))$'}
				_____REMOVING________['h', '_', 'e', 'o', '_']
				version split: ['h', '_', 'eo', '_']
				{'string': 'h/_/eo/_', 'rgx': '((h))/((_))/((e)|(eo)|(o))/((o))/((_))/((_))$'}
				_____REMOVING________['h', '_', 'eo', '_']
				version split: ['h', 'e', 'o', '_', '_']
				{'string': 'h/e/o/_/_', 'rgx': '((h))/((_))/((e)|(eo)|(o))/((o))/((_))/((_))$'}
				_____REMOVING________['h', 'e', 'o', '_', '_']
				version split: ['h', 'eo', '_', '_']
				{'string': 'h/eo/_/_', 'rgx': '((h))/((_))/((e)|(eo)|(o))/((o))/((_))/((_))$'}
				_____REMOVING________['h', 'eo', '_', '_']
				version split: ['h', '_', 'e', 'o', '_', '_']
				{'string': 'h/_/e/o/_/_', 'rgx': '((h))/((_))/((e)|(eo)|(o))/((o))/((_))/((_))$'}
				version split: ['h', '_', 'eo', '_', '_']
				{'string': 'h/_/eo/_/_', 'rgx': '((h))/((_))/((e)|(eo)|(o))/((o))/((_))/((_))$'}
				_____REMOVING________['h', '_', 'eo', '_', '_']
				ANALYSING: heofen
					resolving (4)
					> version: h/e/o/f/e/n
					TRYING: n
					> version: h/eo/f/e/n
					> version: h/_/e/o/f/e/n
					TRYING: e
					> version: h/_/eo/f/e/n
					TRYING: n
					RESULT:  ['e']
				version split: ['h', 'e', 'o', 'f', 'e', 'n']
				{'string': 'h/e/o/f/e/n', 'rgx': '((h))/((_))/((e)|(eo)|(o))/((e)|(o))/((n))/((e))$'}
				_____REMOVING________['h', 'e', 'o', 'f', 'e', 'n']
				version split: ['h', 'eo', 'f', 'e', 'n']
				{'string': 'h/eo/f/e/n', 'rgx': '((h))/((_))/((e)|(eo)|(o))/((e)|(o))/((n))/((e))$'}
				_____REMOVING________['h', 'eo', 'f', 'e', 'n']
				version split: ['h', '_', 'e', 'o', 'f', 'e', 'n']
				{'string': 'h/_/e/o/f/e/n', 'rgx': '((h))/((_))/((e)|(eo)|(o))/((e)|(o))/((n))/((e))$'}
				_____REMOVING________['h', '_', 'e', 'o', 'f', 'e', 'n']
				version split: ['h', '_', 'eo', 'f', 'e', 'n']
				{'string': 'h/_/eo/f/e/n', 'rgx': '((h))/((_))/((e)|(eo)|(o))/((e)|(o))/((n))/((e))$'}
				_____REMOVING________['h', '_', 'eo', 'f', 'e', 'n']
				ANALYSING: heofenn
					resolving (8)
					> version: h/e/o/f/e/n/n
					TRYING: n
					> version: h/e/o/f/e/nn
					TRYING: nn
					> version: h/eo/f/e/n/n
					TRYING: n
					> version: h/eo/f/e/nn
					> version: h/_/e/o/f/e/n/n
					TRYING: e
					> version: h/_/e/o/f/e/nn
					TRYING: e
					> version: h/_/eo/f/e/n/n
					TRYING: n
					> version: h/_/eo/f/e/nn
					TRYING: nn
					RESULT:  ['e']
				version split: ['h', 'e', 'o', 'f', 'e', 'n', 'n']
				{'string': 'h/e/o/f/e/n/n', 'rgx': '((h))/((_))/((e)|(eo)|(o))/((e)|(o))/((nn)|(n))/((e))$'}
				_____REMOVING________['h', 'e', 'o', 'f', 'e', 'n', 'n']
				version split: ['h', 'e', 'o', 'f', 'e', 'nn']
				{'string': 'h/e/o/f/e/nn', 'rgx': '((h))/((_))/((e)|(eo)|(o))/((e)|(o))/((nn)|(n))/((e))$'}
				_____REMOVING________['h', 'e', 'o', 'f', 'e', 'nn']
				version split: ['h', 'eo', 'f', 'e', 'n', 'n']
				{'string': 'h/eo/f/e/n/n', 'rgx': '((h))/((_))/((e)|(eo)|(o))/((e)|(o))/((nn)|(n))/((e))$'}
				_____REMOVING________['h', 'eo', 'f', 'e', 'n', 'n']
				version split: ['h', 'eo', 'f', 'e', 'nn']
				{'string': 'h/eo/f/e/nn', 'rgx': '((h))/((_))/((e)|(eo)|(o))/((e)|(o))/((nn)|(n))/((e))$'}
				_____REMOVING________['h', 'eo', 'f', 'e', 'nn']
				version split: ['h', '_', 'e', 'o', 'f', 'e', 'n', 'n']
				{'string': 'h/_/e/o/f/e/n', 'rgx': '((h))/((_))/((e)|(eo)|(o))/((e)|(o))/((nn)|(n))/((e))$'}
				_____REMOVING________['h', '_', 'e', 'o', 'f', 'e', 'n', 'n']
				version split: ['h', '_', 'e', 'o', 'f', 'e', 'nn']
				{'string': 'h/_/e/o/f/e/nn', 'rgx': '((h))/((_))/((e)|(eo)|(o))/((e)|(o))/((nn)|(n))/((e))$'}
				_____REMOVING________['h', '_', 'e', 'o', 'f', 'e', 'nn']
				version split: ['h', '_', 'eo', 'f', 'e', 'n', 'n']
				{'string': 'h/_/eo/f/e/n/n', 'rgx': '((h))/((_))/((e)|(eo)|(o))/((e)|(o))/((nn)|(n))/((e))$'}
				_____REMOVING________['h', '_', 'eo', 'f', 'e', 'n', 'n']
				version split: ['h', '_', 'eo', 'f', 'e', 'nn']
				{'string': 'h/_/eo/f/e/nn', 'rgx': '((h))/((_))/((e)|(eo)|(o))/((e)|(o))/((nn)|(n))/((e))$'}
				_____REMOVING________['h', '_', 'eo', 'f', 'e', 'nn']
				ANALYSING: heofon
					resolving (4)
					> version: h/e/o/f/o/n
					TRYING: n
					> version: h/eo/f/o/n
					> version: h/_/e/o/f/o/n
					TRYING: o
					> version: h/_/eo/f/o/n
					TRYING: n
					RESULT:  ['o']
				version split: ['h', 'e', 'o', 'f', 'o', 'n']
				{'string': 'h/e/o/f/o/n', 'rgx': '((h))/((_))/((e)|(eo)|(o))/((o))/((n))/((o))$'}
				_____REMOVING________['h', 'e', 'o', 'f', 'o', 'n']
				version split: ['h', 'eo', 'f', 'o', 'n']
				{'string': 'h/eo/f/o/n', 'rgx': '((h))/((_))/((e)|(eo)|(o))/((o))/((n))/((o))$'}
				_____REMOVING________['h', 'eo', 'f', 'o', 'n']
				version split: ['h', '_', 'e', 'o', 'f', 'o', 'n']
				{'string': 'h/_/e/o/f/o/n', 'rgx': '((h))/((_))/((e)|(eo)|(o))/((o))/((n))/((o))$'}
				_____REMOVING________['h', '_', 'e', 'o', 'f', 'o', 'n']
				version split: ['h', '_', 'eo', 'f', 'o', 'n']
				{'string': 'h/_/eo/f/o/n', 'rgx': '((h))/((_))/((e)|(eo)|(o))/((o))/((n))/((o))$'}
				_____REMOVING________['h', '_', 'eo', 'f', 'o', 'n']
				ANALYSING: heoue
					resolving (44)
					> version: h/e/o/u/e
					> version: h/e/o/u/e
					> version: h/e/ou/e
					> version: h/eo/u/e
					> version: h/eo/u/e
					> version: h/e/o/ue
					> version: h/eo/u/e
					> version: h/eo/u/e
					> version: h/e/ou/e
					> version: h/eo/ue
					> version: h/eo/ue
					> version: h/_/e/o/u/e
					TRYING: e
					> version: h/_/e/o/u/e
					TRYING: e
					> version: h/_/e/ou/e
					> version: h/_/eo/u/e
					> version: h/_/eo/u/e
					> version: h/_/e/o/ue
					> version: h/_/eo/u/e
					> version: h/_/eo/u/e
					> version: h/_/e/ou/e
					> version: h/_/eo/ue
					> version: h/_/eo/ue
					> version: h/e/o/u/_/e
					TRYING: e
					> version: h/e/o/u/_/e
					TRYING: e
					> version: h/e/ou/e/_
					> version: h/eo/u/e/_
					> version: h/eo/u/e/_
					> version: h/e/o/ue/_
					> version: h/eo/u/e/_
					> version: h/eo/u/e/_
					> version: h/e/ou/e/_
					> version: h/eo/ue/_
					> version: h/eo/ue/_
					> version: h/_/e/o/_/u/e
					TRYING: u
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e'}
					> version: h/_/e/o/_/u/e
					TRYING: u
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e'}
					> version: h/_/e/ou/_/e
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e'}
					> version: h/_/eo/u/_/e
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e'}
					> version: h/_/eo/u/_/e
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e'}
					> version: h/_/e/o/_/ue
					TRYING: ue
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: h/_/eo/u/_/e
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: h/_/eo/u/_/e
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: h/_/e/ou/_/e
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: h/_/eo/ue/_
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: h/_/eo/ue/_
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					RESULT:  ['u', 'e', 'ue']
				version split: ['h', 'e', 'o', 'u', 'e']
				{'string': 'h/e/o/u/e', 'rgx': '((h))/((_))/((u)|(ue)|(eo)|(e)|(o))/((u)|(ue)|(ou)|(e)|(o))/((_))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', 'e', 'o', 'u', 'e']
				version split: ['h', 'e', 'o', 'u', 'e']
				{'string': 'h/e/o/u/e', 'rgx': '((h))/((_))/((u)|(ue)|(eo)|(e)|(o))/((u)|(ue)|(ou)|(e)|(o))/((_))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', 'e', 'o', 'u', 'e']
				version split: ['h', 'e', 'ou', 'e']
				{'string': 'h/e/ou/e', 'rgx': '((h))/((_))/((u)|(ue)|(eo)|(e)|(o))/((u)|(ue)|(ou)|(e)|(o))/((_))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', 'e', 'ou', 'e']
				version split: ['h', 'eo', 'u', 'e']
				{'string': 'h/eo/u/e', 'rgx': '((h))/((_))/((u)|(ue)|(eo)|(e)|(o))/((u)|(ue)|(ou)|(e)|(o))/((_))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', 'eo', 'u', 'e']
				version split: ['h', 'eo', 'u', 'e']
				{'string': 'h/eo/u/e', 'rgx': '((h))/((_))/((u)|(ue)|(eo)|(e)|(o))/((u)|(ue)|(ou)|(e)|(o))/((_))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', 'eo', 'u', 'e']
				version split: ['h', 'e', 'o', 'ue']
				{'string': 'h/e/o/ue', 'rgx': '((h))/((_))/((u)|(ue)|(eo)|(e)|(o))/((u)|(ue)|(ou)|(e)|(o))/((_))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', 'e', 'o', 'ue']
				version split: ['h', 'eo', 'u', 'e']
				{'string': 'h/eo/u/e', 'rgx': '((h))/((_))/((u)|(ue)|(eo)|(e)|(o))/((u)|(ue)|(ou)|(e)|(o))/((_))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', 'eo', 'u', 'e']
				version split: ['h', 'eo', 'u', 'e']
				{'string': 'h/eo/u/e', 'rgx': '((h))/((_))/((u)|(ue)|(eo)|(e)|(o))/((u)|(ue)|(ou)|(e)|(o))/((_))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', 'eo', 'u', 'e']
				version split: ['h', 'e', 'ou', 'e']
				{'string': 'h/e/ou/e', 'rgx': '((h))/((_))/((u)|(ue)|(eo)|(e)|(o))/((u)|(ue)|(ou)|(e)|(o))/((_))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', 'e', 'ou', 'e']
				version split: ['h', 'eo', 'ue']
				{'string': 'h/eo/ue', 'rgx': '((h))/((_))/((u)|(ue)|(eo)|(e)|(o))/((u)|(ue)|(ou)|(e)|(o))/((_))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', 'eo', 'ue']
				version split: ['h', 'eo', 'ue']
				{'string': 'h/eo/ue', 'rgx': '((h))/((_))/((u)|(ue)|(eo)|(e)|(o))/((u)|(ue)|(ou)|(e)|(o))/((_))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', 'eo', 'ue']
				version split: ['h', '_', 'e', 'o', 'u', 'e']
				{'string': 'h/_/e/o/u/e', 'rgx': '((h))/((_))/((u)|(ue)|(eo)|(e)|(o))/((u)|(ue)|(ou)|(e)|(o))/((_))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', '_', 'e', 'o', 'u', 'e']
				version split: ['h', '_', 'e', 'o', 'u', 'e']
				{'string': 'h/_/e/o/u/e', 'rgx': '((h))/((_))/((u)|(ue)|(eo)|(e)|(o))/((u)|(ue)|(ou)|(e)|(o))/((_))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', '_', 'e', 'o', 'u', 'e']
				version split: ['h', '_', 'e', 'ou', 'e']
				{'string': 'h/_/e/ou/e', 'rgx': '((h))/((_))/((u)|(ue)|(eo)|(e)|(o))/((u)|(ue)|(ou)|(e)|(o))/((_))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', '_', 'e', 'ou', 'e']
				version split: ['h', '_', 'eo', 'u', 'e']
				{'string': 'h/_/eo/u/e', 'rgx': '((h))/((_))/((u)|(ue)|(eo)|(e)|(o))/((u)|(ue)|(ou)|(e)|(o))/((_))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', '_', 'eo', 'u', 'e']
				version split: ['h', '_', 'eo', 'u', 'e']
				{'string': 'h/_/eo/u/e', 'rgx': '((h))/((_))/((u)|(ue)|(eo)|(e)|(o))/((u)|(ue)|(ou)|(e)|(o))/((_))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', '_', 'eo', 'u', 'e']
				version split: ['h', '_', 'e', 'o', 'ue']
				{'string': 'h/_/e/o/ue', 'rgx': '((h))/((_))/((u)|(ue)|(eo)|(e)|(o))/((u)|(ue)|(ou)|(e)|(o))/((_))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', '_', 'e', 'o', 'ue']
				version split: ['h', '_', 'eo', 'u', 'e']
				{'string': 'h/_/eo/u/e', 'rgx': '((h))/((_))/((u)|(ue)|(eo)|(e)|(o))/((u)|(ue)|(ou)|(e)|(o))/((_))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', '_', 'eo', 'u', 'e']
				version split: ['h', '_', 'eo', 'u', 'e']
				{'string': 'h/_/eo/u/e', 'rgx': '((h))/((_))/((u)|(ue)|(eo)|(e)|(o))/((u)|(ue)|(ou)|(e)|(o))/((_))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', '_', 'eo', 'u', 'e']
				version split: ['h', '_', 'e', 'ou', 'e']
				{'string': 'h/_/e/ou/e', 'rgx': '((h))/((_))/((u)|(ue)|(eo)|(e)|(o))/((u)|(ue)|(ou)|(e)|(o))/((_))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', '_', 'e', 'ou', 'e']
				version split: ['h', '_', 'eo', 'ue']
				{'string': 'h/_/eo/ue', 'rgx': '((h))/((_))/((u)|(ue)|(eo)|(e)|(o))/((u)|(ue)|(ou)|(e)|(o))/((_))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', '_', 'eo', 'ue']
				version split: ['h', '_', 'eo', 'ue']
				{'string': 'h/_/eo/ue', 'rgx': '((h))/((_))/((u)|(ue)|(eo)|(e)|(o))/((u)|(ue)|(ou)|(e)|(o))/((_))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', '_', 'eo', 'ue']
				version split: ['h', 'e', 'o', 'u', '_', 'e']
				{'string': 'h/e/o/u/_/e', 'rgx': '((h))/((_))/((u)|(ue)|(eo)|(e)|(o))/((u)|(ue)|(ou)|(e)|(o))/((_))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', 'e', 'o', 'u', '_', 'e']
				version split: ['h', 'e', 'o', 'u', '_', 'e']
				{'string': 'h/e/o/u/_/e', 'rgx': '((h))/((_))/((u)|(ue)|(eo)|(e)|(o))/((u)|(ue)|(ou)|(e)|(o))/((_))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', 'e', 'o', 'u', '_', 'e']
				version split: ['h', 'e', 'ou', 'e', '_']
				{'string': 'h/e/ou/e/_', 'rgx': '((h))/((_))/((u)|(ue)|(eo)|(e)|(o))/((u)|(ue)|(ou)|(e)|(o))/((_))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', 'e', 'ou', 'e', '_']
				version split: ['h', 'eo', 'u', 'e', '_']
				{'string': 'h/eo/u/e/_', 'rgx': '((h))/((_))/((u)|(ue)|(eo)|(e)|(o))/((u)|(ue)|(ou)|(e)|(o))/((_))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', 'eo', 'u', 'e', '_']
				version split: ['h', 'eo', 'u', 'e', '_']
				{'string': 'h/eo/u/e/_', 'rgx': '((h))/((_))/((u)|(ue)|(eo)|(e)|(o))/((u)|(ue)|(ou)|(e)|(o))/((_))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', 'eo', 'u', 'e', '_']
				version split: ['h', 'e', 'o', 'ue', '_']
				{'string': 'h/e/o/ue/_', 'rgx': '((h))/((_))/((u)|(ue)|(eo)|(e)|(o))/((u)|(ue)|(ou)|(e)|(o))/((_))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', 'e', 'o', 'ue', '_']
				version split: ['h', 'eo', 'u', 'e', '_']
				{'string': 'h/eo/u/e/_', 'rgx': '((h))/((_))/((u)|(ue)|(eo)|(e)|(o))/((u)|(ue)|(ou)|(e)|(o))/((_))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', 'eo', 'u', 'e', '_']
				version split: ['h', 'eo', 'u', 'e', '_']
				{'string': 'h/eo/u/e/_', 'rgx': '((h))/((_))/((u)|(ue)|(eo)|(e)|(o))/((u)|(ue)|(ou)|(e)|(o))/((_))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', 'eo', 'u', 'e', '_']
				version split: ['h', 'e', 'ou', 'e', '_']
				{'string': 'h/e/ou/e/_', 'rgx': '((h))/((_))/((u)|(ue)|(eo)|(e)|(o))/((u)|(ue)|(ou)|(e)|(o))/((_))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', 'e', 'ou', 'e', '_']
				version split: ['h', 'eo', 'ue', '_']
				{'string': 'h/eo/ue/_', 'rgx': '((h))/((_))/((u)|(ue)|(eo)|(e)|(o))/((u)|(ue)|(ou)|(e)|(o))/((_))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', 'eo', 'ue', '_']
				version split: ['h', 'eo', 'ue', '_']
				{'string': 'h/eo/ue/_', 'rgx': '((h))/((_))/((u)|(ue)|(eo)|(e)|(o))/((u)|(ue)|(ou)|(e)|(o))/((_))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', 'eo', 'ue', '_']
				version split: ['h', '_', 'e', 'o', '_', 'u', 'e']
				{'string': 'h/_/e/o/_/u/e', 'rgx': '((h))/((_))/((u)|(ue)|(eo)|(e)|(o))/((u)|(ue)|(ou)|(e)|(o))/((_))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', '_', 'e', 'o', '_', 'u', 'e']
				version split: ['h', '_', 'e', 'o', '_', 'u', 'e']
				{'string': 'h/_/e/o/_/u/e', 'rgx': '((h))/((_))/((u)|(ue)|(eo)|(e)|(o))/((u)|(ue)|(ou)|(e)|(o))/((_))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', '_', 'e', 'o', '_', 'u', 'e']
				version split: ['h', '_', 'e', 'ou', '_', 'e']
				{'string': 'h/_/e/ou/_/e', 'rgx': '((h))/((_))/((u)|(ue)|(eo)|(e)|(o))/((u)|(ue)|(ou)|(e)|(o))/((_))/((u)|(e)|(ue))$'}
				version split: ['h', '_', 'eo', 'u', '_', 'e']
				{'string': 'h/_/eo/u/_/e', 'rgx': '((h))/((_))/((u)|(ue)|(eo)|(e)|(o))/((u)|(ue)|(ou)|(e)|(o))/((_))/((u)|(e)|(ue))$'}
				version split: ['h', '_', 'eo', 'u', '_', 'e']
				{'string': 'h/_/eo/u/_/e', 'rgx': '((h))/((_))/((u)|(ue)|(eo)|(e)|(o))/((u)|(ue)|(ou)|(e)|(o))/((_))/((u)|(e)|(ue))$'}
				version split: ['h', '_', 'e', 'o', '_', 'ue']
				{'string': 'h/_/e/o/_/ue', 'rgx': '((h))/((_))/((u)|(ue)|(eo)|(e)|(o))/((u)|(ue)|(ou)|(e)|(o))/((_))/((u)|(e)|(ue))$'}
				version split: ['h', '_', 'eo', 'u', '_', 'e']
				{'string': 'h/_/eo/u/_/e', 'rgx': '((h))/((_))/((u)|(ue)|(eo)|(e)|(o))/((u)|(ue)|(ou)|(e)|(o))/((_))/((u)|(e)|(ue))$'}
				version split: ['h', '_', 'eo', 'u', '_', 'e']
				{'string': 'h/_/eo/u/_/e', 'rgx': '((h))/((_))/((u)|(ue)|(eo)|(e)|(o))/((u)|(ue)|(ou)|(e)|(o))/((_))/((u)|(e)|(ue))$'}
				version split: ['h', '_', 'e', 'ou', '_', 'e']
				{'string': 'h/_/e/ou/_/e', 'rgx': '((h))/((_))/((u)|(ue)|(eo)|(e)|(o))/((u)|(ue)|(ou)|(e)|(o))/((_))/((u)|(e)|(ue))$'}
				version split: ['h', '_', 'eo', 'ue', '_']
				{'string': 'h/_/eo/ue/_', 'rgx': '((h))/((_))/((u)|(ue)|(eo)|(e)|(o))/((u)|(ue)|(ou)|(e)|(o))/((_))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', '_', 'eo', 'ue', '_']
				version split: ['h', '_', 'eo', 'ue', '_']
				{'string': 'h/_/eo/ue/_', 'rgx': '((h))/((_))/((u)|(ue)|(eo)|(e)|(o))/((u)|(ue)|(ou)|(e)|(o))/((_))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', '_', 'eo', 'ue', '_']
				ANALYSING: heouen
					resolving (44)
					> version: h/e/o/u/e/n
					TRYING: n
					> version: h/e/o/u/e/n
					TRYING: n
					> version: h/e/ou/e/n
					> version: h/eo/u/e/n
					> version: h/eo/u/e/n
					> version: h/e/o/ue/n
					> version: h/eo/u/e/n
					> version: h/eo/u/e/n
					> version: h/e/ou/e/n
					> version: h/eo/ue/n
					> version: h/eo/ue/n
					> version: h/_/e/o/u/e/n
					TRYING: e
					> version: h/_/e/o/u/e/n
					TRYING: e
					> version: h/_/e/ou/e/n
					TRYING: n
					> version: h/_/eo/u/e/n
					TRYING: n
					> version: h/_/eo/u/e/n
					TRYING: n
					> version: h/_/e/o/ue/n
					TRYING: n
					> version: h/_/eo/u/e/n
					TRYING: n
					> version: h/_/eo/u/e/n
					TRYING: n
					> version: h/_/e/ou/e/n
					TRYING: n
					> version: h/_/eo/ue/n
					> version: h/_/eo/ue/n
					> version: h/e/o/_/u/e/n
					TRYING: e
					> version: h/e/o/_/u/e/n
					TRYING: e
					> version: h/e/ou/_/e/n
					TRYING: n
					> version: h/eo/u/_/e/n
					TRYING: n
					> version: h/eo/u/_/e/n
					TRYING: n
					> version: h/e/o/_/ue/n
					TRYING: n
					> version: h/eo/u/_/e/n
					TRYING: n
					> version: h/eo/u/_/e/n
					TRYING: n
					> version: h/e/ou/_/e/n
					TRYING: n
					> version: h/eo/ue/_/n
					> version: h/eo/ue/_/n
					> version: h/_/e/_/o/u/e/n
					TRYING: u
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e'}
					> version: h/_/e/_/o/u/e/n
					TRYING: u
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e'}
					> version: h/_/e/_/ou/e/n
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e'}
					> version: h/_/eo/_/u/e/n
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e'}
					> version: h/_/eo/_/u/e/n
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e'}
					> version: h/_/e/_/o/ue/n
					TRYING: ue
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: h/_/eo/_/u/e/n
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: h/_/eo/_/u/e/n
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: h/_/e/_/ou/e/n
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: h/_/eo/_/ue/n
					TRYING: n
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: h/_/eo/_/ue/n
					TRYING: n
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					RESULT:  ['u', 'e', 'ue']
				version split: ['h', 'e', 'o', 'u', 'e', 'n']
				{'string': 'h/e/o/u/e/n', 'rgx': '((h))/((_))/((u)|(ue)|(eo)|(e)|(o))/((_))/((n))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', 'e', 'o', 'u', 'e', 'n']
				version split: ['h', 'e', 'o', 'u', 'e', 'n']
				{'string': 'h/e/o/u/e/n', 'rgx': '((h))/((_))/((u)|(ue)|(eo)|(e)|(o))/((_))/((n))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', 'e', 'o', 'u', 'e', 'n']
				version split: ['h', 'e', 'ou', 'e', 'n']
				{'string': 'h/e/ou/e/n', 'rgx': '((h))/((_))/((u)|(ue)|(eo)|(e)|(o))/((_))/((n))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', 'e', 'ou', 'e', 'n']
				version split: ['h', 'eo', 'u', 'e', 'n']
				{'string': 'h/eo/u/e/n', 'rgx': '((h))/((_))/((u)|(ue)|(eo)|(e)|(o))/((_))/((n))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', 'eo', 'u', 'e', 'n']
				version split: ['h', 'eo', 'u', 'e', 'n']
				{'string': 'h/eo/u/e/n', 'rgx': '((h))/((_))/((u)|(ue)|(eo)|(e)|(o))/((_))/((n))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', 'eo', 'u', 'e', 'n']
				version split: ['h', 'e', 'o', 'ue', 'n']
				{'string': 'h/e/o/ue/n', 'rgx': '((h))/((_))/((u)|(ue)|(eo)|(e)|(o))/((_))/((n))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', 'e', 'o', 'ue', 'n']
				version split: ['h', 'eo', 'u', 'e', 'n']
				{'string': 'h/eo/u/e/n', 'rgx': '((h))/((_))/((u)|(ue)|(eo)|(e)|(o))/((_))/((n))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', 'eo', 'u', 'e', 'n']
				version split: ['h', 'eo', 'u', 'e', 'n']
				{'string': 'h/eo/u/e/n', 'rgx': '((h))/((_))/((u)|(ue)|(eo)|(e)|(o))/((_))/((n))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', 'eo', 'u', 'e', 'n']
				version split: ['h', 'e', 'ou', 'e', 'n']
				{'string': 'h/e/ou/e/n', 'rgx': '((h))/((_))/((u)|(ue)|(eo)|(e)|(o))/((_))/((n))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', 'e', 'ou', 'e', 'n']
				version split: ['h', 'eo', 'ue', 'n']
				{'string': 'h/eo/ue/n', 'rgx': '((h))/((_))/((u)|(ue)|(eo)|(e)|(o))/((_))/((n))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', 'eo', 'ue', 'n']
				version split: ['h', 'eo', 'ue', 'n']
				{'string': 'h/eo/ue/n', 'rgx': '((h))/((_))/((u)|(ue)|(eo)|(e)|(o))/((_))/((n))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', 'eo', 'ue', 'n']
				version split: ['h', '_', 'e', 'o', 'u', 'e', 'n']
				{'string': 'h/_/e/o/u/e/n', 'rgx': '((h))/((_))/((u)|(ue)|(eo)|(e)|(o))/((_))/((n))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', '_', 'e', 'o', 'u', 'e', 'n']
				version split: ['h', '_', 'e', 'o', 'u', 'e', 'n']
				{'string': 'h/_/e/o/u/e/n', 'rgx': '((h))/((_))/((u)|(ue)|(eo)|(e)|(o))/((_))/((n))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', '_', 'e', 'o', 'u', 'e', 'n']
				version split: ['h', '_', 'e', 'ou', 'e', 'n']
				{'string': 'h/_/e/ou/e/n', 'rgx': '((h))/((_))/((u)|(ue)|(eo)|(e)|(o))/((_))/((n))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', '_', 'e', 'ou', 'e', 'n']
				version split: ['h', '_', 'eo', 'u', 'e', 'n']
				{'string': 'h/_/eo/u/e/n', 'rgx': '((h))/((_))/((u)|(ue)|(eo)|(e)|(o))/((_))/((n))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', '_', 'eo', 'u', 'e', 'n']
				version split: ['h', '_', 'eo', 'u', 'e', 'n']
				{'string': 'h/_/eo/u/e/n', 'rgx': '((h))/((_))/((u)|(ue)|(eo)|(e)|(o))/((_))/((n))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', '_', 'eo', 'u', 'e', 'n']
				version split: ['h', '_', 'e', 'o', 'ue', 'n']
				{'string': 'h/_/e/o/ue/n', 'rgx': '((h))/((_))/((u)|(ue)|(eo)|(e)|(o))/((_))/((n))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', '_', 'e', 'o', 'ue', 'n']
				version split: ['h', '_', 'eo', 'u', 'e', 'n']
				{'string': 'h/_/eo/u/e/n', 'rgx': '((h))/((_))/((u)|(ue)|(eo)|(e)|(o))/((_))/((n))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', '_', 'eo', 'u', 'e', 'n']
				version split: ['h', '_', 'eo', 'u', 'e', 'n']
				{'string': 'h/_/eo/u/e/n', 'rgx': '((h))/((_))/((u)|(ue)|(eo)|(e)|(o))/((_))/((n))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', '_', 'eo', 'u', 'e', 'n']
				version split: ['h', '_', 'e', 'ou', 'e', 'n']
				{'string': 'h/_/e/ou/e/n', 'rgx': '((h))/((_))/((u)|(ue)|(eo)|(e)|(o))/((_))/((n))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', '_', 'e', 'ou', 'e', 'n']
				version split: ['h', '_', 'eo', 'ue', 'n']
				{'string': 'h/_/eo/ue/n', 'rgx': '((h))/((_))/((u)|(ue)|(eo)|(e)|(o))/((_))/((n))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', '_', 'eo', 'ue', 'n']
				version split: ['h', '_', 'eo', 'ue', 'n']
				{'string': 'h/_/eo/ue/n', 'rgx': '((h))/((_))/((u)|(ue)|(eo)|(e)|(o))/((_))/((n))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', '_', 'eo', 'ue', 'n']
				version split: ['h', 'e', 'o', '_', 'u', 'e', 'n']
				{'string': 'h/e/o/_/u/e/n', 'rgx': '((h))/((_))/((u)|(ue)|(eo)|(e)|(o))/((_))/((n))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', 'e', 'o', '_', 'u', 'e', 'n']
				version split: ['h', 'e', 'o', '_', 'u', 'e', 'n']
				{'string': 'h/e/o/_/u/e/n', 'rgx': '((h))/((_))/((u)|(ue)|(eo)|(e)|(o))/((_))/((n))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', 'e', 'o', '_', 'u', 'e', 'n']
				version split: ['h', 'e', 'ou', '_', 'e', 'n']
				{'string': 'h/e/ou/_/e/n', 'rgx': '((h))/((_))/((u)|(ue)|(eo)|(e)|(o))/((_))/((n))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', 'e', 'ou', '_', 'e', 'n']
				version split: ['h', 'eo', 'u', '_', 'e', 'n']
				{'string': 'h/eo/u/_/e/n', 'rgx': '((h))/((_))/((u)|(ue)|(eo)|(e)|(o))/((_))/((n))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', 'eo', 'u', '_', 'e', 'n']
				version split: ['h', 'eo', 'u', '_', 'e', 'n']
				{'string': 'h/eo/u/_/e/n', 'rgx': '((h))/((_))/((u)|(ue)|(eo)|(e)|(o))/((_))/((n))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', 'eo', 'u', '_', 'e', 'n']
				version split: ['h', 'e', 'o', '_', 'ue', 'n']
				{'string': 'h/e/o/_/ue/n', 'rgx': '((h))/((_))/((u)|(ue)|(eo)|(e)|(o))/((_))/((n))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', 'e', 'o', '_', 'ue', 'n']
				version split: ['h', 'eo', 'u', '_', 'e', 'n']
				{'string': 'h/eo/u/_/e/n', 'rgx': '((h))/((_))/((u)|(ue)|(eo)|(e)|(o))/((_))/((n))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', 'eo', 'u', '_', 'e', 'n']
				version split: ['h', 'eo', 'u', '_', 'e', 'n']
				{'string': 'h/eo/u/_/e/n', 'rgx': '((h))/((_))/((u)|(ue)|(eo)|(e)|(o))/((_))/((n))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', 'eo', 'u', '_', 'e', 'n']
				version split: ['h', 'e', 'ou', '_', 'e', 'n']
				{'string': 'h/e/ou/_/e/n', 'rgx': '((h))/((_))/((u)|(ue)|(eo)|(e)|(o))/((_))/((n))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', 'e', 'ou', '_', 'e', 'n']
				version split: ['h', 'eo', 'ue', '_', 'n']
				{'string': 'h/eo/ue/_/n', 'rgx': '((h))/((_))/((u)|(ue)|(eo)|(e)|(o))/((_))/((n))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', 'eo', 'ue', '_', 'n']
				version split: ['h', 'eo', 'ue', '_', 'n']
				{'string': 'h/eo/ue/_/n', 'rgx': '((h))/((_))/((u)|(ue)|(eo)|(e)|(o))/((_))/((n))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', 'eo', 'ue', '_', 'n']
				version split: ['h', '_', 'e', '_', 'o', 'u', 'e', 'n']
				{'string': 'h/_/e/_/o/u/e', 'rgx': '((h))/((_))/((u)|(ue)|(eo)|(e)|(o))/((_))/((n))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', '_', 'e', '_', 'o', 'u', 'e', 'n']
				version split: ['h', '_', 'e', '_', 'o', 'u', 'e', 'n']
				{'string': 'h/_/e/_/o/u/e', 'rgx': '((h))/((_))/((u)|(ue)|(eo)|(e)|(o))/((_))/((n))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', '_', 'e', '_', 'o', 'u', 'e', 'n']
				version split: ['h', '_', 'e', '_', 'ou', 'e', 'n']
				{'string': 'h/_/e/_/ou/e/n', 'rgx': '((h))/((_))/((u)|(ue)|(eo)|(e)|(o))/((_))/((n))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', '_', 'e', '_', 'ou', 'e', 'n']
				version split: ['h', '_', 'eo', '_', 'u', 'e', 'n']
				{'string': 'h/_/eo/_/u/e/n', 'rgx': '((h))/((_))/((u)|(ue)|(eo)|(e)|(o))/((_))/((n))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', '_', 'eo', '_', 'u', 'e', 'n']
				version split: ['h', '_', 'eo', '_', 'u', 'e', 'n']
				{'string': 'h/_/eo/_/u/e/n', 'rgx': '((h))/((_))/((u)|(ue)|(eo)|(e)|(o))/((_))/((n))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', '_', 'eo', '_', 'u', 'e', 'n']
				version split: ['h', '_', 'e', '_', 'o', 'ue', 'n']
				{'string': 'h/_/e/_/o/ue/n', 'rgx': '((h))/((_))/((u)|(ue)|(eo)|(e)|(o))/((_))/((n))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', '_', 'e', '_', 'o', 'ue', 'n']
				version split: ['h', '_', 'eo', '_', 'u', 'e', 'n']
				{'string': 'h/_/eo/_/u/e/n', 'rgx': '((h))/((_))/((u)|(ue)|(eo)|(e)|(o))/((_))/((n))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', '_', 'eo', '_', 'u', 'e', 'n']
				version split: ['h', '_', 'eo', '_', 'u', 'e', 'n']
				{'string': 'h/_/eo/_/u/e/n', 'rgx': '((h))/((_))/((u)|(ue)|(eo)|(e)|(o))/((_))/((n))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', '_', 'eo', '_', 'u', 'e', 'n']
				version split: ['h', '_', 'e', '_', 'ou', 'e', 'n']
				{'string': 'h/_/e/_/ou/e/n', 'rgx': '((h))/((_))/((u)|(ue)|(eo)|(e)|(o))/((_))/((n))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', '_', 'e', '_', 'ou', 'e', 'n']
				version split: ['h', '_', 'eo', '_', 'ue', 'n']
				{'string': 'h/_/eo/_/ue/n', 'rgx': '((h))/((_))/((u)|(ue)|(eo)|(e)|(o))/((_))/((n))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', '_', 'eo', '_', 'ue', 'n']
				version split: ['h', '_', 'eo', '_', 'ue', 'n']
				{'string': 'h/_/eo/_/ue/n', 'rgx': '((h))/((_))/((u)|(ue)|(eo)|(e)|(o))/((_))/((n))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', '_', 'eo', '_', 'ue', 'n']
				ANALYSING: heue
					resolving (40)
					> version: h/e/u/e
					> version: h/e/u/e
					> version: h/eu/e
					> version: h/e/ue
					> version: h/eu/e
					> version: h/_/e/u/e
					> version: h/_/e/u/e
					> version: h/_/eu/e
					> version: h/_/e/ue
					> version: h/_/eu/e
					> version: h/e/u/_/e
					> version: h/e/u/_/e
					> version: h/eu/e/_
					> version: h/e/ue/_
					> version: h/eu/e/_
					> version: h/_/e/_/u/e
					TRYING: e
					> version: h/_/e/_/u/e
					TRYING: e
					> version: h/_/eu/_/e
					> version: h/_/e/_/ue
					> version: h/_/eu/_/e
					> version: h/e/u/e/_
					> version: h/e/u/e/_
					> version: h/eu/e/_
					> version: h/e/ue/_
					> version: h/eu/e/_
					> version: h/_/e/u/_/e
					TRYING: e
					> version: h/_/e/u/_/e
					TRYING: e
					> version: h/_/eu/e/_
					> version: h/_/e/ue/_
					> version: h/_/eu/e/_
					> version: h/e/u/_/_/e
					TRYING: e
					> version: h/e/u/_/_/e
					TRYING: e
					> version: h/eu/e/_/_
					> version: h/e/ue/_/_
					> version: h/eu/e/_/_
					> version: h/_/e/_/_/u/e
					TRYING: u
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e'}
					> version: h/_/e/_/_/u/e
					TRYING: u
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e'}
					> version: h/_/eu/_/_/e
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e'}
					> version: h/_/e/_/_/ue
					TRYING: ue
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: h/_/eu/_/_/e
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					RESULT:  ['u', 'e', 'ue']
				version split: ['h', 'e', 'u', 'e']
				{'string': 'h/e/u/e', 'rgx': '((h))/((_))/((u)|(e)|(ue))/((_))/((_))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', 'e', 'u', 'e']
				version split: ['h', 'e', 'u', 'e']
				{'string': 'h/e/u/e', 'rgx': '((h))/((_))/((u)|(e)|(ue))/((_))/((_))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', 'e', 'u', 'e']
				version split: ['h', 'eu', 'e']
				{'string': 'h/eu/e', 'rgx': '((h))/((_))/((u)|(e)|(ue))/((_))/((_))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', 'eu', 'e']
				version split: ['h', 'e', 'ue']
				{'string': 'h/e/ue', 'rgx': '((h))/((_))/((u)|(e)|(ue))/((_))/((_))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', 'e', 'ue']
				version split: ['h', 'eu', 'e']
				{'string': 'h/eu/e', 'rgx': '((h))/((_))/((u)|(e)|(ue))/((_))/((_))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', 'eu', 'e']
				version split: ['h', '_', 'e', 'u', 'e']
				{'string': 'h/_/e/u/e', 'rgx': '((h))/((_))/((u)|(e)|(ue))/((_))/((_))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', '_', 'e', 'u', 'e']
				version split: ['h', '_', 'e', 'u', 'e']
				{'string': 'h/_/e/u/e', 'rgx': '((h))/((_))/((u)|(e)|(ue))/((_))/((_))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', '_', 'e', 'u', 'e']
				version split: ['h', '_', 'eu', 'e']
				{'string': 'h/_/eu/e', 'rgx': '((h))/((_))/((u)|(e)|(ue))/((_))/((_))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', '_', 'eu', 'e']
				version split: ['h', '_', 'e', 'ue']
				{'string': 'h/_/e/ue', 'rgx': '((h))/((_))/((u)|(e)|(ue))/((_))/((_))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', '_', 'e', 'ue']
				version split: ['h', '_', 'eu', 'e']
				{'string': 'h/_/eu/e', 'rgx': '((h))/((_))/((u)|(e)|(ue))/((_))/((_))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', '_', 'eu', 'e']
				version split: ['h', 'e', 'u', '_', 'e']
				{'string': 'h/e/u/_/e', 'rgx': '((h))/((_))/((u)|(e)|(ue))/((_))/((_))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', 'e', 'u', '_', 'e']
				version split: ['h', 'e', 'u', '_', 'e']
				{'string': 'h/e/u/_/e', 'rgx': '((h))/((_))/((u)|(e)|(ue))/((_))/((_))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', 'e', 'u', '_', 'e']
				version split: ['h', 'eu', 'e', '_']
				{'string': 'h/eu/e/_', 'rgx': '((h))/((_))/((u)|(e)|(ue))/((_))/((_))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', 'eu', 'e', '_']
				version split: ['h', 'e', 'ue', '_']
				{'string': 'h/e/ue/_', 'rgx': '((h))/((_))/((u)|(e)|(ue))/((_))/((_))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', 'e', 'ue', '_']
				version split: ['h', 'eu', 'e', '_']
				{'string': 'h/eu/e/_', 'rgx': '((h))/((_))/((u)|(e)|(ue))/((_))/((_))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', 'eu', 'e', '_']
				version split: ['h', '_', 'e', '_', 'u', 'e']
				{'string': 'h/_/e/_/u/e', 'rgx': '((h))/((_))/((u)|(e)|(ue))/((_))/((_))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', '_', 'e', '_', 'u', 'e']
				version split: ['h', '_', 'e', '_', 'u', 'e']
				{'string': 'h/_/e/_/u/e', 'rgx': '((h))/((_))/((u)|(e)|(ue))/((_))/((_))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', '_', 'e', '_', 'u', 'e']
				version split: ['h', '_', 'eu', '_', 'e']
				{'string': 'h/_/eu/_/e', 'rgx': '((h))/((_))/((u)|(e)|(ue))/((_))/((_))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', '_', 'eu', '_', 'e']
				version split: ['h', '_', 'e', '_', 'ue']
				{'string': 'h/_/e/_/ue', 'rgx': '((h))/((_))/((u)|(e)|(ue))/((_))/((_))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', '_', 'e', '_', 'ue']
				version split: ['h', '_', 'eu', '_', 'e']
				{'string': 'h/_/eu/_/e', 'rgx': '((h))/((_))/((u)|(e)|(ue))/((_))/((_))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', '_', 'eu', '_', 'e']
				version split: ['h', 'e', 'u', 'e', '_']
				{'string': 'h/e/u/e/_', 'rgx': '((h))/((_))/((u)|(e)|(ue))/((_))/((_))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', 'e', 'u', 'e', '_']
				version split: ['h', 'e', 'u', 'e', '_']
				{'string': 'h/e/u/e/_', 'rgx': '((h))/((_))/((u)|(e)|(ue))/((_))/((_))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', 'e', 'u', 'e', '_']
				version split: ['h', 'eu', 'e', '_']
				{'string': 'h/eu/e/_', 'rgx': '((h))/((_))/((u)|(e)|(ue))/((_))/((_))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', 'eu', 'e', '_']
				version split: ['h', 'e', 'ue', '_']
				{'string': 'h/e/ue/_', 'rgx': '((h))/((_))/((u)|(e)|(ue))/((_))/((_))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', 'e', 'ue', '_']
				version split: ['h', 'eu', 'e', '_']
				{'string': 'h/eu/e/_', 'rgx': '((h))/((_))/((u)|(e)|(ue))/((_))/((_))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', 'eu', 'e', '_']
				version split: ['h', '_', 'e', 'u', '_', 'e']
				{'string': 'h/_/e/u/_/e', 'rgx': '((h))/((_))/((u)|(e)|(ue))/((_))/((_))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', '_', 'e', 'u', '_', 'e']
				version split: ['h', '_', 'e', 'u', '_', 'e']
				{'string': 'h/_/e/u/_/e', 'rgx': '((h))/((_))/((u)|(e)|(ue))/((_))/((_))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', '_', 'e', 'u', '_', 'e']
				version split: ['h', '_', 'eu', 'e', '_']
				{'string': 'h/_/eu/e/_', 'rgx': '((h))/((_))/((u)|(e)|(ue))/((_))/((_))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', '_', 'eu', 'e', '_']
				version split: ['h', '_', 'e', 'ue', '_']
				{'string': 'h/_/e/ue/_', 'rgx': '((h))/((_))/((u)|(e)|(ue))/((_))/((_))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', '_', 'e', 'ue', '_']
				version split: ['h', '_', 'eu', 'e', '_']
				{'string': 'h/_/eu/e/_', 'rgx': '((h))/((_))/((u)|(e)|(ue))/((_))/((_))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', '_', 'eu', 'e', '_']
				version split: ['h', 'e', 'u', '_', '_', 'e']
				{'string': 'h/e/u/_/_/e', 'rgx': '((h))/((_))/((u)|(e)|(ue))/((_))/((_))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', 'e', 'u', '_', '_', 'e']
				version split: ['h', 'e', 'u', '_', '_', 'e']
				{'string': 'h/e/u/_/_/e', 'rgx': '((h))/((_))/((u)|(e)|(ue))/((_))/((_))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', 'e', 'u', '_', '_', 'e']
				version split: ['h', 'eu', 'e', '_', '_']
				{'string': 'h/eu/e/_/_', 'rgx': '((h))/((_))/((u)|(e)|(ue))/((_))/((_))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', 'eu', 'e', '_', '_']
				version split: ['h', 'e', 'ue', '_', '_']
				{'string': 'h/e/ue/_/_', 'rgx': '((h))/((_))/((u)|(e)|(ue))/((_))/((_))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', 'e', 'ue', '_', '_']
				version split: ['h', 'eu', 'e', '_', '_']
				{'string': 'h/eu/e/_/_', 'rgx': '((h))/((_))/((u)|(e)|(ue))/((_))/((_))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', 'eu', 'e', '_', '_']
				version split: ['h', '_', 'e', '_', '_', 'u', 'e']
				{'string': 'h/_/e/_/_/u/e', 'rgx': '((h))/((_))/((u)|(e)|(ue))/((_))/((_))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', '_', 'e', '_', '_', 'u', 'e']
				version split: ['h', '_', 'e', '_', '_', 'u', 'e']
				{'string': 'h/_/e/_/_/u/e', 'rgx': '((h))/((_))/((u)|(e)|(ue))/((_))/((_))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', '_', 'e', '_', '_', 'u', 'e']
				version split: ['h', '_', 'eu', '_', '_', 'e']
				{'string': 'h/_/eu/_/_/e', 'rgx': '((h))/((_))/((u)|(e)|(ue))/((_))/((_))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', '_', 'eu', '_', '_', 'e']
				version split: ['h', '_', 'e', '_', '_', 'ue']
				{'string': 'h/_/e/_/_/ue', 'rgx': '((h))/((_))/((u)|(e)|(ue))/((_))/((_))/((u)|(e)|(ue))$'}
				version split: ['h', '_', 'eu', '_', '_', 'e']
				{'string': 'h/_/eu/_/_/e', 'rgx': '((h))/((_))/((u)|(e)|(ue))/((_))/((_))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', '_', 'eu', '_', '_', 'e']
				ANALYSING: heuen
					resolving (20)
					> version: h/e/u/e/n
					> version: h/e/u/e/n
					> version: h/eu/e/n
					> version: h/e/ue/n
					> version: h/eu/e/n
					> version: h/_/e/u/e/n
					TRYING: n
					> version: h/_/e/u/e/n
					TRYING: n
					> version: h/_/eu/e/n
					> version: h/_/e/ue/n
					> version: h/_/eu/e/n
					> version: h/e/u/_/e/n
					TRYING: n
					> version: h/e/u/_/e/n
					TRYING: n
					> version: h/eu/e/_/n
					> version: h/e/ue/_/n
					> version: h/eu/e/_/n
					> version: h/_/e/_/u/e/n
					TRYING: e
					> version: h/_/e/_/u/e/n
					TRYING: e
					> version: h/_/eu/_/e/n
					TRYING: n
					> version: h/_/e/_/ue/n
					TRYING: n
					> version: h/_/eu/_/e/n
					TRYING: n
					RESULT:  ['e']
				version split: ['h', 'e', 'u', 'e', 'n']
				{'string': 'h/e/u/e/n', 'rgx': '((h))/((_))/((u)|(e)|(ue))/((_))/((n))/((e))$'}
				_____REMOVING________['h', 'e', 'u', 'e', 'n']
				version split: ['h', 'e', 'u', 'e', 'n']
				{'string': 'h/e/u/e/n', 'rgx': '((h))/((_))/((u)|(e)|(ue))/((_))/((n))/((e))$'}
				_____REMOVING________['h', 'e', 'u', 'e', 'n']
				version split: ['h', 'eu', 'e', 'n']
				{'string': 'h/eu/e/n', 'rgx': '((h))/((_))/((u)|(e)|(ue))/((_))/((n))/((e))$'}
				_____REMOVING________['h', 'eu', 'e', 'n']
				version split: ['h', 'e', 'ue', 'n']
				{'string': 'h/e/ue/n', 'rgx': '((h))/((_))/((u)|(e)|(ue))/((_))/((n))/((e))$'}
				_____REMOVING________['h', 'e', 'ue', 'n']
				version split: ['h', 'eu', 'e', 'n']
				{'string': 'h/eu/e/n', 'rgx': '((h))/((_))/((u)|(e)|(ue))/((_))/((n))/((e))$'}
				_____REMOVING________['h', 'eu', 'e', 'n']
				version split: ['h', '_', 'e', 'u', 'e', 'n']
				{'string': 'h/_/e/u/e/n', 'rgx': '((h))/((_))/((u)|(e)|(ue))/((_))/((n))/((e))$'}
				_____REMOVING________['h', '_', 'e', 'u', 'e', 'n']
				version split: ['h', '_', 'e', 'u', 'e', 'n']
				{'string': 'h/_/e/u/e/n', 'rgx': '((h))/((_))/((u)|(e)|(ue))/((_))/((n))/((e))$'}
				_____REMOVING________['h', '_', 'e', 'u', 'e', 'n']
				version split: ['h', '_', 'eu', 'e', 'n']
				{'string': 'h/_/eu/e/n', 'rgx': '((h))/((_))/((u)|(e)|(ue))/((_))/((n))/((e))$'}
				_____REMOVING________['h', '_', 'eu', 'e', 'n']
				version split: ['h', '_', 'e', 'ue', 'n']
				{'string': 'h/_/e/ue/n', 'rgx': '((h))/((_))/((u)|(e)|(ue))/((_))/((n))/((e))$'}
				_____REMOVING________['h', '_', 'e', 'ue', 'n']
				version split: ['h', '_', 'eu', 'e', 'n']
				{'string': 'h/_/eu/e/n', 'rgx': '((h))/((_))/((u)|(e)|(ue))/((_))/((n))/((e))$'}
				_____REMOVING________['h', '_', 'eu', 'e', 'n']
				version split: ['h', 'e', 'u', '_', 'e', 'n']
				{'string': 'h/e/u/_/e/n', 'rgx': '((h))/((_))/((u)|(e)|(ue))/((_))/((n))/((e))$'}
				_____REMOVING________['h', 'e', 'u', '_', 'e', 'n']
				version split: ['h', 'e', 'u', '_', 'e', 'n']
				{'string': 'h/e/u/_/e/n', 'rgx': '((h))/((_))/((u)|(e)|(ue))/((_))/((n))/((e))$'}
				_____REMOVING________['h', 'e', 'u', '_', 'e', 'n']
				version split: ['h', 'eu', 'e', '_', 'n']
				{'string': 'h/eu/e/_/n', 'rgx': '((h))/((_))/((u)|(e)|(ue))/((_))/((n))/((e))$'}
				_____REMOVING________['h', 'eu', 'e', '_', 'n']
				version split: ['h', 'e', 'ue', '_', 'n']
				{'string': 'h/e/ue/_/n', 'rgx': '((h))/((_))/((u)|(e)|(ue))/((_))/((n))/((e))$'}
				_____REMOVING________['h', 'e', 'ue', '_', 'n']
				version split: ['h', 'eu', 'e', '_', 'n']
				{'string': 'h/eu/e/_/n', 'rgx': '((h))/((_))/((u)|(e)|(ue))/((_))/((n))/((e))$'}
				_____REMOVING________['h', 'eu', 'e', '_', 'n']
				version split: ['h', '_', 'e', '_', 'u', 'e', 'n']
				{'string': 'h/_/e/_/u/e/n', 'rgx': '((h))/((_))/((u)|(e)|(ue))/((_))/((n))/((e))$'}
				_____REMOVING________['h', '_', 'e', '_', 'u', 'e', 'n']
				version split: ['h', '_', 'e', '_', 'u', 'e', 'n']
				{'string': 'h/_/e/_/u/e/n', 'rgx': '((h))/((_))/((u)|(e)|(ue))/((_))/((n))/((e))$'}
				_____REMOVING________['h', '_', 'e', '_', 'u', 'e', 'n']
				version split: ['h', '_', 'eu', '_', 'e', 'n']
				{'string': 'h/_/eu/_/e/n', 'rgx': '((h))/((_))/((u)|(e)|(ue))/((_))/((n))/((e))$'}
				_____REMOVING________['h', '_', 'eu', '_', 'e', 'n']
				version split: ['h', '_', 'e', '_', 'ue', 'n']
				{'string': 'h/_/e/_/ue/n', 'rgx': '((h))/((_))/((u)|(e)|(ue))/((_))/((n))/((e))$'}
				_____REMOVING________['h', '_', 'e', '_', 'ue', 'n']
				version split: ['h', '_', 'eu', '_', 'e', 'n']
				{'string': 'h/_/eu/_/e/n', 'rgx': '((h))/((_))/((u)|(e)|(ue))/((_))/((n))/((e))$'}
				_____REMOVING________['h', '_', 'eu', '_', 'e', 'n']
				ANALYSING: houen
					resolving (20)
					> version: h/o/u/e/n
					> version: h/o/u/e/n
					> version: h/ou/e/n
					> version: h/o/ue/n
					> version: h/ou/e/n
					> version: h/_/o/u/e/n
					TRYING: n
					> version: h/_/o/u/e/n
					TRYING: n
					> version: h/_/ou/e/n
					> version: h/_/o/ue/n
					> version: h/_/ou/e/n
					> version: h/o/u/_/e/n
					TRYING: n
					> version: h/o/u/_/e/n
					TRYING: n
					> version: h/ou/e/_/n
					> version: h/o/ue/_/n
					> version: h/ou/e/_/n
					> version: h/_/o/_/u/e/n
					TRYING: e
					> version: h/_/o/_/u/e/n
					TRYING: e
					> version: h/_/ou/_/e/n
					TRYING: n
					> version: h/_/o/_/ue/n
					TRYING: n
					> version: h/_/ou/_/e/n
					TRYING: n
					RESULT:  ['e']
				version split: ['h', 'o', 'u', 'e', 'n']
				{'string': 'h/o/u/e/n', 'rgx': '((h))/((_))/((u)|(e)|(ue)|(o))/((_))/((n))/((e))$'}
				_____REMOVING________['h', 'o', 'u', 'e', 'n']
				version split: ['h', 'o', 'u', 'e', 'n']
				{'string': 'h/o/u/e/n', 'rgx': '((h))/((_))/((u)|(e)|(ue)|(o))/((_))/((n))/((e))$'}
				_____REMOVING________['h', 'o', 'u', 'e', 'n']
				version split: ['h', 'ou', 'e', 'n']
				{'string': 'h/ou/e/n', 'rgx': '((h))/((_))/((u)|(e)|(ue)|(o))/((_))/((n))/((e))$'}
				_____REMOVING________['h', 'ou', 'e', 'n']
				version split: ['h', 'o', 'ue', 'n']
				{'string': 'h/o/ue/n', 'rgx': '((h))/((_))/((u)|(e)|(ue)|(o))/((_))/((n))/((e))$'}
				_____REMOVING________['h', 'o', 'ue', 'n']
				version split: ['h', 'ou', 'e', 'n']
				{'string': 'h/ou/e/n', 'rgx': '((h))/((_))/((u)|(e)|(ue)|(o))/((_))/((n))/((e))$'}
				_____REMOVING________['h', 'ou', 'e', 'n']
				version split: ['h', '_', 'o', 'u', 'e', 'n']
				{'string': 'h/_/o/u/e/n', 'rgx': '((h))/((_))/((u)|(e)|(ue)|(o))/((_))/((n))/((e))$'}
				_____REMOVING________['h', '_', 'o', 'u', 'e', 'n']
				version split: ['h', '_', 'o', 'u', 'e', 'n']
				{'string': 'h/_/o/u/e/n', 'rgx': '((h))/((_))/((u)|(e)|(ue)|(o))/((_))/((n))/((e))$'}
				_____REMOVING________['h', '_', 'o', 'u', 'e', 'n']
				version split: ['h', '_', 'ou', 'e', 'n']
				{'string': 'h/_/ou/e/n', 'rgx': '((h))/((_))/((u)|(e)|(ue)|(o))/((_))/((n))/((e))$'}
				_____REMOVING________['h', '_', 'ou', 'e', 'n']
				version split: ['h', '_', 'o', 'ue', 'n']
				{'string': 'h/_/o/ue/n', 'rgx': '((h))/((_))/((u)|(e)|(ue)|(o))/((_))/((n))/((e))$'}
				_____REMOVING________['h', '_', 'o', 'ue', 'n']
				version split: ['h', '_', 'ou', 'e', 'n']
				{'string': 'h/_/ou/e/n', 'rgx': '((h))/((_))/((u)|(e)|(ue)|(o))/((_))/((n))/((e))$'}
				_____REMOVING________['h', '_', 'ou', 'e', 'n']
				version split: ['h', 'o', 'u', '_', 'e', 'n']
				{'string': 'h/o/u/_/e/n', 'rgx': '((h))/((_))/((u)|(e)|(ue)|(o))/((_))/((n))/((e))$'}
				_____REMOVING________['h', 'o', 'u', '_', 'e', 'n']
				version split: ['h', 'o', 'u', '_', 'e', 'n']
				{'string': 'h/o/u/_/e/n', 'rgx': '((h))/((_))/((u)|(e)|(ue)|(o))/((_))/((n))/((e))$'}
				_____REMOVING________['h', 'o', 'u', '_', 'e', 'n']
				version split: ['h', 'ou', 'e', '_', 'n']
				{'string': 'h/ou/e/_/n', 'rgx': '((h))/((_))/((u)|(e)|(ue)|(o))/((_))/((n))/((e))$'}
				_____REMOVING________['h', 'ou', 'e', '_', 'n']
				version split: ['h', 'o', 'ue', '_', 'n']
				{'string': 'h/o/ue/_/n', 'rgx': '((h))/((_))/((u)|(e)|(ue)|(o))/((_))/((n))/((e))$'}
				_____REMOVING________['h', 'o', 'ue', '_', 'n']
				version split: ['h', 'ou', 'e', '_', 'n']
				{'string': 'h/ou/e/_/n', 'rgx': '((h))/((_))/((u)|(e)|(ue)|(o))/((_))/((n))/((e))$'}
				_____REMOVING________['h', 'ou', 'e', '_', 'n']
				version split: ['h', '_', 'o', '_', 'u', 'e', 'n']
				{'string': 'h/_/o/_/u/e/n', 'rgx': '((h))/((_))/((u)|(e)|(ue)|(o))/((_))/((n))/((e))$'}
				_____REMOVING________['h', '_', 'o', '_', 'u', 'e', 'n']
				version split: ['h', '_', 'o', '_', 'u', 'e', 'n']
				{'string': 'h/_/o/_/u/e/n', 'rgx': '((h))/((_))/((u)|(e)|(ue)|(o))/((_))/((n))/((e))$'}
				_____REMOVING________['h', '_', 'o', '_', 'u', 'e', 'n']
				version split: ['h', '_', 'ou', '_', 'e', 'n']
				{'string': 'h/_/ou/_/e/n', 'rgx': '((h))/((_))/((u)|(e)|(ue)|(o))/((_))/((n))/((e))$'}
				_____REMOVING________['h', '_', 'ou', '_', 'e', 'n']
				version split: ['h', '_', 'o', '_', 'ue', 'n']
				{'string': 'h/_/o/_/ue/n', 'rgx': '((h))/((_))/((u)|(e)|(ue)|(o))/((_))/((n))/((e))$'}
				_____REMOVING________['h', '_', 'o', '_', 'ue', 'n']
				version split: ['h', '_', 'ou', '_', 'e', 'n']
				{'string': 'h/_/ou/_/e/n', 'rgx': '((h))/((_))/((u)|(e)|(ue)|(o))/((_))/((n))/((e))$'}
				_____REMOVING________['h', '_', 'ou', '_', 'e', 'n']
				ANALYSING: lich
					resolving (128)
					> version: l/i/c/h
					> version: l/i/c/h
					> version: l/i/ch
					> version: l/i/ch
					> version: _/l/i/c/h
					> version: _/l/i/c/h
					> version: _/l/i/ch
					> version: _/l/i/ch
					> version: l/_/i/c/h
					> version: l/_/i/c/h
					> version: l/_/i/ch
					> version: l/_/i/ch
					> version: _/_/l/i/c/h
					TRYING: h
					> version: _/_/l/i/c/h
					TRYING: h
					> version: _/_/l/i/ch
					> version: _/_/l/i/ch
					> version: l/i/_/c/h
					> version: l/i/_/c/h
					> version: l/i/_/ch
					> version: l/i/_/ch
					> version: _/l/_/i/c/h
					TRYING: h
					> version: _/l/_/i/c/h
					TRYING: h
					> version: _/l/_/i/ch
					> version: _/l/_/i/ch
					> version: l/_/_/i/c/h
					TRYING: h
					> version: l/_/_/i/c/h
					TRYING: h
					> version: l/_/_/i/ch
					> version: l/_/_/i/ch
					> version: _/_/_/l/i/c/h
					TRYING: c
					> version: _/_/_/l/i/c/h
					TRYING: c
					> version: _/_/_/l/i/ch
					TRYING: ch
					> version: _/_/_/l/i/ch
					TRYING: ch
					> version: l/i/c/_/h
					> version: l/i/c/_/h
					> version: l/i/ch/_
					> version: l/i/ch/_
					> version: _/l/i/_/c/h
					TRYING: h
					> version: _/l/i/_/c/h
					TRYING: h
					> version: _/l/i/_/ch
					> version: _/l/i/_/ch
					> version: l/_/i/_/c/h
					TRYING: h
					> version: l/_/i/_/c/h
					TRYING: h
					> version: l/_/i/_/ch
					> version: l/_/i/_/ch
					> version: _/_/l/_/i/c/h
					TRYING: c
					> version: _/_/l/_/i/c/h
					TRYING: c
					> version: _/_/l/_/i/ch
					TRYING: ch
					> version: _/_/l/_/i/ch
					TRYING: ch
					> version: l/i/_/_/c/h
					TRYING: h
					> version: l/i/_/_/c/h
					TRYING: h
					> version: l/i/_/_/ch
					> version: l/i/_/_/ch
					> version: _/l/_/_/i/c/h
					TRYING: c
					> version: _/l/_/_/i/c/h
					TRYING: c
					> version: _/l/_/_/i/ch
					TRYING: ch
					> version: _/l/_/_/i/ch
					TRYING: ch
					> version: l/_/_/_/i/c/h
					TRYING: c
					> version: l/_/_/_/i/c/h
					TRYING: c
					> version: l/_/_/_/i/ch
					TRYING: ch
					> version: l/_/_/_/i/ch
					TRYING: ch
					> version: _/_/_/_/l/i/c/h
					TRYING: i
					adding blocked set: V = V >> u, i, ue, _, e, o
					> version: _/_/_/_/l/i/c/h
					TRYING: i
					adding blocked set: V = V >> u, i, ue, _, e, o
					> version: _/_/_/_/l/i/ch
					TRYING: i
					adding blocked set: V = V >> u, i, ue, _, e, o
					> version: _/_/_/_/l/i/ch
					TRYING: i
					adding blocked set: V = V >> u, i, ue, _, e, o
					> version: l/i/c/h/_
					> version: l/i/c/h/_
					> version: l/i/ch/_
					> version: l/i/ch/_
					> version: _/l/i/c/_/h
					TRYING: h
					> version: _/l/i/c/_/h
					TRYING: h
					> version: _/l/i/ch/_
					> version: _/l/i/ch/_
					> version: l/_/i/c/_/h
					TRYING: h
					> version: l/_/i/c/_/h
					TRYING: h
					> version: l/_/i/ch/_
					> version: l/_/i/ch/_
					> version: _/_/l/i/_/c/h
					TRYING: c
					> version: _/_/l/i/_/c/h
					TRYING: c
					> version: _/_/l/i/_/ch
					TRYING: ch
					> version: _/_/l/i/_/ch
					TRYING: ch
					> version: l/i/_/c/_/h
					TRYING: h
					> version: l/i/_/c/_/h
					TRYING: h
					> version: l/i/_/ch/_
					> version: l/i/_/ch/_
					> version: _/l/_/i/_/c/h
					TRYING: c
					> version: _/l/_/i/_/c/h
					TRYING: c
					> version: _/l/_/i/_/ch
					TRYING: ch
					> version: _/l/_/i/_/ch
					TRYING: ch
					> version: l/_/_/i/_/c/h
					TRYING: c
					> version: l/_/_/i/_/c/h
					TRYING: c
					> version: l/_/_/i/_/ch
					TRYING: ch
					> version: l/_/_/i/_/ch
					TRYING: ch
					> version: _/_/_/l/_/i/c/h
					TRYING: i
					adding blocked set: V = V >> u, i, ue, _, e, o
					> version: _/_/_/l/_/i/c/h
					TRYING: i
					adding blocked set: V = V >> u, i, ue, _, e, o
					> version: _/_/_/l/_/i/ch
					TRYING: i
					adding blocked set: V = V >> u, i, ue, _, e, o
					> version: _/_/_/l/_/i/ch
					TRYING: i
					adding blocked set: V = V >> u, i, ue, _, e, o
					> version: l/i/c/_/_/h
					TRYING: h
					> version: l/i/c/_/_/h
					TRYING: h
					> version: l/i/ch/_/_
					> version: l/i/ch/_/_
					> version: _/l/i/_/_/c/h
					TRYING: c
					> version: _/l/i/_/_/c/h
					TRYING: c
					> version: _/l/i/_/_/ch
					TRYING: ch
					> version: _/l/i/_/_/ch
					TRYING: ch
					> version: l/_/i/_/_/c/h
					TRYING: c
					> version: l/_/i/_/_/c/h
					TRYING: c
					> version: l/_/i/_/_/ch
					TRYING: ch
					> version: l/_/i/_/_/ch
					TRYING: ch
					> version: _/_/l/_/_/i/c/h
					TRYING: i
					adding blocked set: V = V >> u, i, ue, _, e, o
					> version: _/_/l/_/_/i/c/h
					TRYING: i
					adding blocked set: V = V >> u, i, ue, _, e, o
					> version: _/_/l/_/_/i/ch
					TRYING: i
					adding blocked set: V = V >> u, i, ue, _, e, o
					> version: _/_/l/_/_/i/ch
					TRYING: i
					adding blocked set: V = V >> u, i, ue, _, e, o
					> version: l/i/_/_/_/c/h
					TRYING: c
					> version: l/i/_/_/_/c/h
					TRYING: c
					> version: l/i/_/_/_/ch
					TRYING: ch
					> version: l/i/_/_/_/ch
					TRYING: ch
					> version: _/l/_/_/_/i/c/h
					TRYING: i
					adding blocked set: V = V >> u, i, ue, _, e, o
					> version: _/l/_/_/_/i/c/h
					TRYING: i
					adding blocked set: V = V >> u, i, ue, _, e, o
					> version: _/l/_/_/_/i/ch
					TRYING: i
					adding blocked set: V = V >> u, i, ue, _, e, o
					> version: _/l/_/_/_/i/ch
					TRYING: i
					adding blocked set: V = V >> u, i, ue, _, e, o
					> version: l/_/_/_/_/i/c/h
					TRYING: i
					adding blocked set: V = V >> u, i, ue, _, e, o
					> version: l/_/_/_/_/i/c/h
					TRYING: i
					adding blocked set: V = V >> u, i, ue, _, e, o
					> version: l/_/_/_/_/i/ch
					TRYING: i
					adding blocked set: V = V >> u, i, ue, _, e, o
					> version: l/_/_/_/_/i/ch
					TRYING: i
					adding blocked set: V = V >> u, i, ue, _, e, o
					> version: _/_/_/_/_/l/i/c/h
					TRYING: l
					> version: _/_/_/_/_/l/i/c/h
					TRYING: l
					> version: _/_/_/_/_/l/i/ch
					TRYING: l
					> version: _/_/_/_/_/l/i/ch
					TRYING: l
					RESULT:  ['_']
				adding dashed alternative: ['l', 'i', 'c', 'h', '_']
				adding dashed alternative: ['l', 'i', 'c', 'h', '_']
				adding dashed alternative: ['l', 'i', 'ch', '_']
				adding dashed alternative: ['l', 'i', 'ch', '_']
				adding dashed alternative: ['_', 'l', 'i', 'c', 'h', '_']
				adding dashed alternative: ['_', 'l', 'i', 'c', 'h', '_']
				adding dashed alternative: ['_', 'l', 'i', 'ch', '_']
				adding dashed alternative: ['_', 'l', 'i', 'ch', '_']
				adding dashed alternative: ['l', '_', 'i', 'c', 'h', '_']
				adding dashed alternative: ['l', '_', 'i', 'c', 'h', '_']
				adding dashed alternative: ['l', '_', 'i', 'ch', '_']
				adding dashed alternative: ['l', '_', 'i', 'ch', '_']
				adding dashed alternative: ['_', '_', 'l', 'i', 'c', '_', 'h']
				adding dashed alternative: ['_', '_', 'l', 'i', 'c', '_', 'h']
				adding dashed alternative: ['_', '_', 'l', 'i', 'ch', '_']
				adding dashed alternative: ['_', '_', 'l', 'i', 'ch', '_']
				adding dashed alternative: ['l', 'i', '_', 'c', 'h', '_']
				adding dashed alternative: ['l', 'i', '_', 'c', 'h', '_']
				adding dashed alternative: ['l', 'i', '_', 'ch', '_']
				adding dashed alternative: ['l', 'i', '_', 'ch', '_']
				adding dashed alternative: ['_', 'l', '_', 'i', 'c', '_', 'h']
				adding dashed alternative: ['_', 'l', '_', 'i', 'c', '_', 'h']
				adding dashed alternative: ['_', 'l', '_', 'i', 'ch', '_']
				adding dashed alternative: ['_', 'l', '_', 'i', 'ch', '_']
				adding dashed alternative: ['l', '_', '_', 'i', 'c', '_', 'h']
				adding dashed alternative: ['l', '_', '_', 'i', 'c', '_', 'h']
				adding dashed alternative: ['l', '_', '_', 'i', 'ch', '_']
				adding dashed alternative: ['l', '_', '_', 'i', 'ch', '_']
				adding dashed alternative: ['_', '_', '_', 'l', 'i', '_', 'c', 'h']
				adding dashed alternative: ['_', '_', '_', 'l', 'i', '_', 'c', 'h']
				adding dashed alternative: ['_', '_', '_', 'l', 'i', '_', 'ch']
				adding dashed alternative: ['_', '_', '_', 'l', 'i', '_', 'ch']
				adding dashed alternative: ['l', 'i', 'c', '_', 'h', '_']
				adding dashed alternative: ['l', 'i', 'c', '_', 'h', '_']
				adding dashed alternative: ['l', 'i', 'ch', '_', '_']
				adding dashed alternative: ['l', 'i', 'ch', '_', '_']
				adding dashed alternative: ['_', 'l', 'i', '_', 'c', '_', 'h']
				adding dashed alternative: ['_', 'l', 'i', '_', 'c', '_', 'h']
				adding dashed alternative: ['_', 'l', 'i', '_', 'ch', '_']
				adding dashed alternative: ['_', 'l', 'i', '_', 'ch', '_']
				adding dashed alternative: ['l', '_', 'i', '_', 'c', '_', 'h']
				adding dashed alternative: ['l', '_', 'i', '_', 'c', '_', 'h']
				adding dashed alternative: ['l', '_', 'i', '_', 'ch', '_']
				adding dashed alternative: ['l', '_', 'i', '_', 'ch', '_']
				adding dashed alternative: ['_', '_', 'l', '_', 'i', '_', 'c', 'h']
				adding dashed alternative: ['_', '_', 'l', '_', 'i', '_', 'c', 'h']
				adding dashed alternative: ['_', '_', 'l', '_', 'i', '_', 'ch']
				adding dashed alternative: ['_', '_', 'l', '_', 'i', '_', 'ch']
				adding dashed alternative: ['l', 'i', '_', '_', 'c', '_', 'h']
				adding dashed alternative: ['l', 'i', '_', '_', 'c', '_', 'h']
				adding dashed alternative: ['l', 'i', '_', '_', 'ch', '_']
				adding dashed alternative: ['l', 'i', '_', '_', 'ch', '_']
				adding dashed alternative: ['_', 'l', '_', '_', 'i', '_', 'c', 'h']
				adding dashed alternative: ['_', 'l', '_', '_', 'i', '_', 'c', 'h']
				adding dashed alternative: ['_', 'l', '_', '_', 'i', '_', 'ch']
				adding dashed alternative: ['_', 'l', '_', '_', 'i', '_', 'ch']
				adding dashed alternative: ['l', '_', '_', '_', 'i', '_', 'c', 'h']
				adding dashed alternative: ['l', '_', '_', '_', 'i', '_', 'c', 'h']
				adding dashed alternative: ['l', '_', '_', '_', 'i', '_', 'ch']
				adding dashed alternative: ['l', '_', '_', '_', 'i', '_', 'ch']
				adding dashed alternative: ['_', '_', '_', '_', 'l', '_', 'i', 'c', 'h']
				adding dashed alternative: ['_', '_', '_', '_', 'l', '_', 'i', 'c', 'h']
				adding dashed alternative: ['_', '_', '_', '_', 'l', '_', 'i', 'ch']
				adding dashed alternative: ['_', '_', '_', '_', 'l', '_', 'i', 'ch']
				adding dashed alternative: ['l', 'i', 'c', 'h', '_', '_']
				adding dashed alternative: ['l', 'i', 'c', 'h', '_', '_']
				adding dashed alternative: ['l', 'i', 'ch', '_', '_']
				adding dashed alternative: ['l', 'i', 'ch', '_', '_']
				adding dashed alternative: ['_', 'l', 'i', 'c', '_', '_', 'h']
				adding dashed alternative: ['_', 'l', 'i', 'c', '_', '_', 'h']
				adding dashed alternative: ['_', 'l', 'i', 'ch', '_', '_']
				adding dashed alternative: ['_', 'l', 'i', 'ch', '_', '_']
				adding dashed alternative: ['l', '_', 'i', 'c', '_', '_', 'h']
				adding dashed alternative: ['l', '_', 'i', 'c', '_', '_', 'h']
				adding dashed alternative: ['l', '_', 'i', 'ch', '_', '_']
				adding dashed alternative: ['l', '_', 'i', 'ch', '_', '_']
				adding dashed alternative: ['_', '_', 'l', 'i', '_', '_', 'c', 'h']
				adding dashed alternative: ['_', '_', 'l', 'i', '_', '_', 'c', 'h']
				adding dashed alternative: ['_', '_', 'l', 'i', '_', '_', 'ch']
				adding dashed alternative: ['_', '_', 'l', 'i', '_', '_', 'ch']
				adding dashed alternative: ['l', 'i', '_', 'c', '_', '_', 'h']
				adding dashed alternative: ['l', 'i', '_', 'c', '_', '_', 'h']
				adding dashed alternative: ['l', 'i', '_', 'ch', '_', '_']
				adding dashed alternative: ['l', 'i', '_', 'ch', '_', '_']
				adding dashed alternative: ['_', 'l', '_', 'i', '_', '_', 'c', 'h']
				adding dashed alternative: ['_', 'l', '_', 'i', '_', '_', 'c', 'h']
				adding dashed alternative: ['_', 'l', '_', 'i', '_', '_', 'ch']
				adding dashed alternative: ['_', 'l', '_', 'i', '_', '_', 'ch']
				adding dashed alternative: ['l', '_', '_', 'i', '_', '_', 'c', 'h']
				adding dashed alternative: ['l', '_', '_', 'i', '_', '_', 'c', 'h']
				adding dashed alternative: ['l', '_', '_', 'i', '_', '_', 'ch']
				adding dashed alternative: ['l', '_', '_', 'i', '_', '_', 'ch']
				adding dashed alternative: ['_', '_', '_', 'l', '_', '_', 'i', 'c', 'h']
				adding dashed alternative: ['_', '_', '_', 'l', '_', '_', 'i', 'c', 'h']
				adding dashed alternative: ['_', '_', '_', 'l', '_', '_', 'i', 'ch']
				adding dashed alternative: ['_', '_', '_', 'l', '_', '_', 'i', 'ch']
				adding dashed alternative: ['l', 'i', 'c', '_', '_', '_', 'h']
				adding dashed alternative: ['l', 'i', 'c', '_', '_', '_', 'h']
				adding dashed alternative: ['l', 'i', 'ch', '_', '_', '_']
				adding dashed alternative: ['l', 'i', 'ch', '_', '_', '_']
				adding dashed alternative: ['_', 'l', 'i', '_', '_', '_', 'c', 'h']
				adding dashed alternative: ['_', 'l', 'i', '_', '_', '_', 'c', 'h']
				adding dashed alternative: ['_', 'l', 'i', '_', '_', '_', 'ch']
				adding dashed alternative: ['_', 'l', 'i', '_', '_', '_', 'ch']
				adding dashed alternative: ['l', '_', 'i', '_', '_', '_', 'c', 'h']
				adding dashed alternative: ['l', '_', 'i', '_', '_', '_', 'c', 'h']
				adding dashed alternative: ['l', '_', 'i', '_', '_', '_', 'ch']
				adding dashed alternative: ['l', '_', 'i', '_', '_', '_', 'ch']
				adding dashed alternative: ['_', '_', 'l', '_', '_', '_', 'i', 'c', 'h']
				adding dashed alternative: ['_', '_', 'l', '_', '_', '_', 'i', 'c', 'h']
				adding dashed alternative: ['_', '_', 'l', '_', '_', '_', 'i', 'ch']
				adding dashed alternative: ['_', '_', 'l', '_', '_', '_', 'i', 'ch']
				adding dashed alternative: ['l', 'i', '_', '_', '_', '_', 'c', 'h']
				adding dashed alternative: ['l', 'i', '_', '_', '_', '_', 'c', 'h']
				adding dashed alternative: ['l', 'i', '_', '_', '_', '_', 'ch']
				adding dashed alternative: ['l', 'i', '_', '_', '_', '_', 'ch']
				adding dashed alternative: ['_', 'l', '_', '_', '_', '_', 'i', 'c', 'h']
				adding dashed alternative: ['_', 'l', '_', '_', '_', '_', 'i', 'c', 'h']
				adding dashed alternative: ['_', 'l', '_', '_', '_', '_', 'i', 'ch']
				adding dashed alternative: ['_', 'l', '_', '_', '_', '_', 'i', 'ch']
				adding dashed alternative: ['l', '_', '_', '_', '_', '_', 'i', 'c', 'h']
				adding dashed alternative: ['l', '_', '_', '_', '_', '_', 'i', 'c', 'h']
				adding dashed alternative: ['l', '_', '_', '_', '_', '_', 'i', 'ch']
				adding dashed alternative: ['l', '_', '_', '_', '_', '_', 'i', 'ch']
				adding dashed alternative: ['_', '_', '_', '_', '_', '_', 'l', 'i', 'c', 'h']
				adding dashed alternative: ['_', '_', '_', '_', '_', '_', 'l', 'i', 'c', 'h']
				adding dashed alternative: ['_', '_', '_', '_', '_', '_', 'l', 'i', 'ch']
				adding dashed alternative: ['_', '_', '_', '_', '_', '_', 'l', 'i', 'ch']
				l/i/c/h(CCCC)
l/i/c/h(CVCC)
l/i/ch(CCC)
l/i/ch(CVC)
_/l/i/c/h(ACACC)
_/l/i/c/h(ACACC)
_/l/i/ch(ACAC)
_/l/i/ch(ACAC)
l/_/i/c/h(CAACC)
l/_/i/c/h(CAACC)
l/_/i/ch(CAAC)
l/_/i/ch(CAAC)
_/_/l/i/c/h(AACACC)
_/_/l/i/c/h(AACACC)
_/_/l/i/ch(AACAC)
_/_/l/i/ch(AACAC)
l/i/_/c/h(CAACC)
l/i/_/c/h(CAACC)
l/i/_/ch(CAAC)
l/i/_/ch(CAAC)
_/l/_/i/c/h(ACAACC)
_/l/_/i/c/h(ACAACC)
_/l/_/i/ch(ACAAC)
_/l/_/i/ch(ACAAC)
l/_/_/i/c/h(CAAACC)
l/_/_/i/c/h(CAAACC)
l/_/_/i/ch(CAAAC)
l/_/_/i/ch(CAAAC)
_/_/_/l/i/c/h(AAACACC)
_/_/_/l/i/c/h(AAACACC)
_/_/_/l/i/ch(AAACAC)
_/_/_/l/i/ch(AAACAC)
l/i/c/_/h(CACAC)
l/i/c/_/h(CACAC)
l/i/ch/_(CACA)
l/i/ch/_(CACA)
_/l/i/_/c/h(ACAACC)
_/l/i/_/c/h(ACAACC)
_/l/i/_/ch(ACAAC)
_/l/i/_/ch(ACAAC)
l/_/i/_/c/h(CAAACC)
l/_/i/_/c/h(CAAACC)
l/_/i/_/ch(CAAAC)
l/_/i/_/ch(CAAAC)
_/_/l/_/i/c/h(AACAACC)
_/_/l/_/i/c/h(AACAACC)
_/_/l/_/i/ch(AACAAC)
_/_/l/_/i/ch(AACAAC)
l/i/_/_/c/h(CAAACC)
l/i/_/_/c/h(CAAACC)
l/i/_/_/ch(CAAAC)
l/i/_/_/ch(CAAAC)
_/l/_/_/i/c/h(ACAAACC)
_/l/_/_/i/c/h(ACAAACC)
_/l/_/_/i/ch(ACAAAC)
_/l/_/_/i/ch(ACAAAC)
l/_/_/_/i/c/h(CAAAACC)
l/_/_/_/i/c/h(CAAAACC)
l/_/_/_/i/ch(CAAAAC)
l/_/_/_/i/ch(CAAAAC)
_/_/_/_/l/i/c/h(AAAACACC)
_/_/_/_/l/i/c/h(AAAACACC)
_/_/_/_/l/i/ch(AAAACAC)
_/_/_/_/l/i/ch(AAAACAC)
l/i/c/h/_(CACCA)
l/i/c/h/_(CACCA)
l/i/ch/_(CACA)
l/i/ch/_(CACA)
_/l/i/c/_/h(ACACAC)
_/l/i/c/_/h(ACACAC)
_/l/i/ch/_(ACACA)
_/l/i/ch/_(ACACA)
l/_/i/c/_/h(CAACAC)
l/_/i/c/_/h(CAACAC)
l/_/i/ch/_(CAACA)
l/_/i/ch/_(CAACA)
_/_/l/i/_/c/h(AACAACC)
_/_/l/i/_/c/h(AACAACC)
_/_/l/i/_/ch(AACAAC)
_/_/l/i/_/ch(AACAAC)
l/i/_/c/_/h(CAACAC)
l/i/_/c/_/h(CAACAC)
l/i/_/ch/_(CAACA)
l/i/_/ch/_(CAACA)
_/l/_/i/_/c/h(ACAAACC)
_/l/_/i/_/c/h(ACAAACC)
_/l/_/i/_/ch(ACAAAC)
_/l/_/i/_/ch(ACAAAC)
l/_/_/i/_/c/h(CAAAACC)
l/_/_/i/_/c/h(CAAAACC)
l/_/_/i/_/ch(CAAAAC)
l/_/_/i/_/ch(CAAAAC)
_/_/_/l/_/i/c/h(AAACAACC)
_/_/_/l/_/i/c/h(AAACAACC)
_/_/_/l/_/i/ch(AAACAAC)
_/_/_/l/_/i/ch(AAACAAC)
l/i/c/_/_/h(CACAAC)
l/i/c/_/_/h(CACAAC)
l/i/ch/_/_(CACAA)
l/i/ch/_/_(CACAA)
_/l/i/_/_/c/h(ACAAACC)
_/l/i/_/_/c/h(ACAAACC)
_/l/i/_/_/ch(ACAAAC)
_/l/i/_/_/ch(ACAAAC)
l/_/i/_/_/c/h(CAAAACC)
l/_/i/_/_/c/h(CAAAACC)
l/_/i/_/_/ch(CAAAAC)
l/_/i/_/_/ch(CAAAAC)
_/_/l/_/_/i/c/h(AACAAACC)
_/_/l/_/_/i/c/h(AACAAACC)
_/_/l/_/_/i/ch(AACAAAC)
_/_/l/_/_/i/ch(AACAAAC)
l/i/_/_/_/c/h(CAAAACC)
l/i/_/_/_/c/h(CAAAACC)
l/i/_/_/_/ch(CAAAAC)
l/i/_/_/_/ch(CAAAAC)
_/l/_/_/_/i/c/h(ACAAAACC)
_/l/_/_/_/i/c/h(ACAAAACC)
_/l/_/_/_/i/ch(ACAAAAC)
_/l/_/_/_/i/ch(ACAAAAC)
l/_/_/_/_/i/c/h(CAAAAACC)
l/_/_/_/_/i/c/h(CAAAAACC)
l/_/_/_/_/i/ch(CAAAAAC)
l/_/_/_/_/i/ch(CAAAAAC)
_/_/_/_/_/l/i/c/h(AAAAACACC)
_/_/_/_/_/l/i/c/h(AAAAACACC)
_/_/_/_/_/l/i/ch(AAAAACAC)
_/_/_/_/_/l/i/ch(AAAAACAC)
l/i/c/h/_(CACCA)
l/i/c/h/_(CACCA)
l/i/ch/_(CACA)
l/i/ch/_(CACA)
_/l/i/c/h/_(ACACCA)
_/l/i/c/h/_(ACACCA)
_/l/i/ch/_(ACACA)
_/l/i/ch/_(ACACA)
l/_/i/c/h/_(CAACCA)
l/_/i/c/h/_(CAACCA)
l/_/i/ch/_(CAACA)
l/_/i/ch/_(CAACA)
_/_/l/i/c/_/h(AACACAC)
_/_/l/i/c/_/h(AACACAC)
_/_/l/i/ch/_(AACACA)
_/_/l/i/ch/_(AACACA)
l/i/_/c/h/_(CAACCA)
l/i/_/c/h/_(CAACCA)
l/i/_/ch/_(CAACA)
l/i/_/ch/_(CAACA)
_/l/_/i/c/_/h(ACAACAC)
_/l/_/i/c/_/h(ACAACAC)
_/l/_/i/ch/_(ACAACA)
_/l/_/i/ch/_(ACAACA)
l/_/_/i/c/_/h(CAAACAC)
l/_/_/i/c/_/h(CAAACAC)
l/_/_/i/ch/_(CAAACA)
l/_/_/i/ch/_(CAAACA)
_/_/_/l/i/_/c/h(AAACAACC)
_/_/_/l/i/_/c/h(AAACAACC)
_/_/_/l/i/_/ch(AAACAAC)
_/_/_/l/i/_/ch(AAACAAC)
l/i/c/_/h/_(CACACA)
l/i/c/_/h/_(CACACA)
l/i/ch/_/_(CACAA)
l/i/ch/_/_(CACAA)
_/l/i/_/c/_/h(ACAACAC)
_/l/i/_/c/_/h(ACAACAC)
_/l/i/_/ch/_(ACAACA)
_/l/i/_/ch/_(ACAACA)
l/_/i/_/c/_/h(CAAACAC)
l/_/i/_/c/_/h(CAAACAC)
l/_/i/_/ch/_(CAAACA)
l/_/i/_/ch/_(CAAACA)
_/_/l/_/i/_/c/h(AACAAACC)
_/_/l/_/i/_/c/h(AACAAACC)
_/_/l/_/i/_/ch(AACAAAC)
_/_/l/_/i/_/ch(AACAAAC)
l/i/_/_/c/_/h(CAAACAC)
l/i/_/_/c/_/h(CAAACAC)
l/i/_/_/ch/_(CAAACA)
l/i/_/_/ch/_(CAAACA)
_/l/_/_/i/_/c/h(ACAAAACC)
_/l/_/_/i/_/c/h(ACAAAACC)
_/l/_/_/i/_/ch(ACAAAAC)
_/l/_/_/i/_/ch(ACAAAAC)
l/_/_/_/i/_/c/h(CAAAAACC)
l/_/_/_/i/_/c/h(CAAAAACC)
l/_/_/_/i/_/ch(CAAAAAC)
l/_/_/_/i/_/ch(CAAAAAC)
_/_/_/_/l/_/i/c/h(AAAACAACC)
_/_/_/_/l/_/i/c/h(AAAACAACC)
_/_/_/_/l/_/i/ch(AAAACAAC)
_/_/_/_/l/_/i/ch(AAAACAAC)
l/i/c/h/_/_(CACCAA)
l/i/c/h/_/_(CACCAA)
l/i/ch/_/_(CACAA)
l/i/ch/_/_(CACAA)
_/l/i/c/_/_/h(ACACAAC)
_/l/i/c/_/_/h(ACACAAC)
_/l/i/ch/_/_(ACACAA)
_/l/i/ch/_/_(ACACAA)
l/_/i/c/_/_/h(CAACAAC)
l/_/i/c/_/_/h(CAACAAC)
l/_/i/ch/_/_(CAACAA)
l/_/i/ch/_/_(CAACAA)
_/_/l/i/_/_/c/h(AACAAACC)
_/_/l/i/_/_/c/h(AACAAACC)
_/_/l/i/_/_/ch(AACAAAC)
_/_/l/i/_/_/ch(AACAAAC)
l/i/_/c/_/_/h(CAACAAC)
l/i/_/c/_/_/h(CAACAAC)
l/i/_/ch/_/_(CAACAA)
l/i/_/ch/_/_(CAACAA)
_/l/_/i/_/_/c/h(ACAAAACC)
_/l/_/i/_/_/c/h(ACAAAACC)
_/l/_/i/_/_/ch(ACAAAAC)
_/l/_/i/_/_/ch(ACAAAAC)
l/_/_/i/_/_/c/h(CAAAAACC)
l/_/_/i/_/_/c/h(CAAAAACC)
l/_/_/i/_/_/ch(CAAAAAC)
l/_/_/i/_/_/ch(CAAAAAC)
_/_/_/l/_/_/i/c/h(AAACAAACC)
_/_/_/l/_/_/i/c/h(AAACAAACC)
_/_/_/l/_/_/i/ch(AAACAAAC)
_/_/_/l/_/_/i/ch(AAACAAAC)
l/i/c/_/_/_/h(CACAAAC)
l/i/c/_/_/_/h(CACAAAC)
l/i/ch/_/_/_(CACAAA)
l/i/ch/_/_/_(CACAAA)
_/l/i/_/_/_/c/h(ACAAAACC)
_/l/i/_/_/_/c/h(ACAAAACC)
_/l/i/_/_/_/ch(ACAAAAC)
_/l/i/_/_/_/ch(ACAAAAC)
l/_/i/_/_/_/c/h(CAAAAACC)
l/_/i/_/_/_/c/h(CAAAAACC)
l/_/i/_/_/_/ch(CAAAAAC)
l/_/i/_/_/_/ch(CAAAAAC)
_/_/l/_/_/_/i/c/h(AACAAAACC)
_/_/l/_/_/_/i/c/h(AACAAAACC)
_/_/l/_/_/_/i/ch(AACAAAAC)
_/_/l/_/_/_/i/ch(AACAAAAC)
l/i/_/_/_/_/c/h(CAAAAACC)
l/i/_/_/_/_/c/h(CAAAAACC)
l/i/_/_/_/_/ch(CAAAAAC)
l/i/_/_/_/_/ch(CAAAAAC)
_/l/_/_/_/_/i/c/h(ACAAAAACC)
_/l/_/_/_/_/i/c/h(ACAAAAACC)
_/l/_/_/_/_/i/ch(ACAAAAAC)
_/l/_/_/_/_/i/ch(ACAAAAAC)
l/_/_/_/_/_/i/c/h(CAAAAAACC)
l/_/_/_/_/_/i/c/h(CAAAAAACC)
l/_/_/_/_/_/i/ch(CAAAAAAC)
l/_/_/_/_/_/i/ch(CAAAAAAC)
_/_/_/_/_/_/l/i/c/h(AAAAAACACC)
_/_/_/_/_/_/l/i/c/h(AAAAAACACC)
_/_/_/_/_/_/l/i/ch(AAAAAACAC)
_/_/_/_/_/_/l/i/ch(AAAAAACAC)
				version split: ['l', 'i', 'c', 'h']
				{'string': 'l/i/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', 'c', 'h']
				version split: ['l', 'i', 'c', 'h']
				{'string': 'l/i/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', 'c', 'h']
				version split: ['l', 'i', 'ch']
				{'string': 'l/i/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', 'ch']
				version split: ['l', 'i', 'ch']
				{'string': 'l/i/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', 'ch']
				version split: ['_', 'l', 'i', 'c', 'h']
				{'string': '_/l/i/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', 'i', 'c', 'h']
				version split: ['_', 'l', 'i', 'c', 'h']
				{'string': '_/l/i/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', 'i', 'c', 'h']
				version split: ['_', 'l', 'i', 'ch']
				{'string': '_/l/i/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', 'i', 'ch']
				version split: ['_', 'l', 'i', 'ch']
				{'string': '_/l/i/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', 'i', 'ch']
				version split: ['l', '_', 'i', 'c', 'h']
				{'string': 'l/_/i/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', 'i', 'c', 'h']
				version split: ['l', '_', 'i', 'c', 'h']
				{'string': 'l/_/i/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', 'i', 'c', 'h']
				version split: ['l', '_', 'i', 'ch']
				{'string': 'l/_/i/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', 'i', 'ch']
				version split: ['l', '_', 'i', 'ch']
				{'string': 'l/_/i/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', 'i', 'ch']
				version split: ['_', '_', 'l', 'i', 'c', 'h']
				{'string': '_/_/l/i/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'l', 'i', 'c', 'h']
				version split: ['_', '_', 'l', 'i', 'c', 'h']
				{'string': '_/_/l/i/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'l', 'i', 'c', 'h']
				version split: ['_', '_', 'l', 'i', 'ch']
				{'string': '_/_/l/i/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'l', 'i', 'ch']
				version split: ['_', '_', 'l', 'i', 'ch']
				{'string': '_/_/l/i/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'l', 'i', 'ch']
				version split: ['l', 'i', '_', 'c', 'h']
				{'string': 'l/i/_/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', '_', 'c', 'h']
				version split: ['l', 'i', '_', 'c', 'h']
				{'string': 'l/i/_/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', '_', 'c', 'h']
				version split: ['l', 'i', '_', 'ch']
				{'string': 'l/i/_/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', '_', 'ch']
				version split: ['l', 'i', '_', 'ch']
				{'string': 'l/i/_/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', '_', 'ch']
				version split: ['_', 'l', '_', 'i', 'c', 'h']
				{'string': '_/l/_/i/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', '_', 'i', 'c', 'h']
				version split: ['_', 'l', '_', 'i', 'c', 'h']
				{'string': '_/l/_/i/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', '_', 'i', 'c', 'h']
				version split: ['_', 'l', '_', 'i', 'ch']
				{'string': '_/l/_/i/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', '_', 'i', 'ch']
				version split: ['_', 'l', '_', 'i', 'ch']
				{'string': '_/l/_/i/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', '_', 'i', 'ch']
				version split: ['l', '_', '_', 'i', 'c', 'h']
				{'string': 'l/_/_/i/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', '_', 'i', 'c', 'h']
				version split: ['l', '_', '_', 'i', 'c', 'h']
				{'string': 'l/_/_/i/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', '_', 'i', 'c', 'h']
				version split: ['l', '_', '_', 'i', 'ch']
				{'string': 'l/_/_/i/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', '_', 'i', 'ch']
				version split: ['l', '_', '_', 'i', 'ch']
				{'string': 'l/_/_/i/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', '_', 'i', 'ch']
				version split: ['_', '_', '_', 'l', 'i', 'c', 'h']
				{'string': '_/_/_/l/i/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', 'l', 'i', 'c', 'h']
				version split: ['_', '_', '_', 'l', 'i', 'c', 'h']
				{'string': '_/_/_/l/i/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', 'l', 'i', 'c', 'h']
				version split: ['_', '_', '_', 'l', 'i', 'ch']
				{'string': '_/_/_/l/i/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', 'l', 'i', 'ch']
				version split: ['_', '_', '_', 'l', 'i', 'ch']
				{'string': '_/_/_/l/i/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', 'l', 'i', 'ch']
				version split: ['l', 'i', 'c', '_', 'h']
				{'string': 'l/i/c/_/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', 'c', '_', 'h']
				version split: ['l', 'i', 'c', '_', 'h']
				{'string': 'l/i/c/_/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', 'c', '_', 'h']
				version split: ['l', 'i', 'ch', '_']
				{'string': 'l/i/ch/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', 'ch', '_']
				version split: ['l', 'i', 'ch', '_']
				{'string': 'l/i/ch/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', 'ch', '_']
				version split: ['_', 'l', 'i', '_', 'c', 'h']
				{'string': '_/l/i/_/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', 'i', '_', 'c', 'h']
				version split: ['_', 'l', 'i', '_', 'c', 'h']
				{'string': '_/l/i/_/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', 'i', '_', 'c', 'h']
				version split: ['_', 'l', 'i', '_', 'ch']
				{'string': '_/l/i/_/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', 'i', '_', 'ch']
				version split: ['_', 'l', 'i', '_', 'ch']
				{'string': '_/l/i/_/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', 'i', '_', 'ch']
				version split: ['l', '_', 'i', '_', 'c', 'h']
				{'string': 'l/_/i/_/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', 'i', '_', 'c', 'h']
				version split: ['l', '_', 'i', '_', 'c', 'h']
				{'string': 'l/_/i/_/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', 'i', '_', 'c', 'h']
				version split: ['l', '_', 'i', '_', 'ch']
				{'string': 'l/_/i/_/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', 'i', '_', 'ch']
				version split: ['l', '_', 'i', '_', 'ch']
				{'string': 'l/_/i/_/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', 'i', '_', 'ch']
				version split: ['_', '_', 'l', '_', 'i', 'c', 'h']
				{'string': '_/_/l/_/i/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'l', '_', 'i', 'c', 'h']
				version split: ['_', '_', 'l', '_', 'i', 'c', 'h']
				{'string': '_/_/l/_/i/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'l', '_', 'i', 'c', 'h']
				version split: ['_', '_', 'l', '_', 'i', 'ch']
				{'string': '_/_/l/_/i/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'l', '_', 'i', 'ch']
				version split: ['_', '_', 'l', '_', 'i', 'ch']
				{'string': '_/_/l/_/i/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'l', '_', 'i', 'ch']
				version split: ['l', 'i', '_', '_', 'c', 'h']
				{'string': 'l/i/_/_/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', '_', '_', 'c', 'h']
				version split: ['l', 'i', '_', '_', 'c', 'h']
				{'string': 'l/i/_/_/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', '_', '_', 'c', 'h']
				version split: ['l', 'i', '_', '_', 'ch']
				{'string': 'l/i/_/_/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', '_', '_', 'ch']
				version split: ['l', 'i', '_', '_', 'ch']
				{'string': 'l/i/_/_/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', '_', '_', 'ch']
				version split: ['_', 'l', '_', '_', 'i', 'c', 'h']
				{'string': '_/l/_/_/i/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', '_', '_', 'i', 'c', 'h']
				version split: ['_', 'l', '_', '_', 'i', 'c', 'h']
				{'string': '_/l/_/_/i/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', '_', '_', 'i', 'c', 'h']
				version split: ['_', 'l', '_', '_', 'i', 'ch']
				{'string': '_/l/_/_/i/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', '_', '_', 'i', 'ch']
				version split: ['_', 'l', '_', '_', 'i', 'ch']
				{'string': '_/l/_/_/i/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', '_', '_', 'i', 'ch']
				version split: ['l', '_', '_', '_', 'i', 'c', 'h']
				{'string': 'l/_/_/_/i/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', '_', '_', 'i', 'c', 'h']
				version split: ['l', '_', '_', '_', 'i', 'c', 'h']
				{'string': 'l/_/_/_/i/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', '_', '_', 'i', 'c', 'h']
				version split: ['l', '_', '_', '_', 'i', 'ch']
				{'string': 'l/_/_/_/i/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', '_', '_', 'i', 'ch']
				version split: ['l', '_', '_', '_', 'i', 'ch']
				{'string': 'l/_/_/_/i/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', '_', '_', 'i', 'ch']
				version split: ['_', '_', '_', '_', 'l', 'i', 'c', 'h']
				{'string': '_/_/_/_/l/i/c', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', '_', 'l', 'i', 'c', 'h']
				version split: ['_', '_', '_', '_', 'l', 'i', 'c', 'h']
				{'string': '_/_/_/_/l/i/c', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', '_', 'l', 'i', 'c', 'h']
				version split: ['_', '_', '_', '_', 'l', 'i', 'ch']
				{'string': '_/_/_/_/l/i/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', '_', 'l', 'i', 'ch']
				version split: ['_', '_', '_', '_', 'l', 'i', 'ch']
				{'string': '_/_/_/_/l/i/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', '_', 'l', 'i', 'ch']
				version split: ['l', 'i', 'c', 'h', '_']
				{'string': 'l/i/c/h/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', 'c', 'h', '_']
				version split: ['l', 'i', 'c', 'h', '_']
				{'string': 'l/i/c/h/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', 'c', 'h', '_']
				version split: ['l', 'i', 'ch', '_']
				{'string': 'l/i/ch/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', 'ch', '_']
				version split: ['l', 'i', 'ch', '_']
				{'string': 'l/i/ch/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', 'ch', '_']
				version split: ['_', 'l', 'i', 'c', '_', 'h']
				{'string': '_/l/i/c/_/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', 'i', 'c', '_', 'h']
				version split: ['_', 'l', 'i', 'c', '_', 'h']
				{'string': '_/l/i/c/_/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', 'i', 'c', '_', 'h']
				version split: ['_', 'l', 'i', 'ch', '_']
				{'string': '_/l/i/ch/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', 'i', 'ch', '_']
				version split: ['_', 'l', 'i', 'ch', '_']
				{'string': '_/l/i/ch/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', 'i', 'ch', '_']
				version split: ['l', '_', 'i', 'c', '_', 'h']
				{'string': 'l/_/i/c/_/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', 'i', 'c', '_', 'h']
				version split: ['l', '_', 'i', 'c', '_', 'h']
				{'string': 'l/_/i/c/_/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', 'i', 'c', '_', 'h']
				version split: ['l', '_', 'i', 'ch', '_']
				{'string': 'l/_/i/ch/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', 'i', 'ch', '_']
				version split: ['l', '_', 'i', 'ch', '_']
				{'string': 'l/_/i/ch/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', 'i', 'ch', '_']
				version split: ['_', '_', 'l', 'i', '_', 'c', 'h']
				{'string': '_/_/l/i/_/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'l', 'i', '_', 'c', 'h']
				version split: ['_', '_', 'l', 'i', '_', 'c', 'h']
				{'string': '_/_/l/i/_/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'l', 'i', '_', 'c', 'h']
				version split: ['_', '_', 'l', 'i', '_', 'ch']
				{'string': '_/_/l/i/_/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'l', 'i', '_', 'ch']
				version split: ['_', '_', 'l', 'i', '_', 'ch']
				{'string': '_/_/l/i/_/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'l', 'i', '_', 'ch']
				version split: ['l', 'i', '_', 'c', '_', 'h']
				{'string': 'l/i/_/c/_/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', '_', 'c', '_', 'h']
				version split: ['l', 'i', '_', 'c', '_', 'h']
				{'string': 'l/i/_/c/_/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', '_', 'c', '_', 'h']
				version split: ['l', 'i', '_', 'ch', '_']
				{'string': 'l/i/_/ch/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', '_', 'ch', '_']
				version split: ['l', 'i', '_', 'ch', '_']
				{'string': 'l/i/_/ch/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', '_', 'ch', '_']
				version split: ['_', 'l', '_', 'i', '_', 'c', 'h']
				{'string': '_/l/_/i/_/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', '_', 'i', '_', 'c', 'h']
				version split: ['_', 'l', '_', 'i', '_', 'c', 'h']
				{'string': '_/l/_/i/_/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', '_', 'i', '_', 'c', 'h']
				version split: ['_', 'l', '_', 'i', '_', 'ch']
				{'string': '_/l/_/i/_/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', '_', 'i', '_', 'ch']
				version split: ['_', 'l', '_', 'i', '_', 'ch']
				{'string': '_/l/_/i/_/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', '_', 'i', '_', 'ch']
				version split: ['l', '_', '_', 'i', '_', 'c', 'h']
				{'string': 'l/_/_/i/_/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', '_', 'i', '_', 'c', 'h']
				version split: ['l', '_', '_', 'i', '_', 'c', 'h']
				{'string': 'l/_/_/i/_/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', '_', 'i', '_', 'c', 'h']
				version split: ['l', '_', '_', 'i', '_', 'ch']
				{'string': 'l/_/_/i/_/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', '_', 'i', '_', 'ch']
				version split: ['l', '_', '_', 'i', '_', 'ch']
				{'string': 'l/_/_/i/_/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', '_', 'i', '_', 'ch']
				version split: ['_', '_', '_', 'l', '_', 'i', 'c', 'h']
				{'string': '_/_/_/l/_/i/c', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', 'l', '_', 'i', 'c', 'h']
				version split: ['_', '_', '_', 'l', '_', 'i', 'c', 'h']
				{'string': '_/_/_/l/_/i/c', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', 'l', '_', 'i', 'c', 'h']
				version split: ['_', '_', '_', 'l', '_', 'i', 'ch']
				{'string': '_/_/_/l/_/i/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', 'l', '_', 'i', 'ch']
				version split: ['_', '_', '_', 'l', '_', 'i', 'ch']
				{'string': '_/_/_/l/_/i/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', 'l', '_', 'i', 'ch']
				version split: ['l', 'i', 'c', '_', '_', 'h']
				{'string': 'l/i/c/_/_/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', 'c', '_', '_', 'h']
				version split: ['l', 'i', 'c', '_', '_', 'h']
				{'string': 'l/i/c/_/_/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', 'c', '_', '_', 'h']
				version split: ['l', 'i', 'ch', '_', '_']
				{'string': 'l/i/ch/_/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', 'ch', '_', '_']
				version split: ['l', 'i', 'ch', '_', '_']
				{'string': 'l/i/ch/_/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', 'ch', '_', '_']
				version split: ['_', 'l', 'i', '_', '_', 'c', 'h']
				{'string': '_/l/i/_/_/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', 'i', '_', '_', 'c', 'h']
				version split: ['_', 'l', 'i', '_', '_', 'c', 'h']
				{'string': '_/l/i/_/_/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', 'i', '_', '_', 'c', 'h']
				version split: ['_', 'l', 'i', '_', '_', 'ch']
				{'string': '_/l/i/_/_/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', 'i', '_', '_', 'ch']
				version split: ['_', 'l', 'i', '_', '_', 'ch']
				{'string': '_/l/i/_/_/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', 'i', '_', '_', 'ch']
				version split: ['l', '_', 'i', '_', '_', 'c', 'h']
				{'string': 'l/_/i/_/_/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', 'i', '_', '_', 'c', 'h']
				version split: ['l', '_', 'i', '_', '_', 'c', 'h']
				{'string': 'l/_/i/_/_/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', 'i', '_', '_', 'c', 'h']
				version split: ['l', '_', 'i', '_', '_', 'ch']
				{'string': 'l/_/i/_/_/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', 'i', '_', '_', 'ch']
				version split: ['l', '_', 'i', '_', '_', 'ch']
				{'string': 'l/_/i/_/_/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', 'i', '_', '_', 'ch']
				version split: ['_', '_', 'l', '_', '_', 'i', 'c', 'h']
				{'string': '_/_/l/_/_/i/c', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'l', '_', '_', 'i', 'c', 'h']
				version split: ['_', '_', 'l', '_', '_', 'i', 'c', 'h']
				{'string': '_/_/l/_/_/i/c', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'l', '_', '_', 'i', 'c', 'h']
				version split: ['_', '_', 'l', '_', '_', 'i', 'ch']
				{'string': '_/_/l/_/_/i/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'l', '_', '_', 'i', 'ch']
				version split: ['_', '_', 'l', '_', '_', 'i', 'ch']
				{'string': '_/_/l/_/_/i/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'l', '_', '_', 'i', 'ch']
				version split: ['l', 'i', '_', '_', '_', 'c', 'h']
				{'string': 'l/i/_/_/_/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', '_', '_', '_', 'c', 'h']
				version split: ['l', 'i', '_', '_', '_', 'c', 'h']
				{'string': 'l/i/_/_/_/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', '_', '_', '_', 'c', 'h']
				version split: ['l', 'i', '_', '_', '_', 'ch']
				{'string': 'l/i/_/_/_/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', '_', '_', '_', 'ch']
				version split: ['l', 'i', '_', '_', '_', 'ch']
				{'string': 'l/i/_/_/_/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', '_', '_', '_', 'ch']
				version split: ['_', 'l', '_', '_', '_', 'i', 'c', 'h']
				{'string': '_/l/_/_/_/i/c', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', '_', '_', '_', 'i', 'c', 'h']
				version split: ['_', 'l', '_', '_', '_', 'i', 'c', 'h']
				{'string': '_/l/_/_/_/i/c', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', '_', '_', '_', 'i', 'c', 'h']
				version split: ['_', 'l', '_', '_', '_', 'i', 'ch']
				{'string': '_/l/_/_/_/i/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', '_', '_', '_', 'i', 'ch']
				version split: ['_', 'l', '_', '_', '_', 'i', 'ch']
				{'string': '_/l/_/_/_/i/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', '_', '_', '_', 'i', 'ch']
				version split: ['l', '_', '_', '_', '_', 'i', 'c', 'h']
				{'string': 'l/_/_/_/_/i/c', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', '_', '_', '_', 'i', 'c', 'h']
				version split: ['l', '_', '_', '_', '_', 'i', 'c', 'h']
				{'string': 'l/_/_/_/_/i/c', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', '_', '_', '_', 'i', 'c', 'h']
				version split: ['l', '_', '_', '_', '_', 'i', 'ch']
				{'string': 'l/_/_/_/_/i/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', '_', '_', '_', 'i', 'ch']
				version split: ['l', '_', '_', '_', '_', 'i', 'ch']
				{'string': 'l/_/_/_/_/i/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', '_', '_', '_', 'i', 'ch']
				version split: ['_', '_', '_', '_', '_', 'l', 'i', 'c', 'h']
				{'string': '_/_/_/_/_/l/i', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', '_', '_', 'l', 'i', 'c', 'h']
				version split: ['_', '_', '_', '_', '_', 'l', 'i', 'c', 'h']
				{'string': '_/_/_/_/_/l/i', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', '_', '_', 'l', 'i', 'c', 'h']
				version split: ['_', '_', '_', '_', '_', 'l', 'i', 'ch']
				{'string': '_/_/_/_/_/l/i', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', '_', '_', 'l', 'i', 'ch']
				version split: ['_', '_', '_', '_', '_', 'l', 'i', 'ch']
				{'string': '_/_/_/_/_/l/i', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', '_', '_', 'l', 'i', 'ch']
				version split: ['l', 'i', 'c', 'h', '_']
				{'string': 'l/i/c/h/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', 'c', 'h', '_']
				version split: ['l', 'i', 'c', 'h', '_']
				{'string': 'l/i/c/h/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', 'c', 'h', '_']
				version split: ['l', 'i', 'ch', '_']
				{'string': 'l/i/ch/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', 'ch', '_']
				version split: ['l', 'i', 'ch', '_']
				{'string': 'l/i/ch/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', 'ch', '_']
				version split: ['_', 'l', 'i', 'c', 'h', '_']
				{'string': '_/l/i/c/h/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', 'i', 'c', 'h', '_']
				version split: ['_', 'l', 'i', 'c', 'h', '_']
				{'string': '_/l/i/c/h/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', 'i', 'c', 'h', '_']
				version split: ['_', 'l', 'i', 'ch', '_']
				{'string': '_/l/i/ch/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', 'i', 'ch', '_']
				version split: ['_', 'l', 'i', 'ch', '_']
				{'string': '_/l/i/ch/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', 'i', 'ch', '_']
				version split: ['l', '_', 'i', 'c', 'h', '_']
				{'string': 'l/_/i/c/h/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', 'i', 'c', 'h', '_']
				version split: ['l', '_', 'i', 'c', 'h', '_']
				{'string': 'l/_/i/c/h/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', 'i', 'c', 'h', '_']
				version split: ['l', '_', 'i', 'ch', '_']
				{'string': 'l/_/i/ch/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', 'i', 'ch', '_']
				version split: ['l', '_', 'i', 'ch', '_']
				{'string': 'l/_/i/ch/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', 'i', 'ch', '_']
				version split: ['_', '_', 'l', 'i', 'c', '_', 'h']
				{'string': '_/_/l/i/c/_/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'l', 'i', 'c', '_', 'h']
				version split: ['_', '_', 'l', 'i', 'c', '_', 'h']
				{'string': '_/_/l/i/c/_/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'l', 'i', 'c', '_', 'h']
				version split: ['_', '_', 'l', 'i', 'ch', '_']
				{'string': '_/_/l/i/ch/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'l', 'i', 'ch', '_']
				version split: ['_', '_', 'l', 'i', 'ch', '_']
				{'string': '_/_/l/i/ch/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'l', 'i', 'ch', '_']
				version split: ['l', 'i', '_', 'c', 'h', '_']
				{'string': 'l/i/_/c/h/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', '_', 'c', 'h', '_']
				version split: ['l', 'i', '_', 'c', 'h', '_']
				{'string': 'l/i/_/c/h/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', '_', 'c', 'h', '_']
				version split: ['l', 'i', '_', 'ch', '_']
				{'string': 'l/i/_/ch/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', '_', 'ch', '_']
				version split: ['l', 'i', '_', 'ch', '_']
				{'string': 'l/i/_/ch/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', '_', 'ch', '_']
				version split: ['_', 'l', '_', 'i', 'c', '_', 'h']
				{'string': '_/l/_/i/c/_/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', '_', 'i', 'c', '_', 'h']
				version split: ['_', 'l', '_', 'i', 'c', '_', 'h']
				{'string': '_/l/_/i/c/_/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', '_', 'i', 'c', '_', 'h']
				version split: ['_', 'l', '_', 'i', 'ch', '_']
				{'string': '_/l/_/i/ch/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', '_', 'i', 'ch', '_']
				version split: ['_', 'l', '_', 'i', 'ch', '_']
				{'string': '_/l/_/i/ch/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', '_', 'i', 'ch', '_']
				version split: ['l', '_', '_', 'i', 'c', '_', 'h']
				{'string': 'l/_/_/i/c/_/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', '_', 'i', 'c', '_', 'h']
				version split: ['l', '_', '_', 'i', 'c', '_', 'h']
				{'string': 'l/_/_/i/c/_/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', '_', 'i', 'c', '_', 'h']
				version split: ['l', '_', '_', 'i', 'ch', '_']
				{'string': 'l/_/_/i/ch/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', '_', 'i', 'ch', '_']
				version split: ['l', '_', '_', 'i', 'ch', '_']
				{'string': 'l/_/_/i/ch/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', '_', 'i', 'ch', '_']
				version split: ['_', '_', '_', 'l', 'i', '_', 'c', 'h']
				{'string': '_/_/_/l/i/_/c', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', 'l', 'i', '_', 'c', 'h']
				version split: ['_', '_', '_', 'l', 'i', '_', 'c', 'h']
				{'string': '_/_/_/l/i/_/c', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', 'l', 'i', '_', 'c', 'h']
				version split: ['_', '_', '_', 'l', 'i', '_', 'ch']
				{'string': '_/_/_/l/i/_/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', 'l', 'i', '_', 'ch']
				version split: ['_', '_', '_', 'l', 'i', '_', 'ch']
				{'string': '_/_/_/l/i/_/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', 'l', 'i', '_', 'ch']
				version split: ['l', 'i', 'c', '_', 'h', '_']
				{'string': 'l/i/c/_/h/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', 'c', '_', 'h', '_']
				version split: ['l', 'i', 'c', '_', 'h', '_']
				{'string': 'l/i/c/_/h/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', 'c', '_', 'h', '_']
				version split: ['l', 'i', 'ch', '_', '_']
				{'string': 'l/i/ch/_/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', 'ch', '_', '_']
				version split: ['l', 'i', 'ch', '_', '_']
				{'string': 'l/i/ch/_/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', 'ch', '_', '_']
				version split: ['_', 'l', 'i', '_', 'c', '_', 'h']
				{'string': '_/l/i/_/c/_/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', 'i', '_', 'c', '_', 'h']
				version split: ['_', 'l', 'i', '_', 'c', '_', 'h']
				{'string': '_/l/i/_/c/_/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', 'i', '_', 'c', '_', 'h']
				version split: ['_', 'l', 'i', '_', 'ch', '_']
				{'string': '_/l/i/_/ch/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', 'i', '_', 'ch', '_']
				version split: ['_', 'l', 'i', '_', 'ch', '_']
				{'string': '_/l/i/_/ch/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', 'i', '_', 'ch', '_']
				version split: ['l', '_', 'i', '_', 'c', '_', 'h']
				{'string': 'l/_/i/_/c/_/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', 'i', '_', 'c', '_', 'h']
				version split: ['l', '_', 'i', '_', 'c', '_', 'h']
				{'string': 'l/_/i/_/c/_/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', 'i', '_', 'c', '_', 'h']
				version split: ['l', '_', 'i', '_', 'ch', '_']
				{'string': 'l/_/i/_/ch/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', 'i', '_', 'ch', '_']
				version split: ['l', '_', 'i', '_', 'ch', '_']
				{'string': 'l/_/i/_/ch/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', 'i', '_', 'ch', '_']
				version split: ['_', '_', 'l', '_', 'i', '_', 'c', 'h']
				{'string': '_/_/l/_/i/_/c', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'l', '_', 'i', '_', 'c', 'h']
				version split: ['_', '_', 'l', '_', 'i', '_', 'c', 'h']
				{'string': '_/_/l/_/i/_/c', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'l', '_', 'i', '_', 'c', 'h']
				version split: ['_', '_', 'l', '_', 'i', '_', 'ch']
				{'string': '_/_/l/_/i/_/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'l', '_', 'i', '_', 'ch']
				version split: ['_', '_', 'l', '_', 'i', '_', 'ch']
				{'string': '_/_/l/_/i/_/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'l', '_', 'i', '_', 'ch']
				version split: ['l', 'i', '_', '_', 'c', '_', 'h']
				{'string': 'l/i/_/_/c/_/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', '_', '_', 'c', '_', 'h']
				version split: ['l', 'i', '_', '_', 'c', '_', 'h']
				{'string': 'l/i/_/_/c/_/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', '_', '_', 'c', '_', 'h']
				version split: ['l', 'i', '_', '_', 'ch', '_']
				{'string': 'l/i/_/_/ch/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', '_', '_', 'ch', '_']
				version split: ['l', 'i', '_', '_', 'ch', '_']
				{'string': 'l/i/_/_/ch/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', '_', '_', 'ch', '_']
				version split: ['_', 'l', '_', '_', 'i', '_', 'c', 'h']
				{'string': '_/l/_/_/i/_/c', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', '_', '_', 'i', '_', 'c', 'h']
				version split: ['_', 'l', '_', '_', 'i', '_', 'c', 'h']
				{'string': '_/l/_/_/i/_/c', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', '_', '_', 'i', '_', 'c', 'h']
				version split: ['_', 'l', '_', '_', 'i', '_', 'ch']
				{'string': '_/l/_/_/i/_/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', '_', '_', 'i', '_', 'ch']
				version split: ['_', 'l', '_', '_', 'i', '_', 'ch']
				{'string': '_/l/_/_/i/_/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', '_', '_', 'i', '_', 'ch']
				version split: ['l', '_', '_', '_', 'i', '_', 'c', 'h']
				{'string': 'l/_/_/_/i/_/c', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', '_', '_', 'i', '_', 'c', 'h']
				version split: ['l', '_', '_', '_', 'i', '_', 'c', 'h']
				{'string': 'l/_/_/_/i/_/c', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', '_', '_', 'i', '_', 'c', 'h']
				version split: ['l', '_', '_', '_', 'i', '_', 'ch']
				{'string': 'l/_/_/_/i/_/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', '_', '_', 'i', '_', 'ch']
				version split: ['l', '_', '_', '_', 'i', '_', 'ch']
				{'string': 'l/_/_/_/i/_/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', '_', '_', 'i', '_', 'ch']
				version split: ['_', '_', '_', '_', 'l', '_', 'i', 'c', 'h']
				{'string': '_/_/_/_/l/_/i', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', '_', 'l', '_', 'i', 'c', 'h']
				version split: ['_', '_', '_', '_', 'l', '_', 'i', 'c', 'h']
				{'string': '_/_/_/_/l/_/i', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', '_', 'l', '_', 'i', 'c', 'h']
				version split: ['_', '_', '_', '_', 'l', '_', 'i', 'ch']
				{'string': '_/_/_/_/l/_/i', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', '_', 'l', '_', 'i', 'ch']
				version split: ['_', '_', '_', '_', 'l', '_', 'i', 'ch']
				{'string': '_/_/_/_/l/_/i', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', '_', 'l', '_', 'i', 'ch']
				version split: ['l', 'i', 'c', 'h', '_', '_']
				{'string': 'l/i/c/h/_/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', 'c', 'h', '_', '_']
				version split: ['l', 'i', 'c', 'h', '_', '_']
				{'string': 'l/i/c/h/_/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', 'c', 'h', '_', '_']
				version split: ['l', 'i', 'ch', '_', '_']
				{'string': 'l/i/ch/_/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', 'ch', '_', '_']
				version split: ['l', 'i', 'ch', '_', '_']
				{'string': 'l/i/ch/_/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', 'ch', '_', '_']
				version split: ['_', 'l', 'i', 'c', '_', '_', 'h']
				{'string': '_/l/i/c/_/_/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', 'i', 'c', '_', '_', 'h']
				version split: ['_', 'l', 'i', 'c', '_', '_', 'h']
				{'string': '_/l/i/c/_/_/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', 'i', 'c', '_', '_', 'h']
				version split: ['_', 'l', 'i', 'ch', '_', '_']
				{'string': '_/l/i/ch/_/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', 'i', 'ch', '_', '_']
				version split: ['_', 'l', 'i', 'ch', '_', '_']
				{'string': '_/l/i/ch/_/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', 'i', 'ch', '_', '_']
				version split: ['l', '_', 'i', 'c', '_', '_', 'h']
				{'string': 'l/_/i/c/_/_/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', 'i', 'c', '_', '_', 'h']
				version split: ['l', '_', 'i', 'c', '_', '_', 'h']
				{'string': 'l/_/i/c/_/_/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', 'i', 'c', '_', '_', 'h']
				version split: ['l', '_', 'i', 'ch', '_', '_']
				{'string': 'l/_/i/ch/_/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', 'i', 'ch', '_', '_']
				version split: ['l', '_', 'i', 'ch', '_', '_']
				{'string': 'l/_/i/ch/_/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', 'i', 'ch', '_', '_']
				version split: ['_', '_', 'l', 'i', '_', '_', 'c', 'h']
				{'string': '_/_/l/i/_/_/c', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'l', 'i', '_', '_', 'c', 'h']
				version split: ['_', '_', 'l', 'i', '_', '_', 'c', 'h']
				{'string': '_/_/l/i/_/_/c', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'l', 'i', '_', '_', 'c', 'h']
				version split: ['_', '_', 'l', 'i', '_', '_', 'ch']
				{'string': '_/_/l/i/_/_/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'l', 'i', '_', '_', 'ch']
				version split: ['_', '_', 'l', 'i', '_', '_', 'ch']
				{'string': '_/_/l/i/_/_/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'l', 'i', '_', '_', 'ch']
				version split: ['l', 'i', '_', 'c', '_', '_', 'h']
				{'string': 'l/i/_/c/_/_/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', '_', 'c', '_', '_', 'h']
				version split: ['l', 'i', '_', 'c', '_', '_', 'h']
				{'string': 'l/i/_/c/_/_/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', '_', 'c', '_', '_', 'h']
				version split: ['l', 'i', '_', 'ch', '_', '_']
				{'string': 'l/i/_/ch/_/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', '_', 'ch', '_', '_']
				version split: ['l', 'i', '_', 'ch', '_', '_']
				{'string': 'l/i/_/ch/_/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', '_', 'ch', '_', '_']
				version split: ['_', 'l', '_', 'i', '_', '_', 'c', 'h']
				{'string': '_/l/_/i/_/_/c', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', '_', 'i', '_', '_', 'c', 'h']
				version split: ['_', 'l', '_', 'i', '_', '_', 'c', 'h']
				{'string': '_/l/_/i/_/_/c', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', '_', 'i', '_', '_', 'c', 'h']
				version split: ['_', 'l', '_', 'i', '_', '_', 'ch']
				{'string': '_/l/_/i/_/_/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', '_', 'i', '_', '_', 'ch']
				version split: ['_', 'l', '_', 'i', '_', '_', 'ch']
				{'string': '_/l/_/i/_/_/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', '_', 'i', '_', '_', 'ch']
				version split: ['l', '_', '_', 'i', '_', '_', 'c', 'h']
				{'string': 'l/_/_/i/_/_/c', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', '_', 'i', '_', '_', 'c', 'h']
				version split: ['l', '_', '_', 'i', '_', '_', 'c', 'h']
				{'string': 'l/_/_/i/_/_/c', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', '_', 'i', '_', '_', 'c', 'h']
				version split: ['l', '_', '_', 'i', '_', '_', 'ch']
				{'string': 'l/_/_/i/_/_/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', '_', 'i', '_', '_', 'ch']
				version split: ['l', '_', '_', 'i', '_', '_', 'ch']
				{'string': 'l/_/_/i/_/_/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', '_', 'i', '_', '_', 'ch']
				version split: ['_', '_', '_', 'l', '_', '_', 'i', 'c', 'h']
				{'string': '_/_/_/l/_/_/i', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', 'l', '_', '_', 'i', 'c', 'h']
				version split: ['_', '_', '_', 'l', '_', '_', 'i', 'c', 'h']
				{'string': '_/_/_/l/_/_/i', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', 'l', '_', '_', 'i', 'c', 'h']
				version split: ['_', '_', '_', 'l', '_', '_', 'i', 'ch']
				{'string': '_/_/_/l/_/_/i', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', 'l', '_', '_', 'i', 'ch']
				version split: ['_', '_', '_', 'l', '_', '_', 'i', 'ch']
				{'string': '_/_/_/l/_/_/i', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', 'l', '_', '_', 'i', 'ch']
				version split: ['l', 'i', 'c', '_', '_', '_', 'h']
				{'string': 'l/i/c/_/_/_/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', 'c', '_', '_', '_', 'h']
				version split: ['l', 'i', 'c', '_', '_', '_', 'h']
				{'string': 'l/i/c/_/_/_/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', 'c', '_', '_', '_', 'h']
				version split: ['l', 'i', 'ch', '_', '_', '_']
				{'string': 'l/i/ch/_/_/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', 'ch', '_', '_', '_']
				version split: ['l', 'i', 'ch', '_', '_', '_']
				{'string': 'l/i/ch/_/_/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', 'ch', '_', '_', '_']
				version split: ['_', 'l', 'i', '_', '_', '_', 'c', 'h']
				{'string': '_/l/i/_/_/_/c', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', 'i', '_', '_', '_', 'c', 'h']
				version split: ['_', 'l', 'i', '_', '_', '_', 'c', 'h']
				{'string': '_/l/i/_/_/_/c', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', 'i', '_', '_', '_', 'c', 'h']
				version split: ['_', 'l', 'i', '_', '_', '_', 'ch']
				{'string': '_/l/i/_/_/_/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', 'i', '_', '_', '_', 'ch']
				version split: ['_', 'l', 'i', '_', '_', '_', 'ch']
				{'string': '_/l/i/_/_/_/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', 'i', '_', '_', '_', 'ch']
				version split: ['l', '_', 'i', '_', '_', '_', 'c', 'h']
				{'string': 'l/_/i/_/_/_/c', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', 'i', '_', '_', '_', 'c', 'h']
				version split: ['l', '_', 'i', '_', '_', '_', 'c', 'h']
				{'string': 'l/_/i/_/_/_/c', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', 'i', '_', '_', '_', 'c', 'h']
				version split: ['l', '_', 'i', '_', '_', '_', 'ch']
				{'string': 'l/_/i/_/_/_/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', 'i', '_', '_', '_', 'ch']
				version split: ['l', '_', 'i', '_', '_', '_', 'ch']
				{'string': 'l/_/i/_/_/_/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', 'i', '_', '_', '_', 'ch']
				version split: ['_', '_', 'l', '_', '_', '_', 'i', 'c', 'h']
				{'string': '_/_/l/_/_/_/i', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'l', '_', '_', '_', 'i', 'c', 'h']
				version split: ['_', '_', 'l', '_', '_', '_', 'i', 'c', 'h']
				{'string': '_/_/l/_/_/_/i', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'l', '_', '_', '_', 'i', 'c', 'h']
				version split: ['_', '_', 'l', '_', '_', '_', 'i', 'ch']
				{'string': '_/_/l/_/_/_/i', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'l', '_', '_', '_', 'i', 'ch']
				version split: ['_', '_', 'l', '_', '_', '_', 'i', 'ch']
				{'string': '_/_/l/_/_/_/i', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'l', '_', '_', '_', 'i', 'ch']
				version split: ['l', 'i', '_', '_', '_', '_', 'c', 'h']
				{'string': 'l/i/_/_/_/_/c', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', '_', '_', '_', '_', 'c', 'h']
				version split: ['l', 'i', '_', '_', '_', '_', 'c', 'h']
				{'string': 'l/i/_/_/_/_/c', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', '_', '_', '_', '_', 'c', 'h']
				version split: ['l', 'i', '_', '_', '_', '_', 'ch']
				{'string': 'l/i/_/_/_/_/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', '_', '_', '_', '_', 'ch']
				version split: ['l', 'i', '_', '_', '_', '_', 'ch']
				{'string': 'l/i/_/_/_/_/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', '_', '_', '_', '_', 'ch']
				version split: ['_', 'l', '_', '_', '_', '_', 'i', 'c', 'h']
				{'string': '_/l/_/_/_/_/i', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', '_', '_', '_', '_', 'i', 'c', 'h']
				version split: ['_', 'l', '_', '_', '_', '_', 'i', 'c', 'h']
				{'string': '_/l/_/_/_/_/i', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', '_', '_', '_', '_', 'i', 'c', 'h']
				version split: ['_', 'l', '_', '_', '_', '_', 'i', 'ch']
				{'string': '_/l/_/_/_/_/i', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', '_', '_', '_', '_', 'i', 'ch']
				version split: ['_', 'l', '_', '_', '_', '_', 'i', 'ch']
				{'string': '_/l/_/_/_/_/i', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', '_', '_', '_', '_', 'i', 'ch']
				version split: ['l', '_', '_', '_', '_', '_', 'i', 'c', 'h']
				{'string': 'l/_/_/_/_/_/i', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', '_', '_', '_', '_', 'i', 'c', 'h']
				version split: ['l', '_', '_', '_', '_', '_', 'i', 'c', 'h']
				{'string': 'l/_/_/_/_/_/i', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', '_', '_', '_', '_', 'i', 'c', 'h']
				version split: ['l', '_', '_', '_', '_', '_', 'i', 'ch']
				{'string': 'l/_/_/_/_/_/i', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', '_', '_', '_', '_', 'i', 'ch']
				version split: ['l', '_', '_', '_', '_', '_', 'i', 'ch']
				{'string': 'l/_/_/_/_/_/i', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', '_', '_', '_', '_', 'i', 'ch']
				version split: ['_', '_', '_', '_', '_', '_', 'l', 'i', 'c', 'h']
				{'string': '_/_/_/_/_/_/l', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', '_', '_', '_', 'l', 'i', 'c', 'h']
				version split: ['_', '_', '_', '_', '_', '_', 'l', 'i', 'c', 'h']
				{'string': '_/_/_/_/_/_/l', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', '_', '_', '_', 'l', 'i', 'c', 'h']
				version split: ['_', '_', '_', '_', '_', '_', 'l', 'i', 'ch']
				{'string': '_/_/_/_/_/_/l', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', '_', '_', '_', 'l', 'i', 'ch']
				version split: ['_', '_', '_', '_', '_', '_', 'l', 'i', 'ch']
				{'string': '_/_/_/_/_/_/l', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', '_', '_', '_', 'l', 'i', 'ch']
				ANALYSING: liche
					resolving (128)
					> version: l/i/c/h/e
					> version: l/i/c/h/e
					> version: l/i/ch/e
					> version: l/i/ch/e
					> version: _/l/i/c/h/e
					TRYING: e
					> version: _/l/i/c/h/e
					TRYING: e
					> version: _/l/i/ch/e
					> version: _/l/i/ch/e
					> version: l/_/i/c/h/e
					TRYING: e
					> version: l/_/i/c/h/e
					TRYING: e
					> version: l/_/i/ch/e
					> version: l/_/i/ch/e
					> version: _/_/l/i/c/h/e
					TRYING: h
					> version: _/_/l/i/c/h/e
					TRYING: h
					> version: _/_/l/i/ch/e
					TRYING: e
					> version: _/_/l/i/ch/e
					TRYING: e
					> version: l/i/_/c/h/e
					TRYING: e
					> version: l/i/_/c/h/e
					TRYING: e
					> version: l/i/_/ch/e
					> version: l/i/_/ch/e
					> version: _/l/_/i/c/h/e
					TRYING: h
					> version: _/l/_/i/c/h/e
					TRYING: h
					> version: _/l/_/i/ch/e
					TRYING: e
					> version: _/l/_/i/ch/e
					TRYING: e
					> version: l/_/_/i/c/h/e
					TRYING: h
					> version: l/_/_/i/c/h/e
					TRYING: h
					> version: l/_/_/i/ch/e
					TRYING: e
					> version: l/_/_/i/ch/e
					TRYING: e
					> version: _/_/_/l/i/c/h/e
					TRYING: c
					> version: _/_/_/l/i/c/h/e
					TRYING: c
					> version: _/_/_/l/i/ch/e
					TRYING: ch
					> version: _/_/_/l/i/ch/e
					TRYING: ch
					> version: l/i/c/_/h/e
					TRYING: e
					> version: l/i/c/_/h/e
					TRYING: e
					> version: l/i/ch/_/e
					> version: l/i/ch/_/e
					> version: _/l/i/_/c/h/e
					TRYING: h
					> version: _/l/i/_/c/h/e
					TRYING: h
					> version: _/l/i/_/ch/e
					TRYING: e
					> version: _/l/i/_/ch/e
					TRYING: e
					> version: l/_/i/_/c/h/e
					TRYING: h
					> version: l/_/i/_/c/h/e
					TRYING: h
					> version: l/_/i/_/ch/e
					TRYING: e
					> version: l/_/i/_/ch/e
					TRYING: e
					> version: _/_/l/_/i/c/h/e
					TRYING: c
					> version: _/_/l/_/i/c/h/e
					TRYING: c
					> version: _/_/l/_/i/ch/e
					TRYING: ch
					> version: _/_/l/_/i/ch/e
					TRYING: ch
					> version: l/i/_/_/c/h/e
					TRYING: h
					> version: l/i/_/_/c/h/e
					TRYING: h
					> version: l/i/_/_/ch/e
					TRYING: e
					> version: l/i/_/_/ch/e
					TRYING: e
					> version: _/l/_/_/i/c/h/e
					TRYING: c
					> version: _/l/_/_/i/c/h/e
					TRYING: c
					> version: _/l/_/_/i/ch/e
					TRYING: ch
					> version: _/l/_/_/i/ch/e
					TRYING: ch
					> version: l/_/_/_/i/c/h/e
					TRYING: c
					> version: l/_/_/_/i/c/h/e
					TRYING: c
					> version: l/_/_/_/i/ch/e
					TRYING: ch
					> version: l/_/_/_/i/ch/e
					TRYING: ch
					> version: _/_/_/_/l/i/c/h/e
					TRYING: i
					adding blocked set: V = V >> u, i, ue, _, e, o
					> version: _/_/_/_/l/i/c/h/e
					TRYING: i
					adding blocked set: V = V >> u, i, ue, _, e, o
					> version: _/_/_/_/l/i/ch/e
					TRYING: i
					adding blocked set: V = V >> u, i, ue, _, e, o
					> version: _/_/_/_/l/i/ch/e
					TRYING: i
					adding blocked set: V = V >> u, i, ue, _, e, o
					> version: l/i/c/h/_/e
					TRYING: e
					> version: l/i/c/h/_/e
					TRYING: e
					> version: l/i/ch/e/_
					> version: l/i/ch/e/_
					> version: _/l/i/c/_/h/e
					TRYING: h
					> version: _/l/i/c/_/h/e
					TRYING: h
					> version: _/l/i/ch/_/e
					TRYING: e
					> version: _/l/i/ch/_/e
					TRYING: e
					> version: l/_/i/c/_/h/e
					TRYING: h
					> version: l/_/i/c/_/h/e
					TRYING: h
					> version: l/_/i/ch/_/e
					TRYING: e
					> version: l/_/i/ch/_/e
					TRYING: e
					> version: _/_/l/i/_/c/h/e
					TRYING: c
					> version: _/_/l/i/_/c/h/e
					TRYING: c
					> version: _/_/l/i/_/ch/e
					TRYING: ch
					> version: _/_/l/i/_/ch/e
					TRYING: ch
					> version: l/i/_/c/_/h/e
					TRYING: h
					> version: l/i/_/c/_/h/e
					TRYING: h
					> version: l/i/_/ch/_/e
					TRYING: e
					> version: l/i/_/ch/_/e
					TRYING: e
					> version: _/l/_/i/_/c/h/e
					TRYING: c
					> version: _/l/_/i/_/c/h/e
					TRYING: c
					> version: _/l/_/i/_/ch/e
					TRYING: ch
					> version: _/l/_/i/_/ch/e
					TRYING: ch
					> version: l/_/_/i/_/c/h/e
					TRYING: c
					> version: l/_/_/i/_/c/h/e
					TRYING: c
					> version: l/_/_/i/_/ch/e
					TRYING: ch
					> version: l/_/_/i/_/ch/e
					TRYING: ch
					> version: _/_/_/l/_/i/c/h/e
					TRYING: i
					adding blocked set: V = V >> u, i, ue, _, e, o
					> version: _/_/_/l/_/i/c/h/e
					TRYING: i
					adding blocked set: V = V >> u, i, ue, _, e, o
					> version: _/_/_/l/_/i/ch/e
					TRYING: i
					adding blocked set: V = V >> u, i, ue, _, e, o
					> version: _/_/_/l/_/i/ch/e
					TRYING: i
					adding blocked set: V = V >> u, i, ue, _, e, o
					> version: l/i/c/_/_/h/e
					TRYING: h
					> version: l/i/c/_/_/h/e
					TRYING: h
					> version: l/i/ch/_/_/e
					TRYING: e
					> version: l/i/ch/_/_/e
					TRYING: e
					> version: _/l/i/_/_/c/h/e
					TRYING: c
					> version: _/l/i/_/_/c/h/e
					TRYING: c
					> version: _/l/i/_/_/ch/e
					TRYING: ch
					> version: _/l/i/_/_/ch/e
					TRYING: ch
					> version: l/_/i/_/_/c/h/e
					TRYING: c
					> version: l/_/i/_/_/c/h/e
					TRYING: c
					> version: l/_/i/_/_/ch/e
					TRYING: ch
					> version: l/_/i/_/_/ch/e
					TRYING: ch
					> version: _/_/l/_/_/i/c/h/e
					TRYING: i
					adding blocked set: V = V >> u, i, ue, _, e, o
					> version: _/_/l/_/_/i/c/h/e
					TRYING: i
					adding blocked set: V = V >> u, i, ue, _, e, o
					> version: _/_/l/_/_/i/ch/e
					TRYING: i
					adding blocked set: V = V >> u, i, ue, _, e, o
					> version: _/_/l/_/_/i/ch/e
					TRYING: i
					adding blocked set: V = V >> u, i, ue, _, e, o
					> version: l/i/_/_/_/c/h/e
					TRYING: c
					> version: l/i/_/_/_/c/h/e
					TRYING: c
					> version: l/i/_/_/_/ch/e
					TRYING: ch
					> version: l/i/_/_/_/ch/e
					TRYING: ch
					> version: _/l/_/_/_/i/c/h/e
					TRYING: i
					adding blocked set: V = V >> u, i, ue, _, e, o
					> version: _/l/_/_/_/i/c/h/e
					TRYING: i
					adding blocked set: V = V >> u, i, ue, _, e, o
					> version: _/l/_/_/_/i/ch/e
					TRYING: i
					adding blocked set: V = V >> u, i, ue, _, e, o
					> version: _/l/_/_/_/i/ch/e
					TRYING: i
					adding blocked set: V = V >> u, i, ue, _, e, o
					> version: l/_/_/_/_/i/c/h/e
					TRYING: i
					adding blocked set: V = V >> u, i, ue, _, e, o
					> version: l/_/_/_/_/i/c/h/e
					TRYING: i
					adding blocked set: V = V >> u, i, ue, _, e, o
					> version: l/_/_/_/_/i/ch/e
					TRYING: i
					adding blocked set: V = V >> u, i, ue, _, e, o
					> version: l/_/_/_/_/i/ch/e
					TRYING: i
					adding blocked set: V = V >> u, i, ue, _, e, o
					> version: _/_/_/_/_/l/i/c/h/e
					TRYING: l
					> version: _/_/_/_/_/l/i/c/h/e
					TRYING: l
					> version: _/_/_/_/_/l/i/ch/e
					TRYING: l
					> version: _/_/_/_/_/l/i/ch/e
					TRYING: l
					RESULT:  ['e']
				version split: ['l', 'i', 'c', 'h', 'e']
				{'string': 'l/i/c/h/e', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['l', 'i', 'c', 'h', 'e']
				version split: ['l', 'i', 'c', 'h', 'e']
				{'string': 'l/i/c/h/e', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['l', 'i', 'c', 'h', 'e']
				version split: ['l', 'i', 'ch', 'e']
				{'string': 'l/i/ch/e', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['l', 'i', 'ch', 'e']
				version split: ['l', 'i', 'ch', 'e']
				{'string': 'l/i/ch/e', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['l', 'i', 'ch', 'e']
				version split: ['_', 'l', 'i', 'c', 'h', 'e']
				{'string': '_/l/i/c/h/e', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['_', 'l', 'i', 'c', 'h', 'e']
				version split: ['_', 'l', 'i', 'c', 'h', 'e']
				{'string': '_/l/i/c/h/e', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['_', 'l', 'i', 'c', 'h', 'e']
				version split: ['_', 'l', 'i', 'ch', 'e']
				{'string': '_/l/i/ch/e', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['_', 'l', 'i', 'ch', 'e']
				version split: ['_', 'l', 'i', 'ch', 'e']
				{'string': '_/l/i/ch/e', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['_', 'l', 'i', 'ch', 'e']
				version split: ['l', '_', 'i', 'c', 'h', 'e']
				{'string': 'l/_/i/c/h/e', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['l', '_', 'i', 'c', 'h', 'e']
				version split: ['l', '_', 'i', 'c', 'h', 'e']
				{'string': 'l/_/i/c/h/e', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['l', '_', 'i', 'c', 'h', 'e']
				version split: ['l', '_', 'i', 'ch', 'e']
				{'string': 'l/_/i/ch/e', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['l', '_', 'i', 'ch', 'e']
				version split: ['l', '_', 'i', 'ch', 'e']
				{'string': 'l/_/i/ch/e', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['l', '_', 'i', 'ch', 'e']
				version split: ['_', '_', 'l', 'i', 'c', 'h', 'e']
				{'string': '_/_/l/i/c/h/e', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['_', '_', 'l', 'i', 'c', 'h', 'e']
				version split: ['_', '_', 'l', 'i', 'c', 'h', 'e']
				{'string': '_/_/l/i/c/h/e', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['_', '_', 'l', 'i', 'c', 'h', 'e']
				version split: ['_', '_', 'l', 'i', 'ch', 'e']
				{'string': '_/_/l/i/ch/e', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['_', '_', 'l', 'i', 'ch', 'e']
				version split: ['_', '_', 'l', 'i', 'ch', 'e']
				{'string': '_/_/l/i/ch/e', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['_', '_', 'l', 'i', 'ch', 'e']
				version split: ['l', 'i', '_', 'c', 'h', 'e']
				{'string': 'l/i/_/c/h/e', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['l', 'i', '_', 'c', 'h', 'e']
				version split: ['l', 'i', '_', 'c', 'h', 'e']
				{'string': 'l/i/_/c/h/e', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['l', 'i', '_', 'c', 'h', 'e']
				version split: ['l', 'i', '_', 'ch', 'e']
				{'string': 'l/i/_/ch/e', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['l', 'i', '_', 'ch', 'e']
				version split: ['l', 'i', '_', 'ch', 'e']
				{'string': 'l/i/_/ch/e', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['l', 'i', '_', 'ch', 'e']
				version split: ['_', 'l', '_', 'i', 'c', 'h', 'e']
				{'string': '_/l/_/i/c/h/e', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['_', 'l', '_', 'i', 'c', 'h', 'e']
				version split: ['_', 'l', '_', 'i', 'c', 'h', 'e']
				{'string': '_/l/_/i/c/h/e', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['_', 'l', '_', 'i', 'c', 'h', 'e']
				version split: ['_', 'l', '_', 'i', 'ch', 'e']
				{'string': '_/l/_/i/ch/e', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['_', 'l', '_', 'i', 'ch', 'e']
				version split: ['_', 'l', '_', 'i', 'ch', 'e']
				{'string': '_/l/_/i/ch/e', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['_', 'l', '_', 'i', 'ch', 'e']
				version split: ['l', '_', '_', 'i', 'c', 'h', 'e']
				{'string': 'l/_/_/i/c/h/e', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['l', '_', '_', 'i', 'c', 'h', 'e']
				version split: ['l', '_', '_', 'i', 'c', 'h', 'e']
				{'string': 'l/_/_/i/c/h/e', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['l', '_', '_', 'i', 'c', 'h', 'e']
				version split: ['l', '_', '_', 'i', 'ch', 'e']
				{'string': 'l/_/_/i/ch/e', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['l', '_', '_', 'i', 'ch', 'e']
				version split: ['l', '_', '_', 'i', 'ch', 'e']
				{'string': 'l/_/_/i/ch/e', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['l', '_', '_', 'i', 'ch', 'e']
				version split: ['_', '_', '_', 'l', 'i', 'c', 'h', 'e']
				{'string': '_/_/_/l/i/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['_', '_', '_', 'l', 'i', 'c', 'h', 'e']
				version split: ['_', '_', '_', 'l', 'i', 'c', 'h', 'e']
				{'string': '_/_/_/l/i/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['_', '_', '_', 'l', 'i', 'c', 'h', 'e']
				version split: ['_', '_', '_', 'l', 'i', 'ch', 'e']
				{'string': '_/_/_/l/i/ch/e', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['_', '_', '_', 'l', 'i', 'ch', 'e']
				version split: ['_', '_', '_', 'l', 'i', 'ch', 'e']
				{'string': '_/_/_/l/i/ch/e', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['_', '_', '_', 'l', 'i', 'ch', 'e']
				version split: ['l', 'i', 'c', '_', 'h', 'e']
				{'string': 'l/i/c/_/h/e', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['l', 'i', 'c', '_', 'h', 'e']
				version split: ['l', 'i', 'c', '_', 'h', 'e']
				{'string': 'l/i/c/_/h/e', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['l', 'i', 'c', '_', 'h', 'e']
				version split: ['l', 'i', 'ch', '_', 'e']
				{'string': 'l/i/ch/_/e', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['l', 'i', 'ch', '_', 'e']
				version split: ['l', 'i', 'ch', '_', 'e']
				{'string': 'l/i/ch/_/e', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['l', 'i', 'ch', '_', 'e']
				version split: ['_', 'l', 'i', '_', 'c', 'h', 'e']
				{'string': '_/l/i/_/c/h/e', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['_', 'l', 'i', '_', 'c', 'h', 'e']
				version split: ['_', 'l', 'i', '_', 'c', 'h', 'e']
				{'string': '_/l/i/_/c/h/e', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['_', 'l', 'i', '_', 'c', 'h', 'e']
				version split: ['_', 'l', 'i', '_', 'ch', 'e']
				{'string': '_/l/i/_/ch/e', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['_', 'l', 'i', '_', 'ch', 'e']
				version split: ['_', 'l', 'i', '_', 'ch', 'e']
				{'string': '_/l/i/_/ch/e', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['_', 'l', 'i', '_', 'ch', 'e']
				version split: ['l', '_', 'i', '_', 'c', 'h', 'e']
				{'string': 'l/_/i/_/c/h/e', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['l', '_', 'i', '_', 'c', 'h', 'e']
				version split: ['l', '_', 'i', '_', 'c', 'h', 'e']
				{'string': 'l/_/i/_/c/h/e', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['l', '_', 'i', '_', 'c', 'h', 'e']
				version split: ['l', '_', 'i', '_', 'ch', 'e']
				{'string': 'l/_/i/_/ch/e', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['l', '_', 'i', '_', 'ch', 'e']
				version split: ['l', '_', 'i', '_', 'ch', 'e']
				{'string': 'l/_/i/_/ch/e', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['l', '_', 'i', '_', 'ch', 'e']
				version split: ['_', '_', 'l', '_', 'i', 'c', 'h', 'e']
				{'string': '_/_/l/_/i/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['_', '_', 'l', '_', 'i', 'c', 'h', 'e']
				version split: ['_', '_', 'l', '_', 'i', 'c', 'h', 'e']
				{'string': '_/_/l/_/i/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['_', '_', 'l', '_', 'i', 'c', 'h', 'e']
				version split: ['_', '_', 'l', '_', 'i', 'ch', 'e']
				{'string': '_/_/l/_/i/ch/e', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['_', '_', 'l', '_', 'i', 'ch', 'e']
				version split: ['_', '_', 'l', '_', 'i', 'ch', 'e']
				{'string': '_/_/l/_/i/ch/e', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['_', '_', 'l', '_', 'i', 'ch', 'e']
				version split: ['l', 'i', '_', '_', 'c', 'h', 'e']
				{'string': 'l/i/_/_/c/h/e', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['l', 'i', '_', '_', 'c', 'h', 'e']
				version split: ['l', 'i', '_', '_', 'c', 'h', 'e']
				{'string': 'l/i/_/_/c/h/e', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['l', 'i', '_', '_', 'c', 'h', 'e']
				version split: ['l', 'i', '_', '_', 'ch', 'e']
				{'string': 'l/i/_/_/ch/e', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['l', 'i', '_', '_', 'ch', 'e']
				version split: ['l', 'i', '_', '_', 'ch', 'e']
				{'string': 'l/i/_/_/ch/e', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['l', 'i', '_', '_', 'ch', 'e']
				version split: ['_', 'l', '_', '_', 'i', 'c', 'h', 'e']
				{'string': '_/l/_/_/i/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['_', 'l', '_', '_', 'i', 'c', 'h', 'e']
				version split: ['_', 'l', '_', '_', 'i', 'c', 'h', 'e']
				{'string': '_/l/_/_/i/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['_', 'l', '_', '_', 'i', 'c', 'h', 'e']
				version split: ['_', 'l', '_', '_', 'i', 'ch', 'e']
				{'string': '_/l/_/_/i/ch/e', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['_', 'l', '_', '_', 'i', 'ch', 'e']
				version split: ['_', 'l', '_', '_', 'i', 'ch', 'e']
				{'string': '_/l/_/_/i/ch/e', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['_', 'l', '_', '_', 'i', 'ch', 'e']
				version split: ['l', '_', '_', '_', 'i', 'c', 'h', 'e']
				{'string': 'l/_/_/_/i/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['l', '_', '_', '_', 'i', 'c', 'h', 'e']
				version split: ['l', '_', '_', '_', 'i', 'c', 'h', 'e']
				{'string': 'l/_/_/_/i/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['l', '_', '_', '_', 'i', 'c', 'h', 'e']
				version split: ['l', '_', '_', '_', 'i', 'ch', 'e']
				{'string': 'l/_/_/_/i/ch/e', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['l', '_', '_', '_', 'i', 'ch', 'e']
				version split: ['l', '_', '_', '_', 'i', 'ch', 'e']
				{'string': 'l/_/_/_/i/ch/e', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['l', '_', '_', '_', 'i', 'ch', 'e']
				version split: ['_', '_', '_', '_', 'l', 'i', 'c', 'h', 'e']
				{'string': '_/_/_/_/l/i/c', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['_', '_', '_', '_', 'l', 'i', 'c', 'h', 'e']
				version split: ['_', '_', '_', '_', 'l', 'i', 'c', 'h', 'e']
				{'string': '_/_/_/_/l/i/c', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['_', '_', '_', '_', 'l', 'i', 'c', 'h', 'e']
				version split: ['_', '_', '_', '_', 'l', 'i', 'ch', 'e']
				{'string': '_/_/_/_/l/i/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['_', '_', '_', '_', 'l', 'i', 'ch', 'e']
				version split: ['_', '_', '_', '_', 'l', 'i', 'ch', 'e']
				{'string': '_/_/_/_/l/i/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['_', '_', '_', '_', 'l', 'i', 'ch', 'e']
				version split: ['l', 'i', 'c', 'h', '_', 'e']
				{'string': 'l/i/c/h/_/e', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['l', 'i', 'c', 'h', '_', 'e']
				version split: ['l', 'i', 'c', 'h', '_', 'e']
				{'string': 'l/i/c/h/_/e', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['l', 'i', 'c', 'h', '_', 'e']
				version split: ['l', 'i', 'ch', 'e', '_']
				{'string': 'l/i/ch/e/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['l', 'i', 'ch', 'e', '_']
				version split: ['l', 'i', 'ch', 'e', '_']
				{'string': 'l/i/ch/e/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['l', 'i', 'ch', 'e', '_']
				version split: ['_', 'l', 'i', 'c', '_', 'h', 'e']
				{'string': '_/l/i/c/_/h/e', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['_', 'l', 'i', 'c', '_', 'h', 'e']
				version split: ['_', 'l', 'i', 'c', '_', 'h', 'e']
				{'string': '_/l/i/c/_/h/e', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['_', 'l', 'i', 'c', '_', 'h', 'e']
				version split: ['_', 'l', 'i', 'ch', '_', 'e']
				{'string': '_/l/i/ch/_/e', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['_', 'l', 'i', 'ch', '_', 'e']
				version split: ['_', 'l', 'i', 'ch', '_', 'e']
				{'string': '_/l/i/ch/_/e', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['_', 'l', 'i', 'ch', '_', 'e']
				version split: ['l', '_', 'i', 'c', '_', 'h', 'e']
				{'string': 'l/_/i/c/_/h/e', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['l', '_', 'i', 'c', '_', 'h', 'e']
				version split: ['l', '_', 'i', 'c', '_', 'h', 'e']
				{'string': 'l/_/i/c/_/h/e', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['l', '_', 'i', 'c', '_', 'h', 'e']
				version split: ['l', '_', 'i', 'ch', '_', 'e']
				{'string': 'l/_/i/ch/_/e', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['l', '_', 'i', 'ch', '_', 'e']
				version split: ['l', '_', 'i', 'ch', '_', 'e']
				{'string': 'l/_/i/ch/_/e', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['l', '_', 'i', 'ch', '_', 'e']
				version split: ['_', '_', 'l', 'i', '_', 'c', 'h', 'e']
				{'string': '_/_/l/i/_/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['_', '_', 'l', 'i', '_', 'c', 'h', 'e']
				version split: ['_', '_', 'l', 'i', '_', 'c', 'h', 'e']
				{'string': '_/_/l/i/_/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['_', '_', 'l', 'i', '_', 'c', 'h', 'e']
				version split: ['_', '_', 'l', 'i', '_', 'ch', 'e']
				{'string': '_/_/l/i/_/ch/e', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['_', '_', 'l', 'i', '_', 'ch', 'e']
				version split: ['_', '_', 'l', 'i', '_', 'ch', 'e']
				{'string': '_/_/l/i/_/ch/e', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['_', '_', 'l', 'i', '_', 'ch', 'e']
				version split: ['l', 'i', '_', 'c', '_', 'h', 'e']
				{'string': 'l/i/_/c/_/h/e', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['l', 'i', '_', 'c', '_', 'h', 'e']
				version split: ['l', 'i', '_', 'c', '_', 'h', 'e']
				{'string': 'l/i/_/c/_/h/e', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['l', 'i', '_', 'c', '_', 'h', 'e']
				version split: ['l', 'i', '_', 'ch', '_', 'e']
				{'string': 'l/i/_/ch/_/e', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['l', 'i', '_', 'ch', '_', 'e']
				version split: ['l', 'i', '_', 'ch', '_', 'e']
				{'string': 'l/i/_/ch/_/e', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['l', 'i', '_', 'ch', '_', 'e']
				version split: ['_', 'l', '_', 'i', '_', 'c', 'h', 'e']
				{'string': '_/l/_/i/_/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['_', 'l', '_', 'i', '_', 'c', 'h', 'e']
				version split: ['_', 'l', '_', 'i', '_', 'c', 'h', 'e']
				{'string': '_/l/_/i/_/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['_', 'l', '_', 'i', '_', 'c', 'h', 'e']
				version split: ['_', 'l', '_', 'i', '_', 'ch', 'e']
				{'string': '_/l/_/i/_/ch/e', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['_', 'l', '_', 'i', '_', 'ch', 'e']
				version split: ['_', 'l', '_', 'i', '_', 'ch', 'e']
				{'string': '_/l/_/i/_/ch/e', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['_', 'l', '_', 'i', '_', 'ch', 'e']
				version split: ['l', '_', '_', 'i', '_', 'c', 'h', 'e']
				{'string': 'l/_/_/i/_/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['l', '_', '_', 'i', '_', 'c', 'h', 'e']
				version split: ['l', '_', '_', 'i', '_', 'c', 'h', 'e']
				{'string': 'l/_/_/i/_/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['l', '_', '_', 'i', '_', 'c', 'h', 'e']
				version split: ['l', '_', '_', 'i', '_', 'ch', 'e']
				{'string': 'l/_/_/i/_/ch/e', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['l', '_', '_', 'i', '_', 'ch', 'e']
				version split: ['l', '_', '_', 'i', '_', 'ch', 'e']
				{'string': 'l/_/_/i/_/ch/e', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['l', '_', '_', 'i', '_', 'ch', 'e']
				version split: ['_', '_', '_', 'l', '_', 'i', 'c', 'h', 'e']
				{'string': '_/_/_/l/_/i/c', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['_', '_', '_', 'l', '_', 'i', 'c', 'h', 'e']
				version split: ['_', '_', '_', 'l', '_', 'i', 'c', 'h', 'e']
				{'string': '_/_/_/l/_/i/c', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['_', '_', '_', 'l', '_', 'i', 'c', 'h', 'e']
				version split: ['_', '_', '_', 'l', '_', 'i', 'ch', 'e']
				{'string': '_/_/_/l/_/i/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['_', '_', '_', 'l', '_', 'i', 'ch', 'e']
				version split: ['_', '_', '_', 'l', '_', 'i', 'ch', 'e']
				{'string': '_/_/_/l/_/i/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['_', '_', '_', 'l', '_', 'i', 'ch', 'e']
				version split: ['l', 'i', 'c', '_', '_', 'h', 'e']
				{'string': 'l/i/c/_/_/h/e', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['l', 'i', 'c', '_', '_', 'h', 'e']
				version split: ['l', 'i', 'c', '_', '_', 'h', 'e']
				{'string': 'l/i/c/_/_/h/e', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['l', 'i', 'c', '_', '_', 'h', 'e']
				version split: ['l', 'i', 'ch', '_', '_', 'e']
				{'string': 'l/i/ch/_/_/e', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['l', 'i', 'ch', '_', '_', 'e']
				version split: ['l', 'i', 'ch', '_', '_', 'e']
				{'string': 'l/i/ch/_/_/e', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['l', 'i', 'ch', '_', '_', 'e']
				version split: ['_', 'l', 'i', '_', '_', 'c', 'h', 'e']
				{'string': '_/l/i/_/_/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['_', 'l', 'i', '_', '_', 'c', 'h', 'e']
				version split: ['_', 'l', 'i', '_', '_', 'c', 'h', 'e']
				{'string': '_/l/i/_/_/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['_', 'l', 'i', '_', '_', 'c', 'h', 'e']
				version split: ['_', 'l', 'i', '_', '_', 'ch', 'e']
				{'string': '_/l/i/_/_/ch/e', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['_', 'l', 'i', '_', '_', 'ch', 'e']
				version split: ['_', 'l', 'i', '_', '_', 'ch', 'e']
				{'string': '_/l/i/_/_/ch/e', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['_', 'l', 'i', '_', '_', 'ch', 'e']
				version split: ['l', '_', 'i', '_', '_', 'c', 'h', 'e']
				{'string': 'l/_/i/_/_/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['l', '_', 'i', '_', '_', 'c', 'h', 'e']
				version split: ['l', '_', 'i', '_', '_', 'c', 'h', 'e']
				{'string': 'l/_/i/_/_/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['l', '_', 'i', '_', '_', 'c', 'h', 'e']
				version split: ['l', '_', 'i', '_', '_', 'ch', 'e']
				{'string': 'l/_/i/_/_/ch/e', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['l', '_', 'i', '_', '_', 'ch', 'e']
				version split: ['l', '_', 'i', '_', '_', 'ch', 'e']
				{'string': 'l/_/i/_/_/ch/e', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['l', '_', 'i', '_', '_', 'ch', 'e']
				version split: ['_', '_', 'l', '_', '_', 'i', 'c', 'h', 'e']
				{'string': '_/_/l/_/_/i/c', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['_', '_', 'l', '_', '_', 'i', 'c', 'h', 'e']
				version split: ['_', '_', 'l', '_', '_', 'i', 'c', 'h', 'e']
				{'string': '_/_/l/_/_/i/c', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['_', '_', 'l', '_', '_', 'i', 'c', 'h', 'e']
				version split: ['_', '_', 'l', '_', '_', 'i', 'ch', 'e']
				{'string': '_/_/l/_/_/i/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['_', '_', 'l', '_', '_', 'i', 'ch', 'e']
				version split: ['_', '_', 'l', '_', '_', 'i', 'ch', 'e']
				{'string': '_/_/l/_/_/i/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['_', '_', 'l', '_', '_', 'i', 'ch', 'e']
				version split: ['l', 'i', '_', '_', '_', 'c', 'h', 'e']
				{'string': 'l/i/_/_/_/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['l', 'i', '_', '_', '_', 'c', 'h', 'e']
				version split: ['l', 'i', '_', '_', '_', 'c', 'h', 'e']
				{'string': 'l/i/_/_/_/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['l', 'i', '_', '_', '_', 'c', 'h', 'e']
				version split: ['l', 'i', '_', '_', '_', 'ch', 'e']
				{'string': 'l/i/_/_/_/ch/e', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['l', 'i', '_', '_', '_', 'ch', 'e']
				version split: ['l', 'i', '_', '_', '_', 'ch', 'e']
				{'string': 'l/i/_/_/_/ch/e', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['l', 'i', '_', '_', '_', 'ch', 'e']
				version split: ['_', 'l', '_', '_', '_', 'i', 'c', 'h', 'e']
				{'string': '_/l/_/_/_/i/c', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['_', 'l', '_', '_', '_', 'i', 'c', 'h', 'e']
				version split: ['_', 'l', '_', '_', '_', 'i', 'c', 'h', 'e']
				{'string': '_/l/_/_/_/i/c', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['_', 'l', '_', '_', '_', 'i', 'c', 'h', 'e']
				version split: ['_', 'l', '_', '_', '_', 'i', 'ch', 'e']
				{'string': '_/l/_/_/_/i/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['_', 'l', '_', '_', '_', 'i', 'ch', 'e']
				version split: ['_', 'l', '_', '_', '_', 'i', 'ch', 'e']
				{'string': '_/l/_/_/_/i/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['_', 'l', '_', '_', '_', 'i', 'ch', 'e']
				version split: ['l', '_', '_', '_', '_', 'i', 'c', 'h', 'e']
				{'string': 'l/_/_/_/_/i/c', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['l', '_', '_', '_', '_', 'i', 'c', 'h', 'e']
				version split: ['l', '_', '_', '_', '_', 'i', 'c', 'h', 'e']
				{'string': 'l/_/_/_/_/i/c', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['l', '_', '_', '_', '_', 'i', 'c', 'h', 'e']
				version split: ['l', '_', '_', '_', '_', 'i', 'ch', 'e']
				{'string': 'l/_/_/_/_/i/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['l', '_', '_', '_', '_', 'i', 'ch', 'e']
				version split: ['l', '_', '_', '_', '_', 'i', 'ch', 'e']
				{'string': 'l/_/_/_/_/i/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['l', '_', '_', '_', '_', 'i', 'ch', 'e']
				version split: ['_', '_', '_', '_', '_', 'l', 'i', 'c', 'h', 'e']
				{'string': '_/_/_/_/_/l/i', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['_', '_', '_', '_', '_', 'l', 'i', 'c', 'h', 'e']
				version split: ['_', '_', '_', '_', '_', 'l', 'i', 'c', 'h', 'e']
				{'string': '_/_/_/_/_/l/i', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['_', '_', '_', '_', '_', 'l', 'i', 'c', 'h', 'e']
				version split: ['_', '_', '_', '_', '_', 'l', 'i', 'ch', 'e']
				{'string': '_/_/_/_/_/l/i', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['_', '_', '_', '_', '_', 'l', 'i', 'ch', 'e']
				version split: ['_', '_', '_', '_', '_', 'l', 'i', 'ch', 'e']
				{'string': '_/_/_/_/_/l/i', 'rgx': '((_))/((_))/((_))/((_))/((_))/((e))$'}
				_____REMOVING________['_', '_', '_', '_', '_', 'l', 'i', 'ch', 'e']
		only one version left: ['_', 'e', 'u', 'e', '_', '_']
		only one version left: ['h', '_', 'e', '_', '_', '_']
		only one version left: ['h', '_', 'e', 'o', '_', '_']
		FAIL: 
		FAIL: 
		FAIL: 
		FAIL: h/_/e/ou/_/e, h/_/eo/u/_/e, h/_/eo/u/_/e, h/_/e/o/_/ue, h/_/eo/u/_/e, h/_/eo/u/_/e, h/_/e/ou/_/e
		FAIL: 
		only one version left: ['h', '_', 'e', '_', '_', 'ue']
		FAIL: 
		FAIL: 
		FAIL: 
		FAIL: 
		SPLIT: ['h', 'eo', 'u', 'e', 'n', 'e']
		SPLIT: ['h', 'e', 'u', 'e', 'n', 'e']
		SPLIT: ['_', 'e', 'u', 'e', '_', '_']
		['_', 'e', 'u', 'e', '_', '_']
		['_', 'e', 'u', 'e', '_', '_']
		SPLIT: ['h', '_', 'e', '_', '_', '_']
		['h', '_', 'e', '_', '_', '_']
		SPLIT: ['h', '_', 'e', 'o', '_', '_']
		['h', '_', 'e', 'o', '_', '_']
		SPLIT: ['h', '_', 'e.eo.o', 'e.o', 'n', 'e', '----!']
		SPLIT: ['h', '_', 'e.eo.o', 'e.o', 'nn.n', 'e', '----!']
		SPLIT: ['h', '_', 'e.eo.o', 'o', 'n', 'o', '----!']
		SPLIT: ['h', '_', 'u.ue.eo.e.o', 'u.ue.ou.e.o', '_', 'u.e.ue', '----!']
		['h', '_', 'e', 'ou', '_', 'e']
		['h', '_', 'eo', 'u', '_', 'e']
		['h', '_', 'eo', 'u', '_', 'e']
		['h', '_', 'e', 'o', '_', 'ue']
		['h', '_', 'eo', 'u', '_', 'e']
		['h', '_', 'eo', 'u', '_', 'e']
		['h', '_', 'e', 'ou', '_', 'e']
		SPLIT: ['h', '_', 'u.ue.eo.e.o', '_', 'n', 'u.e.ue', '----!']
		SPLIT: ['h', '_', 'e', '_', '_', 'ue']
		['h', '_', 'e', '_', '_', 'ue']
		SPLIT: ['h', '_', 'u.e.ue', '_', 'n', 'e', '----!']
		SPLIT: ['h', '_', 'u.e.ue.o', '_', 'n', 'e', '----!']
		SPLIT: ['_', '_', '_', '_', '_', '_', '----!']
		SPLIT: ['_', '_', '_', '_', '_', 'e', '----!']
		version for pattern CVCVCV is INVALID
		[{'u', 'eu', 'ue', '_', 'eo', 'e'}, {'u', 'ue', '_', 'ou', 'e', 'o'}]
		9
		OVERVIEW: version for pattern CVCVCV
{'u', 'eu', 'ue', '_', 'eo', 'e'}, {'u', 'ue', '_', 'ou', 'e', 'o'}
faulty splits: 9
he.eo.oe.one----! <-! heofen
he.eo.oe.onn.ne----! <-! heofenn
he.eo.oono----! <-! heofon
hu.ue.eo.e.ou.ue.ou.e.ou.e.ue----! <-! heoue
hu.ue.eo.e.onu.e.ue----! <-! heouen
hu.e.uene----! <-! heuen
hu.e.ue.one----! <-! houen
----! <-! lich
e----! <-! liche
h | eo | u | e | n | e
h | e | u | e | n | e
_ | e | u | e | _ | _
h | _ | e | _ | _ | _
h | _ | e | o | _ | _
h | _ | e.eo.o | e.o | n | e | ----!
h | _ | e.eo.o | e.o | nn.n | e | ----!
h | _ | e.eo.o | o | n | o | ----!
h | _ | u.ue.eo.e.o | u.ue.ou.e.o | _ | u.e.ue | ----!
h | _ | u.ue.eo.e.o | _ | n | u.e.ue | ----!
h | _ | e | _ | _ | ue
h | _ | u.e.ue | _ | n | e | ----!
h | _ | u.e.ue.o | _ | n | e | ----!
_ | _ | _ | _ | _ | _ | ----!
_ | _ | _ | _ | _ | e | ----!
0 : {'h', '_', 'l'}
1 : {'u', 'eu', 'ue', 'eo', 'e'},{'u', 'eu', 'ue', '_', 'eo', 'ou', 'e'},{'u', 'eu', 'ue', '_', 'eo', 'e', 'o'},{'u', 'eu', 'ue', '_', 'eo', 'e'},{'u', 'eu', 'i', 'ue', '_', 'eo', 'e'}
3 : {'u', 'i', 'ue', '_', 'ou', 'e', 'o'},{'u', 'ue', '_', 'ou', 'e', 'o'}
4 : {'u', 'nn', '_', 'n'},{'nn', 'i', '_', 'n'},{'nn', 'c', '_', 'n'},{'nn', '_', 'l', 'n'},{'nn', 'h', '_', 'n'},{'ch', 'nn', '_', 'n'}
5 : {'u', 'i', 'ue', '_', 'e', 'o'}
	[[{'lit': 'eu', 'ln': 2, 'index': 0}], [{'lit': 'ue', 'ln': 2, 'index': 1}]]
	[[{'lit': 'eu', 'ln': 2, 'index': 0}], [{'lit': 'ue', 'ln': 2, 'index': 1}], [{'lit': 'eu', 'ln': 2, 'index': 0}, {'lit': 'ue', 'ln': 2, 'index': 1}]]
	[[{'lit': 'eo', 'ln': 2, 'index': 1}]]
	[[{'lit': 'eo', 'ln': 2, 'index': 1}]]
	[[{'lit': 'nn', 'ln': 2, 'index': 5}], [{'lit': 'eo', 'ln': 2, 'index': 1}]]
	[[{'lit': 'nn', 'ln': 2, 'index': 5}], [{'lit': 'eo', 'ln': 2, 'index': 1}], [{'lit': 'nn', 'ln': 2, 'index': 5}, {'lit': 'eo', 'ln': 2, 'index': 1}]]
	[[{'lit': 'eo', 'ln': 2, 'index': 1}]]
	[[{'lit': 'ou', 'ln': 2, 'index': 2}], [{'lit': 'eo', 'ln': 2, 'index': 1}], [{'lit': 'ue', 'ln': 2, 'index': 3}]]
	[[{'lit': 'ou', 'ln': 2, 'index': 2}], [{'lit': 'eo', 'ln': 2, 'index': 1}], [{'lit': 'ue', 'ln': 2, 'index': 3}], [{'lit': 'ou', 'ln': 2, 'index': 2}, {'lit': 'eo', 'ln': 2, 'index': 1}], [{'lit': 'ou', 'ln': 2, 'index': 2}, {'lit': 'ue', 'ln': 2, 'index': 3}], [{'lit': 'eo', 'ln': 2, 'index': 1}, {'lit': 'ue', 'ln': 2, 'index': 3}]]
	[[{'lit': 'ou', 'ln': 2, 'index': 2}], [{'lit': 'eo', 'ln': 2, 'index': 1}], [{'lit': 'ue', 'ln': 2, 'index': 3}], [{'lit': 'ou', 'ln': 2, 'index': 2}, {'lit': 'eo', 'ln': 2, 'index': 1}], [{'lit': 'ou', 'ln': 2, 'index': 2}, {'lit': 'ue', 'ln': 2, 'index': 3}], [{'lit': 'eo', 'ln': 2, 'index': 1}, {'lit': 'ue', 'ln': 2, 'index': 3}], [{'lit': 'ou', 'ln': 2, 'index': 2}, {'lit': 'eo', 'ln': 2, 'index': 1}, {'lit': 'ue', 'ln': 2, 'index': 3}]]
	[[{'lit': 'ou', 'ln': 2, 'index': 2}], [{'lit': 'eo', 'ln': 2, 'index': 1}], [{'lit': 'ue', 'ln': 2, 'index': 3}]]
	[[{'lit': 'ou', 'ln': 2, 'index': 2}], [{'lit': 'eo', 'ln': 2, 'index': 1}], [{'lit': 'ue', 'ln': 2, 'index': 3}], [{'lit': 'ou', 'ln': 2, 'index': 2}, {'lit': 'eo', 'ln': 2, 'index': 1}], [{'lit': 'ou', 'ln': 2, 'index': 2}, {'lit': 'ue', 'ln': 2, 'index': 3}], [{'lit': 'eo', 'ln': 2, 'index': 1}, {'lit': 'ue', 'ln': 2, 'index': 3}]]
	[[{'lit': 'ou', 'ln': 2, 'index': 2}], [{'lit': 'eo', 'ln': 2, 'index': 1}], [{'lit': 'ue', 'ln': 2, 'index': 3}], [{'lit': 'ou', 'ln': 2, 'index': 2}, {'lit': 'eo', 'ln': 2, 'index': 1}], [{'lit': 'ou', 'ln': 2, 'index': 2}, {'lit': 'ue', 'ln': 2, 'index': 3}], [{'lit': 'eo', 'ln': 2, 'index': 1}, {'lit': 'ue', 'ln': 2, 'index': 3}], [{'lit': 'ou', 'ln': 2, 'index': 2}, {'lit': 'eo', 'ln': 2, 'index': 1}, {'lit': 'ue', 'ln': 2, 'index': 3}]]
	[[{'lit': 'ou', 'ln': 2, 'index': 2}], [{'lit': 'eo', 'ln': 2, 'index': 1}], [{'lit': 'ue', 'ln': 2, 'index': 3}]]
	[[{'lit': 'ou', 'ln': 2, 'index': 2}], [{'lit': 'eo', 'ln': 2, 'index': 1}], [{'lit': 'ue', 'ln': 2, 'index': 3}], [{'lit': 'ou', 'ln': 2, 'index': 2}, {'lit': 'eo', 'ln': 2, 'index': 1}], [{'lit': 'ou', 'ln': 2, 'index': 2}, {'lit': 'ue', 'ln': 2, 'index': 3}], [{'lit': 'eo', 'ln': 2, 'index': 1}, {'lit': 'ue', 'ln': 2, 'index': 3}]]
	[[{'lit': 'ou', 'ln': 2, 'index': 2}], [{'lit': 'eo', 'ln': 2, 'index': 1}], [{'lit': 'ue', 'ln': 2, 'index': 3}], [{'lit': 'ou', 'ln': 2, 'index': 2}, {'lit': 'eo', 'ln': 2, 'index': 1}], [{'lit': 'ou', 'ln': 2, 'index': 2}, {'lit': 'ue', 'ln': 2, 'index': 3}], [{'lit': 'eo', 'ln': 2, 'index': 1}, {'lit': 'ue', 'ln': 2, 'index': 3}], [{'lit': 'ou', 'ln': 2, 'index': 2}, {'lit': 'eo', 'ln': 2, 'index': 1}, {'lit': 'ue', 'ln': 2, 'index': 3}]]
	[[{'lit': 'eu', 'ln': 2, 'index': 1}], [{'lit': 'ue', 'ln': 2, 'index': 2}]]
	[[{'lit': 'eu', 'ln': 2, 'index': 1}], [{'lit': 'ue', 'ln': 2, 'index': 2}], [{'lit': 'eu', 'ln': 2, 'index': 1}, {'lit': 'ue', 'ln': 2, 'index': 2}]]
	[[{'lit': 'eu', 'ln': 2, 'index': 1}], [{'lit': 'ue', 'ln': 2, 'index': 2}]]
	[[{'lit': 'eu', 'ln': 2, 'index': 1}], [{'lit': 'ue', 'ln': 2, 'index': 2}], [{'lit': 'eu', 'ln': 2, 'index': 1}, {'lit': 'ue', 'ln': 2, 'index': 2}]]
	[[{'lit': 'eu', 'ln': 2, 'index': 1}], [{'lit': 'ue', 'ln': 2, 'index': 2}]]
	[[{'lit': 'eu', 'ln': 2, 'index': 1}], [{'lit': 'ue', 'ln': 2, 'index': 2}], [{'lit': 'eu', 'ln': 2, 'index': 1}, {'lit': 'ue', 'ln': 2, 'index': 2}]]
	[[{'lit': 'ou', 'ln': 2, 'index': 1}], [{'lit': 'ue', 'ln': 2, 'index': 2}]]
	[[{'lit': 'ou', 'ln': 2, 'index': 1}], [{'lit': 'ue', 'ln': 2, 'index': 2}], [{'lit': 'ou', 'ln': 2, 'index': 1}, {'lit': 'ue', 'ln': 2, 'index': 2}]]
	[[{'lit': 'ch', 'ln': 2, 'index': 2}]]
	[[{'lit': 'ch', 'ln': 2, 'index': 2}]]
	MIN pattern length=5
	Pattern VV is invalid
	Pattern CV is invalid
	Pattern CVV is invalid
	Pattern CVVCVC is invalid
	Pattern CVVCVCV is invalid
	Pattern CVVVVC is invalid
	Pattern CVVCV is invalid
	Pattern CVVVCV is invalid
	Pattern VCV is invalid
	Pattern VVV is invalid
	Pattern CVVC is invalid
	Pattern CVC is invalid
	Pattern CVCVCV is valid
	Pattern CCCC is invalid
	Pattern CVVVVCV is invalid
	Pattern CVVV is invalid
	Pattern CVVVC is invalid
	Pattern CVVVV is invalid
	Pattern CVCCV is valid
	Pattern CVCVCC is valid
	Pattern CVCC is invalid
	Pattern CVCVC is valid
	Pattern CCCV is invalid
	Pattern CVVCVCC is invalid
	Pattern CVCV is invalid
	Pattern CCCCV is invalid
	Pattern CCC is invalid
	Making the selection for pattern: CVCCV
	Selection for pattern: CVCCV completed
	Making a version for pattern: CVCCV
			___CVCCV : 0___
				ANALYSING: liche
				adding littera based on matching pattern
				ANALYSING: eue
					resolving (5)
					> version: e/u/e
					TRYING: e
					> version: e/u/e
					TRYING: e
					> version: eu/e
					TRYING: eu
					> version: e/ue
					TRYING: e
					> version: eu/e
					TRYING: eu
					RESULT:  ['_']
				adding dashed alternative: ['_', 'e', 'u', 'e']
				adding dashed alternative: ['_', 'e', 'u', 'e']
				adding dashed alternative: ['_', 'eu', 'e']
				adding dashed alternative: ['_', 'e', 'ue']
				adding dashed alternative: ['_', 'eu', 'e']
				e/u/e(VCV)
e/u/e(VVV)
eu/e(VV)
e/ue(VV)
eu/e(VV)
_/e/u/e(AVAV)
_/e/u/e(AVAV)
_/eu/e(AVV)
_/e/ue(AVV)
_/eu/e(AVV)
				ANALYSING: he
					resolving (1)
					> version: h/e
					TRYING: h
					adding blocked set: C = C >> h, _, l
					RESULT:  ['_']
				adding dashed alternative: ['_', 'h', 'e']
				h/e(CV)
_/h/e(ACV)
				ANALYSING: heo
					resolving (2)
					> version: h/e/o
					TRYING: h
					adding blocked set: C = C >> h, _, l
					> version: h/eo
					TRYING: h
					adding blocked set: C = C >> h, _, l
					RESULT:  ['_']
				adding dashed alternative: ['_', 'h', 'e', 'o']
				adding dashed alternative: ['_', 'h', 'eo']
				h/e/o(CVV)
h/eo(CV)
_/h/e/o(ACVV)
_/h/eo(ACV)
				ANALYSING: heofen
					resolving (2)
					> version: h/e/o/f/e/n
					TRYING: h
					adding blocked set: C = C >> h, _, l
					> version: h/eo/f/e/n
					TRYING: h
					adding blocked set: C = C >> h, _, l
					RESULT:  ['_']
				adding dashed alternative: ['_', 'h', 'e', 'o', 'f', 'e', 'n']
				adding dashed alternative: ['_', 'h', 'eo', 'f', 'e', 'n']
				h/e/o/f/e/n(CVVCVC)
h/eo/f/e/n(CVCVC)
_/h/e/o/f/e/n(ACVVCVC)
_/h/eo/f/e/n(ACVCVC)
				ANALYSING: heofenn
					resolving (4)
					> version: h/e/o/f/e/n/n
					TRYING: h
					adding blocked set: C = C >> h, _, l
					> version: h/e/o/f/e/nn
					TRYING: h
					adding blocked set: C = C >> h, _, l
					> version: h/eo/f/e/n/n
					TRYING: h
					adding blocked set: C = C >> h, _, l
					> version: h/eo/f/e/nn
					TRYING: h
					adding blocked set: C = C >> h, _, l
					RESULT:  ['_']
				adding dashed alternative: ['_', 'h', 'e', 'o', 'f', 'e', 'n', 'n']
				adding dashed alternative: ['_', 'h', 'e', 'o', 'f', 'e', 'nn']
				adding dashed alternative: ['_', 'h', 'eo', 'f', 'e', 'n', 'n']
				adding dashed alternative: ['_', 'h', 'eo', 'f', 'e', 'nn']
				h/e/o/f/e/n/n(CVVCVCC)
h/e/o/f/e/nn(CVVCVC)
h/eo/f/e/n/n(CVCVCC)
h/eo/f/e/nn(CVCVC)
_/h/e/o/f/e/n/n(ACVVCVCC)
_/h/e/o/f/e/nn(ACVVCVC)
_/h/eo/f/e/n/n(ACVCVCC)
_/h/eo/f/e/nn(ACVCVC)
				ANALYSING: heofon
					resolving (2)
					> version: h/e/o/f/o/n
					TRYING: h
					adding blocked set: C = C >> h, _, l
					> version: h/eo/f/o/n
					TRYING: h
					adding blocked set: C = C >> h, _, l
					RESULT:  ['_']
				adding dashed alternative: ['_', 'h', 'e', 'o', 'f', 'o', 'n']
				adding dashed alternative: ['_', 'h', 'eo', 'f', 'o', 'n']
				h/e/o/f/o/n(CVVCVC)
h/eo/f/o/n(CVCVC)
_/h/e/o/f/o/n(ACVVCVC)
_/h/eo/f/o/n(ACVCVC)
				ANALYSING: heoue
					resolving (11)
					> version: h/e/o/u/e
					TRYING: h
					adding blocked set: C = C >> h, _, l
					> version: h/e/o/u/e
					TRYING: h
					adding blocked set: C = C >> h, _, l
					> version: h/e/ou/e
					TRYING: h
					adding blocked set: C = C >> h, _, l
					> version: h/eo/u/e
					TRYING: h
					adding blocked set: C = C >> h, _, l
					> version: h/eo/u/e
					TRYING: h
					adding blocked set: C = C >> h, _, l
					> version: h/e/o/ue
					TRYING: h
					adding blocked set: C = C >> h, _, l
					> version: h/eo/u/e
					TRYING: h
					adding blocked set: C = C >> h, _, l
					> version: h/eo/u/e
					TRYING: h
					adding blocked set: C = C >> h, _, l
					> version: h/e/ou/e
					TRYING: h
					adding blocked set: C = C >> h, _, l
					> version: h/eo/ue
					TRYING: h
					adding blocked set: C = C >> h, _, l
					> version: h/eo/ue
					TRYING: h
					adding blocked set: C = C >> h, _, l
					RESULT:  ['_']
				adding dashed alternative: ['_', 'h', 'e', 'o', 'u', 'e']
				adding dashed alternative: ['_', 'h', 'e', 'o', 'u', 'e']
				adding dashed alternative: ['_', 'h', 'e', 'ou', 'e']
				adding dashed alternative: ['_', 'h', 'eo', 'u', 'e']
				adding dashed alternative: ['_', 'h', 'eo', 'u', 'e']
				adding dashed alternative: ['_', 'h', 'e', 'o', 'ue']
				adding dashed alternative: ['_', 'h', 'eo', 'u', 'e']
				adding dashed alternative: ['_', 'h', 'eo', 'u', 'e']
				adding dashed alternative: ['_', 'h', 'e', 'ou', 'e']
				adding dashed alternative: ['_', 'h', 'eo', 'ue']
				adding dashed alternative: ['_', 'h', 'eo', 'ue']
				h/e/o/u/e(CVVCV)
h/e/o/u/e(CVVVV)
h/e/ou/e(CVVV)
h/eo/u/e(CVCV)
h/eo/u/e(CVVV)
h/e/o/ue(CVVV)
h/eo/u/e(CVCV)
h/eo/u/e(CVVV)
h/e/ou/e(CVVV)
h/eo/ue(CVV)
h/eo/ue(CVV)
_/h/e/o/u/e(ACVVAV)
_/h/e/o/u/e(ACVVAV)
_/h/e/ou/e(ACVVV)
_/h/eo/u/e(ACVAV)
_/h/eo/u/e(ACVAV)
_/h/e/o/ue(ACVVV)
_/h/eo/u/e(ACVAV)
_/h/eo/u/e(ACVAV)
_/h/e/ou/e(ACVVV)
_/h/eo/ue(ACVV)
_/h/eo/ue(ACVV)
				ANALYSING: heouen
					resolving (11)
					> version: h/e/o/u/e/n
					TRYING: h
					adding blocked set: C = C >> h, _, l
					> version: h/e/o/u/e/n
					TRYING: h
					adding blocked set: C = C >> h, _, l
					> version: h/e/ou/e/n
					TRYING: h
					adding blocked set: C = C >> h, _, l
					> version: h/eo/u/e/n
					TRYING: h
					adding blocked set: C = C >> h, _, l
					> version: h/eo/u/e/n
					TRYING: h
					adding blocked set: C = C >> h, _, l
					> version: h/e/o/ue/n
					TRYING: h
					adding blocked set: C = C >> h, _, l
					> version: h/eo/u/e/n
					TRYING: h
					adding blocked set: C = C >> h, _, l
					> version: h/eo/u/e/n
					TRYING: h
					adding blocked set: C = C >> h, _, l
					> version: h/e/ou/e/n
					TRYING: h
					adding blocked set: C = C >> h, _, l
					> version: h/eo/ue/n
					TRYING: h
					adding blocked set: C = C >> h, _, l
					> version: h/eo/ue/n
					TRYING: h
					adding blocked set: C = C >> h, _, l
					RESULT:  ['_']
				adding dashed alternative: ['_', 'h', 'e', 'o', 'u', 'e', 'n']
				adding dashed alternative: ['_', 'h', 'e', 'o', 'u', 'e', 'n']
				adding dashed alternative: ['_', 'h', 'e', 'ou', 'e', 'n']
				adding dashed alternative: ['_', 'h', 'eo', 'u', 'e', 'n']
				adding dashed alternative: ['_', 'h', 'eo', 'u', 'e', 'n']
				adding dashed alternative: ['_', 'h', 'e', 'o', 'ue', 'n']
				adding dashed alternative: ['_', 'h', 'eo', 'u', 'e', 'n']
				adding dashed alternative: ['_', 'h', 'eo', 'u', 'e', 'n']
				adding dashed alternative: ['_', 'h', 'e', 'ou', 'e', 'n']
				adding dashed alternative: ['_', 'h', 'eo', 'ue', 'n']
				adding dashed alternative: ['_', 'h', 'eo', 'ue', 'n']
				h/e/o/u/e/n(CVVCVC)
h/e/o/u/e/n(CVVVVC)
h/e/ou/e/n(CVVVC)
h/eo/u/e/n(CVCVC)
h/eo/u/e/n(CVVVC)
h/e/o/ue/n(CVVVC)
h/eo/u/e/n(CVCVC)
h/eo/u/e/n(CVVVC)
h/e/ou/e/n(CVVVC)
h/eo/ue/n(CVVC)
h/eo/ue/n(CVVC)
_/h/e/o/u/e/n(ACVVAVC)
_/h/e/o/u/e/n(ACVVAVC)
_/h/e/ou/e/n(ACVVVC)
_/h/eo/u/e/n(ACVAVC)
_/h/eo/u/e/n(ACVAVC)
_/h/e/o/ue/n(ACVVVC)
_/h/eo/u/e/n(ACVAVC)
_/h/eo/u/e/n(ACVAVC)
_/h/e/ou/e/n(ACVVVC)
_/h/eo/ue/n(ACVVC)
_/h/eo/ue/n(ACVVC)
				ANALYSING: heouene
					resolving (11)
					> version: h/e/o/u/e/n/e
					TRYING: h
					adding blocked set: C = C >> h, _, l
					> version: h/e/o/u/e/n/e
					TRYING: h
					adding blocked set: C = C >> h, _, l
					> version: h/e/ou/e/n/e
					TRYING: h
					adding blocked set: C = C >> h, _, l
					> version: h/eo/u/e/n/e
					TRYING: h
					adding blocked set: C = C >> h, _, l
					> version: h/eo/u/e/n/e
					TRYING: h
					adding blocked set: C = C >> h, _, l
					> version: h/e/o/ue/n/e
					TRYING: h
					adding blocked set: C = C >> h, _, l
					> version: h/eo/u/e/n/e
					TRYING: h
					adding blocked set: C = C >> h, _, l
					> version: h/eo/u/e/n/e
					TRYING: h
					adding blocked set: C = C >> h, _, l
					> version: h/e/ou/e/n/e
					TRYING: h
					adding blocked set: C = C >> h, _, l
					> version: h/eo/ue/n/e
					TRYING: h
					adding blocked set: C = C >> h, _, l
					> version: h/eo/ue/n/e
					TRYING: h
					adding blocked set: C = C >> h, _, l
					RESULT:  ['_']
				adding dashed alternative: ['_', 'h', 'e', 'o', 'u', 'e', 'n', 'e']
				adding dashed alternative: ['_', 'h', 'e', 'o', 'u', 'e', 'n', 'e']
				adding dashed alternative: ['_', 'h', 'e', 'ou', 'e', 'n', 'e']
				adding dashed alternative: ['_', 'h', 'eo', 'u', 'e', 'n', 'e']
				adding dashed alternative: ['_', 'h', 'eo', 'u', 'e', 'n', 'e']
				adding dashed alternative: ['_', 'h', 'e', 'o', 'ue', 'n', 'e']
				adding dashed alternative: ['_', 'h', 'eo', 'u', 'e', 'n', 'e']
				adding dashed alternative: ['_', 'h', 'eo', 'u', 'e', 'n', 'e']
				adding dashed alternative: ['_', 'h', 'e', 'ou', 'e', 'n', 'e']
				adding dashed alternative: ['_', 'h', 'eo', 'ue', 'n', 'e']
				adding dashed alternative: ['_', 'h', 'eo', 'ue', 'n', 'e']
				h/e/o/u/e/n/e(CVVCVCV)
h/e/o/u/e/n/e(CVVVVCV)
h/e/ou/e/n/e(CVVVCV)
h/eo/u/e/n/e(CVCVCV)
h/eo/u/e/n/e(CVVVCV)
h/e/o/ue/n/e(CVVVCV)
h/eo/u/e/n/e(CVCVCV)
h/eo/u/e/n/e(CVVVCV)
h/e/ou/e/n/e(CVVVCV)
h/eo/ue/n/e(CVVCV)
h/eo/ue/n/e(CVVCV)
_/h/e/o/u/e/n/e(ACVVAVCV)
_/h/e/o/u/e/n/e(ACVVAVCV)
_/h/e/ou/e/n/e(ACVVVCV)
_/h/eo/u/e/n/e(ACVAVCV)
_/h/eo/u/e/n/e(ACVAVCV)
_/h/e/o/ue/n/e(ACVVVCV)
_/h/eo/u/e/n/e(ACVAVCV)
_/h/eo/u/e/n/e(ACVAVCV)
_/h/e/ou/e/n/e(ACVVVCV)
_/h/eo/ue/n/e(ACVVCV)
_/h/eo/ue/n/e(ACVVCV)
				ANALYSING: heue
					resolving (5)
					> version: h/e/u/e
					TRYING: h
					adding blocked set: C = C >> h, _, l
					> version: h/e/u/e
					TRYING: h
					adding blocked set: C = C >> h, _, l
					> version: h/eu/e
					TRYING: h
					adding blocked set: C = C >> h, _, l
					> version: h/e/ue
					TRYING: h
					adding blocked set: C = C >> h, _, l
					> version: h/eu/e
					TRYING: h
					adding blocked set: C = C >> h, _, l
					RESULT:  ['_']
				adding dashed alternative: ['_', 'h', 'e', 'u', 'e']
				adding dashed alternative: ['_', 'h', 'e', 'u', 'e']
				adding dashed alternative: ['_', 'h', 'eu', 'e']
				adding dashed alternative: ['_', 'h', 'e', 'ue']
				adding dashed alternative: ['_', 'h', 'eu', 'e']
				h/e/u/e(CVCV)
h/e/u/e(CVVV)
h/eu/e(CVV)
h/e/ue(CVV)
h/eu/e(CVV)
_/h/e/u/e(ACVAV)
_/h/e/u/e(ACVAV)
_/h/eu/e(ACVV)
_/h/e/ue(ACVV)
_/h/eu/e(ACVV)
				ANALYSING: heuen
					resolving (5)
					> version: h/e/u/e/n
					TRYING: h
					adding blocked set: C = C >> h, _, l
					> version: h/e/u/e/n
					TRYING: h
					adding blocked set: C = C >> h, _, l
					> version: h/eu/e/n
					TRYING: h
					adding blocked set: C = C >> h, _, l
					> version: h/e/ue/n
					TRYING: h
					adding blocked set: C = C >> h, _, l
					> version: h/eu/e/n
					TRYING: h
					adding blocked set: C = C >> h, _, l
					RESULT:  ['_']
				adding dashed alternative: ['_', 'h', 'e', 'u', 'e', 'n']
				adding dashed alternative: ['_', 'h', 'e', 'u', 'e', 'n']
				adding dashed alternative: ['_', 'h', 'eu', 'e', 'n']
				adding dashed alternative: ['_', 'h', 'e', 'ue', 'n']
				adding dashed alternative: ['_', 'h', 'eu', 'e', 'n']
				h/e/u/e/n(CVCVC)
h/e/u/e/n(CVVVC)
h/eu/e/n(CVVC)
h/e/ue/n(CVVC)
h/eu/e/n(CVVC)
_/h/e/u/e/n(ACVAVC)
_/h/e/u/e/n(ACVAVC)
_/h/eu/e/n(ACVVC)
_/h/e/ue/n(ACVVC)
_/h/eu/e/n(ACVVC)
				ANALYSING: heuene
					resolving (5)
					> version: h/e/u/e/n/e
					TRYING: h
					adding blocked set: C = C >> h, _, l
					> version: h/e/u/e/n/e
					TRYING: h
					adding blocked set: C = C >> h, _, l
					> version: h/eu/e/n/e
					TRYING: h
					adding blocked set: C = C >> h, _, l
					> version: h/e/ue/n/e
					TRYING: h
					adding blocked set: C = C >> h, _, l
					> version: h/eu/e/n/e
					TRYING: h
					adding blocked set: C = C >> h, _, l
					RESULT:  ['_']
				adding dashed alternative: ['_', 'h', 'e', 'u', 'e', 'n', 'e']
				adding dashed alternative: ['_', 'h', 'e', 'u', 'e', 'n', 'e']
				adding dashed alternative: ['_', 'h', 'eu', 'e', 'n', 'e']
				adding dashed alternative: ['_', 'h', 'e', 'ue', 'n', 'e']
				adding dashed alternative: ['_', 'h', 'eu', 'e', 'n', 'e']
				h/e/u/e/n/e(CVCVCV)
h/e/u/e/n/e(CVVVCV)
h/eu/e/n/e(CVVCV)
h/e/ue/n/e(CVVCV)
h/eu/e/n/e(CVVCV)
_/h/e/u/e/n/e(ACVAVCV)
_/h/e/u/e/n/e(ACVAVCV)
_/h/eu/e/n/e(ACVVCV)
_/h/e/ue/n/e(ACVVCV)
_/h/eu/e/n/e(ACVVCV)
				ANALYSING: houen
					resolving (5)
					> version: h/o/u/e/n
					TRYING: h
					adding blocked set: C = C >> h, _, l
					> version: h/o/u/e/n
					TRYING: h
					adding blocked set: C = C >> h, _, l
					> version: h/ou/e/n
					TRYING: h
					adding blocked set: C = C >> h, _, l
					> version: h/o/ue/n
					TRYING: h
					adding blocked set: C = C >> h, _, l
					> version: h/ou/e/n
					TRYING: h
					adding blocked set: C = C >> h, _, l
					RESULT:  ['_']
				adding dashed alternative: ['_', 'h', 'o', 'u', 'e', 'n']
				adding dashed alternative: ['_', 'h', 'o', 'u', 'e', 'n']
				adding dashed alternative: ['_', 'h', 'ou', 'e', 'n']
				adding dashed alternative: ['_', 'h', 'o', 'ue', 'n']
				adding dashed alternative: ['_', 'h', 'ou', 'e', 'n']
				h/o/u/e/n(CVCVC)
h/o/u/e/n(CVVVC)
h/ou/e/n(CVVC)
h/o/ue/n(CVVC)
h/ou/e/n(CVVC)
_/h/o/u/e/n(ACVAVC)
_/h/o/u/e/n(ACVAVC)
_/h/ou/e/n(ACVVC)
_/h/o/ue/n(ACVVC)
_/h/ou/e/n(ACVVC)
				ANALYSING: lich
					resolving (4)
					> version: l/i/c/h
					TRYING: l
					> version: l/i/c/h
					TRYING: l
					> version: l/i/ch
					TRYING: l
					> version: l/i/ch
					TRYING: l
					RESULT:  ['l']
			___CVCCV : 1___
				ANALYSING: liche
				adding littera based on matching pattern
				ANALYSING: eue
					resolving (10)
					> version: e/u/e
					TRYING: u
					> version: e/u/e
					TRYING: u
					> version: eu/e
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e'}
					> version: e/ue
					TRYING: ue
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: eu/e
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: _/e/u/e
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: _/e/u/e
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: _/eu/e
					TRYING: eu
					adding blocked set: V = V >> eu, i
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: _/e/ue
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: _/eu/e
					TRYING: eu
					adding blocked set: V = V >> eu, i
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					RESULT:  ['u', 'e', 'ue']
				ANALYSING: he
					resolving (2)
					> version: h/e
					TRYING: e
					adding blocked set: V = V >> u, i, e, ue
					> version: _/h/e
					TRYING: h
					RESULT:  ['_']
				adding dashed alternative: ['h', '_', 'e']
				adding dashed alternative: ['_', '_', 'h', 'e']
				h/e(CV)
_/h/e(ACV)
h/_/e(CAV)
_/_/h/e(AACV)
				ANALYSING: heo
					resolving (4)
					> version: h/e/o
					TRYING: e
					adding blocked set: V = V >> u, i, ue, _, e
					> version: h/eo
					TRYING: eo
					adding blocked set: V = V >> u, i, ue, _, eo, e
					> version: _/h/e/o
					TRYING: h
					> version: _/h/eo
					TRYING: h
					RESULT:  ['_']
				adding dashed alternative: ['h', '_', 'e', 'o']
				adding dashed alternative: ['h', '_', 'eo']
				adding dashed alternative: ['_', '_', 'h', 'e', 'o']
				adding dashed alternative: ['_', '_', 'h', 'eo']
				h/e/o(CVV)
h/eo(CV)
_/h/e/o(ACVV)
_/h/eo(ACV)
h/_/e/o(CAVV)
h/_/eo(CAV)
_/_/h/e/o(AACVV)
_/_/h/eo(AACV)
				ANALYSING: heofen
					resolving (4)
					> version: h/e/o/f/e/n
					TRYING: e
					adding blocked set: V = V >> u, i, ue, _, e
					> version: h/eo/f/e/n
					TRYING: eo
					adding blocked set: V = V >> u, i, ue, _, eo, e
					> version: _/h/e/o/f/e/n
					TRYING: h
					> version: _/h/eo/f/e/n
					TRYING: h
					RESULT:  ['_']
				adding dashed alternative: ['h', '_', 'e', 'o', 'f', 'e', 'n']
				adding dashed alternative: ['h', '_', 'eo', 'f', 'e', 'n']
				adding dashed alternative: ['_', '_', 'h', 'e', 'o', 'f', 'e', 'n']
				adding dashed alternative: ['_', '_', 'h', 'eo', 'f', 'e', 'n']
				h/e/o/f/e/n(CVVCVC)
h/eo/f/e/n(CVCVC)
_/h/e/o/f/e/n(ACVVCVC)
_/h/eo/f/e/n(ACVCVC)
h/_/e/o/f/e/n(CAVVCVC)
h/_/eo/f/e/n(CAVCVC)
_/_/h/e/o/f/e/n(AACVVCVC)
_/_/h/eo/f/e/n(AACVCVC)
				ANALYSING: heofenn
					resolving (8)
					> version: h/e/o/f/e/n/n
					TRYING: e
					adding blocked set: V = V >> u, i, ue, _, e
					> version: h/e/o/f/e/nn
					TRYING: e
					adding blocked set: V = V >> u, i, ue, _, e
					> version: h/eo/f/e/n/n
					TRYING: eo
					adding blocked set: V = V >> u, i, ue, _, eo, e
					> version: h/eo/f/e/nn
					TRYING: eo
					adding blocked set: V = V >> u, i, ue, _, eo, e
					> version: _/h/e/o/f/e/n/n
					TRYING: h
					> version: _/h/e/o/f/e/nn
					TRYING: h
					> version: _/h/eo/f/e/n/n
					TRYING: h
					> version: _/h/eo/f/e/nn
					TRYING: h
					RESULT:  ['_']
				adding dashed alternative: ['h', '_', 'e', 'o', 'f', 'e', 'n', 'n']
				adding dashed alternative: ['h', '_', 'e', 'o', 'f', 'e', 'nn']
				adding dashed alternative: ['h', '_', 'eo', 'f', 'e', 'n', 'n']
				adding dashed alternative: ['h', '_', 'eo', 'f', 'e', 'nn']
				adding dashed alternative: ['_', '_', 'h', 'e', 'o', 'f', 'e', 'n', 'n']
				adding dashed alternative: ['_', '_', 'h', 'e', 'o', 'f', 'e', 'nn']
				adding dashed alternative: ['_', '_', 'h', 'eo', 'f', 'e', 'n', 'n']
				adding dashed alternative: ['_', '_', 'h', 'eo', 'f', 'e', 'nn']
				h/e/o/f/e/n/n(CVVCVCC)
h/e/o/f/e/nn(CVVCVC)
h/eo/f/e/n/n(CVCVCC)
h/eo/f/e/nn(CVCVC)
_/h/e/o/f/e/n/n(ACVVCVCC)
_/h/e/o/f/e/nn(ACVVCVC)
_/h/eo/f/e/n/n(ACVCVCC)
_/h/eo/f/e/nn(ACVCVC)
h/_/e/o/f/e/n/n(CAVVCVCC)
h/_/e/o/f/e/nn(CAVVCVC)
h/_/eo/f/e/n/n(CAVCVCC)
h/_/eo/f/e/nn(CAVCVC)
_/_/h/e/o/f/e/n/n(AACVVCVCC)
_/_/h/e/o/f/e/nn(AACVVCVC)
_/_/h/eo/f/e/n/n(AACVCVCC)
_/_/h/eo/f/e/nn(AACVCVC)
				ANALYSING: heofon
					resolving (4)
					> version: h/e/o/f/o/n
					TRYING: e
					adding blocked set: V = V >> u, i, ue, _, e
					> version: h/eo/f/o/n
					TRYING: eo
					adding blocked set: V = V >> u, i, ue, _, eo, e
					> version: _/h/e/o/f/o/n
					TRYING: h
					> version: _/h/eo/f/o/n
					TRYING: h
					RESULT:  ['_']
				adding dashed alternative: ['h', '_', 'e', 'o', 'f', 'o', 'n']
				adding dashed alternative: ['h', '_', 'eo', 'f', 'o', 'n']
				adding dashed alternative: ['_', '_', 'h', 'e', 'o', 'f', 'o', 'n']
				adding dashed alternative: ['_', '_', 'h', 'eo', 'f', 'o', 'n']
				h/e/o/f/o/n(CVVCVC)
h/eo/f/o/n(CVCVC)
_/h/e/o/f/o/n(ACVVCVC)
_/h/eo/f/o/n(ACVCVC)
h/_/e/o/f/o/n(CAVVCVC)
h/_/eo/f/o/n(CAVCVC)
_/_/h/e/o/f/o/n(AACVVCVC)
_/_/h/eo/f/o/n(AACVCVC)
				ANALYSING: heoue
					resolving (22)
					> version: h/e/o/u/e
					TRYING: e
					adding blocked set: V = V >> u, i, ue, _, e
					> version: h/e/o/u/e
					TRYING: e
					adding blocked set: V = V >> u, i, ue, _, e
					> version: h/e/ou/e
					TRYING: e
					adding blocked set: V = V >> u, i, ue, _, e
					> version: h/eo/u/e
					TRYING: eo
					adding blocked set: V = V >> u, i, ue, _, eo, e
					> version: h/eo/u/e
					TRYING: eo
					adding blocked set: V = V >> u, i, ue, _, eo, e
					> version: h/e/o/ue
					TRYING: e
					adding blocked set: V = V >> u, i, ue, _, e
					> version: h/eo/u/e
					TRYING: eo
					adding blocked set: V = V >> u, i, ue, _, eo, e
					> version: h/eo/u/e
					TRYING: eo
					adding blocked set: V = V >> u, i, ue, _, eo, e
					> version: h/e/ou/e
					TRYING: e
					adding blocked set: V = V >> u, i, ue, _, e
					> version: h/eo/ue
					TRYING: eo
					adding blocked set: V = V >> u, i, ue, _, eo, e
					> version: h/eo/ue
					TRYING: eo
					adding blocked set: V = V >> u, i, ue, _, eo, e
					> version: _/h/e/o/u/e
					TRYING: h
					> version: _/h/e/o/u/e
					TRYING: h
					> version: _/h/e/ou/e
					TRYING: h
					> version: _/h/eo/u/e
					TRYING: h
					> version: _/h/eo/u/e
					TRYING: h
					> version: _/h/e/o/ue
					TRYING: h
					> version: _/h/eo/u/e
					TRYING: h
					> version: _/h/eo/u/e
					TRYING: h
					> version: _/h/e/ou/e
					TRYING: h
					> version: _/h/eo/ue
					TRYING: h
					> version: _/h/eo/ue
					TRYING: h
					RESULT:  ['_']
				adding dashed alternative: ['h', '_', 'e', 'o', 'u', 'e']
				adding dashed alternative: ['h', '_', 'e', 'o', 'u', 'e']
				adding dashed alternative: ['h', '_', 'e', 'ou', 'e']
				adding dashed alternative: ['h', '_', 'eo', 'u', 'e']
				adding dashed alternative: ['h', '_', 'eo', 'u', 'e']
				adding dashed alternative: ['h', '_', 'e', 'o', 'ue']
				adding dashed alternative: ['h', '_', 'eo', 'u', 'e']
				adding dashed alternative: ['h', '_', 'eo', 'u', 'e']
				adding dashed alternative: ['h', '_', 'e', 'ou', 'e']
				adding dashed alternative: ['h', '_', 'eo', 'ue']
				adding dashed alternative: ['h', '_', 'eo', 'ue']
				adding dashed alternative: ['_', '_', 'h', 'e', 'o', 'u', 'e']
				adding dashed alternative: ['_', '_', 'h', 'e', 'o', 'u', 'e']
				adding dashed alternative: ['_', '_', 'h', 'e', 'ou', 'e']
				adding dashed alternative: ['_', '_', 'h', 'eo', 'u', 'e']
				adding dashed alternative: ['_', '_', 'h', 'eo', 'u', 'e']
				adding dashed alternative: ['_', '_', 'h', 'e', 'o', 'ue']
				adding dashed alternative: ['_', '_', 'h', 'eo', 'u', 'e']
				adding dashed alternative: ['_', '_', 'h', 'eo', 'u', 'e']
				adding dashed alternative: ['_', '_', 'h', 'e', 'ou', 'e']
				adding dashed alternative: ['_', '_', 'h', 'eo', 'ue']
				adding dashed alternative: ['_', '_', 'h', 'eo', 'ue']
				h/e/o/u/e(CVVCV)
h/e/o/u/e(CVVVV)
h/e/ou/e(CVVV)
h/eo/u/e(CVCV)
h/eo/u/e(CVVV)
h/e/o/ue(CVVV)
h/eo/u/e(CVCV)
h/eo/u/e(CVVV)
h/e/ou/e(CVVV)
h/eo/ue(CVV)
h/eo/ue(CVV)
_/h/e/o/u/e(ACVVAV)
_/h/e/o/u/e(ACVVAV)
_/h/e/ou/e(ACVVV)
_/h/eo/u/e(ACVAV)
_/h/eo/u/e(ACVAV)
_/h/e/o/ue(ACVVV)
_/h/eo/u/e(ACVAV)
_/h/eo/u/e(ACVAV)
_/h/e/ou/e(ACVVV)
_/h/eo/ue(ACVV)
_/h/eo/ue(ACVV)
h/_/e/o/u/e(CAVVAV)
h/_/e/o/u/e(CAVVAV)
h/_/e/ou/e(CAVVV)
h/_/eo/u/e(CAVAV)
h/_/eo/u/e(CAVAV)
h/_/e/o/ue(CAVVV)
h/_/eo/u/e(CAVAV)
h/_/eo/u/e(CAVAV)
h/_/e/ou/e(CAVVV)
h/_/eo/ue(CAVV)
h/_/eo/ue(CAVV)
_/_/h/e/o/u/e(AACVVAV)
_/_/h/e/o/u/e(AACVVAV)
_/_/h/e/ou/e(AACVVV)
_/_/h/eo/u/e(AACVAV)
_/_/h/eo/u/e(AACVAV)
_/_/h/e/o/ue(AACVVV)
_/_/h/eo/u/e(AACVAV)
_/_/h/eo/u/e(AACVAV)
_/_/h/e/ou/e(AACVVV)
_/_/h/eo/ue(AACVV)
_/_/h/eo/ue(AACVV)
				ANALYSING: heouen
					resolving (22)
					> version: h/e/o/u/e/n
					TRYING: e
					adding blocked set: V = V >> u, i, ue, _, e
					> version: h/e/o/u/e/n
					TRYING: e
					adding blocked set: V = V >> u, i, ue, _, e
					> version: h/e/ou/e/n
					TRYING: e
					adding blocked set: V = V >> u, i, ue, _, e
					> version: h/eo/u/e/n
					TRYING: eo
					adding blocked set: V = V >> u, i, ue, _, eo, e
					> version: h/eo/u/e/n
					TRYING: eo
					adding blocked set: V = V >> u, i, ue, _, eo, e
					> version: h/e/o/ue/n
					TRYING: e
					adding blocked set: V = V >> u, i, ue, _, e
					> version: h/eo/u/e/n
					TRYING: eo
					adding blocked set: V = V >> u, i, ue, _, eo, e
					> version: h/eo/u/e/n
					TRYING: eo
					adding blocked set: V = V >> u, i, ue, _, eo, e
					> version: h/e/ou/e/n
					TRYING: e
					adding blocked set: V = V >> u, i, ue, _, e
					> version: h/eo/ue/n
					TRYING: eo
					adding blocked set: V = V >> u, i, ue, _, eo, e
					> version: h/eo/ue/n
					TRYING: eo
					adding blocked set: V = V >> u, i, ue, _, eo, e
					> version: _/h/e/o/u/e/n
					TRYING: h
					> version: _/h/e/o/u/e/n
					TRYING: h
					> version: _/h/e/ou/e/n
					TRYING: h
					> version: _/h/eo/u/e/n
					TRYING: h
					> version: _/h/eo/u/e/n
					TRYING: h
					> version: _/h/e/o/ue/n
					TRYING: h
					> version: _/h/eo/u/e/n
					TRYING: h
					> version: _/h/eo/u/e/n
					TRYING: h
					> version: _/h/e/ou/e/n
					TRYING: h
					> version: _/h/eo/ue/n
					TRYING: h
					> version: _/h/eo/ue/n
					TRYING: h
					RESULT:  ['_']
				adding dashed alternative: ['h', '_', 'e', 'o', 'u', 'e', 'n']
				adding dashed alternative: ['h', '_', 'e', 'o', 'u', 'e', 'n']
				adding dashed alternative: ['h', '_', 'e', 'ou', 'e', 'n']
				adding dashed alternative: ['h', '_', 'eo', 'u', 'e', 'n']
				adding dashed alternative: ['h', '_', 'eo', 'u', 'e', 'n']
				adding dashed alternative: ['h', '_', 'e', 'o', 'ue', 'n']
				adding dashed alternative: ['h', '_', 'eo', 'u', 'e', 'n']
				adding dashed alternative: ['h', '_', 'eo', 'u', 'e', 'n']
				adding dashed alternative: ['h', '_', 'e', 'ou', 'e', 'n']
				adding dashed alternative: ['h', '_', 'eo', 'ue', 'n']
				adding dashed alternative: ['h', '_', 'eo', 'ue', 'n']
				adding dashed alternative: ['_', '_', 'h', 'e', 'o', 'u', 'e', 'n']
				adding dashed alternative: ['_', '_', 'h', 'e', 'o', 'u', 'e', 'n']
				adding dashed alternative: ['_', '_', 'h', 'e', 'ou', 'e', 'n']
				adding dashed alternative: ['_', '_', 'h', 'eo', 'u', 'e', 'n']
				adding dashed alternative: ['_', '_', 'h', 'eo', 'u', 'e', 'n']
				adding dashed alternative: ['_', '_', 'h', 'e', 'o', 'ue', 'n']
				adding dashed alternative: ['_', '_', 'h', 'eo', 'u', 'e', 'n']
				adding dashed alternative: ['_', '_', 'h', 'eo', 'u', 'e', 'n']
				adding dashed alternative: ['_', '_', 'h', 'e', 'ou', 'e', 'n']
				adding dashed alternative: ['_', '_', 'h', 'eo', 'ue', 'n']
				adding dashed alternative: ['_', '_', 'h', 'eo', 'ue', 'n']
				h/e/o/u/e/n(CVVCVC)
h/e/o/u/e/n(CVVVVC)
h/e/ou/e/n(CVVVC)
h/eo/u/e/n(CVCVC)
h/eo/u/e/n(CVVVC)
h/e/o/ue/n(CVVVC)
h/eo/u/e/n(CVCVC)
h/eo/u/e/n(CVVVC)
h/e/ou/e/n(CVVVC)
h/eo/ue/n(CVVC)
h/eo/ue/n(CVVC)
_/h/e/o/u/e/n(ACVVAVC)
_/h/e/o/u/e/n(ACVVAVC)
_/h/e/ou/e/n(ACVVVC)
_/h/eo/u/e/n(ACVAVC)
_/h/eo/u/e/n(ACVAVC)
_/h/e/o/ue/n(ACVVVC)
_/h/eo/u/e/n(ACVAVC)
_/h/eo/u/e/n(ACVAVC)
_/h/e/ou/e/n(ACVVVC)
_/h/eo/ue/n(ACVVC)
_/h/eo/ue/n(ACVVC)
h/_/e/o/u/e/n(CAVVAVC)
h/_/e/o/u/e/n(CAVVAVC)
h/_/e/ou/e/n(CAVVVC)
h/_/eo/u/e/n(CAVAVC)
h/_/eo/u/e/n(CAVAVC)
h/_/e/o/ue/n(CAVVVC)
h/_/eo/u/e/n(CAVAVC)
h/_/eo/u/e/n(CAVAVC)
h/_/e/ou/e/n(CAVVVC)
h/_/eo/ue/n(CAVVC)
h/_/eo/ue/n(CAVVC)
_/_/h/e/o/u/e/n(AACVVAVC)
_/_/h/e/o/u/e/n(AACVVAVC)
_/_/h/e/ou/e/n(AACVVVC)
_/_/h/eo/u/e/n(AACVAVC)
_/_/h/eo/u/e/n(AACVAVC)
_/_/h/e/o/ue/n(AACVVVC)
_/_/h/eo/u/e/n(AACVAVC)
_/_/h/eo/u/e/n(AACVAVC)
_/_/h/e/ou/e/n(AACVVVC)
_/_/h/eo/ue/n(AACVVC)
_/_/h/eo/ue/n(AACVVC)
				ANALYSING: heouene
					resolving (22)
					> version: h/e/o/u/e/n/e
					TRYING: e
					adding blocked set: V = V >> u, i, ue, _, e
					> version: h/e/o/u/e/n/e
					TRYING: e
					adding blocked set: V = V >> u, i, ue, _, e
					> version: h/e/ou/e/n/e
					TRYING: e
					adding blocked set: V = V >> u, i, ue, _, e
					> version: h/eo/u/e/n/e
					TRYING: eo
					adding blocked set: V = V >> u, i, ue, _, eo, e
					> version: h/eo/u/e/n/e
					TRYING: eo
					adding blocked set: V = V >> u, i, ue, _, eo, e
					> version: h/e/o/ue/n/e
					TRYING: e
					adding blocked set: V = V >> u, i, ue, _, e
					> version: h/eo/u/e/n/e
					TRYING: eo
					adding blocked set: V = V >> u, i, ue, _, eo, e
					> version: h/eo/u/e/n/e
					TRYING: eo
					adding blocked set: V = V >> u, i, ue, _, eo, e
					> version: h/e/ou/e/n/e
					TRYING: e
					adding blocked set: V = V >> u, i, ue, _, e
					> version: h/eo/ue/n/e
					TRYING: eo
					adding blocked set: V = V >> u, i, ue, _, eo, e
					> version: h/eo/ue/n/e
					TRYING: eo
					adding blocked set: V = V >> u, i, ue, _, eo, e
					> version: _/h/e/o/u/e/n/e
					TRYING: h
					> version: _/h/e/o/u/e/n/e
					TRYING: h
					> version: _/h/e/ou/e/n/e
					TRYING: h
					> version: _/h/eo/u/e/n/e
					TRYING: h
					> version: _/h/eo/u/e/n/e
					TRYING: h
					> version: _/h/e/o/ue/n/e
					TRYING: h
					> version: _/h/eo/u/e/n/e
					TRYING: h
					> version: _/h/eo/u/e/n/e
					TRYING: h
					> version: _/h/e/ou/e/n/e
					TRYING: h
					> version: _/h/eo/ue/n/e
					TRYING: h
					> version: _/h/eo/ue/n/e
					TRYING: h
					RESULT:  ['_']
				adding dashed alternative: ['h', '_', 'e', 'o', 'u', 'e', 'n', 'e']
				adding dashed alternative: ['h', '_', 'e', 'o', 'u', 'e', 'n', 'e']
				adding dashed alternative: ['h', '_', 'e', 'ou', 'e', 'n', 'e']
				adding dashed alternative: ['h', '_', 'eo', 'u', 'e', 'n', 'e']
				adding dashed alternative: ['h', '_', 'eo', 'u', 'e', 'n', 'e']
				adding dashed alternative: ['h', '_', 'e', 'o', 'ue', 'n', 'e']
				adding dashed alternative: ['h', '_', 'eo', 'u', 'e', 'n', 'e']
				adding dashed alternative: ['h', '_', 'eo', 'u', 'e', 'n', 'e']
				adding dashed alternative: ['h', '_', 'e', 'ou', 'e', 'n', 'e']
				adding dashed alternative: ['h', '_', 'eo', 'ue', 'n', 'e']
				adding dashed alternative: ['h', '_', 'eo', 'ue', 'n', 'e']
				adding dashed alternative: ['_', '_', 'h', 'e', 'o', 'u', 'e', 'n', 'e']
				adding dashed alternative: ['_', '_', 'h', 'e', 'o', 'u', 'e', 'n', 'e']
				adding dashed alternative: ['_', '_', 'h', 'e', 'ou', 'e', 'n', 'e']
				adding dashed alternative: ['_', '_', 'h', 'eo', 'u', 'e', 'n', 'e']
				adding dashed alternative: ['_', '_', 'h', 'eo', 'u', 'e', 'n', 'e']
				adding dashed alternative: ['_', '_', 'h', 'e', 'o', 'ue', 'n', 'e']
				adding dashed alternative: ['_', '_', 'h', 'eo', 'u', 'e', 'n', 'e']
				adding dashed alternative: ['_', '_', 'h', 'eo', 'u', 'e', 'n', 'e']
				adding dashed alternative: ['_', '_', 'h', 'e', 'ou', 'e', 'n', 'e']
				adding dashed alternative: ['_', '_', 'h', 'eo', 'ue', 'n', 'e']
				adding dashed alternative: ['_', '_', 'h', 'eo', 'ue', 'n', 'e']
				h/e/o/u/e/n/e(CVVCVCV)
h/e/o/u/e/n/e(CVVVVCV)
h/e/ou/e/n/e(CVVVCV)
h/eo/u/e/n/e(CVCVCV)
h/eo/u/e/n/e(CVVVCV)
h/e/o/ue/n/e(CVVVCV)
h/eo/u/e/n/e(CVCVCV)
h/eo/u/e/n/e(CVVVCV)
h/e/ou/e/n/e(CVVVCV)
h/eo/ue/n/e(CVVCV)
h/eo/ue/n/e(CVVCV)
_/h/e/o/u/e/n/e(ACVVAVCV)
_/h/e/o/u/e/n/e(ACVVAVCV)
_/h/e/ou/e/n/e(ACVVVCV)
_/h/eo/u/e/n/e(ACVAVCV)
_/h/eo/u/e/n/e(ACVAVCV)
_/h/e/o/ue/n/e(ACVVVCV)
_/h/eo/u/e/n/e(ACVAVCV)
_/h/eo/u/e/n/e(ACVAVCV)
_/h/e/ou/e/n/e(ACVVVCV)
_/h/eo/ue/n/e(ACVVCV)
_/h/eo/ue/n/e(ACVVCV)
h/_/e/o/u/e/n/e(CAVVAVCV)
h/_/e/o/u/e/n/e(CAVVAVCV)
h/_/e/ou/e/n/e(CAVVVCV)
h/_/eo/u/e/n/e(CAVAVCV)
h/_/eo/u/e/n/e(CAVAVCV)
h/_/e/o/ue/n/e(CAVVVCV)
h/_/eo/u/e/n/e(CAVAVCV)
h/_/eo/u/e/n/e(CAVAVCV)
h/_/e/ou/e/n/e(CAVVVCV)
h/_/eo/ue/n/e(CAVVCV)
h/_/eo/ue/n/e(CAVVCV)
_/_/h/e/o/u/e/n/e(AACVVAVCV)
_/_/h/e/o/u/e/n/e(AACVVAVCV)
_/_/h/e/ou/e/n/e(AACVVVCV)
_/_/h/eo/u/e/n/e(AACVAVCV)
_/_/h/eo/u/e/n/e(AACVAVCV)
_/_/h/e/o/ue/n/e(AACVVVCV)
_/_/h/eo/u/e/n/e(AACVAVCV)
_/_/h/eo/u/e/n/e(AACVAVCV)
_/_/h/e/ou/e/n/e(AACVVVCV)
_/_/h/eo/ue/n/e(AACVVCV)
_/_/h/eo/ue/n/e(AACVVCV)
				ANALYSING: heue
					resolving (10)
					> version: h/e/u/e
					TRYING: e
					adding blocked set: V = V >> u, i, ue, _, e
					> version: h/e/u/e
					TRYING: e
					adding blocked set: V = V >> u, i, ue, _, e
					> version: h/eu/e
					TRYING: eu
					adding blocked set: V = V >> u, eu, i, ue, _, e
					> version: h/e/ue
					TRYING: e
					adding blocked set: V = V >> u, i, ue, _, e
					> version: h/eu/e
					TRYING: eu
					adding blocked set: V = V >> u, eu, i, ue, _, e
					> version: _/h/e/u/e
					TRYING: h
					> version: _/h/e/u/e
					TRYING: h
					> version: _/h/eu/e
					TRYING: h
					> version: _/h/e/ue
					TRYING: h
					> version: _/h/eu/e
					TRYING: h
					RESULT:  ['_']
				adding dashed alternative: ['h', '_', 'e', 'u', 'e']
				adding dashed alternative: ['h', '_', 'e', 'u', 'e']
				adding dashed alternative: ['h', '_', 'eu', 'e']
				adding dashed alternative: ['h', '_', 'e', 'ue']
				adding dashed alternative: ['h', '_', 'eu', 'e']
				adding dashed alternative: ['_', '_', 'h', 'e', 'u', 'e']
				adding dashed alternative: ['_', '_', 'h', 'e', 'u', 'e']
				adding dashed alternative: ['_', '_', 'h', 'eu', 'e']
				adding dashed alternative: ['_', '_', 'h', 'e', 'ue']
				adding dashed alternative: ['_', '_', 'h', 'eu', 'e']
				h/e/u/e(CVCV)
h/e/u/e(CVVV)
h/eu/e(CVV)
h/e/ue(CVV)
h/eu/e(CVV)
_/h/e/u/e(ACVAV)
_/h/e/u/e(ACVAV)
_/h/eu/e(ACVV)
_/h/e/ue(ACVV)
_/h/eu/e(ACVV)
h/_/e/u/e(CAVAV)
h/_/e/u/e(CAVAV)
h/_/eu/e(CAVV)
h/_/e/ue(CAVV)
h/_/eu/e(CAVV)
_/_/h/e/u/e(AACVAV)
_/_/h/e/u/e(AACVAV)
_/_/h/eu/e(AACVV)
_/_/h/e/ue(AACVV)
_/_/h/eu/e(AACVV)
				ANALYSING: heuen
					resolving (10)
					> version: h/e/u/e/n
					TRYING: e
					adding blocked set: V = V >> u, i, ue, _, e
					> version: h/e/u/e/n
					TRYING: e
					adding blocked set: V = V >> u, i, ue, _, e
					> version: h/eu/e/n
					TRYING: eu
					adding blocked set: V = V >> u, eu, i, ue, _, e
					> version: h/e/ue/n
					TRYING: e
					adding blocked set: V = V >> u, i, ue, _, e
					> version: h/eu/e/n
					TRYING: eu
					adding blocked set: V = V >> u, eu, i, ue, _, e
					> version: _/h/e/u/e/n
					TRYING: h
					> version: _/h/e/u/e/n
					TRYING: h
					> version: _/h/eu/e/n
					TRYING: h
					> version: _/h/e/ue/n
					TRYING: h
					> version: _/h/eu/e/n
					TRYING: h
					RESULT:  ['_']
				adding dashed alternative: ['h', '_', 'e', 'u', 'e', 'n']
				adding dashed alternative: ['h', '_', 'e', 'u', 'e', 'n']
				adding dashed alternative: ['h', '_', 'eu', 'e', 'n']
				adding dashed alternative: ['h', '_', 'e', 'ue', 'n']
				adding dashed alternative: ['h', '_', 'eu', 'e', 'n']
				adding dashed alternative: ['_', '_', 'h', 'e', 'u', 'e', 'n']
				adding dashed alternative: ['_', '_', 'h', 'e', 'u', 'e', 'n']
				adding dashed alternative: ['_', '_', 'h', 'eu', 'e', 'n']
				adding dashed alternative: ['_', '_', 'h', 'e', 'ue', 'n']
				adding dashed alternative: ['_', '_', 'h', 'eu', 'e', 'n']
				h/e/u/e/n(CVCVC)
h/e/u/e/n(CVVVC)
h/eu/e/n(CVVC)
h/e/ue/n(CVVC)
h/eu/e/n(CVVC)
_/h/e/u/e/n(ACVAVC)
_/h/e/u/e/n(ACVAVC)
_/h/eu/e/n(ACVVC)
_/h/e/ue/n(ACVVC)
_/h/eu/e/n(ACVVC)
h/_/e/u/e/n(CAVAVC)
h/_/e/u/e/n(CAVAVC)
h/_/eu/e/n(CAVVC)
h/_/e/ue/n(CAVVC)
h/_/eu/e/n(CAVVC)
_/_/h/e/u/e/n(AACVAVC)
_/_/h/e/u/e/n(AACVAVC)
_/_/h/eu/e/n(AACVVC)
_/_/h/e/ue/n(AACVVC)
_/_/h/eu/e/n(AACVVC)
				ANALYSING: heuene
					resolving (10)
					> version: h/e/u/e/n/e
					TRYING: e
					adding blocked set: V = V >> u, i, ue, _, e
					> version: h/e/u/e/n/e
					TRYING: e
					adding blocked set: V = V >> u, i, ue, _, e
					> version: h/eu/e/n/e
					TRYING: eu
					adding blocked set: V = V >> u, eu, i, ue, _, e
					> version: h/e/ue/n/e
					TRYING: e
					adding blocked set: V = V >> u, i, ue, _, e
					> version: h/eu/e/n/e
					TRYING: eu
					adding blocked set: V = V >> u, eu, i, ue, _, e
					> version: _/h/e/u/e/n/e
					TRYING: h
					> version: _/h/e/u/e/n/e
					TRYING: h
					> version: _/h/eu/e/n/e
					TRYING: h
					> version: _/h/e/ue/n/e
					TRYING: h
					> version: _/h/eu/e/n/e
					TRYING: h
					RESULT:  ['_']
				adding dashed alternative: ['h', '_', 'e', 'u', 'e', 'n', 'e']
				adding dashed alternative: ['h', '_', 'e', 'u', 'e', 'n', 'e']
				adding dashed alternative: ['h', '_', 'eu', 'e', 'n', 'e']
				adding dashed alternative: ['h', '_', 'e', 'ue', 'n', 'e']
				adding dashed alternative: ['h', '_', 'eu', 'e', 'n', 'e']
				adding dashed alternative: ['_', '_', 'h', 'e', 'u', 'e', 'n', 'e']
				adding dashed alternative: ['_', '_', 'h', 'e', 'u', 'e', 'n', 'e']
				adding dashed alternative: ['_', '_', 'h', 'eu', 'e', 'n', 'e']
				adding dashed alternative: ['_', '_', 'h', 'e', 'ue', 'n', 'e']
				adding dashed alternative: ['_', '_', 'h', 'eu', 'e', 'n', 'e']
				h/e/u/e/n/e(CVCVCV)
h/e/u/e/n/e(CVVVCV)
h/eu/e/n/e(CVVCV)
h/e/ue/n/e(CVVCV)
h/eu/e/n/e(CVVCV)
_/h/e/u/e/n/e(ACVAVCV)
_/h/e/u/e/n/e(ACVAVCV)
_/h/eu/e/n/e(ACVVCV)
_/h/e/ue/n/e(ACVVCV)
_/h/eu/e/n/e(ACVVCV)
h/_/e/u/e/n/e(CAVAVCV)
h/_/e/u/e/n/e(CAVAVCV)
h/_/eu/e/n/e(CAVVCV)
h/_/e/ue/n/e(CAVVCV)
h/_/eu/e/n/e(CAVVCV)
_/_/h/e/u/e/n/e(AACVAVCV)
_/_/h/e/u/e/n/e(AACVAVCV)
_/_/h/eu/e/n/e(AACVVCV)
_/_/h/e/ue/n/e(AACVVCV)
_/_/h/eu/e/n/e(AACVVCV)
				ANALYSING: houen
					resolving (10)
					> version: h/o/u/e/n
					TRYING: o
					adding blocked set: V = V >> u, i, ue, _, e, o
					> version: h/o/u/e/n
					TRYING: o
					adding blocked set: V = V >> u, i, ue, _, e, o
					> version: h/ou/e/n
					TRYING: ou
					adding blocked set: V = V >> u, i, ue, _, ou, e
					> version: h/o/ue/n
					TRYING: o
					adding blocked set: V = V >> u, i, ue, _, e, o
					> version: h/ou/e/n
					TRYING: ou
					adding blocked set: V = V >> u, i, ue, _, ou, e
					> version: _/h/o/u/e/n
					TRYING: h
					> version: _/h/o/u/e/n
					TRYING: h
					> version: _/h/ou/e/n
					TRYING: h
					> version: _/h/o/ue/n
					TRYING: h
					> version: _/h/ou/e/n
					TRYING: h
					RESULT:  ['_']
				adding dashed alternative: ['h', '_', 'o', 'u', 'e', 'n']
				adding dashed alternative: ['h', '_', 'o', 'u', 'e', 'n']
				adding dashed alternative: ['h', '_', 'ou', 'e', 'n']
				adding dashed alternative: ['h', '_', 'o', 'ue', 'n']
				adding dashed alternative: ['h', '_', 'ou', 'e', 'n']
				adding dashed alternative: ['_', '_', 'h', 'o', 'u', 'e', 'n']
				adding dashed alternative: ['_', '_', 'h', 'o', 'u', 'e', 'n']
				adding dashed alternative: ['_', '_', 'h', 'ou', 'e', 'n']
				adding dashed alternative: ['_', '_', 'h', 'o', 'ue', 'n']
				adding dashed alternative: ['_', '_', 'h', 'ou', 'e', 'n']
				h/o/u/e/n(CVCVC)
h/o/u/e/n(CVVVC)
h/ou/e/n(CVVC)
h/o/ue/n(CVVC)
h/ou/e/n(CVVC)
_/h/o/u/e/n(ACVAVC)
_/h/o/u/e/n(ACVAVC)
_/h/ou/e/n(ACVVC)
_/h/o/ue/n(ACVVC)
_/h/ou/e/n(ACVVC)
h/_/o/u/e/n(CAVAVC)
h/_/o/u/e/n(CAVAVC)
h/_/ou/e/n(CAVVC)
h/_/o/ue/n(CAVVC)
h/_/ou/e/n(CAVVC)
_/_/h/o/u/e/n(AACVAVC)
_/_/h/o/u/e/n(AACVAVC)
_/_/h/ou/e/n(AACVVC)
_/_/h/o/ue/n(AACVVC)
_/_/h/ou/e/n(AACVVC)
				ANALYSING: lich
					resolving (4)
					> version: l/i/c/h
					TRYING: i
					adding blocked set: V = V >> u, i, ue, _, e
					> version: l/i/c/h
					TRYING: i
					adding blocked set: V = V >> u, i, ue, _, e
					> version: l/i/ch
					TRYING: i
					adding blocked set: V = V >> u, i, ue, _, e
					> version: l/i/ch
					TRYING: i
					adding blocked set: V = V >> u, i, ue, _, e
					RESULT:  ['_']
				adding dashed alternative: ['l', '_', 'i', 'c', 'h']
				adding dashed alternative: ['l', '_', 'i', 'c', 'h']
				adding dashed alternative: ['l', '_', 'i', 'ch']
				adding dashed alternative: ['l', '_', 'i', 'ch']
				l/i/c/h(CCCC)
l/i/c/h(CVCC)
l/i/ch(CCC)
l/i/ch(CVC)
l/_/i/c/h(CAACC)
l/_/i/c/h(CAACC)
l/_/i/ch(CAAC)
l/_/i/ch(CAAC)
			___CVCCV : 2___
				ANALYSING: liche
				adding littera based on matching pattern
				ANALYSING: eue
					resolving (10)
					> version: e/u/e
					TRYING: e
					> version: e/u/e
					TRYING: e
					> version: eu/e
					> version: e/ue
					> version: eu/e
					> version: _/e/u/e
					TRYING: u
					adding blocked set: C = C >> u, c
					> version: _/e/u/e
					TRYING: u
					adding blocked set: C = C >> u, c
					> version: _/eu/e
					TRYING: e
					> version: _/e/ue
					TRYING: ue
					> version: _/eu/e
					TRYING: e
					RESULT:  ['_']
				adding dashed alternative: ['e', 'u', '_', 'e']
				adding dashed alternative: ['e', 'u', '_', 'e']
				adding dashed alternative: ['eu', 'e', '_']
				adding dashed alternative: ['e', 'ue', '_']
				adding dashed alternative: ['eu', 'e', '_']
				adding dashed alternative: ['_', 'e', '_', 'u', 'e']
				adding dashed alternative: ['_', 'e', '_', 'u', 'e']
				adding dashed alternative: ['_', 'eu', '_', 'e']
				adding dashed alternative: ['_', 'e', '_', 'ue']
				adding dashed alternative: ['_', 'eu', '_', 'e']
				e/u/e(VCV)
e/u/e(VVV)
eu/e(VV)
e/ue(VV)
eu/e(VV)
_/e/u/e(AVAV)
_/e/u/e(AVAV)
_/eu/e(AVV)
_/e/ue(AVV)
_/eu/e(AVV)
e/u/_/e(VAAV)
e/u/_/e(VAAV)
eu/e/_(VVA)
e/ue/_(VVA)
eu/e/_(VVA)
_/e/_/u/e(AVAAV)
_/e/_/u/e(AVAAV)
_/eu/_/e(AVAV)
_/e/_/ue(AVAV)
_/eu/_/e(AVAV)
				ANALYSING: he
					resolving (4)
					> version: h/e
					> version: _/h/e
					TRYING: e
					> version: h/_/e
					TRYING: e
					> version: _/_/h/e
					TRYING: h
					RESULT:  ['h']
				ANALYSING: heo
					resolving (8)
					> version: h/e/o
					TRYING: o
					> version: h/eo
					> version: _/h/e/o
					TRYING: e
					> version: _/h/eo
					TRYING: eo
					> version: h/_/e/o
					TRYING: e
					> version: h/_/eo
					TRYING: eo
					> version: _/_/h/e/o
					TRYING: h
					> version: _/_/h/eo
					TRYING: h
					RESULT:  ['h']
				ANALYSING: heofen
					resolving (8)
					> version: h/e/o/f/e/n
					TRYING: o
					> version: h/eo/f/e/n
					TRYING: f
					adding blocked set: C = C >> f, h, c, _
					> version: _/h/e/o/f/e/n
					TRYING: e
					> version: _/h/eo/f/e/n
					TRYING: eo
					> version: h/_/e/o/f/e/n
					TRYING: e
					> version: h/_/eo/f/e/n
					TRYING: eo
					> version: _/_/h/e/o/f/e/n
					TRYING: h
					> version: _/_/h/eo/f/e/n
					TRYING: h
					RESULT:  ['h']
				ANALYSING: heofenn
					resolving (16)
					> version: h/e/o/f/e/n/n
					TRYING: o
					> version: h/e/o/f/e/nn
					TRYING: o
					> version: h/eo/f/e/n/n
					TRYING: f
					adding blocked set: C = C >> f, h, c, _
					> version: h/eo/f/e/nn
					TRYING: f
					adding blocked set: C = C >> f, h, c, _
					> version: _/h/e/o/f/e/n/n
					TRYING: e
					> version: _/h/e/o/f/e/nn
					TRYING: e
					> version: _/h/eo/f/e/n/n
					TRYING: eo
					> version: _/h/eo/f/e/nn
					TRYING: eo
					> version: h/_/e/o/f/e/n/n
					TRYING: e
					> version: h/_/e/o/f/e/nn
					TRYING: e
					> version: h/_/eo/f/e/n/n
					TRYING: eo
					> version: h/_/eo/f/e/nn
					TRYING: eo
					> version: _/_/h/e/o/f/e/n/n
					TRYING: h
					> version: _/_/h/e/o/f/e/nn
					TRYING: h
					> version: _/_/h/eo/f/e/n/n
					TRYING: h
					> version: _/_/h/eo/f/e/nn
					TRYING: h
					RESULT:  ['h']
				ANALYSING: heofon
					resolving (8)
					> version: h/e/o/f/o/n
					TRYING: o
					> version: h/eo/f/o/n
					TRYING: f
					adding blocked set: C = C >> f, h, c, _
					> version: _/h/e/o/f/o/n
					TRYING: e
					> version: _/h/eo/f/o/n
					TRYING: eo
					> version: h/_/e/o/f/o/n
					TRYING: e
					> version: h/_/eo/f/o/n
					TRYING: eo
					> version: _/_/h/e/o/f/o/n
					TRYING: h
					> version: _/_/h/eo/f/o/n
					TRYING: h
					RESULT:  ['h']
				ANALYSING: heoue
					resolving (44)
					> version: h/e/o/u/e
					TRYING: o
					> version: h/e/o/u/e
					TRYING: o
					> version: h/e/ou/e
					TRYING: ou
					> version: h/eo/u/e
					TRYING: u
					adding blocked set: C = C >> u, h, c, _
					> version: h/eo/u/e
					TRYING: u
					adding blocked set: C = C >> u, h, c, _
					> version: h/e/o/ue
					TRYING: o
					> version: h/eo/u/e
					TRYING: u
					adding blocked set: C = C >> u, h, c, _
					> version: h/eo/u/e
					TRYING: u
					adding blocked set: C = C >> u, h, c, _
					> version: h/e/ou/e
					TRYING: ou
					> version: h/eo/ue
					TRYING: ue
					> version: h/eo/ue
					TRYING: ue
					> version: _/h/e/o/u/e
					TRYING: e
					> version: _/h/e/o/u/e
					TRYING: e
					> version: _/h/e/ou/e
					TRYING: e
					> version: _/h/eo/u/e
					TRYING: eo
					> version: _/h/eo/u/e
					TRYING: eo
					> version: _/h/e/o/ue
					TRYING: e
					> version: _/h/eo/u/e
					TRYING: eo
					> version: _/h/eo/u/e
					TRYING: eo
					> version: _/h/e/ou/e
					TRYING: e
					> version: _/h/eo/ue
					TRYING: eo
					> version: _/h/eo/ue
					TRYING: eo
					> version: h/_/e/o/u/e
					TRYING: e
					> version: h/_/e/o/u/e
					TRYING: e
					> version: h/_/e/ou/e
					TRYING: e
					> version: h/_/eo/u/e
					TRYING: eo
					> version: h/_/eo/u/e
					TRYING: eo
					> version: h/_/e/o/ue
					TRYING: e
					> version: h/_/eo/u/e
					TRYING: eo
					> version: h/_/eo/u/e
					TRYING: eo
					> version: h/_/e/ou/e
					TRYING: e
					> version: h/_/eo/ue
					TRYING: eo
					> version: h/_/eo/ue
					TRYING: eo
					> version: _/_/h/e/o/u/e
					TRYING: h
					> version: _/_/h/e/o/u/e
					TRYING: h
					> version: _/_/h/e/ou/e
					TRYING: h
					> version: _/_/h/eo/u/e
					TRYING: h
					> version: _/_/h/eo/u/e
					TRYING: h
					> version: _/_/h/e/o/ue
					TRYING: h
					> version: _/_/h/eo/u/e
					TRYING: h
					> version: _/_/h/eo/u/e
					TRYING: h
					> version: _/_/h/e/ou/e
					TRYING: h
					> version: _/_/h/eo/ue
					TRYING: h
					> version: _/_/h/eo/ue
					TRYING: h
					RESULT:  ['h']
				ANALYSING: heouen
					resolving (44)
					> version: h/e/o/u/e/n
					TRYING: o
					> version: h/e/o/u/e/n
					TRYING: o
					> version: h/e/ou/e/n
					TRYING: ou
					> version: h/eo/u/e/n
					TRYING: u
					adding blocked set: C = C >> u, h, c, _
					> version: h/eo/u/e/n
					TRYING: u
					adding blocked set: C = C >> u, h, c, _
					> version: h/e/o/ue/n
					TRYING: o
					> version: h/eo/u/e/n
					TRYING: u
					adding blocked set: C = C >> u, h, c, _
					> version: h/eo/u/e/n
					TRYING: u
					adding blocked set: C = C >> u, h, c, _
					> version: h/e/ou/e/n
					TRYING: ou
					> version: h/eo/ue/n
					TRYING: ue
					> version: h/eo/ue/n
					TRYING: ue
					> version: _/h/e/o/u/e/n
					TRYING: e
					> version: _/h/e/o/u/e/n
					TRYING: e
					> version: _/h/e/ou/e/n
					TRYING: e
					> version: _/h/eo/u/e/n
					TRYING: eo
					> version: _/h/eo/u/e/n
					TRYING: eo
					> version: _/h/e/o/ue/n
					TRYING: e
					> version: _/h/eo/u/e/n
					TRYING: eo
					> version: _/h/eo/u/e/n
					TRYING: eo
					> version: _/h/e/ou/e/n
					TRYING: e
					> version: _/h/eo/ue/n
					TRYING: eo
					> version: _/h/eo/ue/n
					TRYING: eo
					> version: h/_/e/o/u/e/n
					TRYING: e
					> version: h/_/e/o/u/e/n
					TRYING: e
					> version: h/_/e/ou/e/n
					TRYING: e
					> version: h/_/eo/u/e/n
					TRYING: eo
					> version: h/_/eo/u/e/n
					TRYING: eo
					> version: h/_/e/o/ue/n
					TRYING: e
					> version: h/_/eo/u/e/n
					TRYING: eo
					> version: h/_/eo/u/e/n
					TRYING: eo
					> version: h/_/e/ou/e/n
					TRYING: e
					> version: h/_/eo/ue/n
					TRYING: eo
					> version: h/_/eo/ue/n
					TRYING: eo
					> version: _/_/h/e/o/u/e/n
					TRYING: h
					> version: _/_/h/e/o/u/e/n
					TRYING: h
					> version: _/_/h/e/ou/e/n
					TRYING: h
					> version: _/_/h/eo/u/e/n
					TRYING: h
					> version: _/_/h/eo/u/e/n
					TRYING: h
					> version: _/_/h/e/o/ue/n
					TRYING: h
					> version: _/_/h/eo/u/e/n
					TRYING: h
					> version: _/_/h/eo/u/e/n
					TRYING: h
					> version: _/_/h/e/ou/e/n
					TRYING: h
					> version: _/_/h/eo/ue/n
					TRYING: h
					> version: _/_/h/eo/ue/n
					TRYING: h
					RESULT:  ['h']
				ANALYSING: heouene
					resolving (44)
					> version: h/e/o/u/e/n/e
					TRYING: o
					> version: h/e/o/u/e/n/e
					TRYING: o
					> version: h/e/ou/e/n/e
					TRYING: ou
					> version: h/eo/u/e/n/e
					TRYING: u
					adding blocked set: C = C >> u, h, c, _
					> version: h/eo/u/e/n/e
					TRYING: u
					adding blocked set: C = C >> u, h, c, _
					> version: h/e/o/ue/n/e
					TRYING: o
					> version: h/eo/u/e/n/e
					TRYING: u
					adding blocked set: C = C >> u, h, c, _
					> version: h/eo/u/e/n/e
					TRYING: u
					adding blocked set: C = C >> u, h, c, _
					> version: h/e/ou/e/n/e
					TRYING: ou
					> version: h/eo/ue/n/e
					TRYING: ue
					> version: h/eo/ue/n/e
					TRYING: ue
					> version: _/h/e/o/u/e/n/e
					TRYING: e
					> version: _/h/e/o/u/e/n/e
					TRYING: e
					> version: _/h/e/ou/e/n/e
					TRYING: e
					> version: _/h/eo/u/e/n/e
					TRYING: eo
					> version: _/h/eo/u/e/n/e
					TRYING: eo
					> version: _/h/e/o/ue/n/e
					TRYING: e
					> version: _/h/eo/u/e/n/e
					TRYING: eo
					> version: _/h/eo/u/e/n/e
					TRYING: eo
					> version: _/h/e/ou/e/n/e
					TRYING: e
					> version: _/h/eo/ue/n/e
					TRYING: eo
					> version: _/h/eo/ue/n/e
					TRYING: eo
					> version: h/_/e/o/u/e/n/e
					TRYING: e
					> version: h/_/e/o/u/e/n/e
					TRYING: e
					> version: h/_/e/ou/e/n/e
					TRYING: e
					> version: h/_/eo/u/e/n/e
					TRYING: eo
					> version: h/_/eo/u/e/n/e
					TRYING: eo
					> version: h/_/e/o/ue/n/e
					TRYING: e
					> version: h/_/eo/u/e/n/e
					TRYING: eo
					> version: h/_/eo/u/e/n/e
					TRYING: eo
					> version: h/_/e/ou/e/n/e
					TRYING: e
					> version: h/_/eo/ue/n/e
					TRYING: eo
					> version: h/_/eo/ue/n/e
					TRYING: eo
					> version: _/_/h/e/o/u/e/n/e
					TRYING: h
					> version: _/_/h/e/o/u/e/n/e
					TRYING: h
					> version: _/_/h/e/ou/e/n/e
					TRYING: h
					> version: _/_/h/eo/u/e/n/e
					TRYING: h
					> version: _/_/h/eo/u/e/n/e
					TRYING: h
					> version: _/_/h/e/o/ue/n/e
					TRYING: h
					> version: _/_/h/eo/u/e/n/e
					TRYING: h
					> version: _/_/h/eo/u/e/n/e
					TRYING: h
					> version: _/_/h/e/ou/e/n/e
					TRYING: h
					> version: _/_/h/eo/ue/n/e
					TRYING: h
					> version: _/_/h/eo/ue/n/e
					TRYING: h
					RESULT:  ['h']
				ANALYSING: heue
					resolving (20)
					> version: h/e/u/e
					TRYING: u
					adding blocked set: C = C >> u, h, c, _
					> version: h/e/u/e
					TRYING: u
					adding blocked set: C = C >> u, h, c, _
					> version: h/eu/e
					TRYING: e
					> version: h/e/ue
					TRYING: ue
					> version: h/eu/e
					TRYING: e
					> version: _/h/e/u/e
					TRYING: e
					> version: _/h/e/u/e
					TRYING: e
					> version: _/h/eu/e
					TRYING: eu
					> version: _/h/e/ue
					TRYING: e
					> version: _/h/eu/e
					TRYING: eu
					> version: h/_/e/u/e
					TRYING: e
					> version: h/_/e/u/e
					TRYING: e
					> version: h/_/eu/e
					TRYING: eu
					> version: h/_/e/ue
					TRYING: e
					> version: h/_/eu/e
					TRYING: eu
					> version: _/_/h/e/u/e
					TRYING: h
					> version: _/_/h/e/u/e
					TRYING: h
					> version: _/_/h/eu/e
					TRYING: h
					> version: _/_/h/e/ue
					TRYING: h
					> version: _/_/h/eu/e
					TRYING: h
					RESULT:  ['h']
				ANALYSING: heuen
					resolving (20)
					> version: h/e/u/e/n
					TRYING: u
					adding blocked set: C = C >> u, h, c, _
					> version: h/e/u/e/n
					TRYING: u
					adding blocked set: C = C >> u, h, c, _
					> version: h/eu/e/n
					TRYING: e
					> version: h/e/ue/n
					TRYING: ue
					> version: h/eu/e/n
					TRYING: e
					> version: _/h/e/u/e/n
					TRYING: e
					> version: _/h/e/u/e/n
					TRYING: e
					> version: _/h/eu/e/n
					TRYING: eu
					> version: _/h/e/ue/n
					TRYING: e
					> version: _/h/eu/e/n
					TRYING: eu
					> version: h/_/e/u/e/n
					TRYING: e
					> version: h/_/e/u/e/n
					TRYING: e
					> version: h/_/eu/e/n
					TRYING: eu
					> version: h/_/e/ue/n
					TRYING: e
					> version: h/_/eu/e/n
					TRYING: eu
					> version: _/_/h/e/u/e/n
					TRYING: h
					> version: _/_/h/e/u/e/n
					TRYING: h
					> version: _/_/h/eu/e/n
					TRYING: h
					> version: _/_/h/e/ue/n
					TRYING: h
					> version: _/_/h/eu/e/n
					TRYING: h
					RESULT:  ['h']
				ANALYSING: heuene
					resolving (20)
					> version: h/e/u/e/n/e
					TRYING: u
					adding blocked set: C = C >> u, h, c, _
					> version: h/e/u/e/n/e
					TRYING: u
					adding blocked set: C = C >> u, h, c, _
					> version: h/eu/e/n/e
					TRYING: e
					> version: h/e/ue/n/e
					TRYING: ue
					> version: h/eu/e/n/e
					TRYING: e
					> version: _/h/e/u/e/n/e
					TRYING: e
					> version: _/h/e/u/e/n/e
					TRYING: e
					> version: _/h/eu/e/n/e
					TRYING: eu
					> version: _/h/e/ue/n/e
					TRYING: e
					> version: _/h/eu/e/n/e
					TRYING: eu
					> version: h/_/e/u/e/n/e
					TRYING: e
					> version: h/_/e/u/e/n/e
					TRYING: e
					> version: h/_/eu/e/n/e
					TRYING: eu
					> version: h/_/e/ue/n/e
					TRYING: e
					> version: h/_/eu/e/n/e
					TRYING: eu
					> version: _/_/h/e/u/e/n/e
					TRYING: h
					> version: _/_/h/e/u/e/n/e
					TRYING: h
					> version: _/_/h/eu/e/n/e
					TRYING: h
					> version: _/_/h/e/ue/n/e
					TRYING: h
					> version: _/_/h/eu/e/n/e
					TRYING: h
					RESULT:  ['h']
				ANALYSING: houen
					resolving (20)
					> version: h/o/u/e/n
					TRYING: u
					adding blocked set: C = C >> u, h, c, _
					> version: h/o/u/e/n
					TRYING: u
					adding blocked set: C = C >> u, h, c, _
					> version: h/ou/e/n
					TRYING: e
					> version: h/o/ue/n
					TRYING: ue
					> version: h/ou/e/n
					TRYING: e
					> version: _/h/o/u/e/n
					TRYING: o
					> version: _/h/o/u/e/n
					TRYING: o
					> version: _/h/ou/e/n
					TRYING: ou
					> version: _/h/o/ue/n
					TRYING: o
					> version: _/h/ou/e/n
					TRYING: ou
					> version: h/_/o/u/e/n
					TRYING: o
					> version: h/_/o/u/e/n
					TRYING: o
					> version: h/_/ou/e/n
					TRYING: ou
					> version: h/_/o/ue/n
					TRYING: o
					> version: h/_/ou/e/n
					TRYING: ou
					> version: _/_/h/o/u/e/n
					TRYING: h
					> version: _/_/h/o/u/e/n
					TRYING: h
					> version: _/_/h/ou/e/n
					TRYING: h
					> version: _/_/h/o/ue/n
					TRYING: h
					> version: _/_/h/ou/e/n
					TRYING: h
					RESULT:  ['h']
				ANALYSING: lich
					resolving (8)
					> version: l/i/c/h
					TRYING: c
					> version: l/i/c/h
					TRYING: c
					> version: l/i/ch
					TRYING: ch
					>>> MULTIPLE RESOLVE OPTIONS: {'ch', 'c'}
					> version: l/i/ch
					TRYING: ch
					>>> MULTIPLE RESOLVE OPTIONS: {'ch', 'c'}
					> version: l/_/i/c/h
					TRYING: i
					adding blocked set: C = C >> i, h, c, _
					>>> MULTIPLE RESOLVE OPTIONS: {'ch', 'c'}
					> version: l/_/i/c/h
					TRYING: i
					adding blocked set: C = C >> i, h, c, _
					>>> MULTIPLE RESOLVE OPTIONS: {'ch', 'c'}
					> version: l/_/i/ch
					TRYING: i
					adding blocked set: C = C >> i, h, c, _
					>>> MULTIPLE RESOLVE OPTIONS: {'ch', 'c'}
					> version: l/_/i/ch
					TRYING: i
					adding blocked set: C = C >> i, h, c, _
					>>> MULTIPLE RESOLVE OPTIONS: {'ch', 'c'}
					RESULT:  ['ch', 'c']
			___CVCCV : 3___
				ANALYSING: liche
				adding littera based on matching pattern
				ANALYSING: eue
					resolving (20)
					> version: e/u/e
					> version: e/u/e
					> version: eu/e
					> version: e/ue
					> version: eu/e
					> version: _/e/u/e
					TRYING: e
					> version: _/e/u/e
					TRYING: e
					> version: _/eu/e
					> version: _/e/ue
					> version: _/eu/e
					> version: e/u/_/e
					TRYING: e
					> version: e/u/_/e
					TRYING: e
					> version: eu/e/_
					> version: e/ue/_
					> version: eu/e/_
					> version: _/e/_/u/e
					TRYING: u
					> version: _/e/_/u/e
					TRYING: u
					> version: _/eu/_/e
					TRYING: e
					> version: _/e/_/ue
					TRYING: ue
					> version: _/eu/_/e
					TRYING: e
					RESULT:  ['u']
				ANALYSING: he
					resolving (4)
					> version: h/e
					> version: _/h/e
					> version: h/_/e
					> version: _/_/h/e
					TRYING: e
					RESULT:  ['_']
				adding dashed alternative: ['h', 'e', '_']
				adding dashed alternative: ['_', 'h', 'e', '_']
				adding dashed alternative: ['h', '_', 'e', '_']
				adding dashed alternative: ['_', '_', 'h', '_', 'e']
				h/e(CV)
_/h/e(ACV)
h/_/e(CAV)
_/_/h/e(AACV)
h/e/_(CVA)
_/h/e/_(ACVA)
h/_/e/_(CAVA)
_/_/h/_/e(AACAV)
				ANALYSING: heo
					resolving (8)
					> version: h/e/o
					> version: h/eo
					> version: _/h/e/o
					TRYING: o
					> version: _/h/eo
					> version: h/_/e/o
					TRYING: o
					> version: h/_/eo
					> version: _/_/h/e/o
					TRYING: e
					> version: _/_/h/eo
					TRYING: eo
					RESULT:  ['_']
				adding dashed alternative: ['h', 'e', 'o', '_']
				adding dashed alternative: ['h', 'eo', '_']
				adding dashed alternative: ['_', 'h', 'e', '_', 'o']
				adding dashed alternative: ['_', 'h', 'eo', '_']
				adding dashed alternative: ['h', '_', 'e', '_', 'o']
				adding dashed alternative: ['h', '_', 'eo', '_']
				adding dashed alternative: ['_', '_', 'h', '_', 'e', 'o']
				adding dashed alternative: ['_', '_', 'h', '_', 'eo']
				h/e/o(CVV)
h/eo(CV)
_/h/e/o(ACVV)
_/h/eo(ACV)
h/_/e/o(CAVV)
h/_/eo(CAV)
_/_/h/e/o(AACVV)
_/_/h/eo(AACV)
h/e/o/_(CVVA)
h/eo/_(CVA)
_/h/e/_/o(ACVAV)
_/h/eo/_(ACVA)
h/_/e/_/o(CAVAV)
h/_/eo/_(CAVA)
_/_/h/_/e/o(AACAVV)
_/_/h/_/eo(AACAV)
				ANALYSING: heofen
					resolving (8)
					> version: h/e/o/f/e/n
					TRYING: f
					adding blocked set: C = C >> u, h, f, _
					> version: h/eo/f/e/n
					TRYING: e
					> version: _/h/e/o/f/e/n
					TRYING: o
					> version: _/h/eo/f/e/n
					TRYING: f
					adding blocked set: C = C >> u, h, f, _
					> version: h/_/e/o/f/e/n
					TRYING: o
					> version: h/_/eo/f/e/n
					TRYING: f
					adding blocked set: C = C >> u, h, f, _
					> version: _/_/h/e/o/f/e/n
					TRYING: e
					> version: _/_/h/eo/f/e/n
					TRYING: eo
					RESULT:  ['_']
				adding dashed alternative: ['h', 'e', 'o', '_', 'f', 'e', 'n']
				adding dashed alternative: ['h', 'eo', 'f', '_', 'e', 'n']
				adding dashed alternative: ['_', 'h', 'e', '_', 'o', 'f', 'e', 'n']
				adding dashed alternative: ['_', 'h', 'eo', '_', 'f', 'e', 'n']
				adding dashed alternative: ['h', '_', 'e', '_', 'o', 'f', 'e', 'n']
				adding dashed alternative: ['h', '_', 'eo', '_', 'f', 'e', 'n']
				adding dashed alternative: ['_', '_', 'h', '_', 'e', 'o', 'f', 'e', 'n']
				adding dashed alternative: ['_', '_', 'h', '_', 'eo', 'f', 'e', 'n']
				h/e/o/f/e/n(CVVCVC)
h/eo/f/e/n(CVCVC)
_/h/e/o/f/e/n(ACVVCVC)
_/h/eo/f/e/n(ACVCVC)
h/_/e/o/f/e/n(CAVVCVC)
h/_/eo/f/e/n(CAVCVC)
_/_/h/e/o/f/e/n(AACVVCVC)
_/_/h/eo/f/e/n(AACVCVC)
h/e/o/_/f/e/n(CVVACVC)
h/eo/f/_/e/n(CVCAVC)
_/h/e/_/o/f/e/n(ACVAVCVC)
_/h/eo/_/f/e/n(ACVACVC)
h/_/e/_/o/f/e/n(CAVAVCVC)
h/_/eo/_/f/e/n(CAVACVC)
_/_/h/_/e/o/f/e/n(AACAVVCVC)
_/_/h/_/eo/f/e/n(AACAVCVC)
				ANALYSING: heofenn
					resolving (16)
					> version: h/e/o/f/e/n/n
					TRYING: f
					adding blocked set: C = C >> u, h, f, _
					> version: h/e/o/f/e/nn
					TRYING: f
					adding blocked set: C = C >> u, h, f, _
					> version: h/eo/f/e/n/n
					TRYING: e
					> version: h/eo/f/e/nn
					TRYING: e
					> version: _/h/e/o/f/e/n/n
					TRYING: o
					> version: _/h/e/o/f/e/nn
					TRYING: o
					> version: _/h/eo/f/e/n/n
					TRYING: f
					adding blocked set: C = C >> u, h, f, _
					> version: _/h/eo/f/e/nn
					TRYING: f
					adding blocked set: C = C >> u, h, f, _
					> version: h/_/e/o/f/e/n/n
					TRYING: o
					> version: h/_/e/o/f/e/nn
					TRYING: o
					> version: h/_/eo/f/e/n/n
					TRYING: f
					adding blocked set: C = C >> u, h, f, _
					> version: h/_/eo/f/e/nn
					TRYING: f
					adding blocked set: C = C >> u, h, f, _
					> version: _/_/h/e/o/f/e/n/n
					TRYING: e
					> version: _/_/h/e/o/f/e/nn
					TRYING: e
					> version: _/_/h/eo/f/e/n/n
					TRYING: eo
					> version: _/_/h/eo/f/e/nn
					TRYING: eo
					RESULT:  ['_']
				adding dashed alternative: ['h', 'e', 'o', '_', 'f', 'e', 'n', 'n']
				adding dashed alternative: ['h', 'e', 'o', '_', 'f', 'e', 'nn']
				adding dashed alternative: ['h', 'eo', 'f', '_', 'e', 'n', 'n']
				adding dashed alternative: ['h', 'eo', 'f', '_', 'e', 'nn']
				adding dashed alternative: ['_', 'h', 'e', '_', 'o', 'f', 'e', 'n', 'n']
				adding dashed alternative: ['_', 'h', 'e', '_', 'o', 'f', 'e', 'nn']
				adding dashed alternative: ['_', 'h', 'eo', '_', 'f', 'e', 'n', 'n']
				adding dashed alternative: ['_', 'h', 'eo', '_', 'f', 'e', 'nn']
				adding dashed alternative: ['h', '_', 'e', '_', 'o', 'f', 'e', 'n', 'n']
				adding dashed alternative: ['h', '_', 'e', '_', 'o', 'f', 'e', 'nn']
				adding dashed alternative: ['h', '_', 'eo', '_', 'f', 'e', 'n', 'n']
				adding dashed alternative: ['h', '_', 'eo', '_', 'f', 'e', 'nn']
				adding dashed alternative: ['_', '_', 'h', '_', 'e', 'o', 'f', 'e', 'n', 'n']
				adding dashed alternative: ['_', '_', 'h', '_', 'e', 'o', 'f', 'e', 'nn']
				adding dashed alternative: ['_', '_', 'h', '_', 'eo', 'f', 'e', 'n', 'n']
				adding dashed alternative: ['_', '_', 'h', '_', 'eo', 'f', 'e', 'nn']
				h/e/o/f/e/n/n(CVVCVCC)
h/e/o/f/e/nn(CVVCVC)
h/eo/f/e/n/n(CVCVCC)
h/eo/f/e/nn(CVCVC)
_/h/e/o/f/e/n/n(ACVVCVCC)
_/h/e/o/f/e/nn(ACVVCVC)
_/h/eo/f/e/n/n(ACVCVCC)
_/h/eo/f/e/nn(ACVCVC)
h/_/e/o/f/e/n/n(CAVVCVCC)
h/_/e/o/f/e/nn(CAVVCVC)
h/_/eo/f/e/n/n(CAVCVCC)
h/_/eo/f/e/nn(CAVCVC)
_/_/h/e/o/f/e/n/n(AACVVCVCC)
_/_/h/e/o/f/e/nn(AACVVCVC)
_/_/h/eo/f/e/n/n(AACVCVCC)
_/_/h/eo/f/e/nn(AACVCVC)
h/e/o/_/f/e/n/n(CVVACVCC)
h/e/o/_/f/e/nn(CVVACVC)
h/eo/f/_/e/n/n(CVCAVCC)
h/eo/f/_/e/nn(CVCAVC)
_/h/e/_/o/f/e/n/n(ACVAVCVCC)
_/h/e/_/o/f/e/nn(ACVAVCVC)
_/h/eo/_/f/e/n/n(ACVACVCC)
_/h/eo/_/f/e/nn(ACVACVC)
h/_/e/_/o/f/e/n/n(CAVAVCVCC)
h/_/e/_/o/f/e/nn(CAVAVCVC)
h/_/eo/_/f/e/n/n(CAVACVCC)
h/_/eo/_/f/e/nn(CAVACVC)
_/_/h/_/e/o/f/e/n/n(AACAVVCVCC)
_/_/h/_/e/o/f/e/nn(AACAVVCVC)
_/_/h/_/eo/f/e/n/n(AACAVCVCC)
_/_/h/_/eo/f/e/nn(AACAVCVC)
				ANALYSING: heofon
					resolving (8)
					> version: h/e/o/f/o/n
					TRYING: f
					adding blocked set: C = C >> u, h, f, _
					> version: h/eo/f/o/n
					TRYING: o
					> version: _/h/e/o/f/o/n
					TRYING: o
					> version: _/h/eo/f/o/n
					TRYING: f
					adding blocked set: C = C >> u, h, f, _
					> version: h/_/e/o/f/o/n
					TRYING: o
					> version: h/_/eo/f/o/n
					TRYING: f
					adding blocked set: C = C >> u, h, f, _
					> version: _/_/h/e/o/f/o/n
					TRYING: e
					> version: _/_/h/eo/f/o/n
					TRYING: eo
					RESULT:  ['_']
				adding dashed alternative: ['h', 'e', 'o', '_', 'f', 'o', 'n']
				adding dashed alternative: ['h', 'eo', 'f', '_', 'o', 'n']
				adding dashed alternative: ['_', 'h', 'e', '_', 'o', 'f', 'o', 'n']
				adding dashed alternative: ['_', 'h', 'eo', '_', 'f', 'o', 'n']
				adding dashed alternative: ['h', '_', 'e', '_', 'o', 'f', 'o', 'n']
				adding dashed alternative: ['h', '_', 'eo', '_', 'f', 'o', 'n']
				adding dashed alternative: ['_', '_', 'h', '_', 'e', 'o', 'f', 'o', 'n']
				adding dashed alternative: ['_', '_', 'h', '_', 'eo', 'f', 'o', 'n']
				h/e/o/f/o/n(CVVCVC)
h/eo/f/o/n(CVCVC)
_/h/e/o/f/o/n(ACVVCVC)
_/h/eo/f/o/n(ACVCVC)
h/_/e/o/f/o/n(CAVVCVC)
h/_/eo/f/o/n(CAVCVC)
_/_/h/e/o/f/o/n(AACVVCVC)
_/_/h/eo/f/o/n(AACVCVC)
h/e/o/_/f/o/n(CVVACVC)
h/eo/f/_/o/n(CVCAVC)
_/h/e/_/o/f/o/n(ACVAVCVC)
_/h/eo/_/f/o/n(ACVACVC)
h/_/e/_/o/f/o/n(CAVAVCVC)
h/_/eo/_/f/o/n(CAVACVC)
_/_/h/_/e/o/f/o/n(AACAVVCVC)
_/_/h/_/eo/f/o/n(AACAVCVC)
				ANALYSING: heoue
					resolving (44)
					> version: h/e/o/u/e
					TRYING: u
					> version: h/e/o/u/e
					TRYING: u
					> version: h/e/ou/e
					TRYING: e
					> version: h/eo/u/e
					TRYING: e
					> version: h/eo/u/e
					TRYING: e
					> version: h/e/o/ue
					TRYING: ue
					> version: h/eo/u/e
					TRYING: e
					> version: h/eo/u/e
					TRYING: e
					> version: h/e/ou/e
					TRYING: e
					> version: h/eo/ue
					> version: h/eo/ue
					> version: _/h/e/o/u/e
					TRYING: o
					> version: _/h/e/o/u/e
					TRYING: o
					> version: _/h/e/ou/e
					TRYING: ou
					> version: _/h/eo/u/e
					TRYING: u
					> version: _/h/eo/u/e
					TRYING: u
					> version: _/h/e/o/ue
					TRYING: o
					> version: _/h/eo/u/e
					TRYING: u
					> version: _/h/eo/u/e
					TRYING: u
					> version: _/h/e/ou/e
					TRYING: ou
					> version: _/h/eo/ue
					TRYING: ue
					> version: _/h/eo/ue
					TRYING: ue
					> version: h/_/e/o/u/e
					TRYING: o
					> version: h/_/e/o/u/e
					TRYING: o
					> version: h/_/e/ou/e
					TRYING: ou
					> version: h/_/eo/u/e
					TRYING: u
					> version: h/_/eo/u/e
					TRYING: u
					> version: h/_/e/o/ue
					TRYING: o
					> version: h/_/eo/u/e
					TRYING: u
					> version: h/_/eo/u/e
					TRYING: u
					> version: h/_/e/ou/e
					TRYING: ou
					> version: h/_/eo/ue
					TRYING: ue
					> version: h/_/eo/ue
					TRYING: ue
					> version: _/_/h/e/o/u/e
					TRYING: e
					> version: _/_/h/e/o/u/e
					TRYING: e
					> version: _/_/h/e/ou/e
					TRYING: e
					> version: _/_/h/eo/u/e
					TRYING: eo
					> version: _/_/h/eo/u/e
					TRYING: eo
					> version: _/_/h/e/o/ue
					TRYING: e
					> version: _/_/h/eo/u/e
					TRYING: eo
					> version: _/_/h/eo/u/e
					TRYING: eo
					> version: _/_/h/e/ou/e
					TRYING: e
					> version: _/_/h/eo/ue
					TRYING: eo
					> version: _/_/h/eo/ue
					TRYING: eo
					RESULT:  ['u']
				ANALYSING: heouen
					resolving (44)
					> version: h/e/o/u/e/n
					TRYING: u
					> version: h/e/o/u/e/n
					TRYING: u
					> version: h/e/ou/e/n
					TRYING: e
					> version: h/eo/u/e/n
					TRYING: e
					> version: h/eo/u/e/n
					TRYING: e
					> version: h/e/o/ue/n
					TRYING: ue
					> version: h/eo/u/e/n
					TRYING: e
					> version: h/eo/u/e/n
					TRYING: e
					> version: h/e/ou/e/n
					TRYING: e
					> version: h/eo/ue/n
					TRYING: n
					adding blocked set: C = C >> u, h, _, n
					> version: h/eo/ue/n
					TRYING: n
					adding blocked set: C = C >> u, h, _, n
					> version: _/h/e/o/u/e/n
					TRYING: o
					> version: _/h/e/o/u/e/n
					TRYING: o
					> version: _/h/e/ou/e/n
					TRYING: ou
					> version: _/h/eo/u/e/n
					TRYING: u
					> version: _/h/eo/u/e/n
					TRYING: u
					> version: _/h/e/o/ue/n
					TRYING: o
					> version: _/h/eo/u/e/n
					TRYING: u
					> version: _/h/eo/u/e/n
					TRYING: u
					> version: _/h/e/ou/e/n
					TRYING: ou
					> version: _/h/eo/ue/n
					TRYING: ue
					> version: _/h/eo/ue/n
					TRYING: ue
					> version: h/_/e/o/u/e/n
					TRYING: o
					> version: h/_/e/o/u/e/n
					TRYING: o
					> version: h/_/e/ou/e/n
					TRYING: ou
					> version: h/_/eo/u/e/n
					TRYING: u
					> version: h/_/eo/u/e/n
					TRYING: u
					> version: h/_/e/o/ue/n
					TRYING: o
					> version: h/_/eo/u/e/n
					TRYING: u
					> version: h/_/eo/u/e/n
					TRYING: u
					> version: h/_/e/ou/e/n
					TRYING: ou
					> version: h/_/eo/ue/n
					TRYING: ue
					> version: h/_/eo/ue/n
					TRYING: ue
					> version: _/_/h/e/o/u/e/n
					TRYING: e
					> version: _/_/h/e/o/u/e/n
					TRYING: e
					> version: _/_/h/e/ou/e/n
					TRYING: e
					> version: _/_/h/eo/u/e/n
					TRYING: eo
					> version: _/_/h/eo/u/e/n
					TRYING: eo
					> version: _/_/h/e/o/ue/n
					TRYING: e
					> version: _/_/h/eo/u/e/n
					TRYING: eo
					> version: _/_/h/eo/u/e/n
					TRYING: eo
					> version: _/_/h/e/ou/e/n
					TRYING: e
					> version: _/_/h/eo/ue/n
					TRYING: eo
					> version: _/_/h/eo/ue/n
					TRYING: eo
					RESULT:  ['u']
				ANALYSING: heouene
					resolving (44)
					> version: h/e/o/u/e/n/e
					TRYING: u
					> version: h/e/o/u/e/n/e
					TRYING: u
					> version: h/e/ou/e/n/e
					TRYING: e
					> version: h/eo/u/e/n/e
					TRYING: e
					> version: h/eo/u/e/n/e
					TRYING: e
					> version: h/e/o/ue/n/e
					TRYING: ue
					> version: h/eo/u/e/n/e
					TRYING: e
					> version: h/eo/u/e/n/e
					TRYING: e
					> version: h/e/ou/e/n/e
					TRYING: e
					> version: h/eo/ue/n/e
					TRYING: n
					adding blocked set: C = C >> u, h, _, n
					> version: h/eo/ue/n/e
					TRYING: n
					adding blocked set: C = C >> u, h, _, n
					> version: _/h/e/o/u/e/n/e
					TRYING: o
					> version: _/h/e/o/u/e/n/e
					TRYING: o
					> version: _/h/e/ou/e/n/e
					TRYING: ou
					> version: _/h/eo/u/e/n/e
					TRYING: u
					> version: _/h/eo/u/e/n/e
					TRYING: u
					> version: _/h/e/o/ue/n/e
					TRYING: o
					> version: _/h/eo/u/e/n/e
					TRYING: u
					> version: _/h/eo/u/e/n/e
					TRYING: u
					> version: _/h/e/ou/e/n/e
					TRYING: ou
					> version: _/h/eo/ue/n/e
					TRYING: ue
					> version: _/h/eo/ue/n/e
					TRYING: ue
					> version: h/_/e/o/u/e/n/e
					TRYING: o
					> version: h/_/e/o/u/e/n/e
					TRYING: o
					> version: h/_/e/ou/e/n/e
					TRYING: ou
					> version: h/_/eo/u/e/n/e
					TRYING: u
					> version: h/_/eo/u/e/n/e
					TRYING: u
					> version: h/_/e/o/ue/n/e
					TRYING: o
					> version: h/_/eo/u/e/n/e
					TRYING: u
					> version: h/_/eo/u/e/n/e
					TRYING: u
					> version: h/_/e/ou/e/n/e
					TRYING: ou
					> version: h/_/eo/ue/n/e
					TRYING: ue
					> version: h/_/eo/ue/n/e
					TRYING: ue
					> version: _/_/h/e/o/u/e/n/e
					TRYING: e
					> version: _/_/h/e/o/u/e/n/e
					TRYING: e
					> version: _/_/h/e/ou/e/n/e
					TRYING: e
					> version: _/_/h/eo/u/e/n/e
					TRYING: eo
					> version: _/_/h/eo/u/e/n/e
					TRYING: eo
					> version: _/_/h/e/o/ue/n/e
					TRYING: e
					> version: _/_/h/eo/u/e/n/e
					TRYING: eo
					> version: _/_/h/eo/u/e/n/e
					TRYING: eo
					> version: _/_/h/e/ou/e/n/e
					TRYING: e
					> version: _/_/h/eo/ue/n/e
					TRYING: eo
					> version: _/_/h/eo/ue/n/e
					TRYING: eo
					RESULT:  ['u']
				ANALYSING: heue
					resolving (20)
					> version: h/e/u/e
					TRYING: e
					> version: h/e/u/e
					TRYING: e
					> version: h/eu/e
					> version: h/e/ue
					> version: h/eu/e
					> version: _/h/e/u/e
					TRYING: u
					> version: _/h/e/u/e
					TRYING: u
					> version: _/h/eu/e
					TRYING: e
					> version: _/h/e/ue
					TRYING: ue
					> version: _/h/eu/e
					TRYING: e
					> version: h/_/e/u/e
					TRYING: u
					> version: h/_/e/u/e
					TRYING: u
					> version: h/_/eu/e
					TRYING: e
					> version: h/_/e/ue
					TRYING: ue
					> version: h/_/eu/e
					TRYING: e
					> version: _/_/h/e/u/e
					TRYING: e
					> version: _/_/h/e/u/e
					TRYING: e
					> version: _/_/h/eu/e
					TRYING: eu
					> version: _/_/h/e/ue
					TRYING: e
					> version: _/_/h/eu/e
					TRYING: eu
					RESULT:  ['u']
				ANALYSING: heuen
					resolving (20)
					> version: h/e/u/e/n
					TRYING: e
					> version: h/e/u/e/n
					TRYING: e
					> version: h/eu/e/n
					TRYING: n
					adding blocked set: C = C >> u, h, _, n
					> version: h/e/ue/n
					TRYING: n
					adding blocked set: C = C >> u, h, _, n
					> version: h/eu/e/n
					TRYING: n
					adding blocked set: C = C >> u, h, _, n
					> version: _/h/e/u/e/n
					TRYING: u
					> version: _/h/e/u/e/n
					TRYING: u
					> version: _/h/eu/e/n
					TRYING: e
					> version: _/h/e/ue/n
					TRYING: ue
					> version: _/h/eu/e/n
					TRYING: e
					> version: h/_/e/u/e/n
					TRYING: u
					> version: h/_/e/u/e/n
					TRYING: u
					> version: h/_/eu/e/n
					TRYING: e
					> version: h/_/e/ue/n
					TRYING: ue
					> version: h/_/eu/e/n
					TRYING: e
					> version: _/_/h/e/u/e/n
					TRYING: e
					> version: _/_/h/e/u/e/n
					TRYING: e
					> version: _/_/h/eu/e/n
					TRYING: eu
					> version: _/_/h/e/ue/n
					TRYING: e
					> version: _/_/h/eu/e/n
					TRYING: eu
					RESULT:  ['u']
				ANALYSING: heuene
					resolving (20)
					> version: h/e/u/e/n/e
					TRYING: e
					> version: h/e/u/e/n/e
					TRYING: e
					> version: h/eu/e/n/e
					TRYING: n
					adding blocked set: C = C >> u, h, _, n
					> version: h/e/ue/n/e
					TRYING: n
					adding blocked set: C = C >> u, h, _, n
					> version: h/eu/e/n/e
					TRYING: n
					adding blocked set: C = C >> u, h, _, n
					> version: _/h/e/u/e/n/e
					TRYING: u
					> version: _/h/e/u/e/n/e
					TRYING: u
					> version: _/h/eu/e/n/e
					TRYING: e
					> version: _/h/e/ue/n/e
					TRYING: ue
					> version: _/h/eu/e/n/e
					TRYING: e
					> version: h/_/e/u/e/n/e
					TRYING: u
					> version: h/_/e/u/e/n/e
					TRYING: u
					> version: h/_/eu/e/n/e
					TRYING: e
					> version: h/_/e/ue/n/e
					TRYING: ue
					> version: h/_/eu/e/n/e
					TRYING: e
					> version: _/_/h/e/u/e/n/e
					TRYING: e
					> version: _/_/h/e/u/e/n/e
					TRYING: e
					> version: _/_/h/eu/e/n/e
					TRYING: eu
					> version: _/_/h/e/ue/n/e
					TRYING: e
					> version: _/_/h/eu/e/n/e
					TRYING: eu
					RESULT:  ['u']
				ANALYSING: houen
					resolving (20)
					> version: h/o/u/e/n
					TRYING: e
					> version: h/o/u/e/n
					TRYING: e
					> version: h/ou/e/n
					TRYING: n
					adding blocked set: C = C >> u, h, _, n
					> version: h/o/ue/n
					TRYING: n
					adding blocked set: C = C >> u, h, _, n
					> version: h/ou/e/n
					TRYING: n
					adding blocked set: C = C >> u, h, _, n
					> version: _/h/o/u/e/n
					TRYING: u
					> version: _/h/o/u/e/n
					TRYING: u
					> version: _/h/ou/e/n
					TRYING: e
					> version: _/h/o/ue/n
					TRYING: ue
					> version: _/h/ou/e/n
					TRYING: e
					> version: h/_/o/u/e/n
					TRYING: u
					> version: h/_/o/u/e/n
					TRYING: u
					> version: h/_/ou/e/n
					TRYING: e
					> version: h/_/o/ue/n
					TRYING: ue
					> version: h/_/ou/e/n
					TRYING: e
					> version: _/_/h/o/u/e/n
					TRYING: o
					> version: _/_/h/o/u/e/n
					TRYING: o
					> version: _/_/h/ou/e/n
					TRYING: ou
					> version: _/_/h/o/ue/n
					TRYING: o
					> version: _/_/h/ou/e/n
					TRYING: ou
					RESULT:  ['u']
				ANALYSING: lich
					resolving (8)
					> version: l/i/c/h
					TRYING: h
					> version: l/i/c/h
					TRYING: h
					> version: l/i/ch
					> version: l/i/ch
					> version: l/_/i/c/h
					TRYING: c
					adding blocked set: C = C >> u, h, c, _
					> version: l/_/i/c/h
					TRYING: c
					adding blocked set: C = C >> u, h, c, _
					> version: l/_/i/ch
					TRYING: ch
					adding blocked set: C = C >> u, ch, h, _
					> version: l/_/i/ch
					TRYING: ch
					adding blocked set: C = C >> u, ch, h, _
					RESULT:  ['h']
			___CVCCV : 4___
				ANALYSING: liche
				adding littera based on matching pattern
				ANALYSING: eue
					resolving (20)
					> version: e/u/e
					> version: e/u/e
					> version: eu/e
					> version: e/ue
					> version: eu/e
					> version: _/e/u/e
					> version: _/e/u/e
					> version: _/eu/e
					> version: _/e/ue
					> version: _/eu/e
					> version: e/u/_/e
					> version: e/u/_/e
					> version: eu/e/_
					> version: e/ue/_
					> version: eu/e/_
					> version: _/e/_/u/e
					TRYING: e
					> version: _/e/_/u/e
					TRYING: e
					> version: _/eu/_/e
					> version: _/e/_/ue
					> version: _/eu/_/e
					RESULT:  ['e']
				version split: ['e', 'u', 'e']
				{'string': 'e/u/e', 'rgx': '((_))/((u)|(e)|(ue))/((_))/((u))/((e))$'}
				_____REMOVING________['e', 'u', 'e']
				version split: ['e', 'u', 'e']
				{'string': 'e/u/e', 'rgx': '((_))/((u)|(e)|(ue))/((_))/((u))/((e))$'}
				_____REMOVING________['e', 'u', 'e']
				version split: ['eu', 'e']
				{'string': 'eu/e', 'rgx': '((_))/((u)|(e)|(ue))/((_))/((u))/((e))$'}
				_____REMOVING________['eu', 'e']
				version split: ['e', 'ue']
				{'string': 'e/ue', 'rgx': '((_))/((u)|(e)|(ue))/((_))/((u))/((e))$'}
				_____REMOVING________['e', 'ue']
				version split: ['eu', 'e']
				{'string': 'eu/e', 'rgx': '((_))/((u)|(e)|(ue))/((_))/((u))/((e))$'}
				_____REMOVING________['eu', 'e']
				version split: ['_', 'e', 'u', 'e']
				{'string': '_/e/u/e', 'rgx': '((_))/((u)|(e)|(ue))/((_))/((u))/((e))$'}
				_____REMOVING________['_', 'e', 'u', 'e']
				version split: ['_', 'e', 'u', 'e']
				{'string': '_/e/u/e', 'rgx': '((_))/((u)|(e)|(ue))/((_))/((u))/((e))$'}
				_____REMOVING________['_', 'e', 'u', 'e']
				version split: ['_', 'eu', 'e']
				{'string': '_/eu/e', 'rgx': '((_))/((u)|(e)|(ue))/((_))/((u))/((e))$'}
				_____REMOVING________['_', 'eu', 'e']
				version split: ['_', 'e', 'ue']
				{'string': '_/e/ue', 'rgx': '((_))/((u)|(e)|(ue))/((_))/((u))/((e))$'}
				_____REMOVING________['_', 'e', 'ue']
				version split: ['_', 'eu', 'e']
				{'string': '_/eu/e', 'rgx': '((_))/((u)|(e)|(ue))/((_))/((u))/((e))$'}
				_____REMOVING________['_', 'eu', 'e']
				version split: ['e', 'u', '_', 'e']
				{'string': 'e/u/_/e', 'rgx': '((_))/((u)|(e)|(ue))/((_))/((u))/((e))$'}
				_____REMOVING________['e', 'u', '_', 'e']
				version split: ['e', 'u', '_', 'e']
				{'string': 'e/u/_/e', 'rgx': '((_))/((u)|(e)|(ue))/((_))/((u))/((e))$'}
				_____REMOVING________['e', 'u', '_', 'e']
				version split: ['eu', 'e', '_']
				{'string': 'eu/e/_', 'rgx': '((_))/((u)|(e)|(ue))/((_))/((u))/((e))$'}
				_____REMOVING________['eu', 'e', '_']
				version split: ['e', 'ue', '_']
				{'string': 'e/ue/_', 'rgx': '((_))/((u)|(e)|(ue))/((_))/((u))/((e))$'}
				_____REMOVING________['e', 'ue', '_']
				version split: ['eu', 'e', '_']
				{'string': 'eu/e/_', 'rgx': '((_))/((u)|(e)|(ue))/((_))/((u))/((e))$'}
				_____REMOVING________['eu', 'e', '_']
				version split: ['_', 'e', '_', 'u', 'e']
				{'string': '_/e/_/u/e', 'rgx': '((_))/((u)|(e)|(ue))/((_))/((u))/((e))$'}
				version split: ['_', 'e', '_', 'u', 'e']
				{'string': '_/e/_/u/e', 'rgx': '((_))/((u)|(e)|(ue))/((_))/((u))/((e))$'}
				version split: ['_', 'eu', '_', 'e']
				{'string': '_/eu/_/e', 'rgx': '((_))/((u)|(e)|(ue))/((_))/((u))/((e))$'}
				_____REMOVING________['_', 'eu', '_', 'e']
				version split: ['_', 'e', '_', 'ue']
				{'string': '_/e/_/ue', 'rgx': '((_))/((u)|(e)|(ue))/((_))/((u))/((e))$'}
				_____REMOVING________['_', 'e', '_', 'ue']
				version split: ['_', 'eu', '_', 'e']
				{'string': '_/eu/_/e', 'rgx': '((_))/((u)|(e)|(ue))/((_))/((u))/((e))$'}
				_____REMOVING________['_', 'eu', '_', 'e']
				ANALYSING: he
					resolving (8)
					> version: h/e
					> version: _/h/e
					> version: h/_/e
					> version: _/_/h/e
					> version: h/e/_
					> version: _/h/e/_
					> version: h/_/e/_
					> version: _/_/h/_/e
					TRYING: e
					RESULT:  ['e']
				version split: ['h', 'e']
				{'string': 'h/e', 'rgx': '((_))/((_))/((h))/((_))/((e))$'}
				_____REMOVING________['h', 'e']
				version split: ['_', 'h', 'e']
				{'string': '_/h/e', 'rgx': '((_))/((_))/((h))/((_))/((e))$'}
				_____REMOVING________['_', 'h', 'e']
				version split: ['h', '_', 'e']
				{'string': 'h/_/e', 'rgx': '((_))/((_))/((h))/((_))/((e))$'}
				_____REMOVING________['h', '_', 'e']
				version split: ['_', '_', 'h', 'e']
				{'string': '_/_/h/e', 'rgx': '((_))/((_))/((h))/((_))/((e))$'}
				_____REMOVING________['_', '_', 'h', 'e']
				version split: ['h', 'e', '_']
				{'string': 'h/e/_', 'rgx': '((_))/((_))/((h))/((_))/((e))$'}
				_____REMOVING________['h', 'e', '_']
				version split: ['_', 'h', 'e', '_']
				{'string': '_/h/e/_', 'rgx': '((_))/((_))/((h))/((_))/((e))$'}
				_____REMOVING________['_', 'h', 'e', '_']
				version split: ['h', '_', 'e', '_']
				{'string': 'h/_/e/_', 'rgx': '((_))/((_))/((h))/((_))/((e))$'}
				_____REMOVING________['h', '_', 'e', '_']
				version split: ['_', '_', 'h', '_', 'e']
				{'string': '_/_/h/_/e', 'rgx': '((_))/((_))/((h))/((_))/((e))$'}
				ANALYSING: heo
					resolving (16)
					> version: h/e/o
					> version: h/eo
					> version: _/h/e/o
					> version: _/h/eo
					> version: h/_/e/o
					> version: h/_/eo
					> version: _/_/h/e/o
					TRYING: o
					> version: _/_/h/eo
					> version: h/e/o/_
					> version: h/eo/_
					> version: _/h/e/_/o
					TRYING: o
					> version: _/h/eo/_
					> version: h/_/e/_/o
					TRYING: o
					> version: h/_/eo/_
					> version: _/_/h/_/e/o
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'e', 'o'}
					> version: _/_/h/_/eo
					TRYING: eo
					>>> MULTIPLE RESOLVE OPTIONS: {'e', 'eo', 'o'}
					RESULT:  ['e', 'eo', 'o']
				version split: ['h', 'e', 'o']
				{'string': 'h/e/o', 'rgx': '((_))/((_))/((h))/((_))/((e)|(eo)|(o))$'}
				_____REMOVING________['h', 'e', 'o']
				version split: ['h', 'eo']
				{'string': 'h/eo', 'rgx': '((_))/((_))/((h))/((_))/((e)|(eo)|(o))$'}
				_____REMOVING________['h', 'eo']
				version split: ['_', 'h', 'e', 'o']
				{'string': '_/h/e/o', 'rgx': '((_))/((_))/((h))/((_))/((e)|(eo)|(o))$'}
				_____REMOVING________['_', 'h', 'e', 'o']
				version split: ['_', 'h', 'eo']
				{'string': '_/h/eo', 'rgx': '((_))/((_))/((h))/((_))/((e)|(eo)|(o))$'}
				_____REMOVING________['_', 'h', 'eo']
				version split: ['h', '_', 'e', 'o']
				{'string': 'h/_/e/o', 'rgx': '((_))/((_))/((h))/((_))/((e)|(eo)|(o))$'}
				_____REMOVING________['h', '_', 'e', 'o']
				version split: ['h', '_', 'eo']
				{'string': 'h/_/eo', 'rgx': '((_))/((_))/((h))/((_))/((e)|(eo)|(o))$'}
				_____REMOVING________['h', '_', 'eo']
				version split: ['_', '_', 'h', 'e', 'o']
				{'string': '_/_/h/e/o', 'rgx': '((_))/((_))/((h))/((_))/((e)|(eo)|(o))$'}
				_____REMOVING________['_', '_', 'h', 'e', 'o']
				version split: ['_', '_', 'h', 'eo']
				{'string': '_/_/h/eo', 'rgx': '((_))/((_))/((h))/((_))/((e)|(eo)|(o))$'}
				_____REMOVING________['_', '_', 'h', 'eo']
				version split: ['h', 'e', 'o', '_']
				{'string': 'h/e/o/_', 'rgx': '((_))/((_))/((h))/((_))/((e)|(eo)|(o))$'}
				_____REMOVING________['h', 'e', 'o', '_']
				version split: ['h', 'eo', '_']
				{'string': 'h/eo/_', 'rgx': '((_))/((_))/((h))/((_))/((e)|(eo)|(o))$'}
				_____REMOVING________['h', 'eo', '_']
				version split: ['_', 'h', 'e', '_', 'o']
				{'string': '_/h/e/_/o', 'rgx': '((_))/((_))/((h))/((_))/((e)|(eo)|(o))$'}
				_____REMOVING________['_', 'h', 'e', '_', 'o']
				version split: ['_', 'h', 'eo', '_']
				{'string': '_/h/eo/_', 'rgx': '((_))/((_))/((h))/((_))/((e)|(eo)|(o))$'}
				_____REMOVING________['_', 'h', 'eo', '_']
				version split: ['h', '_', 'e', '_', 'o']
				{'string': 'h/_/e/_/o', 'rgx': '((_))/((_))/((h))/((_))/((e)|(eo)|(o))$'}
				_____REMOVING________['h', '_', 'e', '_', 'o']
				version split: ['h', '_', 'eo', '_']
				{'string': 'h/_/eo/_', 'rgx': '((_))/((_))/((h))/((_))/((e)|(eo)|(o))$'}
				_____REMOVING________['h', '_', 'eo', '_']
				version split: ['_', '_', 'h', '_', 'e', 'o']
				{'string': '_/_/h/_/e/o', 'rgx': '((_))/((_))/((h))/((_))/((e)|(eo)|(o))$'}
				_____REMOVING________['_', '_', 'h', '_', 'e', 'o']
				version split: ['_', '_', 'h', '_', 'eo']
				{'string': '_/_/h/_/eo', 'rgx': '((_))/((_))/((h))/((_))/((e)|(eo)|(o))$'}
				ANALYSING: heofen
					resolving (16)
					> version: h/e/o/f/e/n
					TRYING: e
					> version: h/eo/f/e/n
					TRYING: n
					> version: _/h/e/o/f/e/n
					TRYING: f
					> version: _/h/eo/f/e/n
					TRYING: e
					> version: h/_/e/o/f/e/n
					TRYING: f
					> version: h/_/eo/f/e/n
					TRYING: e
					> version: _/_/h/e/o/f/e/n
					TRYING: o
					>>> MULTIPLE RESOLVE OPTIONS: {'e', 'o'}
					> version: _/_/h/eo/f/e/n
					TRYING: f
					>>> MULTIPLE RESOLVE OPTIONS: {'e', 'o'}
					> version: h/e/o/_/f/e/n
					TRYING: f
					>>> MULTIPLE RESOLVE OPTIONS: {'e', 'o'}
					> version: h/eo/f/_/e/n
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'e', 'o'}
					> version: _/h/e/_/o/f/e/n
					TRYING: o
					>>> MULTIPLE RESOLVE OPTIONS: {'e', 'o'}
					> version: _/h/eo/_/f/e/n
					TRYING: f
					>>> MULTIPLE RESOLVE OPTIONS: {'e', 'o'}
					> version: h/_/e/_/o/f/e/n
					TRYING: o
					>>> MULTIPLE RESOLVE OPTIONS: {'e', 'o'}
					> version: h/_/eo/_/f/e/n
					TRYING: f
					>>> MULTIPLE RESOLVE OPTIONS: {'e', 'o'}
					> version: _/_/h/_/e/o/f/e/n
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'e', 'o'}
					> version: _/_/h/_/eo/f/e/n
					TRYING: eo
					>>> MULTIPLE RESOLVE OPTIONS: {'e', 'eo', 'o'}
					RESULT:  ['e', 'eo', 'o']
				version split: ['h', 'e', 'o', 'f', 'e', 'n']
				{'string': 'h/e/o/f/e/n', 'rgx': '((_))/((_))/((h))/((_))/((e)|(eo)|(o))$'}
				_____REMOVING________['h', 'e', 'o', 'f', 'e', 'n']
				version split: ['h', 'eo', 'f', 'e', 'n']
				{'string': 'h/eo/f/e/n', 'rgx': '((_))/((_))/((h))/((_))/((e)|(eo)|(o))$'}
				_____REMOVING________['h', 'eo', 'f', 'e', 'n']
				version split: ['_', 'h', 'e', 'o', 'f', 'e', 'n']
				{'string': '_/h/e/o/f/e', 'rgx': '((_))/((_))/((h))/((_))/((e)|(eo)|(o))$'}
				_____REMOVING________['_', 'h', 'e', 'o', 'f', 'e', 'n']
				version split: ['_', 'h', 'eo', 'f', 'e', 'n']
				{'string': '_/h/eo/f/e/n', 'rgx': '((_))/((_))/((h))/((_))/((e)|(eo)|(o))$'}
				_____REMOVING________['_', 'h', 'eo', 'f', 'e', 'n']
				version split: ['h', '_', 'e', 'o', 'f', 'e', 'n']
				{'string': 'h/_/e/o/f/e', 'rgx': '((_))/((_))/((h))/((_))/((e)|(eo)|(o))$'}
				_____REMOVING________['h', '_', 'e', 'o', 'f', 'e', 'n']
				version split: ['h', '_', 'eo', 'f', 'e', 'n']
				{'string': 'h/_/eo/f/e/n', 'rgx': '((_))/((_))/((h))/((_))/((e)|(eo)|(o))$'}
				_____REMOVING________['h', '_', 'eo', 'f', 'e', 'n']
				version split: ['_', '_', 'h', 'e', 'o', 'f', 'e', 'n']
				{'string': '_/_/h/e/o/f', 'rgx': '((_))/((_))/((h))/((_))/((e)|(eo)|(o))$'}
				_____REMOVING________['_', '_', 'h', 'e', 'o', 'f', 'e', 'n']
				version split: ['_', '_', 'h', 'eo', 'f', 'e', 'n']
				{'string': '_/_/h/eo/f/e', 'rgx': '((_))/((_))/((h))/((_))/((e)|(eo)|(o))$'}
				_____REMOVING________['_', '_', 'h', 'eo', 'f', 'e', 'n']
				version split: ['h', 'e', 'o', '_', 'f', 'e', 'n']
				{'string': 'h/e/o/_/f/e', 'rgx': '((_))/((_))/((h))/((_))/((e)|(eo)|(o))$'}
				_____REMOVING________['h', 'e', 'o', '_', 'f', 'e', 'n']
				version split: ['h', 'eo', 'f', '_', 'e', 'n']
				{'string': 'h/eo/f/_/e/n', 'rgx': '((_))/((_))/((h))/((_))/((e)|(eo)|(o))$'}
				_____REMOVING________['h', 'eo', 'f', '_', 'e', 'n']
				version split: ['_', 'h', 'e', '_', 'o', 'f', 'e', 'n']
				{'string': '_/h/e/_/o/f', 'rgx': '((_))/((_))/((h))/((_))/((e)|(eo)|(o))$'}
				_____REMOVING________['_', 'h', 'e', '_', 'o', 'f', 'e', 'n']
				version split: ['_', 'h', 'eo', '_', 'f', 'e', 'n']
				{'string': '_/h/eo/_/f/e', 'rgx': '((_))/((_))/((h))/((_))/((e)|(eo)|(o))$'}
				_____REMOVING________['_', 'h', 'eo', '_', 'f', 'e', 'n']
				version split: ['h', '_', 'e', '_', 'o', 'f', 'e', 'n']
				{'string': 'h/_/e/_/o/f', 'rgx': '((_))/((_))/((h))/((_))/((e)|(eo)|(o))$'}
				_____REMOVING________['h', '_', 'e', '_', 'o', 'f', 'e', 'n']
				version split: ['h', '_', 'eo', '_', 'f', 'e', 'n']
				{'string': 'h/_/eo/_/f/e', 'rgx': '((_))/((_))/((h))/((_))/((e)|(eo)|(o))$'}
				_____REMOVING________['h', '_', 'eo', '_', 'f', 'e', 'n']
				version split: ['_', '_', 'h', '_', 'e', 'o', 'f', 'e', 'n']
				{'string': '_/_/h/_/e/o', 'rgx': '((_))/((_))/((h))/((_))/((e)|(eo)|(o))$'}
				_____REMOVING________['_', '_', 'h', '_', 'e', 'o', 'f', 'e', 'n']
				version split: ['_', '_', 'h', '_', 'eo', 'f', 'e', 'n']
				{'string': '_/_/h/_/eo/f', 'rgx': '((_))/((_))/((h))/((_))/((e)|(eo)|(o))$'}
				_____REMOVING________['_', '_', 'h', '_', 'eo', 'f', 'e', 'n']
				ANALYSING: heofenn
					resolving (32)
					> version: h/e/o/f/e/n/n
					TRYING: e
					> version: h/e/o/f/e/nn
					TRYING: e
					> version: h/eo/f/e/n/n
					TRYING: n
					> version: h/eo/f/e/nn
					TRYING: nn
					> version: _/h/e/o/f/e/n/n
					TRYING: f
					> version: _/h/e/o/f/e/nn
					TRYING: f
					> version: _/h/eo/f/e/n/n
					TRYING: e
					> version: _/h/eo/f/e/nn
					TRYING: e
					> version: h/_/e/o/f/e/n/n
					TRYING: f
					> version: h/_/e/o/f/e/nn
					TRYING: f
					> version: h/_/eo/f/e/n/n
					TRYING: e
					> version: h/_/eo/f/e/nn
					TRYING: e
					> version: _/_/h/e/o/f/e/n/n
					TRYING: o
					>>> MULTIPLE RESOLVE OPTIONS: {'e', 'o'}
					> version: _/_/h/e/o/f/e/nn
					TRYING: o
					>>> MULTIPLE RESOLVE OPTIONS: {'e', 'o'}
					> version: _/_/h/eo/f/e/n/n
					TRYING: f
					>>> MULTIPLE RESOLVE OPTIONS: {'e', 'o'}
					> version: _/_/h/eo/f/e/nn
					TRYING: f
					>>> MULTIPLE RESOLVE OPTIONS: {'e', 'o'}
					> version: h/e/o/_/f/e/n/n
					TRYING: f
					>>> MULTIPLE RESOLVE OPTIONS: {'e', 'o'}
					> version: h/e/o/_/f/e/nn
					TRYING: f
					>>> MULTIPLE RESOLVE OPTIONS: {'e', 'o'}
					> version: h/eo/f/_/e/n/n
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'e', 'o'}
					> version: h/eo/f/_/e/nn
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'e', 'o'}
					> version: _/h/e/_/o/f/e/n/n
					TRYING: o
					>>> MULTIPLE RESOLVE OPTIONS: {'e', 'o'}
					> version: _/h/e/_/o/f/e/nn
					TRYING: o
					>>> MULTIPLE RESOLVE OPTIONS: {'e', 'o'}
					> version: _/h/eo/_/f/e/n/n
					TRYING: f
					>>> MULTIPLE RESOLVE OPTIONS: {'e', 'o'}
					> version: _/h/eo/_/f/e/nn
					TRYING: f
					>>> MULTIPLE RESOLVE OPTIONS: {'e', 'o'}
					> version: h/_/e/_/o/f/e/n/n
					TRYING: o
					>>> MULTIPLE RESOLVE OPTIONS: {'e', 'o'}
					> version: h/_/e/_/o/f/e/nn
					TRYING: o
					>>> MULTIPLE RESOLVE OPTIONS: {'e', 'o'}
					> version: h/_/eo/_/f/e/n/n
					TRYING: f
					>>> MULTIPLE RESOLVE OPTIONS: {'e', 'o'}
					> version: h/_/eo/_/f/e/nn
					TRYING: f
					>>> MULTIPLE RESOLVE OPTIONS: {'e', 'o'}
					> version: _/_/h/_/e/o/f/e/n/n
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'e', 'o'}
					> version: _/_/h/_/e/o/f/e/nn
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'e', 'o'}
					> version: _/_/h/_/eo/f/e/n/n
					TRYING: eo
					>>> MULTIPLE RESOLVE OPTIONS: {'e', 'eo', 'o'}
					> version: _/_/h/_/eo/f/e/nn
					TRYING: eo
					>>> MULTIPLE RESOLVE OPTIONS: {'e', 'eo', 'o'}
					RESULT:  ['e', 'eo', 'o']
				version split: ['h', 'e', 'o', 'f', 'e', 'n', 'n']
				{'string': 'h/e/o/f/e/n', 'rgx': '((_))/((_))/((h))/((_))/((e)|(eo)|(o))$'}
				_____REMOVING________['h', 'e', 'o', 'f', 'e', 'n', 'n']
				version split: ['h', 'e', 'o', 'f', 'e', 'nn']
				{'string': 'h/e/o/f/e/nn', 'rgx': '((_))/((_))/((h))/((_))/((e)|(eo)|(o))$'}
				_____REMOVING________['h', 'e', 'o', 'f', 'e', 'nn']
				version split: ['h', 'eo', 'f', 'e', 'n', 'n']
				{'string': 'h/eo/f/e/n/n', 'rgx': '((_))/((_))/((h))/((_))/((e)|(eo)|(o))$'}
				_____REMOVING________['h', 'eo', 'f', 'e', 'n', 'n']
				version split: ['h', 'eo', 'f', 'e', 'nn']
				{'string': 'h/eo/f/e/nn', 'rgx': '((_))/((_))/((h))/((_))/((e)|(eo)|(o))$'}
				_____REMOVING________['h', 'eo', 'f', 'e', 'nn']
				version split: ['_', 'h', 'e', 'o', 'f', 'e', 'n', 'n']
				{'string': '_/h/e/o/f/e', 'rgx': '((_))/((_))/((h))/((_))/((e)|(eo)|(o))$'}
				_____REMOVING________['_', 'h', 'e', 'o', 'f', 'e', 'n', 'n']
				version split: ['_', 'h', 'e', 'o', 'f', 'e', 'nn']
				{'string': '_/h/e/o/f/e', 'rgx': '((_))/((_))/((h))/((_))/((e)|(eo)|(o))$'}
				_____REMOVING________['_', 'h', 'e', 'o', 'f', 'e', 'nn']
				version split: ['_', 'h', 'eo', 'f', 'e', 'n', 'n']
				{'string': '_/h/eo/f/e/n', 'rgx': '((_))/((_))/((h))/((_))/((e)|(eo)|(o))$'}
				_____REMOVING________['_', 'h', 'eo', 'f', 'e', 'n', 'n']
				version split: ['_', 'h', 'eo', 'f', 'e', 'nn']
				{'string': '_/h/eo/f/e/nn', 'rgx': '((_))/((_))/((h))/((_))/((e)|(eo)|(o))$'}
				_____REMOVING________['_', 'h', 'eo', 'f', 'e', 'nn']
				version split: ['h', '_', 'e', 'o', 'f', 'e', 'n', 'n']
				{'string': 'h/_/e/o/f/e', 'rgx': '((_))/((_))/((h))/((_))/((e)|(eo)|(o))$'}
				_____REMOVING________['h', '_', 'e', 'o', 'f', 'e', 'n', 'n']
				version split: ['h', '_', 'e', 'o', 'f', 'e', 'nn']
				{'string': 'h/_/e/o/f/e', 'rgx': '((_))/((_))/((h))/((_))/((e)|(eo)|(o))$'}
				_____REMOVING________['h', '_', 'e', 'o', 'f', 'e', 'nn']
				version split: ['h', '_', 'eo', 'f', 'e', 'n', 'n']
				{'string': 'h/_/eo/f/e/n', 'rgx': '((_))/((_))/((h))/((_))/((e)|(eo)|(o))$'}
				_____REMOVING________['h', '_', 'eo', 'f', 'e', 'n', 'n']
				version split: ['h', '_', 'eo', 'f', 'e', 'nn']
				{'string': 'h/_/eo/f/e/nn', 'rgx': '((_))/((_))/((h))/((_))/((e)|(eo)|(o))$'}
				_____REMOVING________['h', '_', 'eo', 'f', 'e', 'nn']
				version split: ['_', '_', 'h', 'e', 'o', 'f', 'e', 'n', 'n']
				{'string': '_/_/h/e/o/f', 'rgx': '((_))/((_))/((h))/((_))/((e)|(eo)|(o))$'}
				_____REMOVING________['_', '_', 'h', 'e', 'o', 'f', 'e', 'n', 'n']
				version split: ['_', '_', 'h', 'e', 'o', 'f', 'e', 'nn']
				{'string': '_/_/h/e/o/f', 'rgx': '((_))/((_))/((h))/((_))/((e)|(eo)|(o))$'}
				_____REMOVING________['_', '_', 'h', 'e', 'o', 'f', 'e', 'nn']
				version split: ['_', '_', 'h', 'eo', 'f', 'e', 'n', 'n']
				{'string': '_/_/h/eo/f/e', 'rgx': '((_))/((_))/((h))/((_))/((e)|(eo)|(o))$'}
				_____REMOVING________['_', '_', 'h', 'eo', 'f', 'e', 'n', 'n']
				version split: ['_', '_', 'h', 'eo', 'f', 'e', 'nn']
				{'string': '_/_/h/eo/f/e', 'rgx': '((_))/((_))/((h))/((_))/((e)|(eo)|(o))$'}
				_____REMOVING________['_', '_', 'h', 'eo', 'f', 'e', 'nn']
				version split: ['h', 'e', 'o', '_', 'f', 'e', 'n', 'n']
				{'string': 'h/e/o/_/f/e', 'rgx': '((_))/((_))/((h))/((_))/((e)|(eo)|(o))$'}
				_____REMOVING________['h', 'e', 'o', '_', 'f', 'e', 'n', 'n']
				version split: ['h', 'e', 'o', '_', 'f', 'e', 'nn']
				{'string': 'h/e/o/_/f/e', 'rgx': '((_))/((_))/((h))/((_))/((e)|(eo)|(o))$'}
				_____REMOVING________['h', 'e', 'o', '_', 'f', 'e', 'nn']
				version split: ['h', 'eo', 'f', '_', 'e', 'n', 'n']
				{'string': 'h/eo/f/_/e/n', 'rgx': '((_))/((_))/((h))/((_))/((e)|(eo)|(o))$'}
				_____REMOVING________['h', 'eo', 'f', '_', 'e', 'n', 'n']
				version split: ['h', 'eo', 'f', '_', 'e', 'nn']
				{'string': 'h/eo/f/_/e/nn', 'rgx': '((_))/((_))/((h))/((_))/((e)|(eo)|(o))$'}
				_____REMOVING________['h', 'eo', 'f', '_', 'e', 'nn']
				version split: ['_', 'h', 'e', '_', 'o', 'f', 'e', 'n', 'n']
				{'string': '_/h/e/_/o/f', 'rgx': '((_))/((_))/((h))/((_))/((e)|(eo)|(o))$'}
				_____REMOVING________['_', 'h', 'e', '_', 'o', 'f', 'e', 'n', 'n']
				version split: ['_', 'h', 'e', '_', 'o', 'f', 'e', 'nn']
				{'string': '_/h/e/_/o/f', 'rgx': '((_))/((_))/((h))/((_))/((e)|(eo)|(o))$'}
				_____REMOVING________['_', 'h', 'e', '_', 'o', 'f', 'e', 'nn']
				version split: ['_', 'h', 'eo', '_', 'f', 'e', 'n', 'n']
				{'string': '_/h/eo/_/f/e', 'rgx': '((_))/((_))/((h))/((_))/((e)|(eo)|(o))$'}
				_____REMOVING________['_', 'h', 'eo', '_', 'f', 'e', 'n', 'n']
				version split: ['_', 'h', 'eo', '_', 'f', 'e', 'nn']
				{'string': '_/h/eo/_/f/e', 'rgx': '((_))/((_))/((h))/((_))/((e)|(eo)|(o))$'}
				_____REMOVING________['_', 'h', 'eo', '_', 'f', 'e', 'nn']
				version split: ['h', '_', 'e', '_', 'o', 'f', 'e', 'n', 'n']
				{'string': 'h/_/e/_/o/f', 'rgx': '((_))/((_))/((h))/((_))/((e)|(eo)|(o))$'}
				_____REMOVING________['h', '_', 'e', '_', 'o', 'f', 'e', 'n', 'n']
				version split: ['h', '_', 'e', '_', 'o', 'f', 'e', 'nn']
				{'string': 'h/_/e/_/o/f', 'rgx': '((_))/((_))/((h))/((_))/((e)|(eo)|(o))$'}
				_____REMOVING________['h', '_', 'e', '_', 'o', 'f', 'e', 'nn']
				version split: ['h', '_', 'eo', '_', 'f', 'e', 'n', 'n']
				{'string': 'h/_/eo/_/f/e', 'rgx': '((_))/((_))/((h))/((_))/((e)|(eo)|(o))$'}
				_____REMOVING________['h', '_', 'eo', '_', 'f', 'e', 'n', 'n']
				version split: ['h', '_', 'eo', '_', 'f', 'e', 'nn']
				{'string': 'h/_/eo/_/f/e', 'rgx': '((_))/((_))/((h))/((_))/((e)|(eo)|(o))$'}
				_____REMOVING________['h', '_', 'eo', '_', 'f', 'e', 'nn']
				version split: ['_', '_', 'h', '_', 'e', 'o', 'f', 'e', 'n', 'n']
				{'string': '_/_/h/_/e/o', 'rgx': '((_))/((_))/((h))/((_))/((e)|(eo)|(o))$'}
				_____REMOVING________['_', '_', 'h', '_', 'e', 'o', 'f', 'e', 'n', 'n']
				version split: ['_', '_', 'h', '_', 'e', 'o', 'f', 'e', 'nn']
				{'string': '_/_/h/_/e/o', 'rgx': '((_))/((_))/((h))/((_))/((e)|(eo)|(o))$'}
				_____REMOVING________['_', '_', 'h', '_', 'e', 'o', 'f', 'e', 'nn']
				version split: ['_', '_', 'h', '_', 'eo', 'f', 'e', 'n', 'n']
				{'string': '_/_/h/_/eo/f', 'rgx': '((_))/((_))/((h))/((_))/((e)|(eo)|(o))$'}
				_____REMOVING________['_', '_', 'h', '_', 'eo', 'f', 'e', 'n', 'n']
				version split: ['_', '_', 'h', '_', 'eo', 'f', 'e', 'nn']
				{'string': '_/_/h/_/eo/f', 'rgx': '((_))/((_))/((h))/((_))/((e)|(eo)|(o))$'}
				_____REMOVING________['_', '_', 'h', '_', 'eo', 'f', 'e', 'nn']
				ANALYSING: heofon
					resolving (16)
					> version: h/e/o/f/o/n
					TRYING: o
					> version: h/eo/f/o/n
					TRYING: n
					> version: _/h/e/o/f/o/n
					TRYING: f
					> version: _/h/eo/f/o/n
					TRYING: o
					> version: h/_/e/o/f/o/n
					TRYING: f
					> version: h/_/eo/f/o/n
					TRYING: o
					> version: _/_/h/e/o/f/o/n
					TRYING: o
					> version: _/_/h/eo/f/o/n
					TRYING: f
					> version: h/e/o/_/f/o/n
					TRYING: f
					> version: h/eo/f/_/o/n
					TRYING: o
					> version: _/h/e/_/o/f/o/n
					TRYING: o
					> version: _/h/eo/_/f/o/n
					TRYING: f
					> version: h/_/e/_/o/f/o/n
					TRYING: o
					> version: h/_/eo/_/f/o/n
					TRYING: f
					> version: _/_/h/_/e/o/f/o/n
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'e', 'o'}
					> version: _/_/h/_/eo/f/o/n
					TRYING: eo
					>>> MULTIPLE RESOLVE OPTIONS: {'e', 'eo', 'o'}
					RESULT:  ['e', 'eo', 'o']
				version split: ['h', 'e', 'o', 'f', 'o', 'n']
				{'string': 'h/e/o/f/o/n', 'rgx': '((_))/((_))/((h))/((_))/((e)|(eo)|(o))$'}
				_____REMOVING________['h', 'e', 'o', 'f', 'o', 'n']
				version split: ['h', 'eo', 'f', 'o', 'n']
				{'string': 'h/eo/f/o/n', 'rgx': '((_))/((_))/((h))/((_))/((e)|(eo)|(o))$'}
				_____REMOVING________['h', 'eo', 'f', 'o', 'n']
				version split: ['_', 'h', 'e', 'o', 'f', 'o', 'n']
				{'string': '_/h/e/o/f/o', 'rgx': '((_))/((_))/((h))/((_))/((e)|(eo)|(o))$'}
				_____REMOVING________['_', 'h', 'e', 'o', 'f', 'o', 'n']
				version split: ['_', 'h', 'eo', 'f', 'o', 'n']
				{'string': '_/h/eo/f/o/n', 'rgx': '((_))/((_))/((h))/((_))/((e)|(eo)|(o))$'}
				_____REMOVING________['_', 'h', 'eo', 'f', 'o', 'n']
				version split: ['h', '_', 'e', 'o', 'f', 'o', 'n']
				{'string': 'h/_/e/o/f/o', 'rgx': '((_))/((_))/((h))/((_))/((e)|(eo)|(o))$'}
				_____REMOVING________['h', '_', 'e', 'o', 'f', 'o', 'n']
				version split: ['h', '_', 'eo', 'f', 'o', 'n']
				{'string': 'h/_/eo/f/o/n', 'rgx': '((_))/((_))/((h))/((_))/((e)|(eo)|(o))$'}
				_____REMOVING________['h', '_', 'eo', 'f', 'o', 'n']
				version split: ['_', '_', 'h', 'e', 'o', 'f', 'o', 'n']
				{'string': '_/_/h/e/o/f', 'rgx': '((_))/((_))/((h))/((_))/((e)|(eo)|(o))$'}
				_____REMOVING________['_', '_', 'h', 'e', 'o', 'f', 'o', 'n']
				version split: ['_', '_', 'h', 'eo', 'f', 'o', 'n']
				{'string': '_/_/h/eo/f/o', 'rgx': '((_))/((_))/((h))/((_))/((e)|(eo)|(o))$'}
				_____REMOVING________['_', '_', 'h', 'eo', 'f', 'o', 'n']
				version split: ['h', 'e', 'o', '_', 'f', 'o', 'n']
				{'string': 'h/e/o/_/f/o', 'rgx': '((_))/((_))/((h))/((_))/((e)|(eo)|(o))$'}
				_____REMOVING________['h', 'e', 'o', '_', 'f', 'o', 'n']
				version split: ['h', 'eo', 'f', '_', 'o', 'n']
				{'string': 'h/eo/f/_/o/n', 'rgx': '((_))/((_))/((h))/((_))/((e)|(eo)|(o))$'}
				_____REMOVING________['h', 'eo', 'f', '_', 'o', 'n']
				version split: ['_', 'h', 'e', '_', 'o', 'f', 'o', 'n']
				{'string': '_/h/e/_/o/f', 'rgx': '((_))/((_))/((h))/((_))/((e)|(eo)|(o))$'}
				_____REMOVING________['_', 'h', 'e', '_', 'o', 'f', 'o', 'n']
				version split: ['_', 'h', 'eo', '_', 'f', 'o', 'n']
				{'string': '_/h/eo/_/f/o', 'rgx': '((_))/((_))/((h))/((_))/((e)|(eo)|(o))$'}
				_____REMOVING________['_', 'h', 'eo', '_', 'f', 'o', 'n']
				version split: ['h', '_', 'e', '_', 'o', 'f', 'o', 'n']
				{'string': 'h/_/e/_/o/f', 'rgx': '((_))/((_))/((h))/((_))/((e)|(eo)|(o))$'}
				_____REMOVING________['h', '_', 'e', '_', 'o', 'f', 'o', 'n']
				version split: ['h', '_', 'eo', '_', 'f', 'o', 'n']
				{'string': 'h/_/eo/_/f/o', 'rgx': '((_))/((_))/((h))/((_))/((e)|(eo)|(o))$'}
				_____REMOVING________['h', '_', 'eo', '_', 'f', 'o', 'n']
				version split: ['_', '_', 'h', '_', 'e', 'o', 'f', 'o', 'n']
				{'string': '_/_/h/_/e/o', 'rgx': '((_))/((_))/((h))/((_))/((e)|(eo)|(o))$'}
				_____REMOVING________['_', '_', 'h', '_', 'e', 'o', 'f', 'o', 'n']
				version split: ['_', '_', 'h', '_', 'eo', 'f', 'o', 'n']
				{'string': '_/_/h/_/eo/f', 'rgx': '((_))/((_))/((h))/((_))/((e)|(eo)|(o))$'}
				_____REMOVING________['_', '_', 'h', '_', 'eo', 'f', 'o', 'n']
				ANALYSING: heoue
					resolving (44)
					> version: h/e/o/u/e
					TRYING: e
					> version: h/e/o/u/e
					TRYING: e
					> version: h/e/ou/e
					> version: h/eo/u/e
					> version: h/eo/u/e
					> version: h/e/o/ue
					> version: h/eo/u/e
					> version: h/eo/u/e
					> version: h/e/ou/e
					> version: h/eo/ue
					> version: h/eo/ue
					> version: _/h/e/o/u/e
					TRYING: u
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e'}
					> version: _/h/e/o/u/e
					TRYING: u
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e'}
					> version: _/h/e/ou/e
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e'}
					> version: _/h/eo/u/e
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e'}
					> version: _/h/eo/u/e
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e'}
					> version: _/h/e/o/ue
					TRYING: ue
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: _/h/eo/u/e
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: _/h/eo/u/e
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: _/h/e/ou/e
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: _/h/eo/ue
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: _/h/eo/ue
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: h/_/e/o/u/e
					TRYING: u
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: h/_/e/o/u/e
					TRYING: u
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: h/_/e/ou/e
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: h/_/eo/u/e
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: h/_/eo/u/e
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: h/_/e/o/ue
					TRYING: ue
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: h/_/eo/u/e
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: h/_/eo/u/e
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: h/_/e/ou/e
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: h/_/eo/ue
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: h/_/eo/ue
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: _/_/h/e/o/u/e
					TRYING: o
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue', 'o'}
					> version: _/_/h/e/o/u/e
					TRYING: o
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue', 'o'}
					> version: _/_/h/e/ou/e
					TRYING: ou
					adding blocked set: V = V >> ou, e, eo, o
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue', 'o'}
					> version: _/_/h/eo/u/e
					TRYING: u
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue', 'o'}
					> version: _/_/h/eo/u/e
					TRYING: u
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue', 'o'}
					> version: _/_/h/e/o/ue
					TRYING: o
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue', 'o'}
					> version: _/_/h/eo/u/e
					TRYING: u
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue', 'o'}
					> version: _/_/h/eo/u/e
					TRYING: u
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue', 'o'}
					> version: _/_/h/e/ou/e
					TRYING: ou
					adding blocked set: V = V >> ou, e, eo, o
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue', 'o'}
					> version: _/_/h/eo/ue
					TRYING: ue
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue', 'o'}
					> version: _/_/h/eo/ue
					TRYING: ue
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue', 'o'}
					RESULT:  ['u', 'e', 'ue', 'o']
				version split: ['h', 'e', 'o', 'u', 'e']
				{'string': 'h/e/o/u/e', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['h', 'e', 'o', 'u', 'e']
				version split: ['h', 'e', 'o', 'u', 'e']
				{'string': 'h/e/o/u/e', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['h', 'e', 'o', 'u', 'e']
				version split: ['h', 'e', 'ou', 'e']
				{'string': 'h/e/ou/e', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['h', 'e', 'ou', 'e']
				version split: ['h', 'eo', 'u', 'e']
				{'string': 'h/eo/u/e', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['h', 'eo', 'u', 'e']
				version split: ['h', 'eo', 'u', 'e']
				{'string': 'h/eo/u/e', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['h', 'eo', 'u', 'e']
				version split: ['h', 'e', 'o', 'ue']
				{'string': 'h/e/o/ue', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['h', 'e', 'o', 'ue']
				version split: ['h', 'eo', 'u', 'e']
				{'string': 'h/eo/u/e', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['h', 'eo', 'u', 'e']
				version split: ['h', 'eo', 'u', 'e']
				{'string': 'h/eo/u/e', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['h', 'eo', 'u', 'e']
				version split: ['h', 'e', 'ou', 'e']
				{'string': 'h/e/ou/e', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['h', 'e', 'ou', 'e']
				version split: ['h', 'eo', 'ue']
				{'string': 'h/eo/ue', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['h', 'eo', 'ue']
				version split: ['h', 'eo', 'ue']
				{'string': 'h/eo/ue', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['h', 'eo', 'ue']
				version split: ['_', 'h', 'e', 'o', 'u', 'e']
				{'string': '_/h/e/o/u/e', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['_', 'h', 'e', 'o', 'u', 'e']
				version split: ['_', 'h', 'e', 'o', 'u', 'e']
				{'string': '_/h/e/o/u/e', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['_', 'h', 'e', 'o', 'u', 'e']
				version split: ['_', 'h', 'e', 'ou', 'e']
				{'string': '_/h/e/ou/e', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['_', 'h', 'e', 'ou', 'e']
				version split: ['_', 'h', 'eo', 'u', 'e']
				{'string': '_/h/eo/u/e', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['_', 'h', 'eo', 'u', 'e']
				version split: ['_', 'h', 'eo', 'u', 'e']
				{'string': '_/h/eo/u/e', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['_', 'h', 'eo', 'u', 'e']
				version split: ['_', 'h', 'e', 'o', 'ue']
				{'string': '_/h/e/o/ue', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['_', 'h', 'e', 'o', 'ue']
				version split: ['_', 'h', 'eo', 'u', 'e']
				{'string': '_/h/eo/u/e', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['_', 'h', 'eo', 'u', 'e']
				version split: ['_', 'h', 'eo', 'u', 'e']
				{'string': '_/h/eo/u/e', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['_', 'h', 'eo', 'u', 'e']
				version split: ['_', 'h', 'e', 'ou', 'e']
				{'string': '_/h/e/ou/e', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['_', 'h', 'e', 'ou', 'e']
				version split: ['_', 'h', 'eo', 'ue']
				{'string': '_/h/eo/ue', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['_', 'h', 'eo', 'ue']
				version split: ['_', 'h', 'eo', 'ue']
				{'string': '_/h/eo/ue', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['_', 'h', 'eo', 'ue']
				version split: ['h', '_', 'e', 'o', 'u', 'e']
				{'string': 'h/_/e/o/u/e', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['h', '_', 'e', 'o', 'u', 'e']
				version split: ['h', '_', 'e', 'o', 'u', 'e']
				{'string': 'h/_/e/o/u/e', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['h', '_', 'e', 'o', 'u', 'e']
				version split: ['h', '_', 'e', 'ou', 'e']
				{'string': 'h/_/e/ou/e', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['h', '_', 'e', 'ou', 'e']
				version split: ['h', '_', 'eo', 'u', 'e']
				{'string': 'h/_/eo/u/e', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['h', '_', 'eo', 'u', 'e']
				version split: ['h', '_', 'eo', 'u', 'e']
				{'string': 'h/_/eo/u/e', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['h', '_', 'eo', 'u', 'e']
				version split: ['h', '_', 'e', 'o', 'ue']
				{'string': 'h/_/e/o/ue', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['h', '_', 'e', 'o', 'ue']
				version split: ['h', '_', 'eo', 'u', 'e']
				{'string': 'h/_/eo/u/e', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['h', '_', 'eo', 'u', 'e']
				version split: ['h', '_', 'eo', 'u', 'e']
				{'string': 'h/_/eo/u/e', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['h', '_', 'eo', 'u', 'e']
				version split: ['h', '_', 'e', 'ou', 'e']
				{'string': 'h/_/e/ou/e', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['h', '_', 'e', 'ou', 'e']
				version split: ['h', '_', 'eo', 'ue']
				{'string': 'h/_/eo/ue', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['h', '_', 'eo', 'ue']
				version split: ['h', '_', 'eo', 'ue']
				{'string': 'h/_/eo/ue', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['h', '_', 'eo', 'ue']
				version split: ['_', '_', 'h', 'e', 'o', 'u', 'e']
				{'string': '_/_/h/e/o/u', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['_', '_', 'h', 'e', 'o', 'u', 'e']
				version split: ['_', '_', 'h', 'e', 'o', 'u', 'e']
				{'string': '_/_/h/e/o/u', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['_', '_', 'h', 'e', 'o', 'u', 'e']
				version split: ['_', '_', 'h', 'e', 'ou', 'e']
				{'string': '_/_/h/e/ou/e', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['_', '_', 'h', 'e', 'ou', 'e']
				version split: ['_', '_', 'h', 'eo', 'u', 'e']
				{'string': '_/_/h/eo/u/e', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['_', '_', 'h', 'eo', 'u', 'e']
				version split: ['_', '_', 'h', 'eo', 'u', 'e']
				{'string': '_/_/h/eo/u/e', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['_', '_', 'h', 'eo', 'u', 'e']
				version split: ['_', '_', 'h', 'e', 'o', 'ue']
				{'string': '_/_/h/e/o/ue', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['_', '_', 'h', 'e', 'o', 'ue']
				version split: ['_', '_', 'h', 'eo', 'u', 'e']
				{'string': '_/_/h/eo/u/e', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['_', '_', 'h', 'eo', 'u', 'e']
				version split: ['_', '_', 'h', 'eo', 'u', 'e']
				{'string': '_/_/h/eo/u/e', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['_', '_', 'h', 'eo', 'u', 'e']
				version split: ['_', '_', 'h', 'e', 'ou', 'e']
				{'string': '_/_/h/e/ou/e', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['_', '_', 'h', 'e', 'ou', 'e']
				version split: ['_', '_', 'h', 'eo', 'ue']
				{'string': '_/_/h/eo/ue', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['_', '_', 'h', 'eo', 'ue']
				version split: ['_', '_', 'h', 'eo', 'ue']
				{'string': '_/_/h/eo/ue', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['_', '_', 'h', 'eo', 'ue']
				ANALYSING: heouen
					resolving (44)
					> version: h/e/o/u/e/n
					TRYING: e
					> version: h/e/o/u/e/n
					TRYING: e
					> version: h/e/ou/e/n
					TRYING: n
					> version: h/eo/u/e/n
					TRYING: n
					> version: h/eo/u/e/n
					TRYING: n
					> version: h/e/o/ue/n
					TRYING: n
					> version: h/eo/u/e/n
					TRYING: n
					> version: h/eo/u/e/n
					TRYING: n
					> version: h/e/ou/e/n
					TRYING: n
					> version: h/eo/ue/n
					> version: h/eo/ue/n
					> version: _/h/e/o/u/e/n
					TRYING: u
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e'}
					> version: _/h/e/o/u/e/n
					TRYING: u
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e'}
					> version: _/h/e/ou/e/n
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e'}
					> version: _/h/eo/u/e/n
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e'}
					> version: _/h/eo/u/e/n
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e'}
					> version: _/h/e/o/ue/n
					TRYING: ue
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: _/h/eo/u/e/n
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: _/h/eo/u/e/n
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: _/h/e/ou/e/n
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: _/h/eo/ue/n
					TRYING: n
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: _/h/eo/ue/n
					TRYING: n
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: h/_/e/o/u/e/n
					TRYING: u
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: h/_/e/o/u/e/n
					TRYING: u
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: h/_/e/ou/e/n
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: h/_/eo/u/e/n
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: h/_/eo/u/e/n
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: h/_/e/o/ue/n
					TRYING: ue
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: h/_/eo/u/e/n
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: h/_/eo/u/e/n
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: h/_/e/ou/e/n
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: h/_/eo/ue/n
					TRYING: n
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: h/_/eo/ue/n
					TRYING: n
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: _/_/h/e/o/u/e/n
					TRYING: o
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue', 'o'}
					> version: _/_/h/e/o/u/e/n
					TRYING: o
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue', 'o'}
					> version: _/_/h/e/ou/e/n
					TRYING: ou
					adding blocked set: V = V >> u, ue, eo, ou, e, o
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue', 'o'}
					> version: _/_/h/eo/u/e/n
					TRYING: u
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue', 'o'}
					> version: _/_/h/eo/u/e/n
					TRYING: u
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue', 'o'}
					> version: _/_/h/e/o/ue/n
					TRYING: o
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue', 'o'}
					> version: _/_/h/eo/u/e/n
					TRYING: u
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue', 'o'}
					> version: _/_/h/eo/u/e/n
					TRYING: u
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue', 'o'}
					> version: _/_/h/e/ou/e/n
					TRYING: ou
					adding blocked set: V = V >> u, ue, eo, ou, e, o
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue', 'o'}
					> version: _/_/h/eo/ue/n
					TRYING: ue
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue', 'o'}
					> version: _/_/h/eo/ue/n
					TRYING: ue
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue', 'o'}
					RESULT:  ['u', 'e', 'ue', 'o']
				version split: ['h', 'e', 'o', 'u', 'e', 'n']
				{'string': 'h/e/o/u/e/n', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['h', 'e', 'o', 'u', 'e', 'n']
				version split: ['h', 'e', 'o', 'u', 'e', 'n']
				{'string': 'h/e/o/u/e/n', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['h', 'e', 'o', 'u', 'e', 'n']
				version split: ['h', 'e', 'ou', 'e', 'n']
				{'string': 'h/e/ou/e/n', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['h', 'e', 'ou', 'e', 'n']
				version split: ['h', 'eo', 'u', 'e', 'n']
				{'string': 'h/eo/u/e/n', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['h', 'eo', 'u', 'e', 'n']
				version split: ['h', 'eo', 'u', 'e', 'n']
				{'string': 'h/eo/u/e/n', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['h', 'eo', 'u', 'e', 'n']
				version split: ['h', 'e', 'o', 'ue', 'n']
				{'string': 'h/e/o/ue/n', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['h', 'e', 'o', 'ue', 'n']
				version split: ['h', 'eo', 'u', 'e', 'n']
				{'string': 'h/eo/u/e/n', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['h', 'eo', 'u', 'e', 'n']
				version split: ['h', 'eo', 'u', 'e', 'n']
				{'string': 'h/eo/u/e/n', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['h', 'eo', 'u', 'e', 'n']
				version split: ['h', 'e', 'ou', 'e', 'n']
				{'string': 'h/e/ou/e/n', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['h', 'e', 'ou', 'e', 'n']
				version split: ['h', 'eo', 'ue', 'n']
				{'string': 'h/eo/ue/n', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['h', 'eo', 'ue', 'n']
				version split: ['h', 'eo', 'ue', 'n']
				{'string': 'h/eo/ue/n', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['h', 'eo', 'ue', 'n']
				version split: ['_', 'h', 'e', 'o', 'u', 'e', 'n']
				{'string': '_/h/e/o/u/e', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['_', 'h', 'e', 'o', 'u', 'e', 'n']
				version split: ['_', 'h', 'e', 'o', 'u', 'e', 'n']
				{'string': '_/h/e/o/u/e', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['_', 'h', 'e', 'o', 'u', 'e', 'n']
				version split: ['_', 'h', 'e', 'ou', 'e', 'n']
				{'string': '_/h/e/ou/e/n', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['_', 'h', 'e', 'ou', 'e', 'n']
				version split: ['_', 'h', 'eo', 'u', 'e', 'n']
				{'string': '_/h/eo/u/e/n', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['_', 'h', 'eo', 'u', 'e', 'n']
				version split: ['_', 'h', 'eo', 'u', 'e', 'n']
				{'string': '_/h/eo/u/e/n', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['_', 'h', 'eo', 'u', 'e', 'n']
				version split: ['_', 'h', 'e', 'o', 'ue', 'n']
				{'string': '_/h/e/o/ue/n', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['_', 'h', 'e', 'o', 'ue', 'n']
				version split: ['_', 'h', 'eo', 'u', 'e', 'n']
				{'string': '_/h/eo/u/e/n', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['_', 'h', 'eo', 'u', 'e', 'n']
				version split: ['_', 'h', 'eo', 'u', 'e', 'n']
				{'string': '_/h/eo/u/e/n', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['_', 'h', 'eo', 'u', 'e', 'n']
				version split: ['_', 'h', 'e', 'ou', 'e', 'n']
				{'string': '_/h/e/ou/e/n', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['_', 'h', 'e', 'ou', 'e', 'n']
				version split: ['_', 'h', 'eo', 'ue', 'n']
				{'string': '_/h/eo/ue/n', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['_', 'h', 'eo', 'ue', 'n']
				version split: ['_', 'h', 'eo', 'ue', 'n']
				{'string': '_/h/eo/ue/n', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['_', 'h', 'eo', 'ue', 'n']
				version split: ['h', '_', 'e', 'o', 'u', 'e', 'n']
				{'string': 'h/_/e/o/u/e', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['h', '_', 'e', 'o', 'u', 'e', 'n']
				version split: ['h', '_', 'e', 'o', 'u', 'e', 'n']
				{'string': 'h/_/e/o/u/e', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['h', '_', 'e', 'o', 'u', 'e', 'n']
				version split: ['h', '_', 'e', 'ou', 'e', 'n']
				{'string': 'h/_/e/ou/e/n', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['h', '_', 'e', 'ou', 'e', 'n']
				version split: ['h', '_', 'eo', 'u', 'e', 'n']
				{'string': 'h/_/eo/u/e/n', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['h', '_', 'eo', 'u', 'e', 'n']
				version split: ['h', '_', 'eo', 'u', 'e', 'n']
				{'string': 'h/_/eo/u/e/n', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['h', '_', 'eo', 'u', 'e', 'n']
				version split: ['h', '_', 'e', 'o', 'ue', 'n']
				{'string': 'h/_/e/o/ue/n', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['h', '_', 'e', 'o', 'ue', 'n']
				version split: ['h', '_', 'eo', 'u', 'e', 'n']
				{'string': 'h/_/eo/u/e/n', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['h', '_', 'eo', 'u', 'e', 'n']
				version split: ['h', '_', 'eo', 'u', 'e', 'n']
				{'string': 'h/_/eo/u/e/n', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['h', '_', 'eo', 'u', 'e', 'n']
				version split: ['h', '_', 'e', 'ou', 'e', 'n']
				{'string': 'h/_/e/ou/e/n', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['h', '_', 'e', 'ou', 'e', 'n']
				version split: ['h', '_', 'eo', 'ue', 'n']
				{'string': 'h/_/eo/ue/n', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['h', '_', 'eo', 'ue', 'n']
				version split: ['h', '_', 'eo', 'ue', 'n']
				{'string': 'h/_/eo/ue/n', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['h', '_', 'eo', 'ue', 'n']
				version split: ['_', '_', 'h', 'e', 'o', 'u', 'e', 'n']
				{'string': '_/_/h/e/o/u', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['_', '_', 'h', 'e', 'o', 'u', 'e', 'n']
				version split: ['_', '_', 'h', 'e', 'o', 'u', 'e', 'n']
				{'string': '_/_/h/e/o/u', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['_', '_', 'h', 'e', 'o', 'u', 'e', 'n']
				version split: ['_', '_', 'h', 'e', 'ou', 'e', 'n']
				{'string': '_/_/h/e/ou/e', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['_', '_', 'h', 'e', 'ou', 'e', 'n']
				version split: ['_', '_', 'h', 'eo', 'u', 'e', 'n']
				{'string': '_/_/h/eo/u/e', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['_', '_', 'h', 'eo', 'u', 'e', 'n']
				version split: ['_', '_', 'h', 'eo', 'u', 'e', 'n']
				{'string': '_/_/h/eo/u/e', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['_', '_', 'h', 'eo', 'u', 'e', 'n']
				version split: ['_', '_', 'h', 'e', 'o', 'ue', 'n']
				{'string': '_/_/h/e/o/ue', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['_', '_', 'h', 'e', 'o', 'ue', 'n']
				version split: ['_', '_', 'h', 'eo', 'u', 'e', 'n']
				{'string': '_/_/h/eo/u/e', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['_', '_', 'h', 'eo', 'u', 'e', 'n']
				version split: ['_', '_', 'h', 'eo', 'u', 'e', 'n']
				{'string': '_/_/h/eo/u/e', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['_', '_', 'h', 'eo', 'u', 'e', 'n']
				version split: ['_', '_', 'h', 'e', 'ou', 'e', 'n']
				{'string': '_/_/h/e/ou/e', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['_', '_', 'h', 'e', 'ou', 'e', 'n']
				version split: ['_', '_', 'h', 'eo', 'ue', 'n']
				{'string': '_/_/h/eo/ue/n', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['_', '_', 'h', 'eo', 'ue', 'n']
				version split: ['_', '_', 'h', 'eo', 'ue', 'n']
				{'string': '_/_/h/eo/ue/n', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['_', '_', 'h', 'eo', 'ue', 'n']
				ANALYSING: heouene
					resolving (44)
					> version: h/e/o/u/e/n/e
					TRYING: e
					> version: h/e/o/u/e/n/e
					TRYING: e
					> version: h/e/ou/e/n/e
					TRYING: n
					> version: h/eo/u/e/n/e
					TRYING: n
					> version: h/eo/u/e/n/e
					TRYING: n
					> version: h/e/o/ue/n/e
					TRYING: n
					> version: h/eo/u/e/n/e
					TRYING: n
					> version: h/eo/u/e/n/e
					TRYING: n
					> version: h/e/ou/e/n/e
					TRYING: n
					> version: h/eo/ue/n/e
					TRYING: e
					> version: h/eo/ue/n/e
					TRYING: e
					> version: _/h/e/o/u/e/n/e
					TRYING: u
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e'}
					> version: _/h/e/o/u/e/n/e
					TRYING: u
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e'}
					> version: _/h/e/ou/e/n/e
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e'}
					> version: _/h/eo/u/e/n/e
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e'}
					> version: _/h/eo/u/e/n/e
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e'}
					> version: _/h/e/o/ue/n/e
					TRYING: ue
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: _/h/eo/u/e/n/e
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: _/h/eo/u/e/n/e
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: _/h/e/ou/e/n/e
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: _/h/eo/ue/n/e
					TRYING: n
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: _/h/eo/ue/n/e
					TRYING: n
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: h/_/e/o/u/e/n/e
					TRYING: u
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: h/_/e/o/u/e/n/e
					TRYING: u
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: h/_/e/ou/e/n/e
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: h/_/eo/u/e/n/e
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: h/_/eo/u/e/n/e
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: h/_/e/o/ue/n/e
					TRYING: ue
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: h/_/eo/u/e/n/e
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: h/_/eo/u/e/n/e
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: h/_/e/ou/e/n/e
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: h/_/eo/ue/n/e
					TRYING: n
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: h/_/eo/ue/n/e
					TRYING: n
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: _/_/h/e/o/u/e/n/e
					TRYING: o
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue', 'o'}
					> version: _/_/h/e/o/u/e/n/e
					TRYING: o
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue', 'o'}
					> version: _/_/h/e/ou/e/n/e
					TRYING: ou
					adding blocked set: V = V >> u, ue, eo, ou, e, o
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue', 'o'}
					> version: _/_/h/eo/u/e/n/e
					TRYING: u
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue', 'o'}
					> version: _/_/h/eo/u/e/n/e
					TRYING: u
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue', 'o'}
					> version: _/_/h/e/o/ue/n/e
					TRYING: o
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue', 'o'}
					> version: _/_/h/eo/u/e/n/e
					TRYING: u
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue', 'o'}
					> version: _/_/h/eo/u/e/n/e
					TRYING: u
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue', 'o'}
					> version: _/_/h/e/ou/e/n/e
					TRYING: ou
					adding blocked set: V = V >> u, ue, eo, ou, e, o
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue', 'o'}
					> version: _/_/h/eo/ue/n/e
					TRYING: ue
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue', 'o'}
					> version: _/_/h/eo/ue/n/e
					TRYING: ue
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue', 'o'}
					RESULT:  ['u', 'e', 'ue', 'o']
				version split: ['h', 'e', 'o', 'u', 'e', 'n', 'e']
				{'string': 'h/e/o/u/e/n', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['h', 'e', 'o', 'u', 'e', 'n', 'e']
				version split: ['h', 'e', 'o', 'u', 'e', 'n', 'e']
				{'string': 'h/e/o/u/e/n', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['h', 'e', 'o', 'u', 'e', 'n', 'e']
				version split: ['h', 'e', 'ou', 'e', 'n', 'e']
				{'string': 'h/e/ou/e/n/e', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['h', 'e', 'ou', 'e', 'n', 'e']
				version split: ['h', 'eo', 'u', 'e', 'n', 'e']
				{'string': 'h/eo/u/e/n/e', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['h', 'eo', 'u', 'e', 'n', 'e']
				version split: ['h', 'eo', 'u', 'e', 'n', 'e']
				{'string': 'h/eo/u/e/n/e', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['h', 'eo', 'u', 'e', 'n', 'e']
				version split: ['h', 'e', 'o', 'ue', 'n', 'e']
				{'string': 'h/e/o/ue/n/e', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['h', 'e', 'o', 'ue', 'n', 'e']
				version split: ['h', 'eo', 'u', 'e', 'n', 'e']
				{'string': 'h/eo/u/e/n/e', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['h', 'eo', 'u', 'e', 'n', 'e']
				version split: ['h', 'eo', 'u', 'e', 'n', 'e']
				{'string': 'h/eo/u/e/n/e', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['h', 'eo', 'u', 'e', 'n', 'e']
				version split: ['h', 'e', 'ou', 'e', 'n', 'e']
				{'string': 'h/e/ou/e/n/e', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['h', 'e', 'ou', 'e', 'n', 'e']
				version split: ['h', 'eo', 'ue', 'n', 'e']
				{'string': 'h/eo/ue/n/e', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['h', 'eo', 'ue', 'n', 'e']
				version split: ['h', 'eo', 'ue', 'n', 'e']
				{'string': 'h/eo/ue/n/e', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['h', 'eo', 'ue', 'n', 'e']
				version split: ['_', 'h', 'e', 'o', 'u', 'e', 'n', 'e']
				{'string': '_/h/e/o/u/e', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['_', 'h', 'e', 'o', 'u', 'e', 'n', 'e']
				version split: ['_', 'h', 'e', 'o', 'u', 'e', 'n', 'e']
				{'string': '_/h/e/o/u/e', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['_', 'h', 'e', 'o', 'u', 'e', 'n', 'e']
				version split: ['_', 'h', 'e', 'ou', 'e', 'n', 'e']
				{'string': '_/h/e/ou/e/n', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['_', 'h', 'e', 'ou', 'e', 'n', 'e']
				version split: ['_', 'h', 'eo', 'u', 'e', 'n', 'e']
				{'string': '_/h/eo/u/e/n', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['_', 'h', 'eo', 'u', 'e', 'n', 'e']
				version split: ['_', 'h', 'eo', 'u', 'e', 'n', 'e']
				{'string': '_/h/eo/u/e/n', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['_', 'h', 'eo', 'u', 'e', 'n', 'e']
				version split: ['_', 'h', 'e', 'o', 'ue', 'n', 'e']
				{'string': '_/h/e/o/ue/n', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['_', 'h', 'e', 'o', 'ue', 'n', 'e']
				version split: ['_', 'h', 'eo', 'u', 'e', 'n', 'e']
				{'string': '_/h/eo/u/e/n', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['_', 'h', 'eo', 'u', 'e', 'n', 'e']
				version split: ['_', 'h', 'eo', 'u', 'e', 'n', 'e']
				{'string': '_/h/eo/u/e/n', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['_', 'h', 'eo', 'u', 'e', 'n', 'e']
				version split: ['_', 'h', 'e', 'ou', 'e', 'n', 'e']
				{'string': '_/h/e/ou/e/n', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['_', 'h', 'e', 'ou', 'e', 'n', 'e']
				version split: ['_', 'h', 'eo', 'ue', 'n', 'e']
				{'string': '_/h/eo/ue/n/e', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['_', 'h', 'eo', 'ue', 'n', 'e']
				version split: ['_', 'h', 'eo', 'ue', 'n', 'e']
				{'string': '_/h/eo/ue/n/e', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['_', 'h', 'eo', 'ue', 'n', 'e']
				version split: ['h', '_', 'e', 'o', 'u', 'e', 'n', 'e']
				{'string': 'h/_/e/o/u/e', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['h', '_', 'e', 'o', 'u', 'e', 'n', 'e']
				version split: ['h', '_', 'e', 'o', 'u', 'e', 'n', 'e']
				{'string': 'h/_/e/o/u/e', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['h', '_', 'e', 'o', 'u', 'e', 'n', 'e']
				version split: ['h', '_', 'e', 'ou', 'e', 'n', 'e']
				{'string': 'h/_/e/ou/e/n', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['h', '_', 'e', 'ou', 'e', 'n', 'e']
				version split: ['h', '_', 'eo', 'u', 'e', 'n', 'e']
				{'string': 'h/_/eo/u/e/n', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['h', '_', 'eo', 'u', 'e', 'n', 'e']
				version split: ['h', '_', 'eo', 'u', 'e', 'n', 'e']
				{'string': 'h/_/eo/u/e/n', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['h', '_', 'eo', 'u', 'e', 'n', 'e']
				version split: ['h', '_', 'e', 'o', 'ue', 'n', 'e']
				{'string': 'h/_/e/o/ue/n', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['h', '_', 'e', 'o', 'ue', 'n', 'e']
				version split: ['h', '_', 'eo', 'u', 'e', 'n', 'e']
				{'string': 'h/_/eo/u/e/n', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['h', '_', 'eo', 'u', 'e', 'n', 'e']
				version split: ['h', '_', 'eo', 'u', 'e', 'n', 'e']
				{'string': 'h/_/eo/u/e/n', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['h', '_', 'eo', 'u', 'e', 'n', 'e']
				version split: ['h', '_', 'e', 'ou', 'e', 'n', 'e']
				{'string': 'h/_/e/ou/e/n', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['h', '_', 'e', 'ou', 'e', 'n', 'e']
				version split: ['h', '_', 'eo', 'ue', 'n', 'e']
				{'string': 'h/_/eo/ue/n/e', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['h', '_', 'eo', 'ue', 'n', 'e']
				version split: ['h', '_', 'eo', 'ue', 'n', 'e']
				{'string': 'h/_/eo/ue/n/e', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['h', '_', 'eo', 'ue', 'n', 'e']
				version split: ['_', '_', 'h', 'e', 'o', 'u', 'e', 'n', 'e']
				{'string': '_/_/h/e/o/u', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['_', '_', 'h', 'e', 'o', 'u', 'e', 'n', 'e']
				version split: ['_', '_', 'h', 'e', 'o', 'u', 'e', 'n', 'e']
				{'string': '_/_/h/e/o/u', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['_', '_', 'h', 'e', 'o', 'u', 'e', 'n', 'e']
				version split: ['_', '_', 'h', 'e', 'ou', 'e', 'n', 'e']
				{'string': '_/_/h/e/ou/e', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['_', '_', 'h', 'e', 'ou', 'e', 'n', 'e']
				version split: ['_', '_', 'h', 'eo', 'u', 'e', 'n', 'e']
				{'string': '_/_/h/eo/u/e', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['_', '_', 'h', 'eo', 'u', 'e', 'n', 'e']
				version split: ['_', '_', 'h', 'eo', 'u', 'e', 'n', 'e']
				{'string': '_/_/h/eo/u/e', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['_', '_', 'h', 'eo', 'u', 'e', 'n', 'e']
				version split: ['_', '_', 'h', 'e', 'o', 'ue', 'n', 'e']
				{'string': '_/_/h/e/o/ue', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['_', '_', 'h', 'e', 'o', 'ue', 'n', 'e']
				version split: ['_', '_', 'h', 'eo', 'u', 'e', 'n', 'e']
				{'string': '_/_/h/eo/u/e', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['_', '_', 'h', 'eo', 'u', 'e', 'n', 'e']
				version split: ['_', '_', 'h', 'eo', 'u', 'e', 'n', 'e']
				{'string': '_/_/h/eo/u/e', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['_', '_', 'h', 'eo', 'u', 'e', 'n', 'e']
				version split: ['_', '_', 'h', 'e', 'ou', 'e', 'n', 'e']
				{'string': '_/_/h/e/ou/e', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['_', '_', 'h', 'e', 'ou', 'e', 'n', 'e']
				version split: ['_', '_', 'h', 'eo', 'ue', 'n', 'e']
				{'string': '_/_/h/eo/ue/n', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['_', '_', 'h', 'eo', 'ue', 'n', 'e']
				version split: ['_', '_', 'h', 'eo', 'ue', 'n', 'e']
				{'string': '_/_/h/eo/ue/n', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue)|(o))$'}
				_____REMOVING________['_', '_', 'h', 'eo', 'ue', 'n', 'e']
				ANALYSING: heue
					resolving (20)
					> version: h/e/u/e
					> version: h/e/u/e
					> version: h/eu/e
					> version: h/e/ue
					> version: h/eu/e
					> version: _/h/e/u/e
					TRYING: e
					> version: _/h/e/u/e
					TRYING: e
					> version: _/h/eu/e
					> version: _/h/e/ue
					> version: _/h/eu/e
					> version: h/_/e/u/e
					TRYING: e
					> version: h/_/e/u/e
					TRYING: e
					> version: h/_/eu/e
					> version: h/_/e/ue
					> version: h/_/eu/e
					> version: _/_/h/e/u/e
					TRYING: u
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e'}
					> version: _/_/h/e/u/e
					TRYING: u
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e'}
					> version: _/_/h/eu/e
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e'}
					> version: _/_/h/e/ue
					TRYING: ue
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: _/_/h/eu/e
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					RESULT:  ['u', 'e', 'ue']
				version split: ['h', 'e', 'u', 'e']
				{'string': 'h/e/u/e', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', 'e', 'u', 'e']
				version split: ['h', 'e', 'u', 'e']
				{'string': 'h/e/u/e', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', 'e', 'u', 'e']
				version split: ['h', 'eu', 'e']
				{'string': 'h/eu/e', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', 'eu', 'e']
				version split: ['h', 'e', 'ue']
				{'string': 'h/e/ue', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', 'e', 'ue']
				version split: ['h', 'eu', 'e']
				{'string': 'h/eu/e', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', 'eu', 'e']
				version split: ['_', 'h', 'e', 'u', 'e']
				{'string': '_/h/e/u/e', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue))$'}
				_____REMOVING________['_', 'h', 'e', 'u', 'e']
				version split: ['_', 'h', 'e', 'u', 'e']
				{'string': '_/h/e/u/e', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue))$'}
				_____REMOVING________['_', 'h', 'e', 'u', 'e']
				version split: ['_', 'h', 'eu', 'e']
				{'string': '_/h/eu/e', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue))$'}
				_____REMOVING________['_', 'h', 'eu', 'e']
				version split: ['_', 'h', 'e', 'ue']
				{'string': '_/h/e/ue', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue))$'}
				_____REMOVING________['_', 'h', 'e', 'ue']
				version split: ['_', 'h', 'eu', 'e']
				{'string': '_/h/eu/e', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue))$'}
				_____REMOVING________['_', 'h', 'eu', 'e']
				version split: ['h', '_', 'e', 'u', 'e']
				{'string': 'h/_/e/u/e', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', '_', 'e', 'u', 'e']
				version split: ['h', '_', 'e', 'u', 'e']
				{'string': 'h/_/e/u/e', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', '_', 'e', 'u', 'e']
				version split: ['h', '_', 'eu', 'e']
				{'string': 'h/_/eu/e', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', '_', 'eu', 'e']
				version split: ['h', '_', 'e', 'ue']
				{'string': 'h/_/e/ue', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', '_', 'e', 'ue']
				version split: ['h', '_', 'eu', 'e']
				{'string': 'h/_/eu/e', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', '_', 'eu', 'e']
				version split: ['_', '_', 'h', 'e', 'u', 'e']
				{'string': '_/_/h/e/u/e', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue))$'}
				_____REMOVING________['_', '_', 'h', 'e', 'u', 'e']
				version split: ['_', '_', 'h', 'e', 'u', 'e']
				{'string': '_/_/h/e/u/e', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue))$'}
				_____REMOVING________['_', '_', 'h', 'e', 'u', 'e']
				version split: ['_', '_', 'h', 'eu', 'e']
				{'string': '_/_/h/eu/e', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue))$'}
				_____REMOVING________['_', '_', 'h', 'eu', 'e']
				version split: ['_', '_', 'h', 'e', 'ue']
				{'string': '_/_/h/e/ue', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue))$'}
				_____REMOVING________['_', '_', 'h', 'e', 'ue']
				version split: ['_', '_', 'h', 'eu', 'e']
				{'string': '_/_/h/eu/e', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue))$'}
				_____REMOVING________['_', '_', 'h', 'eu', 'e']
				ANALYSING: heuen
					resolving (20)
					> version: h/e/u/e/n
					TRYING: n
					> version: h/e/u/e/n
					TRYING: n
					> version: h/eu/e/n
					> version: h/e/ue/n
					> version: h/eu/e/n
					> version: _/h/e/u/e/n
					TRYING: e
					> version: _/h/e/u/e/n
					TRYING: e
					> version: _/h/eu/e/n
					TRYING: n
					> version: _/h/e/ue/n
					TRYING: n
					> version: _/h/eu/e/n
					TRYING: n
					> version: h/_/e/u/e/n
					TRYING: e
					> version: h/_/e/u/e/n
					TRYING: e
					> version: h/_/eu/e/n
					TRYING: n
					> version: h/_/e/ue/n
					TRYING: n
					> version: h/_/eu/e/n
					TRYING: n
					> version: _/_/h/e/u/e/n
					TRYING: u
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e'}
					> version: _/_/h/e/u/e/n
					TRYING: u
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e'}
					> version: _/_/h/eu/e/n
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e'}
					> version: _/_/h/e/ue/n
					TRYING: ue
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: _/_/h/eu/e/n
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					RESULT:  ['u', 'e', 'ue']
				version split: ['h', 'e', 'u', 'e', 'n']
				{'string': 'h/e/u/e/n', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', 'e', 'u', 'e', 'n']
				version split: ['h', 'e', 'u', 'e', 'n']
				{'string': 'h/e/u/e/n', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', 'e', 'u', 'e', 'n']
				version split: ['h', 'eu', 'e', 'n']
				{'string': 'h/eu/e/n', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', 'eu', 'e', 'n']
				version split: ['h', 'e', 'ue', 'n']
				{'string': 'h/e/ue/n', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', 'e', 'ue', 'n']
				version split: ['h', 'eu', 'e', 'n']
				{'string': 'h/eu/e/n', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', 'eu', 'e', 'n']
				version split: ['_', 'h', 'e', 'u', 'e', 'n']
				{'string': '_/h/e/u/e/n', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue))$'}
				_____REMOVING________['_', 'h', 'e', 'u', 'e', 'n']
				version split: ['_', 'h', 'e', 'u', 'e', 'n']
				{'string': '_/h/e/u/e/n', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue))$'}
				_____REMOVING________['_', 'h', 'e', 'u', 'e', 'n']
				version split: ['_', 'h', 'eu', 'e', 'n']
				{'string': '_/h/eu/e/n', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue))$'}
				_____REMOVING________['_', 'h', 'eu', 'e', 'n']
				version split: ['_', 'h', 'e', 'ue', 'n']
				{'string': '_/h/e/ue/n', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue))$'}
				_____REMOVING________['_', 'h', 'e', 'ue', 'n']
				version split: ['_', 'h', 'eu', 'e', 'n']
				{'string': '_/h/eu/e/n', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue))$'}
				_____REMOVING________['_', 'h', 'eu', 'e', 'n']
				version split: ['h', '_', 'e', 'u', 'e', 'n']
				{'string': 'h/_/e/u/e/n', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', '_', 'e', 'u', 'e', 'n']
				version split: ['h', '_', 'e', 'u', 'e', 'n']
				{'string': 'h/_/e/u/e/n', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', '_', 'e', 'u', 'e', 'n']
				version split: ['h', '_', 'eu', 'e', 'n']
				{'string': 'h/_/eu/e/n', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', '_', 'eu', 'e', 'n']
				version split: ['h', '_', 'e', 'ue', 'n']
				{'string': 'h/_/e/ue/n', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', '_', 'e', 'ue', 'n']
				version split: ['h', '_', 'eu', 'e', 'n']
				{'string': 'h/_/eu/e/n', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', '_', 'eu', 'e', 'n']
				version split: ['_', '_', 'h', 'e', 'u', 'e', 'n']
				{'string': '_/_/h/e/u/e', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue))$'}
				_____REMOVING________['_', '_', 'h', 'e', 'u', 'e', 'n']
				version split: ['_', '_', 'h', 'e', 'u', 'e', 'n']
				{'string': '_/_/h/e/u/e', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue))$'}
				_____REMOVING________['_', '_', 'h', 'e', 'u', 'e', 'n']
				version split: ['_', '_', 'h', 'eu', 'e', 'n']
				{'string': '_/_/h/eu/e/n', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue))$'}
				_____REMOVING________['_', '_', 'h', 'eu', 'e', 'n']
				version split: ['_', '_', 'h', 'e', 'ue', 'n']
				{'string': '_/_/h/e/ue/n', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue))$'}
				_____REMOVING________['_', '_', 'h', 'e', 'ue', 'n']
				version split: ['_', '_', 'h', 'eu', 'e', 'n']
				{'string': '_/_/h/eu/e/n', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue))$'}
				_____REMOVING________['_', '_', 'h', 'eu', 'e', 'n']
				ANALYSING: heuene
					resolving (20)
					> version: h/e/u/e/n/e
					TRYING: n
					> version: h/e/u/e/n/e
					TRYING: n
					> version: h/eu/e/n/e
					TRYING: e
					> version: h/e/ue/n/e
					TRYING: e
					> version: h/eu/e/n/e
					TRYING: e
					> version: _/h/e/u/e/n/e
					TRYING: e
					> version: _/h/e/u/e/n/e
					TRYING: e
					> version: _/h/eu/e/n/e
					TRYING: n
					> version: _/h/e/ue/n/e
					TRYING: n
					> version: _/h/eu/e/n/e
					TRYING: n
					> version: h/_/e/u/e/n/e
					TRYING: e
					> version: h/_/e/u/e/n/e
					TRYING: e
					> version: h/_/eu/e/n/e
					TRYING: n
					> version: h/_/e/ue/n/e
					TRYING: n
					> version: h/_/eu/e/n/e
					TRYING: n
					> version: _/_/h/e/u/e/n/e
					TRYING: u
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e'}
					> version: _/_/h/e/u/e/n/e
					TRYING: u
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e'}
					> version: _/_/h/eu/e/n/e
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e'}
					> version: _/_/h/e/ue/n/e
					TRYING: ue
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: _/_/h/eu/e/n/e
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					RESULT:  ['u', 'e', 'ue']
				version split: ['h', 'e', 'u', 'e', 'n', 'e']
				{'string': 'h/e/u/e/n/e', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', 'e', 'u', 'e', 'n', 'e']
				version split: ['h', 'e', 'u', 'e', 'n', 'e']
				{'string': 'h/e/u/e/n/e', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', 'e', 'u', 'e', 'n', 'e']
				version split: ['h', 'eu', 'e', 'n', 'e']
				{'string': 'h/eu/e/n/e', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', 'eu', 'e', 'n', 'e']
				version split: ['h', 'e', 'ue', 'n', 'e']
				{'string': 'h/e/ue/n/e', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', 'e', 'ue', 'n', 'e']
				version split: ['h', 'eu', 'e', 'n', 'e']
				{'string': 'h/eu/e/n/e', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', 'eu', 'e', 'n', 'e']
				version split: ['_', 'h', 'e', 'u', 'e', 'n', 'e']
				{'string': '_/h/e/u/e/n', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue))$'}
				_____REMOVING________['_', 'h', 'e', 'u', 'e', 'n', 'e']
				version split: ['_', 'h', 'e', 'u', 'e', 'n', 'e']
				{'string': '_/h/e/u/e/n', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue))$'}
				_____REMOVING________['_', 'h', 'e', 'u', 'e', 'n', 'e']
				version split: ['_', 'h', 'eu', 'e', 'n', 'e']
				{'string': '_/h/eu/e/n/e', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue))$'}
				_____REMOVING________['_', 'h', 'eu', 'e', 'n', 'e']
				version split: ['_', 'h', 'e', 'ue', 'n', 'e']
				{'string': '_/h/e/ue/n/e', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue))$'}
				_____REMOVING________['_', 'h', 'e', 'ue', 'n', 'e']
				version split: ['_', 'h', 'eu', 'e', 'n', 'e']
				{'string': '_/h/eu/e/n/e', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue))$'}
				_____REMOVING________['_', 'h', 'eu', 'e', 'n', 'e']
				version split: ['h', '_', 'e', 'u', 'e', 'n', 'e']
				{'string': 'h/_/e/u/e/n', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', '_', 'e', 'u', 'e', 'n', 'e']
				version split: ['h', '_', 'e', 'u', 'e', 'n', 'e']
				{'string': 'h/_/e/u/e/n', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', '_', 'e', 'u', 'e', 'n', 'e']
				version split: ['h', '_', 'eu', 'e', 'n', 'e']
				{'string': 'h/_/eu/e/n/e', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', '_', 'eu', 'e', 'n', 'e']
				version split: ['h', '_', 'e', 'ue', 'n', 'e']
				{'string': 'h/_/e/ue/n/e', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', '_', 'e', 'ue', 'n', 'e']
				version split: ['h', '_', 'eu', 'e', 'n', 'e']
				{'string': 'h/_/eu/e/n/e', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', '_', 'eu', 'e', 'n', 'e']
				version split: ['_', '_', 'h', 'e', 'u', 'e', 'n', 'e']
				{'string': '_/_/h/e/u/e', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue))$'}
				_____REMOVING________['_', '_', 'h', 'e', 'u', 'e', 'n', 'e']
				version split: ['_', '_', 'h', 'e', 'u', 'e', 'n', 'e']
				{'string': '_/_/h/e/u/e', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue))$'}
				_____REMOVING________['_', '_', 'h', 'e', 'u', 'e', 'n', 'e']
				version split: ['_', '_', 'h', 'eu', 'e', 'n', 'e']
				{'string': '_/_/h/eu/e/n', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue))$'}
				_____REMOVING________['_', '_', 'h', 'eu', 'e', 'n', 'e']
				version split: ['_', '_', 'h', 'e', 'ue', 'n', 'e']
				{'string': '_/_/h/e/ue/n', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue))$'}
				_____REMOVING________['_', '_', 'h', 'e', 'ue', 'n', 'e']
				version split: ['_', '_', 'h', 'eu', 'e', 'n', 'e']
				{'string': '_/_/h/eu/e/n', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue))$'}
				_____REMOVING________['_', '_', 'h', 'eu', 'e', 'n', 'e']
				ANALYSING: houen
					resolving (20)
					> version: h/o/u/e/n
					TRYING: n
					> version: h/o/u/e/n
					TRYING: n
					> version: h/ou/e/n
					> version: h/o/ue/n
					> version: h/ou/e/n
					> version: _/h/o/u/e/n
					TRYING: e
					> version: _/h/o/u/e/n
					TRYING: e
					> version: _/h/ou/e/n
					TRYING: n
					> version: _/h/o/ue/n
					TRYING: n
					> version: _/h/ou/e/n
					TRYING: n
					> version: h/_/o/u/e/n
					TRYING: e
					> version: h/_/o/u/e/n
					TRYING: e
					> version: h/_/ou/e/n
					TRYING: n
					> version: h/_/o/ue/n
					TRYING: n
					> version: h/_/ou/e/n
					TRYING: n
					> version: _/_/h/o/u/e/n
					TRYING: u
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e'}
					> version: _/_/h/o/u/e/n
					TRYING: u
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e'}
					> version: _/_/h/ou/e/n
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e'}
					> version: _/_/h/o/ue/n
					TRYING: ue
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: _/_/h/ou/e/n
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					RESULT:  ['u', 'e', 'ue']
				version split: ['h', 'o', 'u', 'e', 'n']
				{'string': 'h/o/u/e/n', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', 'o', 'u', 'e', 'n']
				version split: ['h', 'o', 'u', 'e', 'n']
				{'string': 'h/o/u/e/n', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', 'o', 'u', 'e', 'n']
				version split: ['h', 'ou', 'e', 'n']
				{'string': 'h/ou/e/n', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', 'ou', 'e', 'n']
				version split: ['h', 'o', 'ue', 'n']
				{'string': 'h/o/ue/n', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', 'o', 'ue', 'n']
				version split: ['h', 'ou', 'e', 'n']
				{'string': 'h/ou/e/n', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', 'ou', 'e', 'n']
				version split: ['_', 'h', 'o', 'u', 'e', 'n']
				{'string': '_/h/o/u/e/n', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue))$'}
				_____REMOVING________['_', 'h', 'o', 'u', 'e', 'n']
				version split: ['_', 'h', 'o', 'u', 'e', 'n']
				{'string': '_/h/o/u/e/n', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue))$'}
				_____REMOVING________['_', 'h', 'o', 'u', 'e', 'n']
				version split: ['_', 'h', 'ou', 'e', 'n']
				{'string': '_/h/ou/e/n', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue))$'}
				_____REMOVING________['_', 'h', 'ou', 'e', 'n']
				version split: ['_', 'h', 'o', 'ue', 'n']
				{'string': '_/h/o/ue/n', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue))$'}
				_____REMOVING________['_', 'h', 'o', 'ue', 'n']
				version split: ['_', 'h', 'ou', 'e', 'n']
				{'string': '_/h/ou/e/n', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue))$'}
				_____REMOVING________['_', 'h', 'ou', 'e', 'n']
				version split: ['h', '_', 'o', 'u', 'e', 'n']
				{'string': 'h/_/o/u/e/n', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', '_', 'o', 'u', 'e', 'n']
				version split: ['h', '_', 'o', 'u', 'e', 'n']
				{'string': 'h/_/o/u/e/n', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', '_', 'o', 'u', 'e', 'n']
				version split: ['h', '_', 'ou', 'e', 'n']
				{'string': 'h/_/ou/e/n', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', '_', 'ou', 'e', 'n']
				version split: ['h', '_', 'o', 'ue', 'n']
				{'string': 'h/_/o/ue/n', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', '_', 'o', 'ue', 'n']
				version split: ['h', '_', 'ou', 'e', 'n']
				{'string': 'h/_/ou/e/n', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue))$'}
				_____REMOVING________['h', '_', 'ou', 'e', 'n']
				version split: ['_', '_', 'h', 'o', 'u', 'e', 'n']
				{'string': '_/_/h/o/u/e', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue))$'}
				_____REMOVING________['_', '_', 'h', 'o', 'u', 'e', 'n']
				version split: ['_', '_', 'h', 'o', 'u', 'e', 'n']
				{'string': '_/_/h/o/u/e', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue))$'}
				_____REMOVING________['_', '_', 'h', 'o', 'u', 'e', 'n']
				version split: ['_', '_', 'h', 'ou', 'e', 'n']
				{'string': '_/_/h/ou/e/n', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue))$'}
				_____REMOVING________['_', '_', 'h', 'ou', 'e', 'n']
				version split: ['_', '_', 'h', 'o', 'ue', 'n']
				{'string': '_/_/h/o/ue/n', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue))$'}
				_____REMOVING________['_', '_', 'h', 'o', 'ue', 'n']
				version split: ['_', '_', 'h', 'ou', 'e', 'n']
				{'string': '_/_/h/ou/e/n', 'rgx': '((_))/((_))/((h))/((u))/((u)|(e)|(ue))$'}
				_____REMOVING________['_', '_', 'h', 'ou', 'e', 'n']
				ANALYSING: lich
					resolving (8)
					> version: l/i/c/h
					> version: l/i/c/h
					> version: l/i/ch
					> version: l/i/ch
					> version: l/_/i/c/h
					TRYING: h
					> version: l/_/i/c/h
					TRYING: h
					> version: l/_/i/ch
					> version: l/_/i/ch
					RESULT:  ['_']
				adding dashed alternative: ['l', 'i', 'c', 'h', '_']
				adding dashed alternative: ['l', 'i', 'c', 'h', '_']
				adding dashed alternative: ['l', 'i', 'ch', '_']
				adding dashed alternative: ['l', 'i', 'ch', '_']
				adding dashed alternative: ['l', '_', 'i', 'c', '_', 'h']
				adding dashed alternative: ['l', '_', 'i', 'c', '_', 'h']
				adding dashed alternative: ['l', '_', 'i', 'ch', '_']
				adding dashed alternative: ['l', '_', 'i', 'ch', '_']
				l/i/c/h(CCCC)
l/i/c/h(CVCC)
l/i/ch(CCC)
l/i/ch(CVC)
l/_/i/c/h(CAACC)
l/_/i/c/h(CAACC)
l/_/i/ch(CAAC)
l/_/i/ch(CAAC)
l/i/c/h/_(CACCA)
l/i/c/h/_(CACCA)
l/i/ch/_(CACA)
l/i/ch/_(CACA)
l/_/i/c/_/h(CAACAC)
l/_/i/c/_/h(CAACAC)
l/_/i/ch/_(CAACA)
l/_/i/ch/_(CAACA)
				version split: ['l', 'i', 'c', 'h']
				{'string': 'l/i/c/h', 'rgx': '((l))/((_))/((ch)|(c))/((h))/((_))$'}
				_____REMOVING________['l', 'i', 'c', 'h']
				version split: ['l', 'i', 'c', 'h']
				{'string': 'l/i/c/h', 'rgx': '((l))/((_))/((ch)|(c))/((h))/((_))$'}
				_____REMOVING________['l', 'i', 'c', 'h']
				version split: ['l', 'i', 'ch']
				{'string': 'l/i/ch', 'rgx': '((l))/((_))/((ch)|(c))/((h))/((_))$'}
				_____REMOVING________['l', 'i', 'ch']
				version split: ['l', 'i', 'ch']
				{'string': 'l/i/ch', 'rgx': '((l))/((_))/((ch)|(c))/((h))/((_))$'}
				_____REMOVING________['l', 'i', 'ch']
				version split: ['l', '_', 'i', 'c', 'h']
				{'string': 'l/_/i/c/h', 'rgx': '((l))/((_))/((ch)|(c))/((h))/((_))$'}
				_____REMOVING________['l', '_', 'i', 'c', 'h']
				version split: ['l', '_', 'i', 'c', 'h']
				{'string': 'l/_/i/c/h', 'rgx': '((l))/((_))/((ch)|(c))/((h))/((_))$'}
				_____REMOVING________['l', '_', 'i', 'c', 'h']
				version split: ['l', '_', 'i', 'ch']
				{'string': 'l/_/i/ch', 'rgx': '((l))/((_))/((ch)|(c))/((h))/((_))$'}
				_____REMOVING________['l', '_', 'i', 'ch']
				version split: ['l', '_', 'i', 'ch']
				{'string': 'l/_/i/ch', 'rgx': '((l))/((_))/((ch)|(c))/((h))/((_))$'}
				_____REMOVING________['l', '_', 'i', 'ch']
				version split: ['l', 'i', 'c', 'h', '_']
				{'string': 'l/i/c/h/_', 'rgx': '((l))/((_))/((ch)|(c))/((h))/((_))$'}
				_____REMOVING________['l', 'i', 'c', 'h', '_']
				version split: ['l', 'i', 'c', 'h', '_']
				{'string': 'l/i/c/h/_', 'rgx': '((l))/((_))/((ch)|(c))/((h))/((_))$'}
				_____REMOVING________['l', 'i', 'c', 'h', '_']
				version split: ['l', 'i', 'ch', '_']
				{'string': 'l/i/ch/_', 'rgx': '((l))/((_))/((ch)|(c))/((h))/((_))$'}
				_____REMOVING________['l', 'i', 'ch', '_']
				version split: ['l', 'i', 'ch', '_']
				{'string': 'l/i/ch/_', 'rgx': '((l))/((_))/((ch)|(c))/((h))/((_))$'}
				_____REMOVING________['l', 'i', 'ch', '_']
				version split: ['l', '_', 'i', 'c', '_', 'h']
				{'string': 'l/_/i/c/_/h', 'rgx': '((l))/((_))/((ch)|(c))/((h))/((_))$'}
				_____REMOVING________['l', '_', 'i', 'c', '_', 'h']
				version split: ['l', '_', 'i', 'c', '_', 'h']
				{'string': 'l/_/i/c/_/h', 'rgx': '((l))/((_))/((ch)|(c))/((h))/((_))$'}
				_____REMOVING________['l', '_', 'i', 'c', '_', 'h']
				version split: ['l', '_', 'i', 'ch', '_']
				{'string': 'l/_/i/ch/_', 'rgx': '((l))/((_))/((ch)|(c))/((h))/((_))$'}
				_____REMOVING________['l', '_', 'i', 'ch', '_']
				version split: ['l', '_', 'i', 'ch', '_']
				{'string': 'l/_/i/ch/_', 'rgx': '((l))/((_))/((ch)|(c))/((h))/((_))$'}
				_____REMOVING________['l', '_', 'i', 'ch', '_']
		only one version left: ['_', 'e', '_', 'u', 'e']
		only one version left: ['_', '_', 'h', '_', 'e']
		only one version left: ['_', '_', 'h', '_', 'eo']
		FAIL: 
		FAIL: 
		FAIL: 
		FAIL: 
		FAIL: 
		FAIL: 
		FAIL: 
		FAIL: 
		FAIL: 
		FAIL: 
		FAIL: 
		SPLIT: ['l', 'i', 'c', 'h', 'e']
		SPLIT: ['_', 'e', '_', 'u', 'e']
		['_', 'e', '_', 'u', 'e']
		['_', 'e', '_', 'u', 'e']
		SPLIT: ['_', '_', 'h', '_', 'e']
		['_', '_', 'h', '_', 'e']
		SPLIT: ['_', '_', 'h', '_', 'eo']
		['_', '_', 'h', '_', 'eo']
		SPLIT: ['_', '_', 'h', '_', 'e.eo.o', '----!']
		SPLIT: ['_', '_', 'h', '_', 'e.eo.o', '----!']
		SPLIT: ['_', '_', 'h', '_', 'e.eo.o', '----!']
		SPLIT: ['_', '_', 'h', 'u', 'u.e.ue.o', '----!']
		SPLIT: ['_', '_', 'h', 'u', 'u.e.ue.o', '----!']
		SPLIT: ['_', '_', 'h', 'u', 'u.e.ue.o', '----!']
		SPLIT: ['_', '_', 'h', 'u', 'u.e.ue', '----!']
		SPLIT: ['_', '_', 'h', 'u', 'u.e.ue', '----!']
		SPLIT: ['_', '_', 'h', 'u', 'u.e.ue', '----!']
		SPLIT: ['_', '_', 'h', 'u', 'u.e.ue', '----!']
		SPLIT: ['l', '_', 'ch.c', 'h', '_', '----!']
		version for pattern CVCCV is INVALID
		[{'u', 'i', 'ue', '_', 'e'}]
		11
		POSSIBLE CHANGE: 0 : Palatal Vicinity l-deletion
		OVERVIEW: version for pattern CVCCV
{'u', 'i', 'ue', '_', 'e'}
faulty splits: 11
he.eo.o----! <-! heofen
he.eo.o----! <-! heofenn
he.eo.o----! <-! heofon
huu.e.ue.o----! <-! heoue
huu.e.ue.o----! <-! heouen
huu.e.ue.o----! <-! heouene
huu.e.ue----! <-! heue
huu.e.ue----! <-! heuen
huu.e.ue----! <-! heuene
huu.e.ue----! <-! houen
lch.ch----! <-! lich
l | i | c | h | e
_ | e | _ | u | e
_ | _ | h | _ | e
_ | _ | h | _ | eo
_ | _ | h | _ | e.eo.o | ----!
_ | _ | h | _ | e.eo.o | ----!
_ | _ | h | _ | e.eo.o | ----!
_ | _ | h | u | u.e.ue.o | ----!
_ | _ | h | u | u.e.ue.o | ----!
_ | _ | h | u | u.e.ue.o | ----!
_ | _ | h | u | u.e.ue | ----!
_ | _ | h | u | u.e.ue | ----!
_ | _ | h | u | u.e.ue | ----!
_ | _ | h | u | u.e.ue | ----!
l | _ | ch.c | h | _ | ----!
0 : {'h', '_', 'l'}
1 : {'u', 'i', 'ue', '_', 'e', 'o'},{'u', 'i', 'ue', '_', 'e'},{'u', 'i', 'e', 'ue'},{'u', 'i', 'ue', '_', 'eo', 'e'},{'u', 'eu', 'i', 'ue', '_', 'e'},{'u', 'i', 'ue', '_', 'ou', 'e'}
2 : {'u', 'c'}
3 : {'u', 'h', 'f', '_'}
	[[{'lit': 'eu', 'ln': 2, 'index': 0}], [{'lit': 'ue', 'ln': 2, 'index': 1}]]
	[[{'lit': 'eu', 'ln': 2, 'index': 0}], [{'lit': 'ue', 'ln': 2, 'index': 1}], [{'lit': 'eu', 'ln': 2, 'index': 0}, {'lit': 'ue', 'ln': 2, 'index': 1}]]
	[[{'lit': 'eo', 'ln': 2, 'index': 1}]]
	[[{'lit': 'eo', 'ln': 2, 'index': 1}]]
	[[{'lit': 'nn', 'ln': 2, 'index': 5}], [{'lit': 'eo', 'ln': 2, 'index': 1}]]
	[[{'lit': 'nn', 'ln': 2, 'index': 5}], [{'lit': 'eo', 'ln': 2, 'index': 1}], [{'lit': 'nn', 'ln': 2, 'index': 5}, {'lit': 'eo', 'ln': 2, 'index': 1}]]
	[[{'lit': 'eo', 'ln': 2, 'index': 1}]]
	[[{'lit': 'ou', 'ln': 2, 'index': 2}], [{'lit': 'eo', 'ln': 2, 'index': 1}], [{'lit': 'ue', 'ln': 2, 'index': 3}]]
	[[{'lit': 'ou', 'ln': 2, 'index': 2}], [{'lit': 'eo', 'ln': 2, 'index': 1}], [{'lit': 'ue', 'ln': 2, 'index': 3}], [{'lit': 'ou', 'ln': 2, 'index': 2}, {'lit': 'eo', 'ln': 2, 'index': 1}], [{'lit': 'ou', 'ln': 2, 'index': 2}, {'lit': 'ue', 'ln': 2, 'index': 3}], [{'lit': 'eo', 'ln': 2, 'index': 1}, {'lit': 'ue', 'ln': 2, 'index': 3}]]
	[[{'lit': 'ou', 'ln': 2, 'index': 2}], [{'lit': 'eo', 'ln': 2, 'index': 1}], [{'lit': 'ue', 'ln': 2, 'index': 3}], [{'lit': 'ou', 'ln': 2, 'index': 2}, {'lit': 'eo', 'ln': 2, 'index': 1}], [{'lit': 'ou', 'ln': 2, 'index': 2}, {'lit': 'ue', 'ln': 2, 'index': 3}], [{'lit': 'eo', 'ln': 2, 'index': 1}, {'lit': 'ue', 'ln': 2, 'index': 3}], [{'lit': 'ou', 'ln': 2, 'index': 2}, {'lit': 'eo', 'ln': 2, 'index': 1}, {'lit': 'ue', 'ln': 2, 'index': 3}]]
	[[{'lit': 'ou', 'ln': 2, 'index': 2}], [{'lit': 'eo', 'ln': 2, 'index': 1}], [{'lit': 'ue', 'ln': 2, 'index': 3}]]
	[[{'lit': 'ou', 'ln': 2, 'index': 2}], [{'lit': 'eo', 'ln': 2, 'index': 1}], [{'lit': 'ue', 'ln': 2, 'index': 3}], [{'lit': 'ou', 'ln': 2, 'index': 2}, {'lit': 'eo', 'ln': 2, 'index': 1}], [{'lit': 'ou', 'ln': 2, 'index': 2}, {'lit': 'ue', 'ln': 2, 'index': 3}], [{'lit': 'eo', 'ln': 2, 'index': 1}, {'lit': 'ue', 'ln': 2, 'index': 3}]]
	[[{'lit': 'ou', 'ln': 2, 'index': 2}], [{'lit': 'eo', 'ln': 2, 'index': 1}], [{'lit': 'ue', 'ln': 2, 'index': 3}], [{'lit': 'ou', 'ln': 2, 'index': 2}, {'lit': 'eo', 'ln': 2, 'index': 1}], [{'lit': 'ou', 'ln': 2, 'index': 2}, {'lit': 'ue', 'ln': 2, 'index': 3}], [{'lit': 'eo', 'ln': 2, 'index': 1}, {'lit': 'ue', 'ln': 2, 'index': 3}], [{'lit': 'ou', 'ln': 2, 'index': 2}, {'lit': 'eo', 'ln': 2, 'index': 1}, {'lit': 'ue', 'ln': 2, 'index': 3}]]
	[[{'lit': 'ou', 'ln': 2, 'index': 2}], [{'lit': 'eo', 'ln': 2, 'index': 1}], [{'lit': 'ue', 'ln': 2, 'index': 3}]]
	[[{'lit': 'ou', 'ln': 2, 'index': 2}], [{'lit': 'eo', 'ln': 2, 'index': 1}], [{'lit': 'ue', 'ln': 2, 'index': 3}], [{'lit': 'ou', 'ln': 2, 'index': 2}, {'lit': 'eo', 'ln': 2, 'index': 1}], [{'lit': 'ou', 'ln': 2, 'index': 2}, {'lit': 'ue', 'ln': 2, 'index': 3}], [{'lit': 'eo', 'ln': 2, 'index': 1}, {'lit': 'ue', 'ln': 2, 'index': 3}]]
	[[{'lit': 'ou', 'ln': 2, 'index': 2}], [{'lit': 'eo', 'ln': 2, 'index': 1}], [{'lit': 'ue', 'ln': 2, 'index': 3}], [{'lit': 'ou', 'ln': 2, 'index': 2}, {'lit': 'eo', 'ln': 2, 'index': 1}], [{'lit': 'ou', 'ln': 2, 'index': 2}, {'lit': 'ue', 'ln': 2, 'index': 3}], [{'lit': 'eo', 'ln': 2, 'index': 1}, {'lit': 'ue', 'ln': 2, 'index': 3}], [{'lit': 'ou', 'ln': 2, 'index': 2}, {'lit': 'eo', 'ln': 2, 'index': 1}, {'lit': 'ue', 'ln': 2, 'index': 3}]]
	[[{'lit': 'eu', 'ln': 2, 'index': 1}], [{'lit': 'ue', 'ln': 2, 'index': 2}]]
	[[{'lit': 'eu', 'ln': 2, 'index': 1}], [{'lit': 'ue', 'ln': 2, 'index': 2}], [{'lit': 'eu', 'ln': 2, 'index': 1}, {'lit': 'ue', 'ln': 2, 'index': 2}]]
	[[{'lit': 'eu', 'ln': 2, 'index': 1}], [{'lit': 'ue', 'ln': 2, 'index': 2}]]
	[[{'lit': 'eu', 'ln': 2, 'index': 1}], [{'lit': 'ue', 'ln': 2, 'index': 2}], [{'lit': 'eu', 'ln': 2, 'index': 1}, {'lit': 'ue', 'ln': 2, 'index': 2}]]
	[[{'lit': 'eu', 'ln': 2, 'index': 1}], [{'lit': 'ue', 'ln': 2, 'index': 2}]]
	[[{'lit': 'eu', 'ln': 2, 'index': 1}], [{'lit': 'ue', 'ln': 2, 'index': 2}], [{'lit': 'eu', 'ln': 2, 'index': 1}, {'lit': 'ue', 'ln': 2, 'index': 2}]]
	[[{'lit': 'ou', 'ln': 2, 'index': 1}], [{'lit': 'ue', 'ln': 2, 'index': 2}]]
	[[{'lit': 'ou', 'ln': 2, 'index': 1}], [{'lit': 'ue', 'ln': 2, 'index': 2}], [{'lit': 'ou', 'ln': 2, 'index': 1}, {'lit': 'ue', 'ln': 2, 'index': 2}]]
	[[{'lit': 'ch', 'ln': 2, 'index': 2}]]
	[[{'lit': 'ch', 'ln': 2, 'index': 2}]]
	MIN pattern length=5
	Pattern VV is invalid
	Pattern CV is invalid
	Pattern CVV is invalid
	Pattern CVVCVC is invalid
	Pattern CVVCVCV is invalid
	Pattern CVVVVC is invalid
	Pattern CVVCV is invalid
	Pattern CVVVCV is invalid
	Pattern VCV is invalid
	Pattern VVV is invalid
	Pattern CVVC is invalid
	Pattern CVC is invalid
	Pattern CVCVCV is valid
	Pattern CCCC is invalid
	Pattern CVVVVCV is invalid
	Pattern CVVV is invalid
	Pattern CVVVC is invalid
	Pattern CVVVV is invalid
	Pattern CVCCV is valid
	Pattern CVCVCC is valid
	Pattern CVCC is invalid
	Pattern CVCVC is valid
	Pattern CCCV is invalid
	Pattern CVVCVCC is invalid
	Pattern CVCV is invalid
	Pattern CCCCV is invalid
	Pattern CCC is invalid
	Making the selection for pattern: CVCVCC
	Selection for pattern: CVCVCC completed
	Making a version for pattern: CVCVCC
			___CVCVCC : 0___
				ANALYSING: heofenn
				adding littera based on matching pattern
				ANALYSING: eue
					resolving (5)
					> version: e/u/e
					TRYING: e
					> version: e/u/e
					TRYING: e
					> version: eu/e
					TRYING: eu
					> version: e/ue
					TRYING: e
					> version: eu/e
					TRYING: eu
					RESULT:  ['_']
				adding dashed alternative: ['_', 'e', 'u', 'e']
				adding dashed alternative: ['_', 'e', 'u', 'e']
				adding dashed alternative: ['_', 'eu', 'e']
				adding dashed alternative: ['_', 'e', 'ue']
				adding dashed alternative: ['_', 'eu', 'e']
				e/u/e(VCV)
e/u/e(VVV)
eu/e(VV)
e/ue(VV)
eu/e(VV)
_/e/u/e(AVAV)
_/e/u/e(AVAV)
_/eu/e(AVV)
_/e/ue(AVV)
_/eu/e(AVV)
				ANALYSING: he
					resolving (1)
					> version: h/e
					TRYING: h
					RESULT:  ['h']
				ANALYSING: heo
					resolving (2)
					> version: h/e/o
					TRYING: h
					> version: h/eo
					TRYING: h
					RESULT:  ['h']
				ANALYSING: heofen
					resolving (2)
					> version: h/e/o/f/e/n
					TRYING: h
					> version: h/eo/f/e/n
					TRYING: h
					RESULT:  ['h']
				ANALYSING: heofon
					resolving (2)
					> version: h/e/o/f/o/n
					TRYING: h
					> version: h/eo/f/o/n
					TRYING: h
					RESULT:  ['h']
				ANALYSING: heoue
					resolving (11)
					> version: h/e/o/u/e
					TRYING: h
					> version: h/e/o/u/e
					TRYING: h
					> version: h/e/ou/e
					TRYING: h
					> version: h/eo/u/e
					TRYING: h
					> version: h/eo/u/e
					TRYING: h
					> version: h/e/o/ue
					TRYING: h
					> version: h/eo/u/e
					TRYING: h
					> version: h/eo/u/e
					TRYING: h
					> version: h/e/ou/e
					TRYING: h
					> version: h/eo/ue
					TRYING: h
					> version: h/eo/ue
					TRYING: h
					RESULT:  ['h']
				ANALYSING: heouen
					resolving (11)
					> version: h/e/o/u/e/n
					TRYING: h
					> version: h/e/o/u/e/n
					TRYING: h
					> version: h/e/ou/e/n
					TRYING: h
					> version: h/eo/u/e/n
					TRYING: h
					> version: h/eo/u/e/n
					TRYING: h
					> version: h/e/o/ue/n
					TRYING: h
					> version: h/eo/u/e/n
					TRYING: h
					> version: h/eo/u/e/n
					TRYING: h
					> version: h/e/ou/e/n
					TRYING: h
					> version: h/eo/ue/n
					TRYING: h
					> version: h/eo/ue/n
					TRYING: h
					RESULT:  ['h']
				ANALYSING: heouene
					resolving (11)
					> version: h/e/o/u/e/n/e
					TRYING: h
					> version: h/e/o/u/e/n/e
					TRYING: h
					> version: h/e/ou/e/n/e
					TRYING: h
					> version: h/eo/u/e/n/e
					TRYING: h
					> version: h/eo/u/e/n/e
					TRYING: h
					> version: h/e/o/ue/n/e
					TRYING: h
					> version: h/eo/u/e/n/e
					TRYING: h
					> version: h/eo/u/e/n/e
					TRYING: h
					> version: h/e/ou/e/n/e
					TRYING: h
					> version: h/eo/ue/n/e
					TRYING: h
					> version: h/eo/ue/n/e
					TRYING: h
					RESULT:  ['h']
				ANALYSING: heue
					resolving (5)
					> version: h/e/u/e
					TRYING: h
					> version: h/e/u/e
					TRYING: h
					> version: h/eu/e
					TRYING: h
					> version: h/e/ue
					TRYING: h
					> version: h/eu/e
					TRYING: h
					RESULT:  ['h']
				ANALYSING: heuen
					resolving (5)
					> version: h/e/u/e/n
					TRYING: h
					> version: h/e/u/e/n
					TRYING: h
					> version: h/eu/e/n
					TRYING: h
					> version: h/e/ue/n
					TRYING: h
					> version: h/eu/e/n
					TRYING: h
					RESULT:  ['h']
				ANALYSING: heuene
					resolving (5)
					> version: h/e/u/e/n/e
					TRYING: h
					> version: h/e/u/e/n/e
					TRYING: h
					> version: h/eu/e/n/e
					TRYING: h
					> version: h/e/ue/n/e
					TRYING: h
					> version: h/eu/e/n/e
					TRYING: h
					RESULT:  ['h']
				ANALYSING: houen
					resolving (5)
					> version: h/o/u/e/n
					TRYING: h
					> version: h/o/u/e/n
					TRYING: h
					> version: h/ou/e/n
					TRYING: h
					> version: h/o/ue/n
					TRYING: h
					> version: h/ou/e/n
					TRYING: h
					RESULT:  ['h']
				ANALYSING: lich
					resolving (4)
					> version: l/i/c/h
					TRYING: l
					adding blocked set: C = C >> h, _, l
					> version: l/i/c/h
					TRYING: l
					adding blocked set: C = C >> h, _, l
					> version: l/i/ch
					TRYING: l
					adding blocked set: C = C >> h, _, l
					> version: l/i/ch
					TRYING: l
					adding blocked set: C = C >> h, _, l
					RESULT:  ['_']
				adding dashed alternative: ['_', 'l', 'i', 'c', 'h']
				adding dashed alternative: ['_', 'l', 'i', 'c', 'h']
				adding dashed alternative: ['_', 'l', 'i', 'ch']
				adding dashed alternative: ['_', 'l', 'i', 'ch']
				l/i/c/h(CCCC)
l/i/c/h(CVCC)
l/i/ch(CCC)
l/i/ch(CVC)
_/l/i/c/h(ACACC)
_/l/i/c/h(ACACC)
_/l/i/ch(ACAC)
_/l/i/ch(ACAC)
				ANALYSING: liche
					resolving (4)
					> version: l/i/c/h/e
					TRYING: l
					adding blocked set: C = C >> h, _, l
					> version: l/i/c/h/e
					TRYING: l
					adding blocked set: C = C >> h, _, l
					> version: l/i/ch/e
					TRYING: l
					adding blocked set: C = C >> h, _, l
					> version: l/i/ch/e
					TRYING: l
					adding blocked set: C = C >> h, _, l
					RESULT:  ['_']
				adding dashed alternative: ['_', 'l', 'i', 'c', 'h', 'e']
				adding dashed alternative: ['_', 'l', 'i', 'c', 'h', 'e']
				adding dashed alternative: ['_', 'l', 'i', 'ch', 'e']
				adding dashed alternative: ['_', 'l', 'i', 'ch', 'e']
				l/i/c/h/e(CCCCV)
l/i/c/h/e(CVCCV)
l/i/ch/e(CCCV)
l/i/ch/e(CVCV)
_/l/i/c/h/e(ACACCV)
_/l/i/c/h/e(ACACCV)
_/l/i/ch/e(ACACV)
_/l/i/ch/e(ACACV)
			___CVCVCC : 1___
				ANALYSING: heofenn
				adding littera based on matching pattern
				ANALYSING: eue
					resolving (10)
					> version: e/u/e
					TRYING: u
					> version: e/u/e
					TRYING: u
					> version: eu/e
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e'}
					> version: e/ue
					TRYING: ue
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: eu/e
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: _/e/u/e
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: _/e/u/e
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: _/eu/e
					TRYING: eu
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'eu', 'ue'}
					> version: _/e/ue
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'eu', 'ue'}
					> version: _/eu/e
					TRYING: eu
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'eu', 'ue'}
					RESULT:  ['u', 'e', 'eu', 'ue']
				ANALYSING: he
					resolving (1)
					> version: h/e
					TRYING: e
					adding blocked set: V = V >> u, eu, ue, eo, e
					RESULT:  ['_']
				adding dashed alternative: ['h', '_', 'e']
				h/e(CV)
h/_/e(CAV)
				ANALYSING: heo
					resolving (2)
					> version: h/e/o
					TRYING: e
					adding blocked set: V = V >> u, eu, ue, _, eo, e
					> version: h/eo
					TRYING: eo
					adding blocked set: V = V >> u, eu, ue, _, eo, e
					RESULT:  ['_']
				adding dashed alternative: ['h', '_', 'e', 'o']
				adding dashed alternative: ['h', '_', 'eo']
				h/e/o(CVV)
h/eo(CV)
h/_/e/o(CAVV)
h/_/eo(CAV)
				ANALYSING: heofen
					resolving (2)
					> version: h/e/o/f/e/n
					TRYING: e
					adding blocked set: V = V >> u, eu, ue, _, eo, e
					> version: h/eo/f/e/n
					TRYING: eo
					adding blocked set: V = V >> u, eu, ue, _, eo, e
					RESULT:  ['_']
				adding dashed alternative: ['h', '_', 'e', 'o', 'f', 'e', 'n']
				adding dashed alternative: ['h', '_', 'eo', 'f', 'e', 'n']
				h/e/o/f/e/n(CVVCVC)
h/eo/f/e/n(CVCVC)
h/_/e/o/f/e/n(CAVVCVC)
h/_/eo/f/e/n(CAVCVC)
				ANALYSING: heofon
					resolving (2)
					> version: h/e/o/f/o/n
					TRYING: e
					adding blocked set: V = V >> u, eu, ue, _, eo, e
					> version: h/eo/f/o/n
					TRYING: eo
					adding blocked set: V = V >> u, eu, ue, _, eo, e
					RESULT:  ['_']
				adding dashed alternative: ['h', '_', 'e', 'o', 'f', 'o', 'n']
				adding dashed alternative: ['h', '_', 'eo', 'f', 'o', 'n']
				h/e/o/f/o/n(CVVCVC)
h/eo/f/o/n(CVCVC)
h/_/e/o/f/o/n(CAVVCVC)
h/_/eo/f/o/n(CAVCVC)
				ANALYSING: heoue
					resolving (11)
					> version: h/e/o/u/e
					TRYING: e
					adding blocked set: V = V >> u, eu, ue, _, eo, e
					> version: h/e/o/u/e
					TRYING: e
					adding blocked set: V = V >> u, eu, ue, _, eo, e
					> version: h/e/ou/e
					TRYING: e
					adding blocked set: V = V >> u, eu, ue, _, eo, e
					> version: h/eo/u/e
					TRYING: eo
					adding blocked set: V = V >> u, eu, ue, _, eo, e
					> version: h/eo/u/e
					TRYING: eo
					adding blocked set: V = V >> u, eu, ue, _, eo, e
					> version: h/e/o/ue
					TRYING: e
					adding blocked set: V = V >> u, eu, ue, _, eo, e
					> version: h/eo/u/e
					TRYING: eo
					adding blocked set: V = V >> u, eu, ue, _, eo, e
					> version: h/eo/u/e
					TRYING: eo
					adding blocked set: V = V >> u, eu, ue, _, eo, e
					> version: h/e/ou/e
					TRYING: e
					adding blocked set: V = V >> u, eu, ue, _, eo, e
					> version: h/eo/ue
					TRYING: eo
					adding blocked set: V = V >> u, eu, ue, _, eo, e
					> version: h/eo/ue
					TRYING: eo
					adding blocked set: V = V >> u, eu, ue, _, eo, e
					RESULT:  ['_']
				adding dashed alternative: ['h', '_', 'e', 'o', 'u', 'e']
				adding dashed alternative: ['h', '_', 'e', 'o', 'u', 'e']
				adding dashed alternative: ['h', '_', 'e', 'ou', 'e']
				adding dashed alternative: ['h', '_', 'eo', 'u', 'e']
				adding dashed alternative: ['h', '_', 'eo', 'u', 'e']
				adding dashed alternative: ['h', '_', 'e', 'o', 'ue']
				adding dashed alternative: ['h', '_', 'eo', 'u', 'e']
				adding dashed alternative: ['h', '_', 'eo', 'u', 'e']
				adding dashed alternative: ['h', '_', 'e', 'ou', 'e']
				adding dashed alternative: ['h', '_', 'eo', 'ue']
				adding dashed alternative: ['h', '_', 'eo', 'ue']
				h/e/o/u/e(CVVCV)
h/e/o/u/e(CVVVV)
h/e/ou/e(CVVV)
h/eo/u/e(CVCV)
h/eo/u/e(CVVV)
h/e/o/ue(CVVV)
h/eo/u/e(CVCV)
h/eo/u/e(CVVV)
h/e/ou/e(CVVV)
h/eo/ue(CVV)
h/eo/ue(CVV)
h/_/e/o/u/e(CAVVAV)
h/_/e/o/u/e(CAVVAV)
h/_/e/ou/e(CAVVV)
h/_/eo/u/e(CAVAV)
h/_/eo/u/e(CAVAV)
h/_/e/o/ue(CAVVV)
h/_/eo/u/e(CAVAV)
h/_/eo/u/e(CAVAV)
h/_/e/ou/e(CAVVV)
h/_/eo/ue(CAVV)
h/_/eo/ue(CAVV)
				ANALYSING: heouen
					resolving (11)
					> version: h/e/o/u/e/n
					TRYING: e
					adding blocked set: V = V >> u, eu, ue, _, eo, e
					> version: h/e/o/u/e/n
					TRYING: e
					adding blocked set: V = V >> u, eu, ue, _, eo, e
					> version: h/e/ou/e/n
					TRYING: e
					adding blocked set: V = V >> u, eu, ue, _, eo, e
					> version: h/eo/u/e/n
					TRYING: eo
					adding blocked set: V = V >> u, eu, ue, _, eo, e
					> version: h/eo/u/e/n
					TRYING: eo
					adding blocked set: V = V >> u, eu, ue, _, eo, e
					> version: h/e/o/ue/n
					TRYING: e
					adding blocked set: V = V >> u, eu, ue, _, eo, e
					> version: h/eo/u/e/n
					TRYING: eo
					adding blocked set: V = V >> u, eu, ue, _, eo, e
					> version: h/eo/u/e/n
					TRYING: eo
					adding blocked set: V = V >> u, eu, ue, _, eo, e
					> version: h/e/ou/e/n
					TRYING: e
					adding blocked set: V = V >> u, eu, ue, _, eo, e
					> version: h/eo/ue/n
					TRYING: eo
					adding blocked set: V = V >> u, eu, ue, _, eo, e
					> version: h/eo/ue/n
					TRYING: eo
					adding blocked set: V = V >> u, eu, ue, _, eo, e
					RESULT:  ['_']
				adding dashed alternative: ['h', '_', 'e', 'o', 'u', 'e', 'n']
				adding dashed alternative: ['h', '_', 'e', 'o', 'u', 'e', 'n']
				adding dashed alternative: ['h', '_', 'e', 'ou', 'e', 'n']
				adding dashed alternative: ['h', '_', 'eo', 'u', 'e', 'n']
				adding dashed alternative: ['h', '_', 'eo', 'u', 'e', 'n']
				adding dashed alternative: ['h', '_', 'e', 'o', 'ue', 'n']
				adding dashed alternative: ['h', '_', 'eo', 'u', 'e', 'n']
				adding dashed alternative: ['h', '_', 'eo', 'u', 'e', 'n']
				adding dashed alternative: ['h', '_', 'e', 'ou', 'e', 'n']
				adding dashed alternative: ['h', '_', 'eo', 'ue', 'n']
				adding dashed alternative: ['h', '_', 'eo', 'ue', 'n']
				h/e/o/u/e/n(CVVCVC)
h/e/o/u/e/n(CVVVVC)
h/e/ou/e/n(CVVVC)
h/eo/u/e/n(CVCVC)
h/eo/u/e/n(CVVVC)
h/e/o/ue/n(CVVVC)
h/eo/u/e/n(CVCVC)
h/eo/u/e/n(CVVVC)
h/e/ou/e/n(CVVVC)
h/eo/ue/n(CVVC)
h/eo/ue/n(CVVC)
h/_/e/o/u/e/n(CAVVAVC)
h/_/e/o/u/e/n(CAVVAVC)
h/_/e/ou/e/n(CAVVVC)
h/_/eo/u/e/n(CAVAVC)
h/_/eo/u/e/n(CAVAVC)
h/_/e/o/ue/n(CAVVVC)
h/_/eo/u/e/n(CAVAVC)
h/_/eo/u/e/n(CAVAVC)
h/_/e/ou/e/n(CAVVVC)
h/_/eo/ue/n(CAVVC)
h/_/eo/ue/n(CAVVC)
				ANALYSING: heouene
					resolving (11)
					> version: h/e/o/u/e/n/e
					TRYING: e
					adding blocked set: V = V >> u, eu, ue, _, eo, e
					> version: h/e/o/u/e/n/e
					TRYING: e
					adding blocked set: V = V >> u, eu, ue, _, eo, e
					> version: h/e/ou/e/n/e
					TRYING: e
					adding blocked set: V = V >> u, eu, ue, _, eo, e
					> version: h/eo/u/e/n/e
					TRYING: eo
					adding blocked set: V = V >> u, eu, ue, _, eo, e
					> version: h/eo/u/e/n/e
					TRYING: eo
					adding blocked set: V = V >> u, eu, ue, _, eo, e
					> version: h/e/o/ue/n/e
					TRYING: e
					adding blocked set: V = V >> u, eu, ue, _, eo, e
					> version: h/eo/u/e/n/e
					TRYING: eo
					adding blocked set: V = V >> u, eu, ue, _, eo, e
					> version: h/eo/u/e/n/e
					TRYING: eo
					adding blocked set: V = V >> u, eu, ue, _, eo, e
					> version: h/e/ou/e/n/e
					TRYING: e
					adding blocked set: V = V >> u, eu, ue, _, eo, e
					> version: h/eo/ue/n/e
					TRYING: eo
					adding blocked set: V = V >> u, eu, ue, _, eo, e
					> version: h/eo/ue/n/e
					TRYING: eo
					adding blocked set: V = V >> u, eu, ue, _, eo, e
					RESULT:  ['_']
				adding dashed alternative: ['h', '_', 'e', 'o', 'u', 'e', 'n', 'e']
				adding dashed alternative: ['h', '_', 'e', 'o', 'u', 'e', 'n', 'e']
				adding dashed alternative: ['h', '_', 'e', 'ou', 'e', 'n', 'e']
				adding dashed alternative: ['h', '_', 'eo', 'u', 'e', 'n', 'e']
				adding dashed alternative: ['h', '_', 'eo', 'u', 'e', 'n', 'e']
				adding dashed alternative: ['h', '_', 'e', 'o', 'ue', 'n', 'e']
				adding dashed alternative: ['h', '_', 'eo', 'u', 'e', 'n', 'e']
				adding dashed alternative: ['h', '_', 'eo', 'u', 'e', 'n', 'e']
				adding dashed alternative: ['h', '_', 'e', 'ou', 'e', 'n', 'e']
				adding dashed alternative: ['h', '_', 'eo', 'ue', 'n', 'e']
				adding dashed alternative: ['h', '_', 'eo', 'ue', 'n', 'e']
				h/e/o/u/e/n/e(CVVCVCV)
h/e/o/u/e/n/e(CVVVVCV)
h/e/ou/e/n/e(CVVVCV)
h/eo/u/e/n/e(CVCVCV)
h/eo/u/e/n/e(CVVVCV)
h/e/o/ue/n/e(CVVVCV)
h/eo/u/e/n/e(CVCVCV)
h/eo/u/e/n/e(CVVVCV)
h/e/ou/e/n/e(CVVVCV)
h/eo/ue/n/e(CVVCV)
h/eo/ue/n/e(CVVCV)
h/_/e/o/u/e/n/e(CAVVAVCV)
h/_/e/o/u/e/n/e(CAVVAVCV)
h/_/e/ou/e/n/e(CAVVVCV)
h/_/eo/u/e/n/e(CAVAVCV)
h/_/eo/u/e/n/e(CAVAVCV)
h/_/e/o/ue/n/e(CAVVVCV)
h/_/eo/u/e/n/e(CAVAVCV)
h/_/eo/u/e/n/e(CAVAVCV)
h/_/e/ou/e/n/e(CAVVVCV)
h/_/eo/ue/n/e(CAVVCV)
h/_/eo/ue/n/e(CAVVCV)
				ANALYSING: heue
					resolving (5)
					> version: h/e/u/e
					TRYING: e
					adding blocked set: V = V >> u, eu, ue, _, eo, e
					> version: h/e/u/e
					TRYING: e
					adding blocked set: V = V >> u, eu, ue, _, eo, e
					> version: h/eu/e
					TRYING: eu
					adding blocked set: V = V >> u, eu, ue, _, eo, e
					> version: h/e/ue
					TRYING: e
					adding blocked set: V = V >> u, eu, ue, _, eo, e
					> version: h/eu/e
					TRYING: eu
					adding blocked set: V = V >> u, eu, ue, _, eo, e
					RESULT:  ['_']
				adding dashed alternative: ['h', '_', 'e', 'u', 'e']
				adding dashed alternative: ['h', '_', 'e', 'u', 'e']
				adding dashed alternative: ['h', '_', 'eu', 'e']
				adding dashed alternative: ['h', '_', 'e', 'ue']
				adding dashed alternative: ['h', '_', 'eu', 'e']
				h/e/u/e(CVCV)
h/e/u/e(CVVV)
h/eu/e(CVV)
h/e/ue(CVV)
h/eu/e(CVV)
h/_/e/u/e(CAVAV)
h/_/e/u/e(CAVAV)
h/_/eu/e(CAVV)
h/_/e/ue(CAVV)
h/_/eu/e(CAVV)
				ANALYSING: heuen
					resolving (5)
					> version: h/e/u/e/n
					TRYING: e
					adding blocked set: V = V >> u, eu, ue, _, eo, e
					> version: h/e/u/e/n
					TRYING: e
					adding blocked set: V = V >> u, eu, ue, _, eo, e
					> version: h/eu/e/n
					TRYING: eu
					adding blocked set: V = V >> u, eu, ue, _, eo, e
					> version: h/e/ue/n
					TRYING: e
					adding blocked set: V = V >> u, eu, ue, _, eo, e
					> version: h/eu/e/n
					TRYING: eu
					adding blocked set: V = V >> u, eu, ue, _, eo, e
					RESULT:  ['_']
				adding dashed alternative: ['h', '_', 'e', 'u', 'e', 'n']
				adding dashed alternative: ['h', '_', 'e', 'u', 'e', 'n']
				adding dashed alternative: ['h', '_', 'eu', 'e', 'n']
				adding dashed alternative: ['h', '_', 'e', 'ue', 'n']
				adding dashed alternative: ['h', '_', 'eu', 'e', 'n']
				h/e/u/e/n(CVCVC)
h/e/u/e/n(CVVVC)
h/eu/e/n(CVVC)
h/e/ue/n(CVVC)
h/eu/e/n(CVVC)
h/_/e/u/e/n(CAVAVC)
h/_/e/u/e/n(CAVAVC)
h/_/eu/e/n(CAVVC)
h/_/e/ue/n(CAVVC)
h/_/eu/e/n(CAVVC)
				ANALYSING: heuene
					resolving (5)
					> version: h/e/u/e/n/e
					TRYING: e
					adding blocked set: V = V >> u, eu, ue, _, eo, e
					> version: h/e/u/e/n/e
					TRYING: e
					adding blocked set: V = V >> u, eu, ue, _, eo, e
					> version: h/eu/e/n/e
					TRYING: eu
					adding blocked set: V = V >> u, eu, ue, _, eo, e
					> version: h/e/ue/n/e
					TRYING: e
					adding blocked set: V = V >> u, eu, ue, _, eo, e
					> version: h/eu/e/n/e
					TRYING: eu
					adding blocked set: V = V >> u, eu, ue, _, eo, e
					RESULT:  ['_']
				adding dashed alternative: ['h', '_', 'e', 'u', 'e', 'n', 'e']
				adding dashed alternative: ['h', '_', 'e', 'u', 'e', 'n', 'e']
				adding dashed alternative: ['h', '_', 'eu', 'e', 'n', 'e']
				adding dashed alternative: ['h', '_', 'e', 'ue', 'n', 'e']
				adding dashed alternative: ['h', '_', 'eu', 'e', 'n', 'e']
				h/e/u/e/n/e(CVCVCV)
h/e/u/e/n/e(CVVVCV)
h/eu/e/n/e(CVVCV)
h/e/ue/n/e(CVVCV)
h/eu/e/n/e(CVVCV)
h/_/e/u/e/n/e(CAVAVCV)
h/_/e/u/e/n/e(CAVAVCV)
h/_/eu/e/n/e(CAVVCV)
h/_/e/ue/n/e(CAVVCV)
h/_/eu/e/n/e(CAVVCV)
				ANALYSING: houen
					resolving (5)
					> version: h/o/u/e/n
					TRYING: o
					adding blocked set: V = V >> u, eu, ue, _, eo, e, o
					> version: h/o/u/e/n
					TRYING: o
					adding blocked set: V = V >> u, eu, ue, _, eo, e, o
					> version: h/ou/e/n
					TRYING: ou
					adding blocked set: V = V >> u, eu, ue, _, eo, ou, e
					> version: h/o/ue/n
					TRYING: o
					adding blocked set: V = V >> u, eu, ue, _, eo, e, o
					> version: h/ou/e/n
					TRYING: ou
					adding blocked set: V = V >> u, eu, ue, _, eo, ou, e
					RESULT:  ['_']
				adding dashed alternative: ['h', '_', 'o', 'u', 'e', 'n']
				adding dashed alternative: ['h', '_', 'o', 'u', 'e', 'n']
				adding dashed alternative: ['h', '_', 'ou', 'e', 'n']
				adding dashed alternative: ['h', '_', 'o', 'ue', 'n']
				adding dashed alternative: ['h', '_', 'ou', 'e', 'n']
				h/o/u/e/n(CVCVC)
h/o/u/e/n(CVVVC)
h/ou/e/n(CVVC)
h/o/ue/n(CVVC)
h/ou/e/n(CVVC)
h/_/o/u/e/n(CAVAVC)
h/_/o/u/e/n(CAVAVC)
h/_/ou/e/n(CAVVC)
h/_/o/ue/n(CAVVC)
h/_/ou/e/n(CAVVC)
				ANALYSING: lich
					resolving (8)
					> version: l/i/c/h
					TRYING: i
					adding blocked set: V = V >> u, eu, i, ue, _, eo, e
					> version: l/i/c/h
					TRYING: i
					adding blocked set: V = V >> u, eu, i, ue, _, eo, e
					> version: l/i/ch
					TRYING: i
					adding blocked set: V = V >> u, eu, i, ue, _, eo, e
					> version: l/i/ch
					TRYING: i
					adding blocked set: V = V >> u, eu, i, ue, _, eo, e
					> version: _/l/i/c/h
					TRYING: l
					> version: _/l/i/c/h
					TRYING: l
					> version: _/l/i/ch
					TRYING: l
					> version: _/l/i/ch
					TRYING: l
					RESULT:  ['_']
				adding dashed alternative: ['l', '_', 'i', 'c', 'h']
				adding dashed alternative: ['l', '_', 'i', 'c', 'h']
				adding dashed alternative: ['l', '_', 'i', 'ch']
				adding dashed alternative: ['l', '_', 'i', 'ch']
				adding dashed alternative: ['_', '_', 'l', 'i', 'c', 'h']
				adding dashed alternative: ['_', '_', 'l', 'i', 'c', 'h']
				adding dashed alternative: ['_', '_', 'l', 'i', 'ch']
				adding dashed alternative: ['_', '_', 'l', 'i', 'ch']
				l/i/c/h(CCCC)
l/i/c/h(CVCC)
l/i/ch(CCC)
l/i/ch(CVC)
_/l/i/c/h(ACACC)
_/l/i/c/h(ACACC)
_/l/i/ch(ACAC)
_/l/i/ch(ACAC)
l/_/i/c/h(CAACC)
l/_/i/c/h(CAACC)
l/_/i/ch(CAAC)
l/_/i/ch(CAAC)
_/_/l/i/c/h(AACACC)
_/_/l/i/c/h(AACACC)
_/_/l/i/ch(AACAC)
_/_/l/i/ch(AACAC)
				ANALYSING: liche
					resolving (8)
					> version: l/i/c/h/e
					TRYING: i
					adding blocked set: V = V >> u, eu, i, ue, _, eo, e
					> version: l/i/c/h/e
					TRYING: i
					adding blocked set: V = V >> u, eu, i, ue, _, eo, e
					> version: l/i/ch/e
					TRYING: i
					adding blocked set: V = V >> u, eu, i, ue, _, eo, e
					> version: l/i/ch/e
					TRYING: i
					adding blocked set: V = V >> u, eu, i, ue, _, eo, e
					> version: _/l/i/c/h/e
					TRYING: l
					> version: _/l/i/c/h/e
					TRYING: l
					> version: _/l/i/ch/e
					TRYING: l
					> version: _/l/i/ch/e
					TRYING: l
					RESULT:  ['_']
				adding dashed alternative: ['l', '_', 'i', 'c', 'h', 'e']
				adding dashed alternative: ['l', '_', 'i', 'c', 'h', 'e']
				adding dashed alternative: ['l', '_', 'i', 'ch', 'e']
				adding dashed alternative: ['l', '_', 'i', 'ch', 'e']
				adding dashed alternative: ['_', '_', 'l', 'i', 'c', 'h', 'e']
				adding dashed alternative: ['_', '_', 'l', 'i', 'c', 'h', 'e']
				adding dashed alternative: ['_', '_', 'l', 'i', 'ch', 'e']
				adding dashed alternative: ['_', '_', 'l', 'i', 'ch', 'e']
				l/i/c/h/e(CCCCV)
l/i/c/h/e(CVCCV)
l/i/ch/e(CCCV)
l/i/ch/e(CVCV)
_/l/i/c/h/e(ACACCV)
_/l/i/c/h/e(ACACCV)
_/l/i/ch/e(ACACV)
_/l/i/ch/e(ACACV)
l/_/i/c/h/e(CAACCV)
l/_/i/c/h/e(CAACCV)
l/_/i/ch/e(CAACV)
l/_/i/ch/e(CAACV)
_/_/l/i/c/h/e(AACACCV)
_/_/l/i/c/h/e(AACACCV)
_/_/l/i/ch/e(AACACV)
_/_/l/i/ch/e(AACACV)
			___CVCVCC : 2___
				ANALYSING: heofenn
				adding littera based on matching pattern
				ANALYSING: eue
					resolving (10)
					> version: e/u/e
					TRYING: e
					> version: e/u/e
					TRYING: e
					> version: eu/e
					> version: e/ue
					> version: eu/e
					> version: _/e/u/e
					TRYING: u
					> version: _/e/u/e
					TRYING: u
					> version: _/eu/e
					TRYING: e
					> version: _/e/ue
					TRYING: ue
					> version: _/eu/e
					TRYING: e
					RESULT:  ['u']
				ANALYSING: he
					resolving (2)
					> version: h/e
					> version: h/_/e
					TRYING: e
					RESULT:  ['_']
				adding dashed alternative: ['h', 'e', '_']
				adding dashed alternative: ['h', '_', '_', 'e']
				h/e(CV)
h/_/e(CAV)
h/e/_(CVA)
h/_/_/e(CAAV)
				ANALYSING: heo
					resolving (4)
					> version: h/e/o
					TRYING: o
					> version: h/eo
					> version: h/_/e/o
					TRYING: e
					> version: h/_/eo
					TRYING: eo
					RESULT:  ['_']
				adding dashed alternative: ['h', 'e', '_', 'o']
				adding dashed alternative: ['h', 'eo', '_']
				adding dashed alternative: ['h', '_', '_', 'e', 'o']
				adding dashed alternative: ['h', '_', '_', 'eo']
				h/e/o(CVV)
h/eo(CV)
h/_/e/o(CAVV)
h/_/eo(CAV)
h/e/_/o(CVAV)
h/eo/_(CVA)
h/_/_/e/o(CAAVV)
h/_/_/eo(CAAV)
				ANALYSING: heofen
					resolving (4)
					> version: h/e/o/f/e/n
					TRYING: o
					> version: h/eo/f/e/n
					TRYING: f
					> version: h/_/e/o/f/e/n
					TRYING: e
					> version: h/_/eo/f/e/n
					TRYING: eo
					RESULT:  ['f']
				ANALYSING: heofon
					resolving (4)
					> version: h/e/o/f/o/n
					TRYING: o
					> version: h/eo/f/o/n
					TRYING: f
					> version: h/_/e/o/f/o/n
					TRYING: e
					> version: h/_/eo/f/o/n
					TRYING: eo
					RESULT:  ['f']
				ANALYSING: heoue
					resolving (22)
					> version: h/e/o/u/e
					TRYING: o
					> version: h/e/o/u/e
					TRYING: o
					> version: h/e/ou/e
					TRYING: ou
					> version: h/eo/u/e
					TRYING: u
					> version: h/eo/u/e
					TRYING: u
					> version: h/e/o/ue
					TRYING: o
					> version: h/eo/u/e
					TRYING: u
					> version: h/eo/u/e
					TRYING: u
					> version: h/e/ou/e
					TRYING: ou
					> version: h/eo/ue
					TRYING: ue
					> version: h/eo/ue
					TRYING: ue
					> version: h/_/e/o/u/e
					TRYING: e
					> version: h/_/e/o/u/e
					TRYING: e
					> version: h/_/e/ou/e
					TRYING: e
					> version: h/_/eo/u/e
					TRYING: eo
					> version: h/_/eo/u/e
					TRYING: eo
					> version: h/_/e/o/ue
					TRYING: e
					> version: h/_/eo/u/e
					TRYING: eo
					> version: h/_/eo/u/e
					TRYING: eo
					> version: h/_/e/ou/e
					TRYING: e
					> version: h/_/eo/ue
					TRYING: eo
					> version: h/_/eo/ue
					TRYING: eo
					RESULT:  ['u']
				ANALYSING: heouen
					resolving (22)
					> version: h/e/o/u/e/n
					TRYING: o
					> version: h/e/o/u/e/n
					TRYING: o
					> version: h/e/ou/e/n
					TRYING: ou
					> version: h/eo/u/e/n
					TRYING: u
					> version: h/eo/u/e/n
					TRYING: u
					> version: h/e/o/ue/n
					TRYING: o
					> version: h/eo/u/e/n
					TRYING: u
					> version: h/eo/u/e/n
					TRYING: u
					> version: h/e/ou/e/n
					TRYING: ou
					> version: h/eo/ue/n
					TRYING: ue
					> version: h/eo/ue/n
					TRYING: ue
					> version: h/_/e/o/u/e/n
					TRYING: e
					> version: h/_/e/o/u/e/n
					TRYING: e
					> version: h/_/e/ou/e/n
					TRYING: e
					> version: h/_/eo/u/e/n
					TRYING: eo
					> version: h/_/eo/u/e/n
					TRYING: eo
					> version: h/_/e/o/ue/n
					TRYING: e
					> version: h/_/eo/u/e/n
					TRYING: eo
					> version: h/_/eo/u/e/n
					TRYING: eo
					> version: h/_/e/ou/e/n
					TRYING: e
					> version: h/_/eo/ue/n
					TRYING: eo
					> version: h/_/eo/ue/n
					TRYING: eo
					RESULT:  ['u']
				ANALYSING: heouene
					resolving (22)
					> version: h/e/o/u/e/n/e
					TRYING: o
					> version: h/e/o/u/e/n/e
					TRYING: o
					> version: h/e/ou/e/n/e
					TRYING: ou
					> version: h/eo/u/e/n/e
					TRYING: u
					> version: h/eo/u/e/n/e
					TRYING: u
					> version: h/e/o/ue/n/e
					TRYING: o
					> version: h/eo/u/e/n/e
					TRYING: u
					> version: h/eo/u/e/n/e
					TRYING: u
					> version: h/e/ou/e/n/e
					TRYING: ou
					> version: h/eo/ue/n/e
					TRYING: ue
					> version: h/eo/ue/n/e
					TRYING: ue
					> version: h/_/e/o/u/e/n/e
					TRYING: e
					> version: h/_/e/o/u/e/n/e
					TRYING: e
					> version: h/_/e/ou/e/n/e
					TRYING: e
					> version: h/_/eo/u/e/n/e
					TRYING: eo
					> version: h/_/eo/u/e/n/e
					TRYING: eo
					> version: h/_/e/o/ue/n/e
					TRYING: e
					> version: h/_/eo/u/e/n/e
					TRYING: eo
					> version: h/_/eo/u/e/n/e
					TRYING: eo
					> version: h/_/e/ou/e/n/e
					TRYING: e
					> version: h/_/eo/ue/n/e
					TRYING: eo
					> version: h/_/eo/ue/n/e
					TRYING: eo
					RESULT:  ['u']
				ANALYSING: heue
					resolving (10)
					> version: h/e/u/e
					TRYING: u
					> version: h/e/u/e
					TRYING: u
					> version: h/eu/e
					TRYING: e
					> version: h/e/ue
					TRYING: ue
					> version: h/eu/e
					TRYING: e
					> version: h/_/e/u/e
					TRYING: e
					> version: h/_/e/u/e
					TRYING: e
					> version: h/_/eu/e
					TRYING: eu
					> version: h/_/e/ue
					TRYING: e
					> version: h/_/eu/e
					TRYING: eu
					RESULT:  ['u']
				ANALYSING: heuen
					resolving (10)
					> version: h/e/u/e/n
					TRYING: u
					> version: h/e/u/e/n
					TRYING: u
					> version: h/eu/e/n
					TRYING: e
					> version: h/e/ue/n
					TRYING: ue
					> version: h/eu/e/n
					TRYING: e
					> version: h/_/e/u/e/n
					TRYING: e
					> version: h/_/e/u/e/n
					TRYING: e
					> version: h/_/eu/e/n
					TRYING: eu
					> version: h/_/e/ue/n
					TRYING: e
					> version: h/_/eu/e/n
					TRYING: eu
					RESULT:  ['u']
				ANALYSING: heuene
					resolving (10)
					> version: h/e/u/e/n/e
					TRYING: u
					> version: h/e/u/e/n/e
					TRYING: u
					> version: h/eu/e/n/e
					TRYING: e
					> version: h/e/ue/n/e
					TRYING: ue
					> version: h/eu/e/n/e
					TRYING: e
					> version: h/_/e/u/e/n/e
					TRYING: e
					> version: h/_/e/u/e/n/e
					TRYING: e
					> version: h/_/eu/e/n/e
					TRYING: eu
					> version: h/_/e/ue/n/e
					TRYING: e
					> version: h/_/eu/e/n/e
					TRYING: eu
					RESULT:  ['u']
				ANALYSING: houen
					resolving (10)
					> version: h/o/u/e/n
					TRYING: u
					> version: h/o/u/e/n
					TRYING: u
					> version: h/ou/e/n
					TRYING: e
					> version: h/o/ue/n
					TRYING: ue
					> version: h/ou/e/n
					TRYING: e
					> version: h/_/o/u/e/n
					TRYING: o
					> version: h/_/o/u/e/n
					TRYING: o
					> version: h/_/ou/e/n
					TRYING: ou
					> version: h/_/o/ue/n
					TRYING: o
					> version: h/_/ou/e/n
					TRYING: ou
					RESULT:  ['u']
				ANALYSING: lich
					resolving (16)
					> version: l/i/c/h
					TRYING: c
					adding blocked set: C = C >> u, c, f, _
					> version: l/i/c/h
					TRYING: c
					adding blocked set: C = C >> u, c, f, _
					> version: l/i/ch
					TRYING: ch
					adding blocked set: C = C >> u, ch, f, _
					> version: l/i/ch
					TRYING: ch
					adding blocked set: C = C >> u, ch, f, _
					> version: _/l/i/c/h
					TRYING: i
					adding blocked set: C = C >> u, i, f, _
					> version: _/l/i/c/h
					TRYING: i
					adding blocked set: C = C >> u, i, f, _
					> version: _/l/i/ch
					TRYING: i
					adding blocked set: C = C >> u, i, f, _
					> version: _/l/i/ch
					TRYING: i
					adding blocked set: C = C >> u, i, f, _
					> version: l/_/i/c/h
					TRYING: i
					adding blocked set: C = C >> u, i, f, _
					> version: l/_/i/c/h
					TRYING: i
					adding blocked set: C = C >> u, i, f, _
					> version: l/_/i/ch
					TRYING: i
					adding blocked set: C = C >> u, i, f, _
					> version: l/_/i/ch
					TRYING: i
					adding blocked set: C = C >> u, i, f, _
					> version: _/_/l/i/c/h
					TRYING: l
					adding blocked set: C = C >> u, f, _, l
					> version: _/_/l/i/c/h
					TRYING: l
					adding blocked set: C = C >> u, f, _, l
					> version: _/_/l/i/ch
					TRYING: l
					adding blocked set: C = C >> u, f, _, l
					> version: _/_/l/i/ch
					TRYING: l
					adding blocked set: C = C >> u, f, _, l
					RESULT:  ['_']
				adding dashed alternative: ['l', 'i', '_', 'c', 'h']
				adding dashed alternative: ['l', 'i', '_', 'c', 'h']
				adding dashed alternative: ['l', 'i', '_', 'ch']
				adding dashed alternative: ['l', 'i', '_', 'ch']
				adding dashed alternative: ['_', 'l', '_', 'i', 'c', 'h']
				adding dashed alternative: ['_', 'l', '_', 'i', 'c', 'h']
				adding dashed alternative: ['_', 'l', '_', 'i', 'ch']
				adding dashed alternative: ['_', 'l', '_', 'i', 'ch']
				adding dashed alternative: ['l', '_', '_', 'i', 'c', 'h']
				adding dashed alternative: ['l', '_', '_', 'i', 'c', 'h']
				adding dashed alternative: ['l', '_', '_', 'i', 'ch']
				adding dashed alternative: ['l', '_', '_', 'i', 'ch']
				adding dashed alternative: ['_', '_', '_', 'l', 'i', 'c', 'h']
				adding dashed alternative: ['_', '_', '_', 'l', 'i', 'c', 'h']
				adding dashed alternative: ['_', '_', '_', 'l', 'i', 'ch']
				adding dashed alternative: ['_', '_', '_', 'l', 'i', 'ch']
				l/i/c/h(CCCC)
l/i/c/h(CVCC)
l/i/ch(CCC)
l/i/ch(CVC)
_/l/i/c/h(ACACC)
_/l/i/c/h(ACACC)
_/l/i/ch(ACAC)
_/l/i/ch(ACAC)
l/_/i/c/h(CAACC)
l/_/i/c/h(CAACC)
l/_/i/ch(CAAC)
l/_/i/ch(CAAC)
_/_/l/i/c/h(AACACC)
_/_/l/i/c/h(AACACC)
_/_/l/i/ch(AACAC)
_/_/l/i/ch(AACAC)
l/i/_/c/h(CAACC)
l/i/_/c/h(CAACC)
l/i/_/ch(CAAC)
l/i/_/ch(CAAC)
_/l/_/i/c/h(ACAACC)
_/l/_/i/c/h(ACAACC)
_/l/_/i/ch(ACAAC)
_/l/_/i/ch(ACAAC)
l/_/_/i/c/h(CAAACC)
l/_/_/i/c/h(CAAACC)
l/_/_/i/ch(CAAAC)
l/_/_/i/ch(CAAAC)
_/_/_/l/i/c/h(AAACACC)
_/_/_/l/i/c/h(AAACACC)
_/_/_/l/i/ch(AAACAC)
_/_/_/l/i/ch(AAACAC)
				ANALYSING: liche
					resolving (16)
					> version: l/i/c/h/e
					TRYING: c
					adding blocked set: C = C >> u, c, f, _
					> version: l/i/c/h/e
					TRYING: c
					adding blocked set: C = C >> u, c, f, _
					> version: l/i/ch/e
					TRYING: ch
					adding blocked set: C = C >> u, ch, f, _
					> version: l/i/ch/e
					TRYING: ch
					adding blocked set: C = C >> u, ch, f, _
					> version: _/l/i/c/h/e
					TRYING: i
					adding blocked set: C = C >> u, i, f, _
					> version: _/l/i/c/h/e
					TRYING: i
					adding blocked set: C = C >> u, i, f, _
					> version: _/l/i/ch/e
					TRYING: i
					adding blocked set: C = C >> u, i, f, _
					> version: _/l/i/ch/e
					TRYING: i
					adding blocked set: C = C >> u, i, f, _
					> version: l/_/i/c/h/e
					TRYING: i
					adding blocked set: C = C >> u, i, f, _
					> version: l/_/i/c/h/e
					TRYING: i
					adding blocked set: C = C >> u, i, f, _
					> version: l/_/i/ch/e
					TRYING: i
					adding blocked set: C = C >> u, i, f, _
					> version: l/_/i/ch/e
					TRYING: i
					adding blocked set: C = C >> u, i, f, _
					> version: _/_/l/i/c/h/e
					TRYING: l
					adding blocked set: C = C >> u, f, _, l
					> version: _/_/l/i/c/h/e
					TRYING: l
					adding blocked set: C = C >> u, f, _, l
					> version: _/_/l/i/ch/e
					TRYING: l
					adding blocked set: C = C >> u, f, _, l
					> version: _/_/l/i/ch/e
					TRYING: l
					adding blocked set: C = C >> u, f, _, l
					RESULT:  ['_']
				adding dashed alternative: ['l', 'i', '_', 'c', 'h', 'e']
				adding dashed alternative: ['l', 'i', '_', 'c', 'h', 'e']
				adding dashed alternative: ['l', 'i', '_', 'ch', 'e']
				adding dashed alternative: ['l', 'i', '_', 'ch', 'e']
				adding dashed alternative: ['_', 'l', '_', 'i', 'c', 'h', 'e']
				adding dashed alternative: ['_', 'l', '_', 'i', 'c', 'h', 'e']
				adding dashed alternative: ['_', 'l', '_', 'i', 'ch', 'e']
				adding dashed alternative: ['_', 'l', '_', 'i', 'ch', 'e']
				adding dashed alternative: ['l', '_', '_', 'i', 'c', 'h', 'e']
				adding dashed alternative: ['l', '_', '_', 'i', 'c', 'h', 'e']
				adding dashed alternative: ['l', '_', '_', 'i', 'ch', 'e']
				adding dashed alternative: ['l', '_', '_', 'i', 'ch', 'e']
				adding dashed alternative: ['_', '_', '_', 'l', 'i', 'c', 'h', 'e']
				adding dashed alternative: ['_', '_', '_', 'l', 'i', 'c', 'h', 'e']
				adding dashed alternative: ['_', '_', '_', 'l', 'i', 'ch', 'e']
				adding dashed alternative: ['_', '_', '_', 'l', 'i', 'ch', 'e']
				l/i/c/h/e(CCCCV)
l/i/c/h/e(CVCCV)
l/i/ch/e(CCCV)
l/i/ch/e(CVCV)
_/l/i/c/h/e(ACACCV)
_/l/i/c/h/e(ACACCV)
_/l/i/ch/e(ACACV)
_/l/i/ch/e(ACACV)
l/_/i/c/h/e(CAACCV)
l/_/i/c/h/e(CAACCV)
l/_/i/ch/e(CAACV)
l/_/i/ch/e(CAACV)
_/_/l/i/c/h/e(AACACCV)
_/_/l/i/c/h/e(AACACCV)
_/_/l/i/ch/e(AACACV)
_/_/l/i/ch/e(AACACV)
l/i/_/c/h/e(CAACCV)
l/i/_/c/h/e(CAACCV)
l/i/_/ch/e(CAACV)
l/i/_/ch/e(CAACV)
_/l/_/i/c/h/e(ACAACCV)
_/l/_/i/c/h/e(ACAACCV)
_/l/_/i/ch/e(ACAACV)
_/l/_/i/ch/e(ACAACV)
l/_/_/i/c/h/e(CAAACCV)
l/_/_/i/c/h/e(CAAACCV)
l/_/_/i/ch/e(CAAACV)
l/_/_/i/ch/e(CAAACV)
_/_/_/l/i/c/h/e(AAACACCV)
_/_/_/l/i/c/h/e(AAACACCV)
_/_/_/l/i/ch/e(AAACACV)
_/_/_/l/i/ch/e(AAACACV)
			___CVCVCC : 3___
				ANALYSING: heofenn
				adding littera based on matching pattern
				ANALYSING: eue
					resolving (10)
					> version: e/u/e
					> version: e/u/e
					> version: eu/e
					> version: e/ue
					> version: eu/e
					> version: _/e/u/e
					TRYING: e
					> version: _/e/u/e
					TRYING: e
					> version: _/eu/e
					> version: _/e/ue
					> version: _/eu/e
					RESULT:  ['e']
				ANALYSING: he
					resolving (4)
					> version: h/e
					> version: h/_/e
					> version: h/e/_
					> version: h/_/_/e
					TRYING: e
					RESULT:  ['e']
				ANALYSING: heo
					resolving (8)
					> version: h/e/o
					> version: h/eo
					> version: h/_/e/o
					TRYING: o
					> version: h/_/eo
					> version: h/e/_/o
					TRYING: o
					> version: h/eo/_
					> version: h/_/_/e/o
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'e', 'o'}
					> version: h/_/_/eo
					TRYING: eo
					>>> MULTIPLE RESOLVE OPTIONS: {'e', 'eo', 'o'}
					RESULT:  ['e', 'eo', 'o']
				ANALYSING: heofen
					resolving (4)
					> version: h/e/o/f/e/n
					TRYING: f
					> version: h/eo/f/e/n
					TRYING: e
					> version: h/_/e/o/f/e/n
					TRYING: o
					>>> MULTIPLE RESOLVE OPTIONS: {'e', 'o'}
					> version: h/_/eo/f/e/n
					TRYING: f
					>>> MULTIPLE RESOLVE OPTIONS: {'e', 'o'}
					RESULT:  ['e', 'o']
				ANALYSING: heofon
					resolving (4)
					> version: h/e/o/f/o/n
					TRYING: f
					> version: h/eo/f/o/n
					TRYING: o
					> version: h/_/e/o/f/o/n
					TRYING: o
					> version: h/_/eo/f/o/n
					TRYING: f
					RESULT:  ['o']
				ANALYSING: heoue
					resolving (22)
					> version: h/e/o/u/e
					TRYING: u
					> version: h/e/o/u/e
					TRYING: u
					> version: h/e/ou/e
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e'}
					> version: h/eo/u/e
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e'}
					> version: h/eo/u/e
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e'}
					> version: h/e/o/ue
					TRYING: ue
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: h/eo/u/e
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: h/eo/u/e
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: h/e/ou/e
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: h/eo/ue
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: h/eo/ue
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: h/_/e/o/u/e
					TRYING: o
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue', 'o'}
					> version: h/_/e/o/u/e
					TRYING: o
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue', 'o'}
					> version: h/_/e/ou/e
					TRYING: ou
					adding blocked set: V = V >> ou, e, eo, o
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue', 'o'}
					> version: h/_/eo/u/e
					TRYING: u
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue', 'o'}
					> version: h/_/eo/u/e
					TRYING: u
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue', 'o'}
					> version: h/_/e/o/ue
					TRYING: o
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue', 'o'}
					> version: h/_/eo/u/e
					TRYING: u
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue', 'o'}
					> version: h/_/eo/u/e
					TRYING: u
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue', 'o'}
					> version: h/_/e/ou/e
					TRYING: ou
					adding blocked set: V = V >> ou, e, eo, o
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue', 'o'}
					> version: h/_/eo/ue
					TRYING: ue
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue', 'o'}
					> version: h/_/eo/ue
					TRYING: ue
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue', 'o'}
					RESULT:  ['u', 'e', 'ue', 'o']
				ANALYSING: heouen
					resolving (22)
					> version: h/e/o/u/e/n
					TRYING: u
					> version: h/e/o/u/e/n
					TRYING: u
					> version: h/e/ou/e/n
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e'}
					> version: h/eo/u/e/n
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e'}
					> version: h/eo/u/e/n
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e'}
					> version: h/e/o/ue/n
					TRYING: ue
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: h/eo/u/e/n
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: h/eo/u/e/n
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: h/e/ou/e/n
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: h/eo/ue/n
					TRYING: n
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: h/eo/ue/n
					TRYING: n
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: h/_/e/o/u/e/n
					TRYING: o
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue', 'o'}
					> version: h/_/e/o/u/e/n
					TRYING: o
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue', 'o'}
					> version: h/_/e/ou/e/n
					TRYING: ou
					adding blocked set: V = V >> u, ue, eo, ou, e, o
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue', 'o'}
					> version: h/_/eo/u/e/n
					TRYING: u
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue', 'o'}
					> version: h/_/eo/u/e/n
					TRYING: u
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue', 'o'}
					> version: h/_/e/o/ue/n
					TRYING: o
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue', 'o'}
					> version: h/_/eo/u/e/n
					TRYING: u
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue', 'o'}
					> version: h/_/eo/u/e/n
					TRYING: u
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue', 'o'}
					> version: h/_/e/ou/e/n
					TRYING: ou
					adding blocked set: V = V >> u, ue, eo, ou, e, o
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue', 'o'}
					> version: h/_/eo/ue/n
					TRYING: ue
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue', 'o'}
					> version: h/_/eo/ue/n
					TRYING: ue
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue', 'o'}
					RESULT:  ['u', 'e', 'ue', 'o']
				ANALYSING: heouene
					resolving (22)
					> version: h/e/o/u/e/n/e
					TRYING: u
					> version: h/e/o/u/e/n/e
					TRYING: u
					> version: h/e/ou/e/n/e
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e'}
					> version: h/eo/u/e/n/e
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e'}
					> version: h/eo/u/e/n/e
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e'}
					> version: h/e/o/ue/n/e
					TRYING: ue
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: h/eo/u/e/n/e
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: h/eo/u/e/n/e
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: h/e/ou/e/n/e
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: h/eo/ue/n/e
					TRYING: n
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: h/eo/ue/n/e
					TRYING: n
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: h/_/e/o/u/e/n/e
					TRYING: o
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue', 'o'}
					> version: h/_/e/o/u/e/n/e
					TRYING: o
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue', 'o'}
					> version: h/_/e/ou/e/n/e
					TRYING: ou
					adding blocked set: V = V >> u, ue, eo, ou, e, o
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue', 'o'}
					> version: h/_/eo/u/e/n/e
					TRYING: u
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue', 'o'}
					> version: h/_/eo/u/e/n/e
					TRYING: u
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue', 'o'}
					> version: h/_/e/o/ue/n/e
					TRYING: o
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue', 'o'}
					> version: h/_/eo/u/e/n/e
					TRYING: u
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue', 'o'}
					> version: h/_/eo/u/e/n/e
					TRYING: u
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue', 'o'}
					> version: h/_/e/ou/e/n/e
					TRYING: ou
					adding blocked set: V = V >> u, ue, eo, ou, e, o
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue', 'o'}
					> version: h/_/eo/ue/n/e
					TRYING: ue
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue', 'o'}
					> version: h/_/eo/ue/n/e
					TRYING: ue
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue', 'o'}
					RESULT:  ['u', 'e', 'ue', 'o']
				ANALYSING: heue
					resolving (10)
					> version: h/e/u/e
					TRYING: e
					> version: h/e/u/e
					TRYING: e
					> version: h/eu/e
					> version: h/e/ue
					> version: h/eu/e
					> version: h/_/e/u/e
					TRYING: u
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e'}
					> version: h/_/e/u/e
					TRYING: u
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e'}
					> version: h/_/eu/e
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e'}
					> version: h/_/e/ue
					TRYING: ue
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: h/_/eu/e
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					RESULT:  ['u', 'e', 'ue']
				ANALYSING: heuen
					resolving (10)
					> version: h/e/u/e/n
					TRYING: e
					> version: h/e/u/e/n
					TRYING: e
					> version: h/eu/e/n
					TRYING: n
					> version: h/e/ue/n
					TRYING: n
					> version: h/eu/e/n
					TRYING: n
					> version: h/_/e/u/e/n
					TRYING: u
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e'}
					> version: h/_/e/u/e/n
					TRYING: u
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e'}
					> version: h/_/eu/e/n
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e'}
					> version: h/_/e/ue/n
					TRYING: ue
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: h/_/eu/e/n
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					RESULT:  ['u', 'e', 'ue']
				ANALYSING: heuene
					resolving (10)
					> version: h/e/u/e/n/e
					TRYING: e
					> version: h/e/u/e/n/e
					TRYING: e
					> version: h/eu/e/n/e
					TRYING: n
					> version: h/e/ue/n/e
					TRYING: n
					> version: h/eu/e/n/e
					TRYING: n
					> version: h/_/e/u/e/n/e
					TRYING: u
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e'}
					> version: h/_/e/u/e/n/e
					TRYING: u
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e'}
					> version: h/_/eu/e/n/e
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e'}
					> version: h/_/e/ue/n/e
					TRYING: ue
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: h/_/eu/e/n/e
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					RESULT:  ['u', 'e', 'ue']
				ANALYSING: houen
					resolving (10)
					> version: h/o/u/e/n
					TRYING: e
					> version: h/o/u/e/n
					TRYING: e
					> version: h/ou/e/n
					TRYING: n
					> version: h/o/ue/n
					TRYING: n
					> version: h/ou/e/n
					TRYING: n
					> version: h/_/o/u/e/n
					TRYING: u
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e'}
					> version: h/_/o/u/e/n
					TRYING: u
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e'}
					> version: h/_/ou/e/n
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e'}
					> version: h/_/o/ue/n
					TRYING: ue
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: h/_/ou/e/n
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					RESULT:  ['u', 'e', 'ue']
				ANALYSING: lich
					resolving (32)
					> version: l/i/c/h
					TRYING: h
					> version: l/i/c/h
					TRYING: h
					> version: l/i/ch
					> version: l/i/ch
					> version: _/l/i/c/h
					TRYING: c
					> version: _/l/i/c/h
					TRYING: c
					> version: _/l/i/ch
					TRYING: ch
					> version: _/l/i/ch
					TRYING: ch
					> version: l/_/i/c/h
					TRYING: c
					> version: l/_/i/c/h
					TRYING: c
					> version: l/_/i/ch
					TRYING: ch
					> version: l/_/i/ch
					TRYING: ch
					> version: _/_/l/i/c/h
					TRYING: i
					adding blocked set: V = V >> u, i, ue, eo, e, o
					> version: _/_/l/i/c/h
					TRYING: i
					adding blocked set: V = V >> u, i, ue, eo, e, o
					> version: _/_/l/i/ch
					TRYING: i
					adding blocked set: V = V >> u, i, ue, eo, e, o
					> version: _/_/l/i/ch
					TRYING: i
					adding blocked set: V = V >> u, i, ue, eo, e, o
					> version: l/i/_/c/h
					TRYING: c
					> version: l/i/_/c/h
					TRYING: c
					> version: l/i/_/ch
					TRYING: ch
					> version: l/i/_/ch
					TRYING: ch
					> version: _/l/_/i/c/h
					TRYING: i
					adding blocked set: V = V >> u, i, ue, eo, e, o
					> version: _/l/_/i/c/h
					TRYING: i
					adding blocked set: V = V >> u, i, ue, eo, e, o
					> version: _/l/_/i/ch
					TRYING: i
					adding blocked set: V = V >> u, i, ue, eo, e, o
					> version: _/l/_/i/ch
					TRYING: i
					adding blocked set: V = V >> u, i, ue, eo, e, o
					> version: l/_/_/i/c/h
					TRYING: i
					adding blocked set: V = V >> u, i, ue, eo, e, o
					> version: l/_/_/i/c/h
					TRYING: i
					adding blocked set: V = V >> u, i, ue, eo, e, o
					> version: l/_/_/i/ch
					TRYING: i
					adding blocked set: V = V >> u, i, ue, eo, e, o
					> version: l/_/_/i/ch
					TRYING: i
					adding blocked set: V = V >> u, i, ue, eo, e, o
					> version: _/_/_/l/i/c/h
					TRYING: l
					> version: _/_/_/l/i/c/h
					TRYING: l
					> version: _/_/_/l/i/ch
					TRYING: l
					> version: _/_/_/l/i/ch
					TRYING: l
					RESULT:  ['_']
				adding dashed alternative: ['l', 'i', 'c', '_', 'h']
				adding dashed alternative: ['l', 'i', 'c', '_', 'h']
				adding dashed alternative: ['l', 'i', 'ch', '_']
				adding dashed alternative: ['l', 'i', 'ch', '_']
				adding dashed alternative: ['_', 'l', 'i', '_', 'c', 'h']
				adding dashed alternative: ['_', 'l', 'i', '_', 'c', 'h']
				adding dashed alternative: ['_', 'l', 'i', '_', 'ch']
				adding dashed alternative: ['_', 'l', 'i', '_', 'ch']
				adding dashed alternative: ['l', '_', 'i', '_', 'c', 'h']
				adding dashed alternative: ['l', '_', 'i', '_', 'c', 'h']
				adding dashed alternative: ['l', '_', 'i', '_', 'ch']
				adding dashed alternative: ['l', '_', 'i', '_', 'ch']
				adding dashed alternative: ['_', '_', 'l', '_', 'i', 'c', 'h']
				adding dashed alternative: ['_', '_', 'l', '_', 'i', 'c', 'h']
				adding dashed alternative: ['_', '_', 'l', '_', 'i', 'ch']
				adding dashed alternative: ['_', '_', 'l', '_', 'i', 'ch']
				adding dashed alternative: ['l', 'i', '_', '_', 'c', 'h']
				adding dashed alternative: ['l', 'i', '_', '_', 'c', 'h']
				adding dashed alternative: ['l', 'i', '_', '_', 'ch']
				adding dashed alternative: ['l', 'i', '_', '_', 'ch']
				adding dashed alternative: ['_', 'l', '_', '_', 'i', 'c', 'h']
				adding dashed alternative: ['_', 'l', '_', '_', 'i', 'c', 'h']
				adding dashed alternative: ['_', 'l', '_', '_', 'i', 'ch']
				adding dashed alternative: ['_', 'l', '_', '_', 'i', 'ch']
				adding dashed alternative: ['l', '_', '_', '_', 'i', 'c', 'h']
				adding dashed alternative: ['l', '_', '_', '_', 'i', 'c', 'h']
				adding dashed alternative: ['l', '_', '_', '_', 'i', 'ch']
				adding dashed alternative: ['l', '_', '_', '_', 'i', 'ch']
				adding dashed alternative: ['_', '_', '_', '_', 'l', 'i', 'c', 'h']
				adding dashed alternative: ['_', '_', '_', '_', 'l', 'i', 'c', 'h']
				adding dashed alternative: ['_', '_', '_', '_', 'l', 'i', 'ch']
				adding dashed alternative: ['_', '_', '_', '_', 'l', 'i', 'ch']
				l/i/c/h(CCCC)
l/i/c/h(CVCC)
l/i/ch(CCC)
l/i/ch(CVC)
_/l/i/c/h(ACACC)
_/l/i/c/h(ACACC)
_/l/i/ch(ACAC)
_/l/i/ch(ACAC)
l/_/i/c/h(CAACC)
l/_/i/c/h(CAACC)
l/_/i/ch(CAAC)
l/_/i/ch(CAAC)
_/_/l/i/c/h(AACACC)
_/_/l/i/c/h(AACACC)
_/_/l/i/ch(AACAC)
_/_/l/i/ch(AACAC)
l/i/_/c/h(CAACC)
l/i/_/c/h(CAACC)
l/i/_/ch(CAAC)
l/i/_/ch(CAAC)
_/l/_/i/c/h(ACAACC)
_/l/_/i/c/h(ACAACC)
_/l/_/i/ch(ACAAC)
_/l/_/i/ch(ACAAC)
l/_/_/i/c/h(CAAACC)
l/_/_/i/c/h(CAAACC)
l/_/_/i/ch(CAAAC)
l/_/_/i/ch(CAAAC)
_/_/_/l/i/c/h(AAACACC)
_/_/_/l/i/c/h(AAACACC)
_/_/_/l/i/ch(AAACAC)
_/_/_/l/i/ch(AAACAC)
l/i/c/_/h(CACAC)
l/i/c/_/h(CACAC)
l/i/ch/_(CACA)
l/i/ch/_(CACA)
_/l/i/_/c/h(ACAACC)
_/l/i/_/c/h(ACAACC)
_/l/i/_/ch(ACAAC)
_/l/i/_/ch(ACAAC)
l/_/i/_/c/h(CAAACC)
l/_/i/_/c/h(CAAACC)
l/_/i/_/ch(CAAAC)
l/_/i/_/ch(CAAAC)
_/_/l/_/i/c/h(AACAACC)
_/_/l/_/i/c/h(AACAACC)
_/_/l/_/i/ch(AACAAC)
_/_/l/_/i/ch(AACAAC)
l/i/_/_/c/h(CAAACC)
l/i/_/_/c/h(CAAACC)
l/i/_/_/ch(CAAAC)
l/i/_/_/ch(CAAAC)
_/l/_/_/i/c/h(ACAAACC)
_/l/_/_/i/c/h(ACAAACC)
_/l/_/_/i/ch(ACAAAC)
_/l/_/_/i/ch(ACAAAC)
l/_/_/_/i/c/h(CAAAACC)
l/_/_/_/i/c/h(CAAAACC)
l/_/_/_/i/ch(CAAAAC)
l/_/_/_/i/ch(CAAAAC)
_/_/_/_/l/i/c/h(AAAACACC)
_/_/_/_/l/i/c/h(AAAACACC)
_/_/_/_/l/i/ch(AAAACAC)
_/_/_/_/l/i/ch(AAAACAC)
				ANALYSING: liche
					resolving (32)
					> version: l/i/c/h/e
					TRYING: h
					> version: l/i/c/h/e
					TRYING: h
					> version: l/i/ch/e
					TRYING: e
					> version: l/i/ch/e
					TRYING: e
					> version: _/l/i/c/h/e
					TRYING: c
					> version: _/l/i/c/h/e
					TRYING: c
					> version: _/l/i/ch/e
					TRYING: ch
					> version: _/l/i/ch/e
					TRYING: ch
					> version: l/_/i/c/h/e
					TRYING: c
					> version: l/_/i/c/h/e
					TRYING: c
					> version: l/_/i/ch/e
					TRYING: ch
					> version: l/_/i/ch/e
					TRYING: ch
					> version: _/_/l/i/c/h/e
					TRYING: i
					adding blocked set: V = V >> u, i, ue, _, eo, e, o
					> version: _/_/l/i/c/h/e
					TRYING: i
					adding blocked set: V = V >> u, i, ue, _, eo, e, o
					> version: _/_/l/i/ch/e
					TRYING: i
					adding blocked set: V = V >> u, i, ue, _, eo, e, o
					> version: _/_/l/i/ch/e
					TRYING: i
					adding blocked set: V = V >> u, i, ue, _, eo, e, o
					> version: l/i/_/c/h/e
					TRYING: c
					> version: l/i/_/c/h/e
					TRYING: c
					> version: l/i/_/ch/e
					TRYING: ch
					> version: l/i/_/ch/e
					TRYING: ch
					> version: _/l/_/i/c/h/e
					TRYING: i
					adding blocked set: V = V >> u, i, ue, _, eo, e, o
					> version: _/l/_/i/c/h/e
					TRYING: i
					adding blocked set: V = V >> u, i, ue, _, eo, e, o
					> version: _/l/_/i/ch/e
					TRYING: i
					adding blocked set: V = V >> u, i, ue, _, eo, e, o
					> version: _/l/_/i/ch/e
					TRYING: i
					adding blocked set: V = V >> u, i, ue, _, eo, e, o
					> version: l/_/_/i/c/h/e
					TRYING: i
					adding blocked set: V = V >> u, i, ue, _, eo, e, o
					> version: l/_/_/i/c/h/e
					TRYING: i
					adding blocked set: V = V >> u, i, ue, _, eo, e, o
					> version: l/_/_/i/ch/e
					TRYING: i
					adding blocked set: V = V >> u, i, ue, _, eo, e, o
					> version: l/_/_/i/ch/e
					TRYING: i
					adding blocked set: V = V >> u, i, ue, _, eo, e, o
					> version: _/_/_/l/i/c/h/e
					TRYING: l
					> version: _/_/_/l/i/c/h/e
					TRYING: l
					> version: _/_/_/l/i/ch/e
					TRYING: l
					> version: _/_/_/l/i/ch/e
					TRYING: l
					RESULT:  ['e']
			___CVCVCC : 4___
				ANALYSING: heofenn
				adding littera based on matching pattern
				ANALYSING: eue
					resolving (10)
					> version: e/u/e
					> version: e/u/e
					> version: eu/e
					> version: e/ue
					> version: eu/e
					> version: _/e/u/e
					> version: _/e/u/e
					> version: _/eu/e
					> version: _/e/ue
					> version: _/eu/e
					RESULT:  ['_']
				adding dashed alternative: ['e', 'u', 'e', '_']
				adding dashed alternative: ['e', 'u', 'e', '_']
				adding dashed alternative: ['eu', 'e', '_']
				adding dashed alternative: ['e', 'ue', '_']
				adding dashed alternative: ['eu', 'e', '_']
				adding dashed alternative: ['_', 'e', 'u', 'e', '_']
				adding dashed alternative: ['_', 'e', 'u', 'e', '_']
				adding dashed alternative: ['_', 'eu', 'e', '_']
				adding dashed alternative: ['_', 'e', 'ue', '_']
				adding dashed alternative: ['_', 'eu', 'e', '_']
				e/u/e(VCV)
e/u/e(VVV)
eu/e(VV)
e/ue(VV)
eu/e(VV)
_/e/u/e(AVAV)
_/e/u/e(AVAV)
_/eu/e(AVV)
_/e/ue(AVV)
_/eu/e(AVV)
e/u/e/_(VAVA)
e/u/e/_(VAVA)
eu/e/_(VVA)
e/ue/_(VVA)
eu/e/_(VVA)
_/e/u/e/_(AVAVA)
_/e/u/e/_(AVAVA)
_/eu/e/_(AVVA)
_/e/ue/_(AVVA)
_/eu/e/_(AVVA)
				ANALYSING: he
					resolving (4)
					> version: h/e
					> version: h/_/e
					> version: h/e/_
					> version: h/_/_/e
					RESULT:  ['_']
				adding dashed alternative: ['h', 'e', '_']
				adding dashed alternative: ['h', '_', 'e', '_']
				adding dashed alternative: ['h', 'e', '_', '_']
				adding dashed alternative: ['h', '_', '_', 'e', '_']
				h/e(CV)
h/_/e(CAV)
h/e/_(CVA)
h/_/_/e(CAAV)
h/e/_(CVA)
h/_/e/_(CAVA)
h/e/_/_(CVAA)
h/_/_/e/_(CAAVA)
				ANALYSING: heo
					resolving (8)
					> version: h/e/o
					> version: h/eo
					> version: h/_/e/o
					> version: h/_/eo
					> version: h/e/_/o
					> version: h/eo/_
					> version: h/_/_/e/o
					TRYING: o
					> version: h/_/_/eo
					RESULT:  ['_']
				adding dashed alternative: ['h', 'e', 'o', '_']
				adding dashed alternative: ['h', 'eo', '_']
				adding dashed alternative: ['h', '_', 'e', 'o', '_']
				adding dashed alternative: ['h', '_', 'eo', '_']
				adding dashed alternative: ['h', 'e', '_', 'o', '_']
				adding dashed alternative: ['h', 'eo', '_', '_']
				adding dashed alternative: ['h', '_', '_', 'e', '_', 'o']
				adding dashed alternative: ['h', '_', '_', 'eo', '_']
				h/e/o(CVV)
h/eo(CV)
h/_/e/o(CAVV)
h/_/eo(CAV)
h/e/_/o(CVAV)
h/eo/_(CVA)
h/_/_/e/o(CAAVV)
h/_/_/eo(CAAV)
h/e/o/_(CVVA)
h/eo/_(CVA)
h/_/e/o/_(CAVVA)
h/_/eo/_(CAVA)
h/e/_/o/_(CVAVA)
h/eo/_/_(CVAA)
h/_/_/e/_/o(CAAVAV)
h/_/_/eo/_(CAAVA)
				ANALYSING: heofen
					resolving (4)
					> version: h/e/o/f/e/n
					TRYING: e
					> version: h/eo/f/e/n
					TRYING: n
					> version: h/_/e/o/f/e/n
					TRYING: f
					adding blocked set: C = C >> f, _, n
					> version: h/_/eo/f/e/n
					TRYING: e
					RESULT:  ['n']
				ANALYSING: heofon
					resolving (4)
					> version: h/e/o/f/o/n
					TRYING: o
					> version: h/eo/f/o/n
					TRYING: n
					> version: h/_/e/o/f/o/n
					TRYING: f
					adding blocked set: C = C >> f, _, n
					> version: h/_/eo/f/o/n
					TRYING: o
					RESULT:  ['n']
				ANALYSING: heoue
					resolving (22)
					> version: h/e/o/u/e
					TRYING: e
					> version: h/e/o/u/e
					TRYING: e
					> version: h/e/ou/e
					> version: h/eo/u/e
					> version: h/eo/u/e
					> version: h/e/o/ue
					> version: h/eo/u/e
					> version: h/eo/u/e
					> version: h/e/ou/e
					> version: h/eo/ue
					> version: h/eo/ue
					> version: h/_/e/o/u/e
					TRYING: u
					adding blocked set: C = C >> u, _, n
					> version: h/_/e/o/u/e
					TRYING: u
					adding blocked set: C = C >> u, _, n
					> version: h/_/e/ou/e
					TRYING: e
					> version: h/_/eo/u/e
					TRYING: e
					> version: h/_/eo/u/e
					TRYING: e
					> version: h/_/e/o/ue
					TRYING: ue
					> version: h/_/eo/u/e
					TRYING: e
					> version: h/_/eo/u/e
					TRYING: e
					> version: h/_/e/ou/e
					TRYING: e
					> version: h/_/eo/ue
					> version: h/_/eo/ue
					RESULT:  ['_']
				adding dashed alternative: ['h', 'e', 'o', 'u', '_', 'e']
				adding dashed alternative: ['h', 'e', 'o', 'u', '_', 'e']
				adding dashed alternative: ['h', 'e', 'ou', 'e', '_']
				adding dashed alternative: ['h', 'eo', 'u', 'e', '_']
				adding dashed alternative: ['h', 'eo', 'u', 'e', '_']
				adding dashed alternative: ['h', 'e', 'o', 'ue', '_']
				adding dashed alternative: ['h', 'eo', 'u', 'e', '_']
				adding dashed alternative: ['h', 'eo', 'u', 'e', '_']
				adding dashed alternative: ['h', 'e', 'ou', 'e', '_']
				adding dashed alternative: ['h', 'eo', 'ue', '_']
				adding dashed alternative: ['h', 'eo', 'ue', '_']
				adding dashed alternative: ['h', '_', 'e', 'o', '_', 'u', 'e']
				adding dashed alternative: ['h', '_', 'e', 'o', '_', 'u', 'e']
				adding dashed alternative: ['h', '_', 'e', 'ou', '_', 'e']
				adding dashed alternative: ['h', '_', 'eo', 'u', '_', 'e']
				adding dashed alternative: ['h', '_', 'eo', 'u', '_', 'e']
				adding dashed alternative: ['h', '_', 'e', 'o', '_', 'ue']
				adding dashed alternative: ['h', '_', 'eo', 'u', '_', 'e']
				adding dashed alternative: ['h', '_', 'eo', 'u', '_', 'e']
				adding dashed alternative: ['h', '_', 'e', 'ou', '_', 'e']
				adding dashed alternative: ['h', '_', 'eo', 'ue', '_']
				adding dashed alternative: ['h', '_', 'eo', 'ue', '_']
				h/e/o/u/e(CVVCV)
h/e/o/u/e(CVVVV)
h/e/ou/e(CVVV)
h/eo/u/e(CVCV)
h/eo/u/e(CVVV)
h/e/o/ue(CVVV)
h/eo/u/e(CVCV)
h/eo/u/e(CVVV)
h/e/ou/e(CVVV)
h/eo/ue(CVV)
h/eo/ue(CVV)
h/_/e/o/u/e(CAVVAV)
h/_/e/o/u/e(CAVVAV)
h/_/e/ou/e(CAVVV)
h/_/eo/u/e(CAVAV)
h/_/eo/u/e(CAVAV)
h/_/e/o/ue(CAVVV)
h/_/eo/u/e(CAVAV)
h/_/eo/u/e(CAVAV)
h/_/e/ou/e(CAVVV)
h/_/eo/ue(CAVV)
h/_/eo/ue(CAVV)
h/e/o/u/_/e(CVVAAV)
h/e/o/u/_/e(CVVAAV)
h/e/ou/e/_(CVVVA)
h/eo/u/e/_(CVAVA)
h/eo/u/e/_(CVAVA)
h/e/o/ue/_(CVVVA)
h/eo/u/e/_(CVAVA)
h/eo/u/e/_(CVAVA)
h/e/ou/e/_(CVVVA)
h/eo/ue/_(CVVA)
h/eo/ue/_(CVVA)
h/_/e/o/_/u/e(CAVVAAV)
h/_/e/o/_/u/e(CAVVAAV)
h/_/e/ou/_/e(CAVVAV)
h/_/eo/u/_/e(CAVAAV)
h/_/eo/u/_/e(CAVAAV)
h/_/e/o/_/ue(CAVVAV)
h/_/eo/u/_/e(CAVAAV)
h/_/eo/u/_/e(CAVAAV)
h/_/e/ou/_/e(CAVVAV)
h/_/eo/ue/_(CAVVA)
h/_/eo/ue/_(CAVVA)
				ANALYSING: heouen
					resolving (22)
					> version: h/e/o/u/e/n
					TRYING: e
					> version: h/e/o/u/e/n
					TRYING: e
					> version: h/e/ou/e/n
					TRYING: n
					> version: h/eo/u/e/n
					TRYING: n
					> version: h/eo/u/e/n
					TRYING: n
					> version: h/e/o/ue/n
					TRYING: n
					> version: h/eo/u/e/n
					TRYING: n
					> version: h/eo/u/e/n
					TRYING: n
					> version: h/e/ou/e/n
					TRYING: n
					> version: h/eo/ue/n
					> version: h/eo/ue/n
					> version: h/_/e/o/u/e/n
					TRYING: u
					adding blocked set: C = C >> u, _, n
					> version: h/_/e/o/u/e/n
					TRYING: u
					adding blocked set: C = C >> u, _, n
					> version: h/_/e/ou/e/n
					TRYING: e
					> version: h/_/eo/u/e/n
					TRYING: e
					> version: h/_/eo/u/e/n
					TRYING: e
					> version: h/_/e/o/ue/n
					TRYING: ue
					> version: h/_/eo/u/e/n
					TRYING: e
					> version: h/_/eo/u/e/n
					TRYING: e
					> version: h/_/e/ou/e/n
					TRYING: e
					> version: h/_/eo/ue/n
					TRYING: n
					> version: h/_/eo/ue/n
					TRYING: n
					RESULT:  ['n']
				ANALYSING: heouene
					resolving (22)
					> version: h/e/o/u/e/n/e
					TRYING: e
					> version: h/e/o/u/e/n/e
					TRYING: e
					> version: h/e/ou/e/n/e
					TRYING: n
					> version: h/eo/u/e/n/e
					TRYING: n
					> version: h/eo/u/e/n/e
					TRYING: n
					> version: h/e/o/ue/n/e
					TRYING: n
					> version: h/eo/u/e/n/e
					TRYING: n
					> version: h/eo/u/e/n/e
					TRYING: n
					> version: h/e/ou/e/n/e
					TRYING: n
					> version: h/eo/ue/n/e
					TRYING: e
					> version: h/eo/ue/n/e
					TRYING: e
					> version: h/_/e/o/u/e/n/e
					TRYING: u
					adding blocked set: C = C >> u, _, n
					> version: h/_/e/o/u/e/n/e
					TRYING: u
					adding blocked set: C = C >> u, _, n
					> version: h/_/e/ou/e/n/e
					TRYING: e
					> version: h/_/eo/u/e/n/e
					TRYING: e
					> version: h/_/eo/u/e/n/e
					TRYING: e
					> version: h/_/e/o/ue/n/e
					TRYING: ue
					> version: h/_/eo/u/e/n/e
					TRYING: e
					> version: h/_/eo/u/e/n/e
					TRYING: e
					> version: h/_/e/ou/e/n/e
					TRYING: e
					> version: h/_/eo/ue/n/e
					TRYING: n
					> version: h/_/eo/ue/n/e
					TRYING: n
					RESULT:  ['n']
				ANALYSING: heue
					resolving (10)
					> version: h/e/u/e
					> version: h/e/u/e
					> version: h/eu/e
					> version: h/e/ue
					> version: h/eu/e
					> version: h/_/e/u/e
					TRYING: e
					> version: h/_/e/u/e
					TRYING: e
					> version: h/_/eu/e
					> version: h/_/e/ue
					> version: h/_/eu/e
					RESULT:  ['_']
				adding dashed alternative: ['h', 'e', 'u', 'e', '_']
				adding dashed alternative: ['h', 'e', 'u', 'e', '_']
				adding dashed alternative: ['h', 'eu', 'e', '_']
				adding dashed alternative: ['h', 'e', 'ue', '_']
				adding dashed alternative: ['h', 'eu', 'e', '_']
				adding dashed alternative: ['h', '_', 'e', 'u', '_', 'e']
				adding dashed alternative: ['h', '_', 'e', 'u', '_', 'e']
				adding dashed alternative: ['h', '_', 'eu', 'e', '_']
				adding dashed alternative: ['h', '_', 'e', 'ue', '_']
				adding dashed alternative: ['h', '_', 'eu', 'e', '_']
				h/e/u/e(CVCV)
h/e/u/e(CVVV)
h/eu/e(CVV)
h/e/ue(CVV)
h/eu/e(CVV)
h/_/e/u/e(CAVAV)
h/_/e/u/e(CAVAV)
h/_/eu/e(CAVV)
h/_/e/ue(CAVV)
h/_/eu/e(CAVV)
h/e/u/e/_(CVAVA)
h/e/u/e/_(CVAVA)
h/eu/e/_(CVVA)
h/e/ue/_(CVVA)
h/eu/e/_(CVVA)
h/_/e/u/_/e(CAVAAV)
h/_/e/u/_/e(CAVAAV)
h/_/eu/e/_(CAVVA)
h/_/e/ue/_(CAVVA)
h/_/eu/e/_(CAVVA)
				ANALYSING: heuen
					resolving (10)
					> version: h/e/u/e/n
					TRYING: n
					> version: h/e/u/e/n
					TRYING: n
					> version: h/eu/e/n
					> version: h/e/ue/n
					> version: h/eu/e/n
					> version: h/_/e/u/e/n
					TRYING: e
					> version: h/_/e/u/e/n
					TRYING: e
					> version: h/_/eu/e/n
					TRYING: n
					> version: h/_/e/ue/n
					TRYING: n
					> version: h/_/eu/e/n
					TRYING: n
					RESULT:  ['n']
				ANALYSING: heuene
					resolving (10)
					> version: h/e/u/e/n/e
					TRYING: n
					> version: h/e/u/e/n/e
					TRYING: n
					> version: h/eu/e/n/e
					TRYING: e
					> version: h/e/ue/n/e
					TRYING: e
					> version: h/eu/e/n/e
					TRYING: e
					> version: h/_/e/u/e/n/e
					TRYING: e
					> version: h/_/e/u/e/n/e
					TRYING: e
					> version: h/_/eu/e/n/e
					TRYING: n
					> version: h/_/e/ue/n/e
					TRYING: n
					> version: h/_/eu/e/n/e
					TRYING: n
					RESULT:  ['n']
				ANALYSING: houen
					resolving (10)
					> version: h/o/u/e/n
					TRYING: n
					> version: h/o/u/e/n
					TRYING: n
					> version: h/ou/e/n
					> version: h/o/ue/n
					> version: h/ou/e/n
					> version: h/_/o/u/e/n
					TRYING: e
					> version: h/_/o/u/e/n
					TRYING: e
					> version: h/_/ou/e/n
					TRYING: n
					> version: h/_/o/ue/n
					TRYING: n
					> version: h/_/ou/e/n
					TRYING: n
					RESULT:  ['n']
				ANALYSING: lich
					resolving (64)
					> version: l/i/c/h
					> version: l/i/c/h
					> version: l/i/ch
					> version: l/i/ch
					> version: _/l/i/c/h
					TRYING: h
					adding blocked set: C = C >> h, _, n
					> version: _/l/i/c/h
					TRYING: h
					adding blocked set: C = C >> h, _, n
					> version: _/l/i/ch
					> version: _/l/i/ch
					> version: l/_/i/c/h
					TRYING: h
					adding blocked set: C = C >> h, _, n
					> version: l/_/i/c/h
					TRYING: h
					adding blocked set: C = C >> h, _, n
					> version: l/_/i/ch
					> version: l/_/i/ch
					> version: _/_/l/i/c/h
					TRYING: c
					adding blocked set: C = C >> c, _, n
					> version: _/_/l/i/c/h
					TRYING: c
					adding blocked set: C = C >> c, _, n
					> version: _/_/l/i/ch
					TRYING: ch
					adding blocked set: C = C >> ch, _, n
					> version: _/_/l/i/ch
					TRYING: ch
					adding blocked set: C = C >> ch, _, n
					> version: l/i/_/c/h
					TRYING: h
					adding blocked set: C = C >> h, _, n
					> version: l/i/_/c/h
					TRYING: h
					adding blocked set: C = C >> h, _, n
					> version: l/i/_/ch
					> version: l/i/_/ch
					> version: _/l/_/i/c/h
					TRYING: c
					adding blocked set: C = C >> c, _, n
					> version: _/l/_/i/c/h
					TRYING: c
					adding blocked set: C = C >> c, _, n
					> version: _/l/_/i/ch
					TRYING: ch
					adding blocked set: C = C >> ch, _, n
					> version: _/l/_/i/ch
					TRYING: ch
					adding blocked set: C = C >> ch, _, n
					> version: l/_/_/i/c/h
					TRYING: c
					adding blocked set: C = C >> c, _, n
					> version: l/_/_/i/c/h
					TRYING: c
					adding blocked set: C = C >> c, _, n
					> version: l/_/_/i/ch
					TRYING: ch
					adding blocked set: C = C >> ch, _, n
					> version: l/_/_/i/ch
					TRYING: ch
					adding blocked set: C = C >> ch, _, n
					> version: _/_/_/l/i/c/h
					TRYING: i
					adding blocked set: C = C >> i, _, n
					> version: _/_/_/l/i/c/h
					TRYING: i
					adding blocked set: C = C >> i, _, n
					> version: _/_/_/l/i/ch
					TRYING: i
					adding blocked set: C = C >> i, _, n
					> version: _/_/_/l/i/ch
					TRYING: i
					adding blocked set: C = C >> i, _, n
					> version: l/i/c/_/h
					TRYING: h
					adding blocked set: C = C >> h, _, n
					> version: l/i/c/_/h
					TRYING: h
					adding blocked set: C = C >> h, _, n
					> version: l/i/ch/_
					> version: l/i/ch/_
					> version: _/l/i/_/c/h
					TRYING: c
					adding blocked set: C = C >> c, _, n
					> version: _/l/i/_/c/h
					TRYING: c
					adding blocked set: C = C >> c, _, n
					> version: _/l/i/_/ch
					TRYING: ch
					adding blocked set: C = C >> ch, _, n
					> version: _/l/i/_/ch
					TRYING: ch
					adding blocked set: C = C >> ch, _, n
					> version: l/_/i/_/c/h
					TRYING: c
					adding blocked set: C = C >> c, _, n
					> version: l/_/i/_/c/h
					TRYING: c
					adding blocked set: C = C >> c, _, n
					> version: l/_/i/_/ch
					TRYING: ch
					adding blocked set: C = C >> ch, _, n
					> version: l/_/i/_/ch
					TRYING: ch
					adding blocked set: C = C >> ch, _, n
					> version: _/_/l/_/i/c/h
					TRYING: i
					adding blocked set: C = C >> i, _, n
					> version: _/_/l/_/i/c/h
					TRYING: i
					adding blocked set: C = C >> i, _, n
					> version: _/_/l/_/i/ch
					TRYING: i
					adding blocked set: C = C >> i, _, n
					> version: _/_/l/_/i/ch
					TRYING: i
					adding blocked set: C = C >> i, _, n
					> version: l/i/_/_/c/h
					TRYING: c
					adding blocked set: C = C >> c, _, n
					> version: l/i/_/_/c/h
					TRYING: c
					adding blocked set: C = C >> c, _, n
					> version: l/i/_/_/ch
					TRYING: ch
					adding blocked set: C = C >> ch, _, n
					> version: l/i/_/_/ch
					TRYING: ch
					adding blocked set: C = C >> ch, _, n
					> version: _/l/_/_/i/c/h
					TRYING: i
					adding blocked set: C = C >> i, _, n
					> version: _/l/_/_/i/c/h
					TRYING: i
					adding blocked set: C = C >> i, _, n
					> version: _/l/_/_/i/ch
					TRYING: i
					adding blocked set: C = C >> i, _, n
					> version: _/l/_/_/i/ch
					TRYING: i
					adding blocked set: C = C >> i, _, n
					> version: l/_/_/_/i/c/h
					TRYING: i
					adding blocked set: C = C >> i, _, n
					> version: l/_/_/_/i/c/h
					TRYING: i
					adding blocked set: C = C >> i, _, n
					> version: l/_/_/_/i/ch
					TRYING: i
					adding blocked set: C = C >> i, _, n
					> version: l/_/_/_/i/ch
					TRYING: i
					adding blocked set: C = C >> i, _, n
					> version: _/_/_/_/l/i/c/h
					TRYING: l
					adding blocked set: C = C >> _, l, n
					> version: _/_/_/_/l/i/c/h
					TRYING: l
					adding blocked set: C = C >> _, l, n
					> version: _/_/_/_/l/i/ch
					TRYING: l
					adding blocked set: C = C >> _, l, n
					> version: _/_/_/_/l/i/ch
					TRYING: l
					adding blocked set: C = C >> _, l, n
					RESULT:  ['_']
				adding dashed alternative: ['l', 'i', 'c', 'h', '_']
				adding dashed alternative: ['l', 'i', 'c', 'h', '_']
				adding dashed alternative: ['l', 'i', 'ch', '_']
				adding dashed alternative: ['l', 'i', 'ch', '_']
				adding dashed alternative: ['_', 'l', 'i', 'c', '_', 'h']
				adding dashed alternative: ['_', 'l', 'i', 'c', '_', 'h']
				adding dashed alternative: ['_', 'l', 'i', 'ch', '_']
				adding dashed alternative: ['_', 'l', 'i', 'ch', '_']
				adding dashed alternative: ['l', '_', 'i', 'c', '_', 'h']
				adding dashed alternative: ['l', '_', 'i', 'c', '_', 'h']
				adding dashed alternative: ['l', '_', 'i', 'ch', '_']
				adding dashed alternative: ['l', '_', 'i', 'ch', '_']
				adding dashed alternative: ['_', '_', 'l', 'i', '_', 'c', 'h']
				adding dashed alternative: ['_', '_', 'l', 'i', '_', 'c', 'h']
				adding dashed alternative: ['_', '_', 'l', 'i', '_', 'ch']
				adding dashed alternative: ['_', '_', 'l', 'i', '_', 'ch']
				adding dashed alternative: ['l', 'i', '_', 'c', '_', 'h']
				adding dashed alternative: ['l', 'i', '_', 'c', '_', 'h']
				adding dashed alternative: ['l', 'i', '_', 'ch', '_']
				adding dashed alternative: ['l', 'i', '_', 'ch', '_']
				adding dashed alternative: ['_', 'l', '_', 'i', '_', 'c', 'h']
				adding dashed alternative: ['_', 'l', '_', 'i', '_', 'c', 'h']
				adding dashed alternative: ['_', 'l', '_', 'i', '_', 'ch']
				adding dashed alternative: ['_', 'l', '_', 'i', '_', 'ch']
				adding dashed alternative: ['l', '_', '_', 'i', '_', 'c', 'h']
				adding dashed alternative: ['l', '_', '_', 'i', '_', 'c', 'h']
				adding dashed alternative: ['l', '_', '_', 'i', '_', 'ch']
				adding dashed alternative: ['l', '_', '_', 'i', '_', 'ch']
				adding dashed alternative: ['_', '_', '_', 'l', '_', 'i', 'c', 'h']
				adding dashed alternative: ['_', '_', '_', 'l', '_', 'i', 'c', 'h']
				adding dashed alternative: ['_', '_', '_', 'l', '_', 'i', 'ch']
				adding dashed alternative: ['_', '_', '_', 'l', '_', 'i', 'ch']
				adding dashed alternative: ['l', 'i', 'c', '_', '_', 'h']
				adding dashed alternative: ['l', 'i', 'c', '_', '_', 'h']
				adding dashed alternative: ['l', 'i', 'ch', '_', '_']
				adding dashed alternative: ['l', 'i', 'ch', '_', '_']
				adding dashed alternative: ['_', 'l', 'i', '_', '_', 'c', 'h']
				adding dashed alternative: ['_', 'l', 'i', '_', '_', 'c', 'h']
				adding dashed alternative: ['_', 'l', 'i', '_', '_', 'ch']
				adding dashed alternative: ['_', 'l', 'i', '_', '_', 'ch']
				adding dashed alternative: ['l', '_', 'i', '_', '_', 'c', 'h']
				adding dashed alternative: ['l', '_', 'i', '_', '_', 'c', 'h']
				adding dashed alternative: ['l', '_', 'i', '_', '_', 'ch']
				adding dashed alternative: ['l', '_', 'i', '_', '_', 'ch']
				adding dashed alternative: ['_', '_', 'l', '_', '_', 'i', 'c', 'h']
				adding dashed alternative: ['_', '_', 'l', '_', '_', 'i', 'c', 'h']
				adding dashed alternative: ['_', '_', 'l', '_', '_', 'i', 'ch']
				adding dashed alternative: ['_', '_', 'l', '_', '_', 'i', 'ch']
				adding dashed alternative: ['l', 'i', '_', '_', '_', 'c', 'h']
				adding dashed alternative: ['l', 'i', '_', '_', '_', 'c', 'h']
				adding dashed alternative: ['l', 'i', '_', '_', '_', 'ch']
				adding dashed alternative: ['l', 'i', '_', '_', '_', 'ch']
				adding dashed alternative: ['_', 'l', '_', '_', '_', 'i', 'c', 'h']
				adding dashed alternative: ['_', 'l', '_', '_', '_', 'i', 'c', 'h']
				adding dashed alternative: ['_', 'l', '_', '_', '_', 'i', 'ch']
				adding dashed alternative: ['_', 'l', '_', '_', '_', 'i', 'ch']
				adding dashed alternative: ['l', '_', '_', '_', '_', 'i', 'c', 'h']
				adding dashed alternative: ['l', '_', '_', '_', '_', 'i', 'c', 'h']
				adding dashed alternative: ['l', '_', '_', '_', '_', 'i', 'ch']
				adding dashed alternative: ['l', '_', '_', '_', '_', 'i', 'ch']
				adding dashed alternative: ['_', '_', '_', '_', '_', 'l', 'i', 'c', 'h']
				adding dashed alternative: ['_', '_', '_', '_', '_', 'l', 'i', 'c', 'h']
				adding dashed alternative: ['_', '_', '_', '_', '_', 'l', 'i', 'ch']
				adding dashed alternative: ['_', '_', '_', '_', '_', 'l', 'i', 'ch']
				l/i/c/h(CCCC)
l/i/c/h(CVCC)
l/i/ch(CCC)
l/i/ch(CVC)
_/l/i/c/h(ACACC)
_/l/i/c/h(ACACC)
_/l/i/ch(ACAC)
_/l/i/ch(ACAC)
l/_/i/c/h(CAACC)
l/_/i/c/h(CAACC)
l/_/i/ch(CAAC)
l/_/i/ch(CAAC)
_/_/l/i/c/h(AACACC)
_/_/l/i/c/h(AACACC)
_/_/l/i/ch(AACAC)
_/_/l/i/ch(AACAC)
l/i/_/c/h(CAACC)
l/i/_/c/h(CAACC)
l/i/_/ch(CAAC)
l/i/_/ch(CAAC)
_/l/_/i/c/h(ACAACC)
_/l/_/i/c/h(ACAACC)
_/l/_/i/ch(ACAAC)
_/l/_/i/ch(ACAAC)
l/_/_/i/c/h(CAAACC)
l/_/_/i/c/h(CAAACC)
l/_/_/i/ch(CAAAC)
l/_/_/i/ch(CAAAC)
_/_/_/l/i/c/h(AAACACC)
_/_/_/l/i/c/h(AAACACC)
_/_/_/l/i/ch(AAACAC)
_/_/_/l/i/ch(AAACAC)
l/i/c/_/h(CACAC)
l/i/c/_/h(CACAC)
l/i/ch/_(CACA)
l/i/ch/_(CACA)
_/l/i/_/c/h(ACAACC)
_/l/i/_/c/h(ACAACC)
_/l/i/_/ch(ACAAC)
_/l/i/_/ch(ACAAC)
l/_/i/_/c/h(CAAACC)
l/_/i/_/c/h(CAAACC)
l/_/i/_/ch(CAAAC)
l/_/i/_/ch(CAAAC)
_/_/l/_/i/c/h(AACAACC)
_/_/l/_/i/c/h(AACAACC)
_/_/l/_/i/ch(AACAAC)
_/_/l/_/i/ch(AACAAC)
l/i/_/_/c/h(CAAACC)
l/i/_/_/c/h(CAAACC)
l/i/_/_/ch(CAAAC)
l/i/_/_/ch(CAAAC)
_/l/_/_/i/c/h(ACAAACC)
_/l/_/_/i/c/h(ACAAACC)
_/l/_/_/i/ch(ACAAAC)
_/l/_/_/i/ch(ACAAAC)
l/_/_/_/i/c/h(CAAAACC)
l/_/_/_/i/c/h(CAAAACC)
l/_/_/_/i/ch(CAAAAC)
l/_/_/_/i/ch(CAAAAC)
_/_/_/_/l/i/c/h(AAAACACC)
_/_/_/_/l/i/c/h(AAAACACC)
_/_/_/_/l/i/ch(AAAACAC)
_/_/_/_/l/i/ch(AAAACAC)
l/i/c/h/_(CACCA)
l/i/c/h/_(CACCA)
l/i/ch/_(CACA)
l/i/ch/_(CACA)
_/l/i/c/_/h(ACACAC)
_/l/i/c/_/h(ACACAC)
_/l/i/ch/_(ACACA)
_/l/i/ch/_(ACACA)
l/_/i/c/_/h(CAACAC)
l/_/i/c/_/h(CAACAC)
l/_/i/ch/_(CAACA)
l/_/i/ch/_(CAACA)
_/_/l/i/_/c/h(AACAACC)
_/_/l/i/_/c/h(AACAACC)
_/_/l/i/_/ch(AACAAC)
_/_/l/i/_/ch(AACAAC)
l/i/_/c/_/h(CAACAC)
l/i/_/c/_/h(CAACAC)
l/i/_/ch/_(CAACA)
l/i/_/ch/_(CAACA)
_/l/_/i/_/c/h(ACAAACC)
_/l/_/i/_/c/h(ACAAACC)
_/l/_/i/_/ch(ACAAAC)
_/l/_/i/_/ch(ACAAAC)
l/_/_/i/_/c/h(CAAAACC)
l/_/_/i/_/c/h(CAAAACC)
l/_/_/i/_/ch(CAAAAC)
l/_/_/i/_/ch(CAAAAC)
_/_/_/l/_/i/c/h(AAACAACC)
_/_/_/l/_/i/c/h(AAACAACC)
_/_/_/l/_/i/ch(AAACAAC)
_/_/_/l/_/i/ch(AAACAAC)
l/i/c/_/_/h(CACAAC)
l/i/c/_/_/h(CACAAC)
l/i/ch/_/_(CACAA)
l/i/ch/_/_(CACAA)
_/l/i/_/_/c/h(ACAAACC)
_/l/i/_/_/c/h(ACAAACC)
_/l/i/_/_/ch(ACAAAC)
_/l/i/_/_/ch(ACAAAC)
l/_/i/_/_/c/h(CAAAACC)
l/_/i/_/_/c/h(CAAAACC)
l/_/i/_/_/ch(CAAAAC)
l/_/i/_/_/ch(CAAAAC)
_/_/l/_/_/i/c/h(AACAAACC)
_/_/l/_/_/i/c/h(AACAAACC)
_/_/l/_/_/i/ch(AACAAAC)
_/_/l/_/_/i/ch(AACAAAC)
l/i/_/_/_/c/h(CAAAACC)
l/i/_/_/_/c/h(CAAAACC)
l/i/_/_/_/ch(CAAAAC)
l/i/_/_/_/ch(CAAAAC)
_/l/_/_/_/i/c/h(ACAAAACC)
_/l/_/_/_/i/c/h(ACAAAACC)
_/l/_/_/_/i/ch(ACAAAAC)
_/l/_/_/_/i/ch(ACAAAAC)
l/_/_/_/_/i/c/h(CAAAAACC)
l/_/_/_/_/i/c/h(CAAAAACC)
l/_/_/_/_/i/ch(CAAAAAC)
l/_/_/_/_/i/ch(CAAAAAC)
_/_/_/_/_/l/i/c/h(AAAAACACC)
_/_/_/_/_/l/i/c/h(AAAAACACC)
_/_/_/_/_/l/i/ch(AAAAACAC)
_/_/_/_/_/l/i/ch(AAAAACAC)
				ANALYSING: liche
					resolving (32)
					> version: l/i/c/h/e
					TRYING: e
					> version: l/i/c/h/e
					TRYING: e
					> version: l/i/ch/e
					> version: l/i/ch/e
					> version: _/l/i/c/h/e
					TRYING: h
					adding blocked set: C = C >> h, _, n
					> version: _/l/i/c/h/e
					TRYING: h
					adding blocked set: C = C >> h, _, n
					> version: _/l/i/ch/e
					TRYING: e
					> version: _/l/i/ch/e
					TRYING: e
					> version: l/_/i/c/h/e
					TRYING: h
					adding blocked set: C = C >> h, _, n
					> version: l/_/i/c/h/e
					TRYING: h
					adding blocked set: C = C >> h, _, n
					> version: l/_/i/ch/e
					TRYING: e
					> version: l/_/i/ch/e
					TRYING: e
					> version: _/_/l/i/c/h/e
					TRYING: c
					adding blocked set: C = C >> c, _, n
					> version: _/_/l/i/c/h/e
					TRYING: c
					adding blocked set: C = C >> c, _, n
					> version: _/_/l/i/ch/e
					TRYING: ch
					adding blocked set: C = C >> ch, _, n
					> version: _/_/l/i/ch/e
					TRYING: ch
					adding blocked set: C = C >> ch, _, n
					> version: l/i/_/c/h/e
					TRYING: h
					adding blocked set: C = C >> h, _, n
					> version: l/i/_/c/h/e
					TRYING: h
					adding blocked set: C = C >> h, _, n
					> version: l/i/_/ch/e
					TRYING: e
					> version: l/i/_/ch/e
					TRYING: e
					> version: _/l/_/i/c/h/e
					TRYING: c
					adding blocked set: C = C >> c, _, n
					> version: _/l/_/i/c/h/e
					TRYING: c
					adding blocked set: C = C >> c, _, n
					> version: _/l/_/i/ch/e
					TRYING: ch
					adding blocked set: C = C >> ch, _, n
					> version: _/l/_/i/ch/e
					TRYING: ch
					adding blocked set: C = C >> ch, _, n
					> version: l/_/_/i/c/h/e
					TRYING: c
					adding blocked set: C = C >> c, _, n
					> version: l/_/_/i/c/h/e
					TRYING: c
					adding blocked set: C = C >> c, _, n
					> version: l/_/_/i/ch/e
					TRYING: ch
					adding blocked set: C = C >> ch, _, n
					> version: l/_/_/i/ch/e
					TRYING: ch
					adding blocked set: C = C >> ch, _, n
					> version: _/_/_/l/i/c/h/e
					TRYING: i
					adding blocked set: C = C >> i, _, n
					> version: _/_/_/l/i/c/h/e
					TRYING: i
					adding blocked set: C = C >> i, _, n
					> version: _/_/_/l/i/ch/e
					TRYING: i
					adding blocked set: C = C >> i, _, n
					> version: _/_/_/l/i/ch/e
					TRYING: i
					adding blocked set: C = C >> i, _, n
					RESULT:  ['_']
				adding dashed alternative: ['l', 'i', 'c', 'h', '_', 'e']
				adding dashed alternative: ['l', 'i', 'c', 'h', '_', 'e']
				adding dashed alternative: ['l', 'i', 'ch', 'e', '_']
				adding dashed alternative: ['l', 'i', 'ch', 'e', '_']
				adding dashed alternative: ['_', 'l', 'i', 'c', '_', 'h', 'e']
				adding dashed alternative: ['_', 'l', 'i', 'c', '_', 'h', 'e']
				adding dashed alternative: ['_', 'l', 'i', 'ch', '_', 'e']
				adding dashed alternative: ['_', 'l', 'i', 'ch', '_', 'e']
				adding dashed alternative: ['l', '_', 'i', 'c', '_', 'h', 'e']
				adding dashed alternative: ['l', '_', 'i', 'c', '_', 'h', 'e']
				adding dashed alternative: ['l', '_', 'i', 'ch', '_', 'e']
				adding dashed alternative: ['l', '_', 'i', 'ch', '_', 'e']
				adding dashed alternative: ['_', '_', 'l', 'i', '_', 'c', 'h', 'e']
				adding dashed alternative: ['_', '_', 'l', 'i', '_', 'c', 'h', 'e']
				adding dashed alternative: ['_', '_', 'l', 'i', '_', 'ch', 'e']
				adding dashed alternative: ['_', '_', 'l', 'i', '_', 'ch', 'e']
				adding dashed alternative: ['l', 'i', '_', 'c', '_', 'h', 'e']
				adding dashed alternative: ['l', 'i', '_', 'c', '_', 'h', 'e']
				adding dashed alternative: ['l', 'i', '_', 'ch', '_', 'e']
				adding dashed alternative: ['l', 'i', '_', 'ch', '_', 'e']
				adding dashed alternative: ['_', 'l', '_', 'i', '_', 'c', 'h', 'e']
				adding dashed alternative: ['_', 'l', '_', 'i', '_', 'c', 'h', 'e']
				adding dashed alternative: ['_', 'l', '_', 'i', '_', 'ch', 'e']
				adding dashed alternative: ['_', 'l', '_', 'i', '_', 'ch', 'e']
				adding dashed alternative: ['l', '_', '_', 'i', '_', 'c', 'h', 'e']
				adding dashed alternative: ['l', '_', '_', 'i', '_', 'c', 'h', 'e']
				adding dashed alternative: ['l', '_', '_', 'i', '_', 'ch', 'e']
				adding dashed alternative: ['l', '_', '_', 'i', '_', 'ch', 'e']
				adding dashed alternative: ['_', '_', '_', 'l', '_', 'i', 'c', 'h', 'e']
				adding dashed alternative: ['_', '_', '_', 'l', '_', 'i', 'c', 'h', 'e']
				adding dashed alternative: ['_', '_', '_', 'l', '_', 'i', 'ch', 'e']
				adding dashed alternative: ['_', '_', '_', 'l', '_', 'i', 'ch', 'e']
				l/i/c/h/e(CCCCV)
l/i/c/h/e(CVCCV)
l/i/ch/e(CCCV)
l/i/ch/e(CVCV)
_/l/i/c/h/e(ACACCV)
_/l/i/c/h/e(ACACCV)
_/l/i/ch/e(ACACV)
_/l/i/ch/e(ACACV)
l/_/i/c/h/e(CAACCV)
l/_/i/c/h/e(CAACCV)
l/_/i/ch/e(CAACV)
l/_/i/ch/e(CAACV)
_/_/l/i/c/h/e(AACACCV)
_/_/l/i/c/h/e(AACACCV)
_/_/l/i/ch/e(AACACV)
_/_/l/i/ch/e(AACACV)
l/i/_/c/h/e(CAACCV)
l/i/_/c/h/e(CAACCV)
l/i/_/ch/e(CAACV)
l/i/_/ch/e(CAACV)
_/l/_/i/c/h/e(ACAACCV)
_/l/_/i/c/h/e(ACAACCV)
_/l/_/i/ch/e(ACAACV)
_/l/_/i/ch/e(ACAACV)
l/_/_/i/c/h/e(CAAACCV)
l/_/_/i/c/h/e(CAAACCV)
l/_/_/i/ch/e(CAAACV)
l/_/_/i/ch/e(CAAACV)
_/_/_/l/i/c/h/e(AAACACCV)
_/_/_/l/i/c/h/e(AAACACCV)
_/_/_/l/i/ch/e(AAACACV)
_/_/_/l/i/ch/e(AAACACV)
l/i/c/h/_/e(CACCAV)
l/i/c/h/_/e(CACCAV)
l/i/ch/e/_(CACVA)
l/i/ch/e/_(CACVA)
_/l/i/c/_/h/e(ACACACV)
_/l/i/c/_/h/e(ACACACV)
_/l/i/ch/_/e(ACACAV)
_/l/i/ch/_/e(ACACAV)
l/_/i/c/_/h/e(CAACACV)
l/_/i/c/_/h/e(CAACACV)
l/_/i/ch/_/e(CAACAV)
l/_/i/ch/_/e(CAACAV)
_/_/l/i/_/c/h/e(AACAACCV)
_/_/l/i/_/c/h/e(AACAACCV)
_/_/l/i/_/ch/e(AACAACV)
_/_/l/i/_/ch/e(AACAACV)
l/i/_/c/_/h/e(CAACACV)
l/i/_/c/_/h/e(CAACACV)
l/i/_/ch/_/e(CAACAV)
l/i/_/ch/_/e(CAACAV)
_/l/_/i/_/c/h/e(ACAAACCV)
_/l/_/i/_/c/h/e(ACAAACCV)
_/l/_/i/_/ch/e(ACAAACV)
_/l/_/i/_/ch/e(ACAAACV)
l/_/_/i/_/c/h/e(CAAAACCV)
l/_/_/i/_/c/h/e(CAAAACCV)
l/_/_/i/_/ch/e(CAAAACV)
l/_/_/i/_/ch/e(CAAAACV)
_/_/_/l/_/i/c/h/e(AAACAACCV)
_/_/_/l/_/i/c/h/e(AAACAACCV)
_/_/_/l/_/i/ch/e(AAACAACV)
_/_/_/l/_/i/ch/e(AAACAACV)
			___CVCVCC : 5___
				ANALYSING: heofenn
				adding littera based on matching pattern
				ANALYSING: eue
					resolving (20)
					> version: e/u/e
					> version: e/u/e
					> version: eu/e
					> version: e/ue
					> version: eu/e
					> version: _/e/u/e
					> version: _/e/u/e
					> version: _/eu/e
					> version: _/e/ue
					> version: _/eu/e
					> version: e/u/e/_
					> version: e/u/e/_
					> version: eu/e/_
					> version: e/ue/_
					> version: eu/e/_
					> version: _/e/u/e/_
					> version: _/e/u/e/_
					> version: _/eu/e/_
					> version: _/e/ue/_
					> version: _/eu/e/_
					RESULT:  ['_']
				adding dashed alternative: ['e', 'u', 'e', '_']
				adding dashed alternative: ['e', 'u', 'e', '_']
				adding dashed alternative: ['eu', 'e', '_']
				adding dashed alternative: ['e', 'ue', '_']
				adding dashed alternative: ['eu', 'e', '_']
				adding dashed alternative: ['_', 'e', 'u', 'e', '_']
				adding dashed alternative: ['_', 'e', 'u', 'e', '_']
				adding dashed alternative: ['_', 'eu', 'e', '_']
				adding dashed alternative: ['_', 'e', 'ue', '_']
				adding dashed alternative: ['_', 'eu', 'e', '_']
				adding dashed alternative: ['e', 'u', 'e', '_', '_']
				adding dashed alternative: ['e', 'u', 'e', '_', '_']
				adding dashed alternative: ['eu', 'e', '_', '_']
				adding dashed alternative: ['e', 'ue', '_', '_']
				adding dashed alternative: ['eu', 'e', '_', '_']
				adding dashed alternative: ['_', 'e', 'u', 'e', '_', '_']
				adding dashed alternative: ['_', 'e', 'u', 'e', '_', '_']
				adding dashed alternative: ['_', 'eu', 'e', '_', '_']
				adding dashed alternative: ['_', 'e', 'ue', '_', '_']
				adding dashed alternative: ['_', 'eu', 'e', '_', '_']
				e/u/e(VCV)
e/u/e(VVV)
eu/e(VV)
e/ue(VV)
eu/e(VV)
_/e/u/e(AVAV)
_/e/u/e(AVAV)
_/eu/e(AVV)
_/e/ue(AVV)
_/eu/e(AVV)
e/u/e/_(VAVA)
e/u/e/_(VAVA)
eu/e/_(VVA)
e/ue/_(VVA)
eu/e/_(VVA)
_/e/u/e/_(AVAVA)
_/e/u/e/_(AVAVA)
_/eu/e/_(AVVA)
_/e/ue/_(AVVA)
_/eu/e/_(AVVA)
e/u/e/_(VAVA)
e/u/e/_(VAVA)
eu/e/_(VVA)
e/ue/_(VVA)
eu/e/_(VVA)
_/e/u/e/_(AVAVA)
_/e/u/e/_(AVAVA)
_/eu/e/_(AVVA)
_/e/ue/_(AVVA)
_/eu/e/_(AVVA)
e/u/e/_/_(VAVAA)
e/u/e/_/_(VAVAA)
eu/e/_/_(VVAA)
e/ue/_/_(VVAA)
eu/e/_/_(VVAA)
_/e/u/e/_/_(AVAVAA)
_/e/u/e/_/_(AVAVAA)
_/eu/e/_/_(AVVAA)
_/e/ue/_/_(AVVAA)
_/eu/e/_/_(AVVAA)
				version split: ['e', 'u', 'e']
				{'string': 'e/u/e', 'rgx': '((_))/((u)|(e)|(eu)|(ue))/((u))/((e))/((_))/((_))$'}
				_____REMOVING________['e', 'u', 'e']
				version split: ['e', 'u', 'e']
				{'string': 'e/u/e', 'rgx': '((_))/((u)|(e)|(eu)|(ue))/((u))/((e))/((_))/((_))$'}
				_____REMOVING________['e', 'u', 'e']
				version split: ['eu', 'e']
				{'string': 'eu/e', 'rgx': '((_))/((u)|(e)|(eu)|(ue))/((u))/((e))/((_))/((_))$'}
				_____REMOVING________['eu', 'e']
				version split: ['e', 'ue']
				{'string': 'e/ue', 'rgx': '((_))/((u)|(e)|(eu)|(ue))/((u))/((e))/((_))/((_))$'}
				_____REMOVING________['e', 'ue']
				version split: ['eu', 'e']
				{'string': 'eu/e', 'rgx': '((_))/((u)|(e)|(eu)|(ue))/((u))/((e))/((_))/((_))$'}
				_____REMOVING________['eu', 'e']
				version split: ['_', 'e', 'u', 'e']
				{'string': '_/e/u/e', 'rgx': '((_))/((u)|(e)|(eu)|(ue))/((u))/((e))/((_))/((_))$'}
				_____REMOVING________['_', 'e', 'u', 'e']
				version split: ['_', 'e', 'u', 'e']
				{'string': '_/e/u/e', 'rgx': '((_))/((u)|(e)|(eu)|(ue))/((u))/((e))/((_))/((_))$'}
				_____REMOVING________['_', 'e', 'u', 'e']
				version split: ['_', 'eu', 'e']
				{'string': '_/eu/e', 'rgx': '((_))/((u)|(e)|(eu)|(ue))/((u))/((e))/((_))/((_))$'}
				_____REMOVING________['_', 'eu', 'e']
				version split: ['_', 'e', 'ue']
				{'string': '_/e/ue', 'rgx': '((_))/((u)|(e)|(eu)|(ue))/((u))/((e))/((_))/((_))$'}
				_____REMOVING________['_', 'e', 'ue']
				version split: ['_', 'eu', 'e']
				{'string': '_/eu/e', 'rgx': '((_))/((u)|(e)|(eu)|(ue))/((u))/((e))/((_))/((_))$'}
				_____REMOVING________['_', 'eu', 'e']
				version split: ['e', 'u', 'e', '_']
				{'string': 'e/u/e/_', 'rgx': '((_))/((u)|(e)|(eu)|(ue))/((u))/((e))/((_))/((_))$'}
				_____REMOVING________['e', 'u', 'e', '_']
				version split: ['e', 'u', 'e', '_']
				{'string': 'e/u/e/_', 'rgx': '((_))/((u)|(e)|(eu)|(ue))/((u))/((e))/((_))/((_))$'}
				_____REMOVING________['e', 'u', 'e', '_']
				version split: ['eu', 'e', '_']
				{'string': 'eu/e/_', 'rgx': '((_))/((u)|(e)|(eu)|(ue))/((u))/((e))/((_))/((_))$'}
				_____REMOVING________['eu', 'e', '_']
				version split: ['e', 'ue', '_']
				{'string': 'e/ue/_', 'rgx': '((_))/((u)|(e)|(eu)|(ue))/((u))/((e))/((_))/((_))$'}
				_____REMOVING________['e', 'ue', '_']
				version split: ['eu', 'e', '_']
				{'string': 'eu/e/_', 'rgx': '((_))/((u)|(e)|(eu)|(ue))/((u))/((e))/((_))/((_))$'}
				_____REMOVING________['eu', 'e', '_']
				version split: ['_', 'e', 'u', 'e', '_']
				{'string': '_/e/u/e/_', 'rgx': '((_))/((u)|(e)|(eu)|(ue))/((u))/((e))/((_))/((_))$'}
				_____REMOVING________['_', 'e', 'u', 'e', '_']
				version split: ['_', 'e', 'u', 'e', '_']
				{'string': '_/e/u/e/_', 'rgx': '((_))/((u)|(e)|(eu)|(ue))/((u))/((e))/((_))/((_))$'}
				_____REMOVING________['_', 'e', 'u', 'e', '_']
				version split: ['_', 'eu', 'e', '_']
				{'string': '_/eu/e/_', 'rgx': '((_))/((u)|(e)|(eu)|(ue))/((u))/((e))/((_))/((_))$'}
				_____REMOVING________['_', 'eu', 'e', '_']
				version split: ['_', 'e', 'ue', '_']
				{'string': '_/e/ue/_', 'rgx': '((_))/((u)|(e)|(eu)|(ue))/((u))/((e))/((_))/((_))$'}
				_____REMOVING________['_', 'e', 'ue', '_']
				version split: ['_', 'eu', 'e', '_']
				{'string': '_/eu/e/_', 'rgx': '((_))/((u)|(e)|(eu)|(ue))/((u))/((e))/((_))/((_))$'}
				_____REMOVING________['_', 'eu', 'e', '_']
				version split: ['e', 'u', 'e', '_']
				{'string': 'e/u/e/_', 'rgx': '((_))/((u)|(e)|(eu)|(ue))/((u))/((e))/((_))/((_))$'}
				_____REMOVING________['e', 'u', 'e', '_']
				version split: ['e', 'u', 'e', '_']
				{'string': 'e/u/e/_', 'rgx': '((_))/((u)|(e)|(eu)|(ue))/((u))/((e))/((_))/((_))$'}
				_____REMOVING________['e', 'u', 'e', '_']
				version split: ['eu', 'e', '_']
				{'string': 'eu/e/_', 'rgx': '((_))/((u)|(e)|(eu)|(ue))/((u))/((e))/((_))/((_))$'}
				_____REMOVING________['eu', 'e', '_']
				version split: ['e', 'ue', '_']
				{'string': 'e/ue/_', 'rgx': '((_))/((u)|(e)|(eu)|(ue))/((u))/((e))/((_))/((_))$'}
				_____REMOVING________['e', 'ue', '_']
				version split: ['eu', 'e', '_']
				{'string': 'eu/e/_', 'rgx': '((_))/((u)|(e)|(eu)|(ue))/((u))/((e))/((_))/((_))$'}
				_____REMOVING________['eu', 'e', '_']
				version split: ['_', 'e', 'u', 'e', '_']
				{'string': '_/e/u/e/_', 'rgx': '((_))/((u)|(e)|(eu)|(ue))/((u))/((e))/((_))/((_))$'}
				_____REMOVING________['_', 'e', 'u', 'e', '_']
				version split: ['_', 'e', 'u', 'e', '_']
				{'string': '_/e/u/e/_', 'rgx': '((_))/((u)|(e)|(eu)|(ue))/((u))/((e))/((_))/((_))$'}
				_____REMOVING________['_', 'e', 'u', 'e', '_']
				version split: ['_', 'eu', 'e', '_']
				{'string': '_/eu/e/_', 'rgx': '((_))/((u)|(e)|(eu)|(ue))/((u))/((e))/((_))/((_))$'}
				_____REMOVING________['_', 'eu', 'e', '_']
				version split: ['_', 'e', 'ue', '_']
				{'string': '_/e/ue/_', 'rgx': '((_))/((u)|(e)|(eu)|(ue))/((u))/((e))/((_))/((_))$'}
				_____REMOVING________['_', 'e', 'ue', '_']
				version split: ['_', 'eu', 'e', '_']
				{'string': '_/eu/e/_', 'rgx': '((_))/((u)|(e)|(eu)|(ue))/((u))/((e))/((_))/((_))$'}
				_____REMOVING________['_', 'eu', 'e', '_']
				version split: ['e', 'u', 'e', '_', '_']
				{'string': 'e/u/e/_/_', 'rgx': '((_))/((u)|(e)|(eu)|(ue))/((u))/((e))/((_))/((_))$'}
				_____REMOVING________['e', 'u', 'e', '_', '_']
				version split: ['e', 'u', 'e', '_', '_']
				{'string': 'e/u/e/_/_', 'rgx': '((_))/((u)|(e)|(eu)|(ue))/((u))/((e))/((_))/((_))$'}
				_____REMOVING________['e', 'u', 'e', '_', '_']
				version split: ['eu', 'e', '_', '_']
				{'string': 'eu/e/_/_', 'rgx': '((_))/((u)|(e)|(eu)|(ue))/((u))/((e))/((_))/((_))$'}
				_____REMOVING________['eu', 'e', '_', '_']
				version split: ['e', 'ue', '_', '_']
				{'string': 'e/ue/_/_', 'rgx': '((_))/((u)|(e)|(eu)|(ue))/((u))/((e))/((_))/((_))$'}
				_____REMOVING________['e', 'ue', '_', '_']
				version split: ['eu', 'e', '_', '_']
				{'string': 'eu/e/_/_', 'rgx': '((_))/((u)|(e)|(eu)|(ue))/((u))/((e))/((_))/((_))$'}
				_____REMOVING________['eu', 'e', '_', '_']
				version split: ['_', 'e', 'u', 'e', '_', '_']
				{'string': '_/e/u/e/_/_', 'rgx': '((_))/((u)|(e)|(eu)|(ue))/((u))/((e))/((_))/((_))$'}
				version split: ['_', 'e', 'u', 'e', '_', '_']
				{'string': '_/e/u/e/_/_', 'rgx': '((_))/((u)|(e)|(eu)|(ue))/((u))/((e))/((_))/((_))$'}
				version split: ['_', 'eu', 'e', '_', '_']
				{'string': '_/eu/e/_/_', 'rgx': '((_))/((u)|(e)|(eu)|(ue))/((u))/((e))/((_))/((_))$'}
				_____REMOVING________['_', 'eu', 'e', '_', '_']
				version split: ['_', 'e', 'ue', '_', '_']
				{'string': '_/e/ue/_/_', 'rgx': '((_))/((u)|(e)|(eu)|(ue))/((u))/((e))/((_))/((_))$'}
				_____REMOVING________['_', 'e', 'ue', '_', '_']
				version split: ['_', 'eu', 'e', '_', '_']
				{'string': '_/eu/e/_/_', 'rgx': '((_))/((u)|(e)|(eu)|(ue))/((u))/((e))/((_))/((_))$'}
				_____REMOVING________['_', 'eu', 'e', '_', '_']
				ANALYSING: he
					resolving (8)
					> version: h/e
					> version: h/_/e
					> version: h/e/_
					> version: h/_/_/e
					> version: h/e/_
					> version: h/_/e/_
					> version: h/e/_/_
					> version: h/_/_/e/_
					RESULT:  ['_']
				adding dashed alternative: ['h', 'e', '_']
				adding dashed alternative: ['h', '_', 'e', '_']
				adding dashed alternative: ['h', 'e', '_', '_']
				adding dashed alternative: ['h', '_', '_', 'e', '_']
				adding dashed alternative: ['h', 'e', '_', '_']
				adding dashed alternative: ['h', '_', 'e', '_', '_']
				adding dashed alternative: ['h', 'e', '_', '_', '_']
				adding dashed alternative: ['h', '_', '_', 'e', '_', '_']
				h/e(CV)
h/_/e(CAV)
h/e/_(CVA)
h/_/_/e(CAAV)
h/e/_(CVA)
h/_/e/_(CAVA)
h/e/_/_(CVAA)
h/_/_/e/_(CAAVA)
h/e/_(CVA)
h/_/e/_(CAVA)
h/e/_/_(CVAA)
h/_/_/e/_(CAAVA)
h/e/_/_(CVAA)
h/_/e/_/_(CAVAA)
h/e/_/_/_(CVAAA)
h/_/_/e/_/_(CAAVAA)
				version split: ['h', 'e']
				{'string': 'h/e', 'rgx': '((h))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['h', 'e']
				version split: ['h', '_', 'e']
				{'string': 'h/_/e', 'rgx': '((h))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['h', '_', 'e']
				version split: ['h', 'e', '_']
				{'string': 'h/e/_', 'rgx': '((h))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['h', 'e', '_']
				version split: ['h', '_', '_', 'e']
				{'string': 'h/_/_/e', 'rgx': '((h))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['h', '_', '_', 'e']
				version split: ['h', 'e', '_']
				{'string': 'h/e/_', 'rgx': '((h))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['h', 'e', '_']
				version split: ['h', '_', 'e', '_']
				{'string': 'h/_/e/_', 'rgx': '((h))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['h', '_', 'e', '_']
				version split: ['h', 'e', '_', '_']
				{'string': 'h/e/_/_', 'rgx': '((h))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['h', 'e', '_', '_']
				version split: ['h', '_', '_', 'e', '_']
				{'string': 'h/_/_/e/_', 'rgx': '((h))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['h', '_', '_', 'e', '_']
				version split: ['h', 'e', '_']
				{'string': 'h/e/_', 'rgx': '((h))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['h', 'e', '_']
				version split: ['h', '_', 'e', '_']
				{'string': 'h/_/e/_', 'rgx': '((h))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['h', '_', 'e', '_']
				version split: ['h', 'e', '_', '_']
				{'string': 'h/e/_/_', 'rgx': '((h))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['h', 'e', '_', '_']
				version split: ['h', '_', '_', 'e', '_']
				{'string': 'h/_/_/e/_', 'rgx': '((h))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['h', '_', '_', 'e', '_']
				version split: ['h', 'e', '_', '_']
				{'string': 'h/e/_/_', 'rgx': '((h))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['h', 'e', '_', '_']
				version split: ['h', '_', 'e', '_', '_']
				{'string': 'h/_/e/_/_', 'rgx': '((h))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['h', '_', 'e', '_', '_']
				version split: ['h', 'e', '_', '_', '_']
				{'string': 'h/e/_/_/_', 'rgx': '((h))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['h', 'e', '_', '_', '_']
				version split: ['h', '_', '_', 'e', '_', '_']
				{'string': 'h/_/_/e/_/_', 'rgx': '((h))/((_))/((_))/((e))/((_))/((_))$'}
				ANALYSING: heo
					resolving (16)
					> version: h/e/o
					> version: h/eo
					> version: h/_/e/o
					> version: h/_/eo
					> version: h/e/_/o
					> version: h/eo/_
					> version: h/_/_/e/o
					> version: h/_/_/eo
					> version: h/e/o/_
					> version: h/eo/_
					> version: h/_/e/o/_
					> version: h/_/eo/_
					> version: h/e/_/o/_
					> version: h/eo/_/_
					> version: h/_/_/e/_/o
					TRYING: o
					> version: h/_/_/eo/_
					RESULT:  ['_']
				adding dashed alternative: ['h', 'e', 'o', '_']
				adding dashed alternative: ['h', 'eo', '_']
				adding dashed alternative: ['h', '_', 'e', 'o', '_']
				adding dashed alternative: ['h', '_', 'eo', '_']
				adding dashed alternative: ['h', 'e', '_', 'o', '_']
				adding dashed alternative: ['h', 'eo', '_', '_']
				adding dashed alternative: ['h', '_', '_', 'e', 'o', '_']
				adding dashed alternative: ['h', '_', '_', 'eo', '_']
				adding dashed alternative: ['h', 'e', 'o', '_', '_']
				adding dashed alternative: ['h', 'eo', '_', '_']
				adding dashed alternative: ['h', '_', 'e', 'o', '_', '_']
				adding dashed alternative: ['h', '_', 'eo', '_', '_']
				adding dashed alternative: ['h', 'e', '_', 'o', '_', '_']
				adding dashed alternative: ['h', 'eo', '_', '_', '_']
				adding dashed alternative: ['h', '_', '_', 'e', '_', '_', 'o']
				adding dashed alternative: ['h', '_', '_', 'eo', '_', '_']
				h/e/o(CVV)
h/eo(CV)
h/_/e/o(CAVV)
h/_/eo(CAV)
h/e/_/o(CVAV)
h/eo/_(CVA)
h/_/_/e/o(CAAVV)
h/_/_/eo(CAAV)
h/e/o/_(CVVA)
h/eo/_(CVA)
h/_/e/o/_(CAVVA)
h/_/eo/_(CAVA)
h/e/_/o/_(CVAVA)
h/eo/_/_(CVAA)
h/_/_/e/_/o(CAAVAV)
h/_/_/eo/_(CAAVA)
h/e/o/_(CVVA)
h/eo/_(CVA)
h/_/e/o/_(CAVVA)
h/_/eo/_(CAVA)
h/e/_/o/_(CVAVA)
h/eo/_/_(CVAA)
h/_/_/e/o/_(CAAVVA)
h/_/_/eo/_(CAAVA)
h/e/o/_/_(CVVAA)
h/eo/_/_(CVAA)
h/_/e/o/_/_(CAVVAA)
h/_/eo/_/_(CAVAA)
h/e/_/o/_/_(CVAVAA)
h/eo/_/_/_(CVAAA)
h/_/_/e/_/_/o(CAAVAAV)
h/_/_/eo/_/_(CAAVAA)
				version split: ['h', 'e', 'o']
				{'string': 'h/e/o', 'rgx': '((h))/((_))/((_))/((e)|(eo)|(o))/((_))/((_))$'}
				_____REMOVING________['h', 'e', 'o']
				version split: ['h', 'eo']
				{'string': 'h/eo', 'rgx': '((h))/((_))/((_))/((e)|(eo)|(o))/((_))/((_))$'}
				_____REMOVING________['h', 'eo']
				version split: ['h', '_', 'e', 'o']
				{'string': 'h/_/e/o', 'rgx': '((h))/((_))/((_))/((e)|(eo)|(o))/((_))/((_))$'}
				_____REMOVING________['h', '_', 'e', 'o']
				version split: ['h', '_', 'eo']
				{'string': 'h/_/eo', 'rgx': '((h))/((_))/((_))/((e)|(eo)|(o))/((_))/((_))$'}
				_____REMOVING________['h', '_', 'eo']
				version split: ['h', 'e', '_', 'o']
				{'string': 'h/e/_/o', 'rgx': '((h))/((_))/((_))/((e)|(eo)|(o))/((_))/((_))$'}
				_____REMOVING________['h', 'e', '_', 'o']
				version split: ['h', 'eo', '_']
				{'string': 'h/eo/_', 'rgx': '((h))/((_))/((_))/((e)|(eo)|(o))/((_))/((_))$'}
				_____REMOVING________['h', 'eo', '_']
				version split: ['h', '_', '_', 'e', 'o']
				{'string': 'h/_/_/e/o', 'rgx': '((h))/((_))/((_))/((e)|(eo)|(o))/((_))/((_))$'}
				_____REMOVING________['h', '_', '_', 'e', 'o']
				version split: ['h', '_', '_', 'eo']
				{'string': 'h/_/_/eo', 'rgx': '((h))/((_))/((_))/((e)|(eo)|(o))/((_))/((_))$'}
				_____REMOVING________['h', '_', '_', 'eo']
				version split: ['h', 'e', 'o', '_']
				{'string': 'h/e/o/_', 'rgx': '((h))/((_))/((_))/((e)|(eo)|(o))/((_))/((_))$'}
				_____REMOVING________['h', 'e', 'o', '_']
				version split: ['h', 'eo', '_']
				{'string': 'h/eo/_', 'rgx': '((h))/((_))/((_))/((e)|(eo)|(o))/((_))/((_))$'}
				_____REMOVING________['h', 'eo', '_']
				version split: ['h', '_', 'e', 'o', '_']
				{'string': 'h/_/e/o/_', 'rgx': '((h))/((_))/((_))/((e)|(eo)|(o))/((_))/((_))$'}
				_____REMOVING________['h', '_', 'e', 'o', '_']
				version split: ['h', '_', 'eo', '_']
				{'string': 'h/_/eo/_', 'rgx': '((h))/((_))/((_))/((e)|(eo)|(o))/((_))/((_))$'}
				_____REMOVING________['h', '_', 'eo', '_']
				version split: ['h', 'e', '_', 'o', '_']
				{'string': 'h/e/_/o/_', 'rgx': '((h))/((_))/((_))/((e)|(eo)|(o))/((_))/((_))$'}
				_____REMOVING________['h', 'e', '_', 'o', '_']
				version split: ['h', 'eo', '_', '_']
				{'string': 'h/eo/_/_', 'rgx': '((h))/((_))/((_))/((e)|(eo)|(o))/((_))/((_))$'}
				_____REMOVING________['h', 'eo', '_', '_']
				version split: ['h', '_', '_', 'e', '_', 'o']
				{'string': 'h/_/_/e/_/o', 'rgx': '((h))/((_))/((_))/((e)|(eo)|(o))/((_))/((_))$'}
				_____REMOVING________['h', '_', '_', 'e', '_', 'o']
				version split: ['h', '_', '_', 'eo', '_']
				{'string': 'h/_/_/eo/_', 'rgx': '((h))/((_))/((_))/((e)|(eo)|(o))/((_))/((_))$'}
				_____REMOVING________['h', '_', '_', 'eo', '_']
				version split: ['h', 'e', 'o', '_']
				{'string': 'h/e/o/_', 'rgx': '((h))/((_))/((_))/((e)|(eo)|(o))/((_))/((_))$'}
				_____REMOVING________['h', 'e', 'o', '_']
				version split: ['h', 'eo', '_']
				{'string': 'h/eo/_', 'rgx': '((h))/((_))/((_))/((e)|(eo)|(o))/((_))/((_))$'}
				_____REMOVING________['h', 'eo', '_']
				version split: ['h', '_', 'e', 'o', '_']
				{'string': 'h/_/e/o/_', 'rgx': '((h))/((_))/((_))/((e)|(eo)|(o))/((_))/((_))$'}
				_____REMOVING________['h', '_', 'e', 'o', '_']
				version split: ['h', '_', 'eo', '_']
				{'string': 'h/_/eo/_', 'rgx': '((h))/((_))/((_))/((e)|(eo)|(o))/((_))/((_))$'}
				_____REMOVING________['h', '_', 'eo', '_']
				version split: ['h', 'e', '_', 'o', '_']
				{'string': 'h/e/_/o/_', 'rgx': '((h))/((_))/((_))/((e)|(eo)|(o))/((_))/((_))$'}
				_____REMOVING________['h', 'e', '_', 'o', '_']
				version split: ['h', 'eo', '_', '_']
				{'string': 'h/eo/_/_', 'rgx': '((h))/((_))/((_))/((e)|(eo)|(o))/((_))/((_))$'}
				_____REMOVING________['h', 'eo', '_', '_']
				version split: ['h', '_', '_', 'e', 'o', '_']
				{'string': 'h/_/_/e/o/_', 'rgx': '((h))/((_))/((_))/((e)|(eo)|(o))/((_))/((_))$'}
				_____REMOVING________['h', '_', '_', 'e', 'o', '_']
				version split: ['h', '_', '_', 'eo', '_']
				{'string': 'h/_/_/eo/_', 'rgx': '((h))/((_))/((_))/((e)|(eo)|(o))/((_))/((_))$'}
				_____REMOVING________['h', '_', '_', 'eo', '_']
				version split: ['h', 'e', 'o', '_', '_']
				{'string': 'h/e/o/_/_', 'rgx': '((h))/((_))/((_))/((e)|(eo)|(o))/((_))/((_))$'}
				_____REMOVING________['h', 'e', 'o', '_', '_']
				version split: ['h', 'eo', '_', '_']
				{'string': 'h/eo/_/_', 'rgx': '((h))/((_))/((_))/((e)|(eo)|(o))/((_))/((_))$'}
				_____REMOVING________['h', 'eo', '_', '_']
				version split: ['h', '_', 'e', 'o', '_', '_']
				{'string': 'h/_/e/o/_/_', 'rgx': '((h))/((_))/((_))/((e)|(eo)|(o))/((_))/((_))$'}
				_____REMOVING________['h', '_', 'e', 'o', '_', '_']
				version split: ['h', '_', 'eo', '_', '_']
				{'string': 'h/_/eo/_/_', 'rgx': '((h))/((_))/((_))/((e)|(eo)|(o))/((_))/((_))$'}
				_____REMOVING________['h', '_', 'eo', '_', '_']
				version split: ['h', 'e', '_', 'o', '_', '_']
				{'string': 'h/e/_/o/_/_', 'rgx': '((h))/((_))/((_))/((e)|(eo)|(o))/((_))/((_))$'}
				_____REMOVING________['h', 'e', '_', 'o', '_', '_']
				version split: ['h', 'eo', '_', '_', '_']
				{'string': 'h/eo/_/_/_', 'rgx': '((h))/((_))/((_))/((e)|(eo)|(o))/((_))/((_))$'}
				_____REMOVING________['h', 'eo', '_', '_', '_']
				version split: ['h', '_', '_', 'e', '_', '_', 'o']
				{'string': 'h/_/_/e/_/_/o', 'rgx': '((h))/((_))/((_))/((e)|(eo)|(o))/((_))/((_))$'}
				_____REMOVING________['h', '_', '_', 'e', '_', '_', 'o']
				version split: ['h', '_', '_', 'eo', '_', '_']
				{'string': 'h/_/_/eo/_/_', 'rgx': '((h))/((_))/((_))/((e)|(eo)|(o))/((_))/((_))$'}
				ANALYSING: heofen
					resolving (4)
					> version: h/e/o/f/e/n
					TRYING: n
					> version: h/eo/f/e/n
					> version: h/_/e/o/f/e/n
					TRYING: e
					> version: h/_/eo/f/e/n
					TRYING: n
					RESULT:  ['n']
				version split: ['h', 'e', 'o', 'f', 'e', 'n']
				{'string': 'h/e/o/f/e/n', 'rgx': '((h))/((_))/((f))/((e)|(o))/((n))/((n))$'}
				_____REMOVING________['h', 'e', 'o', 'f', 'e', 'n']
				version split: ['h', 'eo', 'f', 'e', 'n']
				{'string': 'h/eo/f/e/n', 'rgx': '((h))/((_))/((f))/((e)|(o))/((n))/((n))$'}
				_____REMOVING________['h', 'eo', 'f', 'e', 'n']
				version split: ['h', '_', 'e', 'o', 'f', 'e', 'n']
				{'string': 'h/_/e/o/f/e/n', 'rgx': '((h))/((_))/((f))/((e)|(o))/((n))/((n))$'}
				_____REMOVING________['h', '_', 'e', 'o', 'f', 'e', 'n']
				version split: ['h', '_', 'eo', 'f', 'e', 'n']
				{'string': 'h/_/eo/f/e/n', 'rgx': '((h))/((_))/((f))/((e)|(o))/((n))/((n))$'}
				_____REMOVING________['h', '_', 'eo', 'f', 'e', 'n']
				ANALYSING: heofon
					resolving (4)
					> version: h/e/o/f/o/n
					TRYING: n
					> version: h/eo/f/o/n
					> version: h/_/e/o/f/o/n
					TRYING: o
					> version: h/_/eo/f/o/n
					TRYING: n
					RESULT:  ['n']
				version split: ['h', 'e', 'o', 'f', 'o', 'n']
				{'string': 'h/e/o/f/o/n', 'rgx': '((h))/((_))/((f))/((o))/((n))/((n))$'}
				_____REMOVING________['h', 'e', 'o', 'f', 'o', 'n']
				version split: ['h', 'eo', 'f', 'o', 'n']
				{'string': 'h/eo/f/o/n', 'rgx': '((h))/((_))/((f))/((o))/((n))/((n))$'}
				_____REMOVING________['h', 'eo', 'f', 'o', 'n']
				version split: ['h', '_', 'e', 'o', 'f', 'o', 'n']
				{'string': 'h/_/e/o/f/o/n', 'rgx': '((h))/((_))/((f))/((o))/((n))/((n))$'}
				_____REMOVING________['h', '_', 'e', 'o', 'f', 'o', 'n']
				version split: ['h', '_', 'eo', 'f', 'o', 'n']
				{'string': 'h/_/eo/f/o/n', 'rgx': '((h))/((_))/((f))/((o))/((n))/((n))$'}
				_____REMOVING________['h', '_', 'eo', 'f', 'o', 'n']
				ANALYSING: heoue
					resolving (44)
					> version: h/e/o/u/e
					> version: h/e/o/u/e
					> version: h/e/ou/e
					> version: h/eo/u/e
					> version: h/eo/u/e
					> version: h/e/o/ue
					> version: h/eo/u/e
					> version: h/eo/u/e
					> version: h/e/ou/e
					> version: h/eo/ue
					> version: h/eo/ue
					> version: h/_/e/o/u/e
					TRYING: e
					> version: h/_/e/o/u/e
					TRYING: e
					> version: h/_/e/ou/e
					> version: h/_/eo/u/e
					> version: h/_/eo/u/e
					> version: h/_/e/o/ue
					> version: h/_/eo/u/e
					> version: h/_/eo/u/e
					> version: h/_/e/ou/e
					> version: h/_/eo/ue
					> version: h/_/eo/ue
					> version: h/e/o/u/_/e
					TRYING: e
					> version: h/e/o/u/_/e
					TRYING: e
					> version: h/e/ou/e/_
					> version: h/eo/u/e/_
					> version: h/eo/u/e/_
					> version: h/e/o/ue/_
					> version: h/eo/u/e/_
					> version: h/eo/u/e/_
					> version: h/e/ou/e/_
					> version: h/eo/ue/_
					> version: h/eo/ue/_
					> version: h/_/e/o/_/u/e
					TRYING: u
					adding blocked set: C = C >> u, _, n
					> version: h/_/e/o/_/u/e
					TRYING: u
					adding blocked set: C = C >> u, _, n
					> version: h/_/e/ou/_/e
					TRYING: e
					> version: h/_/eo/u/_/e
					TRYING: e
					> version: h/_/eo/u/_/e
					TRYING: e
					> version: h/_/e/o/_/ue
					TRYING: ue
					> version: h/_/eo/u/_/e
					TRYING: e
					> version: h/_/eo/u/_/e
					TRYING: e
					> version: h/_/e/ou/_/e
					TRYING: e
					> version: h/_/eo/ue/_
					> version: h/_/eo/ue/_
					RESULT:  ['_']
				adding dashed alternative: ['h', 'e', 'o', 'u', 'e', '_']
				adding dashed alternative: ['h', 'e', 'o', 'u', 'e', '_']
				adding dashed alternative: ['h', 'e', 'ou', 'e', '_']
				adding dashed alternative: ['h', 'eo', 'u', 'e', '_']
				adding dashed alternative: ['h', 'eo', 'u', 'e', '_']
				adding dashed alternative: ['h', 'e', 'o', 'ue', '_']
				adding dashed alternative: ['h', 'eo', 'u', 'e', '_']
				adding dashed alternative: ['h', 'eo', 'u', 'e', '_']
				adding dashed alternative: ['h', 'e', 'ou', 'e', '_']
				adding dashed alternative: ['h', 'eo', 'ue', '_']
				adding dashed alternative: ['h', 'eo', 'ue', '_']
				adding dashed alternative: ['h', '_', 'e', 'o', 'u', '_', 'e']
				adding dashed alternative: ['h', '_', 'e', 'o', 'u', '_', 'e']
				adding dashed alternative: ['h', '_', 'e', 'ou', 'e', '_']
				adding dashed alternative: ['h', '_', 'eo', 'u', 'e', '_']
				adding dashed alternative: ['h', '_', 'eo', 'u', 'e', '_']
				adding dashed alternative: ['h', '_', 'e', 'o', 'ue', '_']
				adding dashed alternative: ['h', '_', 'eo', 'u', 'e', '_']
				adding dashed alternative: ['h', '_', 'eo', 'u', 'e', '_']
				adding dashed alternative: ['h', '_', 'e', 'ou', 'e', '_']
				adding dashed alternative: ['h', '_', 'eo', 'ue', '_']
				adding dashed alternative: ['h', '_', 'eo', 'ue', '_']
				adding dashed alternative: ['h', 'e', 'o', 'u', '_', '_', 'e']
				adding dashed alternative: ['h', 'e', 'o', 'u', '_', '_', 'e']
				adding dashed alternative: ['h', 'e', 'ou', 'e', '_', '_']
				adding dashed alternative: ['h', 'eo', 'u', 'e', '_', '_']
				adding dashed alternative: ['h', 'eo', 'u', 'e', '_', '_']
				adding dashed alternative: ['h', 'e', 'o', 'ue', '_', '_']
				adding dashed alternative: ['h', 'eo', 'u', 'e', '_', '_']
				adding dashed alternative: ['h', 'eo', 'u', 'e', '_', '_']
				adding dashed alternative: ['h', 'e', 'ou', 'e', '_', '_']
				adding dashed alternative: ['h', 'eo', 'ue', '_', '_']
				adding dashed alternative: ['h', 'eo', 'ue', '_', '_']
				adding dashed alternative: ['h', '_', 'e', 'o', '_', '_', 'u', 'e']
				adding dashed alternative: ['h', '_', 'e', 'o', '_', '_', 'u', 'e']
				adding dashed alternative: ['h', '_', 'e', 'ou', '_', '_', 'e']
				adding dashed alternative: ['h', '_', 'eo', 'u', '_', '_', 'e']
				adding dashed alternative: ['h', '_', 'eo', 'u', '_', '_', 'e']
				adding dashed alternative: ['h', '_', 'e', 'o', '_', '_', 'ue']
				adding dashed alternative: ['h', '_', 'eo', 'u', '_', '_', 'e']
				adding dashed alternative: ['h', '_', 'eo', 'u', '_', '_', 'e']
				adding dashed alternative: ['h', '_', 'e', 'ou', '_', '_', 'e']
				adding dashed alternative: ['h', '_', 'eo', 'ue', '_', '_']
				adding dashed alternative: ['h', '_', 'eo', 'ue', '_', '_']
				h/e/o/u/e(CVVCV)
h/e/o/u/e(CVVVV)
h/e/ou/e(CVVV)
h/eo/u/e(CVCV)
h/eo/u/e(CVVV)
h/e/o/ue(CVVV)
h/eo/u/e(CVCV)
h/eo/u/e(CVVV)
h/e/ou/e(CVVV)
h/eo/ue(CVV)
h/eo/ue(CVV)
h/_/e/o/u/e(CAVVAV)
h/_/e/o/u/e(CAVVAV)
h/_/e/ou/e(CAVVV)
h/_/eo/u/e(CAVAV)
h/_/eo/u/e(CAVAV)
h/_/e/o/ue(CAVVV)
h/_/eo/u/e(CAVAV)
h/_/eo/u/e(CAVAV)
h/_/e/ou/e(CAVVV)
h/_/eo/ue(CAVV)
h/_/eo/ue(CAVV)
h/e/o/u/_/e(CVVAAV)
h/e/o/u/_/e(CVVAAV)
h/e/ou/e/_(CVVVA)
h/eo/u/e/_(CVAVA)
h/eo/u/e/_(CVAVA)
h/e/o/ue/_(CVVVA)
h/eo/u/e/_(CVAVA)
h/eo/u/e/_(CVAVA)
h/e/ou/e/_(CVVVA)
h/eo/ue/_(CVVA)
h/eo/ue/_(CVVA)
h/_/e/o/_/u/e(CAVVAAV)
h/_/e/o/_/u/e(CAVVAAV)
h/_/e/ou/_/e(CAVVAV)
h/_/eo/u/_/e(CAVAAV)
h/_/eo/u/_/e(CAVAAV)
h/_/e/o/_/ue(CAVVAV)
h/_/eo/u/_/e(CAVAAV)
h/_/eo/u/_/e(CAVAAV)
h/_/e/ou/_/e(CAVVAV)
h/_/eo/ue/_(CAVVA)
h/_/eo/ue/_(CAVVA)
h/e/o/u/e/_(CVVAVA)
h/e/o/u/e/_(CVVAVA)
h/e/ou/e/_(CVVVA)
h/eo/u/e/_(CVAVA)
h/eo/u/e/_(CVAVA)
h/e/o/ue/_(CVVVA)
h/eo/u/e/_(CVAVA)
h/eo/u/e/_(CVAVA)
h/e/ou/e/_(CVVVA)
h/eo/ue/_(CVVA)
h/eo/ue/_(CVVA)
h/_/e/o/u/_/e(CAVVAAV)
h/_/e/o/u/_/e(CAVVAAV)
h/_/e/ou/e/_(CAVVVA)
h/_/eo/u/e/_(CAVAVA)
h/_/eo/u/e/_(CAVAVA)
h/_/e/o/ue/_(CAVVVA)
h/_/eo/u/e/_(CAVAVA)
h/_/eo/u/e/_(CAVAVA)
h/_/e/ou/e/_(CAVVVA)
h/_/eo/ue/_(CAVVA)
h/_/eo/ue/_(CAVVA)
h/e/o/u/_/_/e(CVVAAAV)
h/e/o/u/_/_/e(CVVAAAV)
h/e/ou/e/_/_(CVVVAA)
h/eo/u/e/_/_(CVAVAA)
h/eo/u/e/_/_(CVAVAA)
h/e/o/ue/_/_(CVVVAA)
h/eo/u/e/_/_(CVAVAA)
h/eo/u/e/_/_(CVAVAA)
h/e/ou/e/_/_(CVVVAA)
h/eo/ue/_/_(CVVAA)
h/eo/ue/_/_(CVVAA)
h/_/e/o/_/_/u/e(CAVVAAAV)
h/_/e/o/_/_/u/e(CAVVAAAV)
h/_/e/ou/_/_/e(CAVVAAV)
h/_/eo/u/_/_/e(CAVAAAV)
h/_/eo/u/_/_/e(CAVAAAV)
h/_/e/o/_/_/ue(CAVVAAV)
h/_/eo/u/_/_/e(CAVAAAV)
h/_/eo/u/_/_/e(CAVAAAV)
h/_/e/ou/_/_/e(CAVVAAV)
h/_/eo/ue/_/_(CAVVAA)
h/_/eo/ue/_/_(CAVVAA)
				version split: ['h', 'e', 'o', 'u', 'e']
				{'string': 'h/e/o/u/e', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((_))/((_))$'}
				_____REMOVING________['h', 'e', 'o', 'u', 'e']
				version split: ['h', 'e', 'o', 'u', 'e']
				{'string': 'h/e/o/u/e', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((_))/((_))$'}
				_____REMOVING________['h', 'e', 'o', 'u', 'e']
				version split: ['h', 'e', 'ou', 'e']
				{'string': 'h/e/ou/e', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((_))/((_))$'}
				_____REMOVING________['h', 'e', 'ou', 'e']
				version split: ['h', 'eo', 'u', 'e']
				{'string': 'h/eo/u/e', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((_))/((_))$'}
				_____REMOVING________['h', 'eo', 'u', 'e']
				version split: ['h', 'eo', 'u', 'e']
				{'string': 'h/eo/u/e', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((_))/((_))$'}
				_____REMOVING________['h', 'eo', 'u', 'e']
				version split: ['h', 'e', 'o', 'ue']
				{'string': 'h/e/o/ue', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((_))/((_))$'}
				_____REMOVING________['h', 'e', 'o', 'ue']
				version split: ['h', 'eo', 'u', 'e']
				{'string': 'h/eo/u/e', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((_))/((_))$'}
				_____REMOVING________['h', 'eo', 'u', 'e']
				version split: ['h', 'eo', 'u', 'e']
				{'string': 'h/eo/u/e', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((_))/((_))$'}
				_____REMOVING________['h', 'eo', 'u', 'e']
				version split: ['h', 'e', 'ou', 'e']
				{'string': 'h/e/ou/e', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((_))/((_))$'}
				_____REMOVING________['h', 'e', 'ou', 'e']
				version split: ['h', 'eo', 'ue']
				{'string': 'h/eo/ue', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((_))/((_))$'}
				_____REMOVING________['h', 'eo', 'ue']
				version split: ['h', 'eo', 'ue']
				{'string': 'h/eo/ue', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((_))/((_))$'}
				_____REMOVING________['h', 'eo', 'ue']
				version split: ['h', '_', 'e', 'o', 'u', 'e']
				{'string': 'h/_/e/o/u/e', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((_))/((_))$'}
				_____REMOVING________['h', '_', 'e', 'o', 'u', 'e']
				version split: ['h', '_', 'e', 'o', 'u', 'e']
				{'string': 'h/_/e/o/u/e', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((_))/((_))$'}
				_____REMOVING________['h', '_', 'e', 'o', 'u', 'e']
				version split: ['h', '_', 'e', 'ou', 'e']
				{'string': 'h/_/e/ou/e', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((_))/((_))$'}
				_____REMOVING________['h', '_', 'e', 'ou', 'e']
				version split: ['h', '_', 'eo', 'u', 'e']
				{'string': 'h/_/eo/u/e', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((_))/((_))$'}
				_____REMOVING________['h', '_', 'eo', 'u', 'e']
				version split: ['h', '_', 'eo', 'u', 'e']
				{'string': 'h/_/eo/u/e', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((_))/((_))$'}
				_____REMOVING________['h', '_', 'eo', 'u', 'e']
				version split: ['h', '_', 'e', 'o', 'ue']
				{'string': 'h/_/e/o/ue', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((_))/((_))$'}
				_____REMOVING________['h', '_', 'e', 'o', 'ue']
				version split: ['h', '_', 'eo', 'u', 'e']
				{'string': 'h/_/eo/u/e', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((_))/((_))$'}
				_____REMOVING________['h', '_', 'eo', 'u', 'e']
				version split: ['h', '_', 'eo', 'u', 'e']
				{'string': 'h/_/eo/u/e', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((_))/((_))$'}
				_____REMOVING________['h', '_', 'eo', 'u', 'e']
				version split: ['h', '_', 'e', 'ou', 'e']
				{'string': 'h/_/e/ou/e', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((_))/((_))$'}
				_____REMOVING________['h', '_', 'e', 'ou', 'e']
				version split: ['h', '_', 'eo', 'ue']
				{'string': 'h/_/eo/ue', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((_))/((_))$'}
				_____REMOVING________['h', '_', 'eo', 'ue']
				version split: ['h', '_', 'eo', 'ue']
				{'string': 'h/_/eo/ue', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((_))/((_))$'}
				_____REMOVING________['h', '_', 'eo', 'ue']
				version split: ['h', 'e', 'o', 'u', '_', 'e']
				{'string': 'h/e/o/u/_/e', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((_))/((_))$'}
				_____REMOVING________['h', 'e', 'o', 'u', '_', 'e']
				version split: ['h', 'e', 'o', 'u', '_', 'e']
				{'string': 'h/e/o/u/_/e', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((_))/((_))$'}
				_____REMOVING________['h', 'e', 'o', 'u', '_', 'e']
				version split: ['h', 'e', 'ou', 'e', '_']
				{'string': 'h/e/ou/e/_', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((_))/((_))$'}
				_____REMOVING________['h', 'e', 'ou', 'e', '_']
				version split: ['h', 'eo', 'u', 'e', '_']
				{'string': 'h/eo/u/e/_', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((_))/((_))$'}
				_____REMOVING________['h', 'eo', 'u', 'e', '_']
				version split: ['h', 'eo', 'u', 'e', '_']
				{'string': 'h/eo/u/e/_', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((_))/((_))$'}
				_____REMOVING________['h', 'eo', 'u', 'e', '_']
				version split: ['h', 'e', 'o', 'ue', '_']
				{'string': 'h/e/o/ue/_', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((_))/((_))$'}
				_____REMOVING________['h', 'e', 'o', 'ue', '_']
				version split: ['h', 'eo', 'u', 'e', '_']
				{'string': 'h/eo/u/e/_', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((_))/((_))$'}
				_____REMOVING________['h', 'eo', 'u', 'e', '_']
				version split: ['h', 'eo', 'u', 'e', '_']
				{'string': 'h/eo/u/e/_', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((_))/((_))$'}
				_____REMOVING________['h', 'eo', 'u', 'e', '_']
				version split: ['h', 'e', 'ou', 'e', '_']
				{'string': 'h/e/ou/e/_', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((_))/((_))$'}
				_____REMOVING________['h', 'e', 'ou', 'e', '_']
				version split: ['h', 'eo', 'ue', '_']
				{'string': 'h/eo/ue/_', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((_))/((_))$'}
				_____REMOVING________['h', 'eo', 'ue', '_']
				version split: ['h', 'eo', 'ue', '_']
				{'string': 'h/eo/ue/_', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((_))/((_))$'}
				_____REMOVING________['h', 'eo', 'ue', '_']
				version split: ['h', '_', 'e', 'o', '_', 'u', 'e']
				{'string': 'h/_/e/o/_/u/e', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((_))/((_))$'}
				_____REMOVING________['h', '_', 'e', 'o', '_', 'u', 'e']
				version split: ['h', '_', 'e', 'o', '_', 'u', 'e']
				{'string': 'h/_/e/o/_/u/e', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((_))/((_))$'}
				_____REMOVING________['h', '_', 'e', 'o', '_', 'u', 'e']
				version split: ['h', '_', 'e', 'ou', '_', 'e']
				{'string': 'h/_/e/ou/_/e', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((_))/((_))$'}
				_____REMOVING________['h', '_', 'e', 'ou', '_', 'e']
				version split: ['h', '_', 'eo', 'u', '_', 'e']
				{'string': 'h/_/eo/u/_/e', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((_))/((_))$'}
				_____REMOVING________['h', '_', 'eo', 'u', '_', 'e']
				version split: ['h', '_', 'eo', 'u', '_', 'e']
				{'string': 'h/_/eo/u/_/e', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((_))/((_))$'}
				_____REMOVING________['h', '_', 'eo', 'u', '_', 'e']
				version split: ['h', '_', 'e', 'o', '_', 'ue']
				{'string': 'h/_/e/o/_/ue', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((_))/((_))$'}
				_____REMOVING________['h', '_', 'e', 'o', '_', 'ue']
				version split: ['h', '_', 'eo', 'u', '_', 'e']
				{'string': 'h/_/eo/u/_/e', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((_))/((_))$'}
				_____REMOVING________['h', '_', 'eo', 'u', '_', 'e']
				version split: ['h', '_', 'eo', 'u', '_', 'e']
				{'string': 'h/_/eo/u/_/e', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((_))/((_))$'}
				_____REMOVING________['h', '_', 'eo', 'u', '_', 'e']
				version split: ['h', '_', 'e', 'ou', '_', 'e']
				{'string': 'h/_/e/ou/_/e', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((_))/((_))$'}
				_____REMOVING________['h', '_', 'e', 'ou', '_', 'e']
				version split: ['h', '_', 'eo', 'ue', '_']
				{'string': 'h/_/eo/ue/_', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((_))/((_))$'}
				_____REMOVING________['h', '_', 'eo', 'ue', '_']
				version split: ['h', '_', 'eo', 'ue', '_']
				{'string': 'h/_/eo/ue/_', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((_))/((_))$'}
				_____REMOVING________['h', '_', 'eo', 'ue', '_']
				version split: ['h', 'e', 'o', 'u', 'e', '_']
				{'string': 'h/e/o/u/e/_', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((_))/((_))$'}
				_____REMOVING________['h', 'e', 'o', 'u', 'e', '_']
				version split: ['h', 'e', 'o', 'u', 'e', '_']
				{'string': 'h/e/o/u/e/_', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((_))/((_))$'}
				_____REMOVING________['h', 'e', 'o', 'u', 'e', '_']
				version split: ['h', 'e', 'ou', 'e', '_']
				{'string': 'h/e/ou/e/_', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((_))/((_))$'}
				_____REMOVING________['h', 'e', 'ou', 'e', '_']
				version split: ['h', 'eo', 'u', 'e', '_']
				{'string': 'h/eo/u/e/_', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((_))/((_))$'}
				_____REMOVING________['h', 'eo', 'u', 'e', '_']
				version split: ['h', 'eo', 'u', 'e', '_']
				{'string': 'h/eo/u/e/_', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((_))/((_))$'}
				_____REMOVING________['h', 'eo', 'u', 'e', '_']
				version split: ['h', 'e', 'o', 'ue', '_']
				{'string': 'h/e/o/ue/_', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((_))/((_))$'}
				_____REMOVING________['h', 'e', 'o', 'ue', '_']
				version split: ['h', 'eo', 'u', 'e', '_']
				{'string': 'h/eo/u/e/_', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((_))/((_))$'}
				_____REMOVING________['h', 'eo', 'u', 'e', '_']
				version split: ['h', 'eo', 'u', 'e', '_']
				{'string': 'h/eo/u/e/_', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((_))/((_))$'}
				_____REMOVING________['h', 'eo', 'u', 'e', '_']
				version split: ['h', 'e', 'ou', 'e', '_']
				{'string': 'h/e/ou/e/_', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((_))/((_))$'}
				_____REMOVING________['h', 'e', 'ou', 'e', '_']
				version split: ['h', 'eo', 'ue', '_']
				{'string': 'h/eo/ue/_', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((_))/((_))$'}
				_____REMOVING________['h', 'eo', 'ue', '_']
				version split: ['h', 'eo', 'ue', '_']
				{'string': 'h/eo/ue/_', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((_))/((_))$'}
				_____REMOVING________['h', 'eo', 'ue', '_']
				version split: ['h', '_', 'e', 'o', 'u', '_', 'e']
				{'string': 'h/_/e/o/u/_/e', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((_))/((_))$'}
				_____REMOVING________['h', '_', 'e', 'o', 'u', '_', 'e']
				version split: ['h', '_', 'e', 'o', 'u', '_', 'e']
				{'string': 'h/_/e/o/u/_/e', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((_))/((_))$'}
				_____REMOVING________['h', '_', 'e', 'o', 'u', '_', 'e']
				version split: ['h', '_', 'e', 'ou', 'e', '_']
				{'string': 'h/_/e/ou/e/_', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((_))/((_))$'}
				_____REMOVING________['h', '_', 'e', 'ou', 'e', '_']
				version split: ['h', '_', 'eo', 'u', 'e', '_']
				{'string': 'h/_/eo/u/e/_', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((_))/((_))$'}
				_____REMOVING________['h', '_', 'eo', 'u', 'e', '_']
				version split: ['h', '_', 'eo', 'u', 'e', '_']
				{'string': 'h/_/eo/u/e/_', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((_))/((_))$'}
				_____REMOVING________['h', '_', 'eo', 'u', 'e', '_']
				version split: ['h', '_', 'e', 'o', 'ue', '_']
				{'string': 'h/_/e/o/ue/_', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((_))/((_))$'}
				_____REMOVING________['h', '_', 'e', 'o', 'ue', '_']
				version split: ['h', '_', 'eo', 'u', 'e', '_']
				{'string': 'h/_/eo/u/e/_', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((_))/((_))$'}
				_____REMOVING________['h', '_', 'eo', 'u', 'e', '_']
				version split: ['h', '_', 'eo', 'u', 'e', '_']
				{'string': 'h/_/eo/u/e/_', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((_))/((_))$'}
				_____REMOVING________['h', '_', 'eo', 'u', 'e', '_']
				version split: ['h', '_', 'e', 'ou', 'e', '_']
				{'string': 'h/_/e/ou/e/_', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((_))/((_))$'}
				_____REMOVING________['h', '_', 'e', 'ou', 'e', '_']
				version split: ['h', '_', 'eo', 'ue', '_']
				{'string': 'h/_/eo/ue/_', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((_))/((_))$'}
				_____REMOVING________['h', '_', 'eo', 'ue', '_']
				version split: ['h', '_', 'eo', 'ue', '_']
				{'string': 'h/_/eo/ue/_', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((_))/((_))$'}
				_____REMOVING________['h', '_', 'eo', 'ue', '_']
				version split: ['h', 'e', 'o', 'u', '_', '_', 'e']
				{'string': 'h/e/o/u/_/_/e', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((_))/((_))$'}
				_____REMOVING________['h', 'e', 'o', 'u', '_', '_', 'e']
				version split: ['h', 'e', 'o', 'u', '_', '_', 'e']
				{'string': 'h/e/o/u/_/_/e', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((_))/((_))$'}
				_____REMOVING________['h', 'e', 'o', 'u', '_', '_', 'e']
				version split: ['h', 'e', 'ou', 'e', '_', '_']
				{'string': 'h/e/ou/e/_/_', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((_))/((_))$'}
				_____REMOVING________['h', 'e', 'ou', 'e', '_', '_']
				version split: ['h', 'eo', 'u', 'e', '_', '_']
				{'string': 'h/eo/u/e/_/_', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((_))/((_))$'}
				_____REMOVING________['h', 'eo', 'u', 'e', '_', '_']
				version split: ['h', 'eo', 'u', 'e', '_', '_']
				{'string': 'h/eo/u/e/_/_', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((_))/((_))$'}
				_____REMOVING________['h', 'eo', 'u', 'e', '_', '_']
				version split: ['h', 'e', 'o', 'ue', '_', '_']
				{'string': 'h/e/o/ue/_/_', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((_))/((_))$'}
				_____REMOVING________['h', 'e', 'o', 'ue', '_', '_']
				version split: ['h', 'eo', 'u', 'e', '_', '_']
				{'string': 'h/eo/u/e/_/_', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((_))/((_))$'}
				_____REMOVING________['h', 'eo', 'u', 'e', '_', '_']
				version split: ['h', 'eo', 'u', 'e', '_', '_']
				{'string': 'h/eo/u/e/_/_', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((_))/((_))$'}
				_____REMOVING________['h', 'eo', 'u', 'e', '_', '_']
				version split: ['h', 'e', 'ou', 'e', '_', '_']
				{'string': 'h/e/ou/e/_/_', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((_))/((_))$'}
				_____REMOVING________['h', 'e', 'ou', 'e', '_', '_']
				version split: ['h', 'eo', 'ue', '_', '_']
				{'string': 'h/eo/ue/_/_', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((_))/((_))$'}
				_____REMOVING________['h', 'eo', 'ue', '_', '_']
				version split: ['h', 'eo', 'ue', '_', '_']
				{'string': 'h/eo/ue/_/_', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((_))/((_))$'}
				_____REMOVING________['h', 'eo', 'ue', '_', '_']
				version split: ['h', '_', 'e', 'o', '_', '_', 'u', 'e']
				{'string': 'h/_/e/o/_/_/u', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((_))/((_))$'}
				_____REMOVING________['h', '_', 'e', 'o', '_', '_', 'u', 'e']
				version split: ['h', '_', 'e', 'o', '_', '_', 'u', 'e']
				{'string': 'h/_/e/o/_/_/u', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((_))/((_))$'}
				_____REMOVING________['h', '_', 'e', 'o', '_', '_', 'u', 'e']
				version split: ['h', '_', 'e', 'ou', '_', '_', 'e']
				{'string': 'h/_/e/ou/_/_/e', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((_))/((_))$'}
				_____REMOVING________['h', '_', 'e', 'ou', '_', '_', 'e']
				version split: ['h', '_', 'eo', 'u', '_', '_', 'e']
				{'string': 'h/_/eo/u/_/_/e', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((_))/((_))$'}
				_____REMOVING________['h', '_', 'eo', 'u', '_', '_', 'e']
				version split: ['h', '_', 'eo', 'u', '_', '_', 'e']
				{'string': 'h/_/eo/u/_/_/e', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((_))/((_))$'}
				_____REMOVING________['h', '_', 'eo', 'u', '_', '_', 'e']
				version split: ['h', '_', 'e', 'o', '_', '_', 'ue']
				{'string': 'h/_/e/o/_/_/ue', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((_))/((_))$'}
				_____REMOVING________['h', '_', 'e', 'o', '_', '_', 'ue']
				version split: ['h', '_', 'eo', 'u', '_', '_', 'e']
				{'string': 'h/_/eo/u/_/_/e', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((_))/((_))$'}
				_____REMOVING________['h', '_', 'eo', 'u', '_', '_', 'e']
				version split: ['h', '_', 'eo', 'u', '_', '_', 'e']
				{'string': 'h/_/eo/u/_/_/e', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((_))/((_))$'}
				_____REMOVING________['h', '_', 'eo', 'u', '_', '_', 'e']
				version split: ['h', '_', 'e', 'ou', '_', '_', 'e']
				{'string': 'h/_/e/ou/_/_/e', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((_))/((_))$'}
				_____REMOVING________['h', '_', 'e', 'ou', '_', '_', 'e']
				version split: ['h', '_', 'eo', 'ue', '_', '_']
				{'string': 'h/_/eo/ue/_/_', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((_))/((_))$'}
				_____REMOVING________['h', '_', 'eo', 'ue', '_', '_']
				version split: ['h', '_', 'eo', 'ue', '_', '_']
				{'string': 'h/_/eo/ue/_/_', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((_))/((_))$'}
				_____REMOVING________['h', '_', 'eo', 'ue', '_', '_']
				ANALYSING: heouen
					resolving (22)
					> version: h/e/o/u/e/n
					TRYING: n
					> version: h/e/o/u/e/n
					TRYING: n
					> version: h/e/ou/e/n
					> version: h/eo/u/e/n
					> version: h/eo/u/e/n
					> version: h/e/o/ue/n
					> version: h/eo/u/e/n
					> version: h/eo/u/e/n
					> version: h/e/ou/e/n
					> version: h/eo/ue/n
					> version: h/eo/ue/n
					> version: h/_/e/o/u/e/n
					TRYING: e
					> version: h/_/e/o/u/e/n
					TRYING: e
					> version: h/_/e/ou/e/n
					TRYING: n
					> version: h/_/eo/u/e/n
					TRYING: n
					> version: h/_/eo/u/e/n
					TRYING: n
					> version: h/_/e/o/ue/n
					TRYING: n
					> version: h/_/eo/u/e/n
					TRYING: n
					> version: h/_/eo/u/e/n
					TRYING: n
					> version: h/_/e/ou/e/n
					TRYING: n
					> version: h/_/eo/ue/n
					> version: h/_/eo/ue/n
					RESULT:  ['n']
				version split: ['h', 'e', 'o', 'u', 'e', 'n']
				{'string': 'h/e/o/u/e/n', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((n))/((n))$'}
				_____REMOVING________['h', 'e', 'o', 'u', 'e', 'n']
				version split: ['h', 'e', 'o', 'u', 'e', 'n']
				{'string': 'h/e/o/u/e/n', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((n))/((n))$'}
				_____REMOVING________['h', 'e', 'o', 'u', 'e', 'n']
				version split: ['h', 'e', 'ou', 'e', 'n']
				{'string': 'h/e/ou/e/n', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((n))/((n))$'}
				_____REMOVING________['h', 'e', 'ou', 'e', 'n']
				version split: ['h', 'eo', 'u', 'e', 'n']
				{'string': 'h/eo/u/e/n', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((n))/((n))$'}
				_____REMOVING________['h', 'eo', 'u', 'e', 'n']
				version split: ['h', 'eo', 'u', 'e', 'n']
				{'string': 'h/eo/u/e/n', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((n))/((n))$'}
				_____REMOVING________['h', 'eo', 'u', 'e', 'n']
				version split: ['h', 'e', 'o', 'ue', 'n']
				{'string': 'h/e/o/ue/n', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((n))/((n))$'}
				_____REMOVING________['h', 'e', 'o', 'ue', 'n']
				version split: ['h', 'eo', 'u', 'e', 'n']
				{'string': 'h/eo/u/e/n', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((n))/((n))$'}
				_____REMOVING________['h', 'eo', 'u', 'e', 'n']
				version split: ['h', 'eo', 'u', 'e', 'n']
				{'string': 'h/eo/u/e/n', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((n))/((n))$'}
				_____REMOVING________['h', 'eo', 'u', 'e', 'n']
				version split: ['h', 'e', 'ou', 'e', 'n']
				{'string': 'h/e/ou/e/n', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((n))/((n))$'}
				_____REMOVING________['h', 'e', 'ou', 'e', 'n']
				version split: ['h', 'eo', 'ue', 'n']
				{'string': 'h/eo/ue/n', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((n))/((n))$'}
				_____REMOVING________['h', 'eo', 'ue', 'n']
				version split: ['h', 'eo', 'ue', 'n']
				{'string': 'h/eo/ue/n', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((n))/((n))$'}
				_____REMOVING________['h', 'eo', 'ue', 'n']
				version split: ['h', '_', 'e', 'o', 'u', 'e', 'n']
				{'string': 'h/_/e/o/u/e/n', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((n))/((n))$'}
				_____REMOVING________['h', '_', 'e', 'o', 'u', 'e', 'n']
				version split: ['h', '_', 'e', 'o', 'u', 'e', 'n']
				{'string': 'h/_/e/o/u/e/n', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((n))/((n))$'}
				_____REMOVING________['h', '_', 'e', 'o', 'u', 'e', 'n']
				version split: ['h', '_', 'e', 'ou', 'e', 'n']
				{'string': 'h/_/e/ou/e/n', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((n))/((n))$'}
				_____REMOVING________['h', '_', 'e', 'ou', 'e', 'n']
				version split: ['h', '_', 'eo', 'u', 'e', 'n']
				{'string': 'h/_/eo/u/e/n', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((n))/((n))$'}
				_____REMOVING________['h', '_', 'eo', 'u', 'e', 'n']
				version split: ['h', '_', 'eo', 'u', 'e', 'n']
				{'string': 'h/_/eo/u/e/n', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((n))/((n))$'}
				_____REMOVING________['h', '_', 'eo', 'u', 'e', 'n']
				version split: ['h', '_', 'e', 'o', 'ue', 'n']
				{'string': 'h/_/e/o/ue/n', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((n))/((n))$'}
				_____REMOVING________['h', '_', 'e', 'o', 'ue', 'n']
				version split: ['h', '_', 'eo', 'u', 'e', 'n']
				{'string': 'h/_/eo/u/e/n', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((n))/((n))$'}
				_____REMOVING________['h', '_', 'eo', 'u', 'e', 'n']
				version split: ['h', '_', 'eo', 'u', 'e', 'n']
				{'string': 'h/_/eo/u/e/n', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((n))/((n))$'}
				_____REMOVING________['h', '_', 'eo', 'u', 'e', 'n']
				version split: ['h', '_', 'e', 'ou', 'e', 'n']
				{'string': 'h/_/e/ou/e/n', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((n))/((n))$'}
				_____REMOVING________['h', '_', 'e', 'ou', 'e', 'n']
				version split: ['h', '_', 'eo', 'ue', 'n']
				{'string': 'h/_/eo/ue/n', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((n))/((n))$'}
				_____REMOVING________['h', '_', 'eo', 'ue', 'n']
				version split: ['h', '_', 'eo', 'ue', 'n']
				{'string': 'h/_/eo/ue/n', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((n))/((n))$'}
				_____REMOVING________['h', '_', 'eo', 'ue', 'n']
				ANALYSING: heouene
					resolving (22)
					> version: h/e/o/u/e/n/e
					TRYING: n
					> version: h/e/o/u/e/n/e
					TRYING: n
					> version: h/e/ou/e/n/e
					TRYING: e
					> version: h/eo/u/e/n/e
					TRYING: e
					> version: h/eo/u/e/n/e
					TRYING: e
					> version: h/e/o/ue/n/e
					TRYING: e
					> version: h/eo/u/e/n/e
					TRYING: e
					> version: h/eo/u/e/n/e
					TRYING: e
					> version: h/e/ou/e/n/e
					TRYING: e
					> version: h/eo/ue/n/e
					> version: h/eo/ue/n/e
					> version: h/_/e/o/u/e/n/e
					TRYING: e
					> version: h/_/e/o/u/e/n/e
					TRYING: e
					> version: h/_/e/ou/e/n/e
					TRYING: n
					> version: h/_/eo/u/e/n/e
					TRYING: n
					> version: h/_/eo/u/e/n/e
					TRYING: n
					> version: h/_/e/o/ue/n/e
					TRYING: n
					> version: h/_/eo/u/e/n/e
					TRYING: n
					> version: h/_/eo/u/e/n/e
					TRYING: n
					> version: h/_/e/ou/e/n/e
					TRYING: n
					> version: h/_/eo/ue/n/e
					TRYING: e
					> version: h/_/eo/ue/n/e
					TRYING: e
					RESULT:  ['n']
				version split: ['h', 'e', 'o', 'u', 'e', 'n', 'e']
				{'string': 'h/e/o/u/e/n/e', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((n))/((n))$'}
				_____REMOVING________['h', 'e', 'o', 'u', 'e', 'n', 'e']
				version split: ['h', 'e', 'o', 'u', 'e', 'n', 'e']
				{'string': 'h/e/o/u/e/n/e', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((n))/((n))$'}
				_____REMOVING________['h', 'e', 'o', 'u', 'e', 'n', 'e']
				version split: ['h', 'e', 'ou', 'e', 'n', 'e']
				{'string': 'h/e/ou/e/n/e', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((n))/((n))$'}
				_____REMOVING________['h', 'e', 'ou', 'e', 'n', 'e']
				version split: ['h', 'eo', 'u', 'e', 'n', 'e']
				{'string': 'h/eo/u/e/n/e', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((n))/((n))$'}
				_____REMOVING________['h', 'eo', 'u', 'e', 'n', 'e']
				version split: ['h', 'eo', 'u', 'e', 'n', 'e']
				{'string': 'h/eo/u/e/n/e', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((n))/((n))$'}
				_____REMOVING________['h', 'eo', 'u', 'e', 'n', 'e']
				version split: ['h', 'e', 'o', 'ue', 'n', 'e']
				{'string': 'h/e/o/ue/n/e', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((n))/((n))$'}
				_____REMOVING________['h', 'e', 'o', 'ue', 'n', 'e']
				version split: ['h', 'eo', 'u', 'e', 'n', 'e']
				{'string': 'h/eo/u/e/n/e', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((n))/((n))$'}
				_____REMOVING________['h', 'eo', 'u', 'e', 'n', 'e']
				version split: ['h', 'eo', 'u', 'e', 'n', 'e']
				{'string': 'h/eo/u/e/n/e', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((n))/((n))$'}
				_____REMOVING________['h', 'eo', 'u', 'e', 'n', 'e']
				version split: ['h', 'e', 'ou', 'e', 'n', 'e']
				{'string': 'h/e/ou/e/n/e', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((n))/((n))$'}
				_____REMOVING________['h', 'e', 'ou', 'e', 'n', 'e']
				version split: ['h', 'eo', 'ue', 'n', 'e']
				{'string': 'h/eo/ue/n/e', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((n))/((n))$'}
				_____REMOVING________['h', 'eo', 'ue', 'n', 'e']
				version split: ['h', 'eo', 'ue', 'n', 'e']
				{'string': 'h/eo/ue/n/e', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((n))/((n))$'}
				_____REMOVING________['h', 'eo', 'ue', 'n', 'e']
				version split: ['h', '_', 'e', 'o', 'u', 'e', 'n', 'e']
				{'string': 'h/_/e/o/u/e/n', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((n))/((n))$'}
				_____REMOVING________['h', '_', 'e', 'o', 'u', 'e', 'n', 'e']
				version split: ['h', '_', 'e', 'o', 'u', 'e', 'n', 'e']
				{'string': 'h/_/e/o/u/e/n', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((n))/((n))$'}
				_____REMOVING________['h', '_', 'e', 'o', 'u', 'e', 'n', 'e']
				version split: ['h', '_', 'e', 'ou', 'e', 'n', 'e']
				{'string': 'h/_/e/ou/e/n/e', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((n))/((n))$'}
				_____REMOVING________['h', '_', 'e', 'ou', 'e', 'n', 'e']
				version split: ['h', '_', 'eo', 'u', 'e', 'n', 'e']
				{'string': 'h/_/eo/u/e/n/e', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((n))/((n))$'}
				_____REMOVING________['h', '_', 'eo', 'u', 'e', 'n', 'e']
				version split: ['h', '_', 'eo', 'u', 'e', 'n', 'e']
				{'string': 'h/_/eo/u/e/n/e', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((n))/((n))$'}
				_____REMOVING________['h', '_', 'eo', 'u', 'e', 'n', 'e']
				version split: ['h', '_', 'e', 'o', 'ue', 'n', 'e']
				{'string': 'h/_/e/o/ue/n/e', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((n))/((n))$'}
				_____REMOVING________['h', '_', 'e', 'o', 'ue', 'n', 'e']
				version split: ['h', '_', 'eo', 'u', 'e', 'n', 'e']
				{'string': 'h/_/eo/u/e/n/e', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((n))/((n))$'}
				_____REMOVING________['h', '_', 'eo', 'u', 'e', 'n', 'e']
				version split: ['h', '_', 'eo', 'u', 'e', 'n', 'e']
				{'string': 'h/_/eo/u/e/n/e', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((n))/((n))$'}
				_____REMOVING________['h', '_', 'eo', 'u', 'e', 'n', 'e']
				version split: ['h', '_', 'e', 'ou', 'e', 'n', 'e']
				{'string': 'h/_/e/ou/e/n/e', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((n))/((n))$'}
				_____REMOVING________['h', '_', 'e', 'ou', 'e', 'n', 'e']
				version split: ['h', '_', 'eo', 'ue', 'n', 'e']
				{'string': 'h/_/eo/ue/n/e', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((n))/((n))$'}
				_____REMOVING________['h', '_', 'eo', 'ue', 'n', 'e']
				version split: ['h', '_', 'eo', 'ue', 'n', 'e']
				{'string': 'h/_/eo/ue/n/e', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue)|(o))/((n))/((n))$'}
				_____REMOVING________['h', '_', 'eo', 'ue', 'n', 'e']
				ANALYSING: heue
					resolving (20)
					> version: h/e/u/e
					> version: h/e/u/e
					> version: h/eu/e
					> version: h/e/ue
					> version: h/eu/e
					> version: h/_/e/u/e
					> version: h/_/e/u/e
					> version: h/_/eu/e
					> version: h/_/e/ue
					> version: h/_/eu/e
					> version: h/e/u/e/_
					> version: h/e/u/e/_
					> version: h/eu/e/_
					> version: h/e/ue/_
					> version: h/eu/e/_
					> version: h/_/e/u/_/e
					TRYING: e
					> version: h/_/e/u/_/e
					TRYING: e
					> version: h/_/eu/e/_
					> version: h/_/e/ue/_
					> version: h/_/eu/e/_
					RESULT:  ['_']
				adding dashed alternative: ['h', 'e', 'u', 'e', '_']
				adding dashed alternative: ['h', 'e', 'u', 'e', '_']
				adding dashed alternative: ['h', 'eu', 'e', '_']
				adding dashed alternative: ['h', 'e', 'ue', '_']
				adding dashed alternative: ['h', 'eu', 'e', '_']
				adding dashed alternative: ['h', '_', 'e', 'u', 'e', '_']
				adding dashed alternative: ['h', '_', 'e', 'u', 'e', '_']
				adding dashed alternative: ['h', '_', 'eu', 'e', '_']
				adding dashed alternative: ['h', '_', 'e', 'ue', '_']
				adding dashed alternative: ['h', '_', 'eu', 'e', '_']
				adding dashed alternative: ['h', 'e', 'u', 'e', '_', '_']
				adding dashed alternative: ['h', 'e', 'u', 'e', '_', '_']
				adding dashed alternative: ['h', 'eu', 'e', '_', '_']
				adding dashed alternative: ['h', 'e', 'ue', '_', '_']
				adding dashed alternative: ['h', 'eu', 'e', '_', '_']
				adding dashed alternative: ['h', '_', 'e', 'u', '_', '_', 'e']
				adding dashed alternative: ['h', '_', 'e', 'u', '_', '_', 'e']
				adding dashed alternative: ['h', '_', 'eu', 'e', '_', '_']
				adding dashed alternative: ['h', '_', 'e', 'ue', '_', '_']
				adding dashed alternative: ['h', '_', 'eu', 'e', '_', '_']
				h/e/u/e(CVCV)
h/e/u/e(CVVV)
h/eu/e(CVV)
h/e/ue(CVV)
h/eu/e(CVV)
h/_/e/u/e(CAVAV)
h/_/e/u/e(CAVAV)
h/_/eu/e(CAVV)
h/_/e/ue(CAVV)
h/_/eu/e(CAVV)
h/e/u/e/_(CVAVA)
h/e/u/e/_(CVAVA)
h/eu/e/_(CVVA)
h/e/ue/_(CVVA)
h/eu/e/_(CVVA)
h/_/e/u/_/e(CAVAAV)
h/_/e/u/_/e(CAVAAV)
h/_/eu/e/_(CAVVA)
h/_/e/ue/_(CAVVA)
h/_/eu/e/_(CAVVA)
h/e/u/e/_(CVAVA)
h/e/u/e/_(CVAVA)
h/eu/e/_(CVVA)
h/e/ue/_(CVVA)
h/eu/e/_(CVVA)
h/_/e/u/e/_(CAVAVA)
h/_/e/u/e/_(CAVAVA)
h/_/eu/e/_(CAVVA)
h/_/e/ue/_(CAVVA)
h/_/eu/e/_(CAVVA)
h/e/u/e/_/_(CVAVAA)
h/e/u/e/_/_(CVAVAA)
h/eu/e/_/_(CVVAA)
h/e/ue/_/_(CVVAA)
h/eu/e/_/_(CVVAA)
h/_/e/u/_/_/e(CAVAAAV)
h/_/e/u/_/_/e(CAVAAAV)
h/_/eu/e/_/_(CAVVAA)
h/_/e/ue/_/_(CAVVAA)
h/_/eu/e/_/_(CAVVAA)
				version split: ['h', 'e', 'u', 'e']
				{'string': 'h/e/u/e', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue))/((_))/((_))$'}
				_____REMOVING________['h', 'e', 'u', 'e']
				version split: ['h', 'e', 'u', 'e']
				{'string': 'h/e/u/e', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue))/((_))/((_))$'}
				_____REMOVING________['h', 'e', 'u', 'e']
				version split: ['h', 'eu', 'e']
				{'string': 'h/eu/e', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue))/((_))/((_))$'}
				_____REMOVING________['h', 'eu', 'e']
				version split: ['h', 'e', 'ue']
				{'string': 'h/e/ue', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue))/((_))/((_))$'}
				_____REMOVING________['h', 'e', 'ue']
				version split: ['h', 'eu', 'e']
				{'string': 'h/eu/e', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue))/((_))/((_))$'}
				_____REMOVING________['h', 'eu', 'e']
				version split: ['h', '_', 'e', 'u', 'e']
				{'string': 'h/_/e/u/e', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue))/((_))/((_))$'}
				_____REMOVING________['h', '_', 'e', 'u', 'e']
				version split: ['h', '_', 'e', 'u', 'e']
				{'string': 'h/_/e/u/e', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue))/((_))/((_))$'}
				_____REMOVING________['h', '_', 'e', 'u', 'e']
				version split: ['h', '_', 'eu', 'e']
				{'string': 'h/_/eu/e', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue))/((_))/((_))$'}
				_____REMOVING________['h', '_', 'eu', 'e']
				version split: ['h', '_', 'e', 'ue']
				{'string': 'h/_/e/ue', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue))/((_))/((_))$'}
				_____REMOVING________['h', '_', 'e', 'ue']
				version split: ['h', '_', 'eu', 'e']
				{'string': 'h/_/eu/e', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue))/((_))/((_))$'}
				_____REMOVING________['h', '_', 'eu', 'e']
				version split: ['h', 'e', 'u', 'e', '_']
				{'string': 'h/e/u/e/_', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue))/((_))/((_))$'}
				_____REMOVING________['h', 'e', 'u', 'e', '_']
				version split: ['h', 'e', 'u', 'e', '_']
				{'string': 'h/e/u/e/_', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue))/((_))/((_))$'}
				_____REMOVING________['h', 'e', 'u', 'e', '_']
				version split: ['h', 'eu', 'e', '_']
				{'string': 'h/eu/e/_', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue))/((_))/((_))$'}
				_____REMOVING________['h', 'eu', 'e', '_']
				version split: ['h', 'e', 'ue', '_']
				{'string': 'h/e/ue/_', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue))/((_))/((_))$'}
				_____REMOVING________['h', 'e', 'ue', '_']
				version split: ['h', 'eu', 'e', '_']
				{'string': 'h/eu/e/_', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue))/((_))/((_))$'}
				_____REMOVING________['h', 'eu', 'e', '_']
				version split: ['h', '_', 'e', 'u', '_', 'e']
				{'string': 'h/_/e/u/_/e', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue))/((_))/((_))$'}
				_____REMOVING________['h', '_', 'e', 'u', '_', 'e']
				version split: ['h', '_', 'e', 'u', '_', 'e']
				{'string': 'h/_/e/u/_/e', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue))/((_))/((_))$'}
				_____REMOVING________['h', '_', 'e', 'u', '_', 'e']
				version split: ['h', '_', 'eu', 'e', '_']
				{'string': 'h/_/eu/e/_', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue))/((_))/((_))$'}
				_____REMOVING________['h', '_', 'eu', 'e', '_']
				version split: ['h', '_', 'e', 'ue', '_']
				{'string': 'h/_/e/ue/_', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue))/((_))/((_))$'}
				_____REMOVING________['h', '_', 'e', 'ue', '_']
				version split: ['h', '_', 'eu', 'e', '_']
				{'string': 'h/_/eu/e/_', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue))/((_))/((_))$'}
				_____REMOVING________['h', '_', 'eu', 'e', '_']
				version split: ['h', 'e', 'u', 'e', '_']
				{'string': 'h/e/u/e/_', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue))/((_))/((_))$'}
				_____REMOVING________['h', 'e', 'u', 'e', '_']
				version split: ['h', 'e', 'u', 'e', '_']
				{'string': 'h/e/u/e/_', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue))/((_))/((_))$'}
				_____REMOVING________['h', 'e', 'u', 'e', '_']
				version split: ['h', 'eu', 'e', '_']
				{'string': 'h/eu/e/_', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue))/((_))/((_))$'}
				_____REMOVING________['h', 'eu', 'e', '_']
				version split: ['h', 'e', 'ue', '_']
				{'string': 'h/e/ue/_', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue))/((_))/((_))$'}
				_____REMOVING________['h', 'e', 'ue', '_']
				version split: ['h', 'eu', 'e', '_']
				{'string': 'h/eu/e/_', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue))/((_))/((_))$'}
				_____REMOVING________['h', 'eu', 'e', '_']
				version split: ['h', '_', 'e', 'u', 'e', '_']
				{'string': 'h/_/e/u/e/_', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue))/((_))/((_))$'}
				_____REMOVING________['h', '_', 'e', 'u', 'e', '_']
				version split: ['h', '_', 'e', 'u', 'e', '_']
				{'string': 'h/_/e/u/e/_', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue))/((_))/((_))$'}
				_____REMOVING________['h', '_', 'e', 'u', 'e', '_']
				version split: ['h', '_', 'eu', 'e', '_']
				{'string': 'h/_/eu/e/_', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue))/((_))/((_))$'}
				_____REMOVING________['h', '_', 'eu', 'e', '_']
				version split: ['h', '_', 'e', 'ue', '_']
				{'string': 'h/_/e/ue/_', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue))/((_))/((_))$'}
				_____REMOVING________['h', '_', 'e', 'ue', '_']
				version split: ['h', '_', 'eu', 'e', '_']
				{'string': 'h/_/eu/e/_', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue))/((_))/((_))$'}
				_____REMOVING________['h', '_', 'eu', 'e', '_']
				version split: ['h', 'e', 'u', 'e', '_', '_']
				{'string': 'h/e/u/e/_/_', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue))/((_))/((_))$'}
				_____REMOVING________['h', 'e', 'u', 'e', '_', '_']
				version split: ['h', 'e', 'u', 'e', '_', '_']
				{'string': 'h/e/u/e/_/_', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue))/((_))/((_))$'}
				_____REMOVING________['h', 'e', 'u', 'e', '_', '_']
				version split: ['h', 'eu', 'e', '_', '_']
				{'string': 'h/eu/e/_/_', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue))/((_))/((_))$'}
				_____REMOVING________['h', 'eu', 'e', '_', '_']
				version split: ['h', 'e', 'ue', '_', '_']
				{'string': 'h/e/ue/_/_', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue))/((_))/((_))$'}
				_____REMOVING________['h', 'e', 'ue', '_', '_']
				version split: ['h', 'eu', 'e', '_', '_']
				{'string': 'h/eu/e/_/_', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue))/((_))/((_))$'}
				_____REMOVING________['h', 'eu', 'e', '_', '_']
				version split: ['h', '_', 'e', 'u', '_', '_', 'e']
				{'string': 'h/_/e/u/_/_/e', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue))/((_))/((_))$'}
				_____REMOVING________['h', '_', 'e', 'u', '_', '_', 'e']
				version split: ['h', '_', 'e', 'u', '_', '_', 'e']
				{'string': 'h/_/e/u/_/_/e', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue))/((_))/((_))$'}
				_____REMOVING________['h', '_', 'e', 'u', '_', '_', 'e']
				version split: ['h', '_', 'eu', 'e', '_', '_']
				{'string': 'h/_/eu/e/_/_', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue))/((_))/((_))$'}
				_____REMOVING________['h', '_', 'eu', 'e', '_', '_']
				version split: ['h', '_', 'e', 'ue', '_', '_']
				{'string': 'h/_/e/ue/_/_', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue))/((_))/((_))$'}
				_____REMOVING________['h', '_', 'e', 'ue', '_', '_']
				version split: ['h', '_', 'eu', 'e', '_', '_']
				{'string': 'h/_/eu/e/_/_', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue))/((_))/((_))$'}
				_____REMOVING________['h', '_', 'eu', 'e', '_', '_']
				ANALYSING: heuen
					resolving (10)
					> version: h/e/u/e/n
					> version: h/e/u/e/n
					> version: h/eu/e/n
					> version: h/e/ue/n
					> version: h/eu/e/n
					> version: h/_/e/u/e/n
					TRYING: n
					> version: h/_/e/u/e/n
					TRYING: n
					> version: h/_/eu/e/n
					> version: h/_/e/ue/n
					> version: h/_/eu/e/n
					RESULT:  ['n']
				version split: ['h', 'e', 'u', 'e', 'n']
				{'string': 'h/e/u/e/n', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue))/((n))/((n))$'}
				_____REMOVING________['h', 'e', 'u', 'e', 'n']
				version split: ['h', 'e', 'u', 'e', 'n']
				{'string': 'h/e/u/e/n', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue))/((n))/((n))$'}
				_____REMOVING________['h', 'e', 'u', 'e', 'n']
				version split: ['h', 'eu', 'e', 'n']
				{'string': 'h/eu/e/n', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue))/((n))/((n))$'}
				_____REMOVING________['h', 'eu', 'e', 'n']
				version split: ['h', 'e', 'ue', 'n']
				{'string': 'h/e/ue/n', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue))/((n))/((n))$'}
				_____REMOVING________['h', 'e', 'ue', 'n']
				version split: ['h', 'eu', 'e', 'n']
				{'string': 'h/eu/e/n', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue))/((n))/((n))$'}
				_____REMOVING________['h', 'eu', 'e', 'n']
				version split: ['h', '_', 'e', 'u', 'e', 'n']
				{'string': 'h/_/e/u/e/n', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue))/((n))/((n))$'}
				_____REMOVING________['h', '_', 'e', 'u', 'e', 'n']
				version split: ['h', '_', 'e', 'u', 'e', 'n']
				{'string': 'h/_/e/u/e/n', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue))/((n))/((n))$'}
				_____REMOVING________['h', '_', 'e', 'u', 'e', 'n']
				version split: ['h', '_', 'eu', 'e', 'n']
				{'string': 'h/_/eu/e/n', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue))/((n))/((n))$'}
				_____REMOVING________['h', '_', 'eu', 'e', 'n']
				version split: ['h', '_', 'e', 'ue', 'n']
				{'string': 'h/_/e/ue/n', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue))/((n))/((n))$'}
				_____REMOVING________['h', '_', 'e', 'ue', 'n']
				version split: ['h', '_', 'eu', 'e', 'n']
				{'string': 'h/_/eu/e/n', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue))/((n))/((n))$'}
				_____REMOVING________['h', '_', 'eu', 'e', 'n']
				ANALYSING: heuene
					resolving (10)
					> version: h/e/u/e/n/e
					TRYING: e
					> version: h/e/u/e/n/e
					TRYING: e
					> version: h/eu/e/n/e
					> version: h/e/ue/n/e
					> version: h/eu/e/n/e
					> version: h/_/e/u/e/n/e
					TRYING: n
					> version: h/_/e/u/e/n/e
					TRYING: n
					> version: h/_/eu/e/n/e
					TRYING: e
					> version: h/_/e/ue/n/e
					TRYING: e
					> version: h/_/eu/e/n/e
					TRYING: e
					RESULT:  ['n']
				version split: ['h', 'e', 'u', 'e', 'n', 'e']
				{'string': 'h/e/u/e/n/e', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue))/((n))/((n))$'}
				_____REMOVING________['h', 'e', 'u', 'e', 'n', 'e']
				version split: ['h', 'e', 'u', 'e', 'n', 'e']
				{'string': 'h/e/u/e/n/e', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue))/((n))/((n))$'}
				_____REMOVING________['h', 'e', 'u', 'e', 'n', 'e']
				version split: ['h', 'eu', 'e', 'n', 'e']
				{'string': 'h/eu/e/n/e', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue))/((n))/((n))$'}
				_____REMOVING________['h', 'eu', 'e', 'n', 'e']
				version split: ['h', 'e', 'ue', 'n', 'e']
				{'string': 'h/e/ue/n/e', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue))/((n))/((n))$'}
				_____REMOVING________['h', 'e', 'ue', 'n', 'e']
				version split: ['h', 'eu', 'e', 'n', 'e']
				{'string': 'h/eu/e/n/e', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue))/((n))/((n))$'}
				_____REMOVING________['h', 'eu', 'e', 'n', 'e']
				version split: ['h', '_', 'e', 'u', 'e', 'n', 'e']
				{'string': 'h/_/e/u/e/n/e', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue))/((n))/((n))$'}
				_____REMOVING________['h', '_', 'e', 'u', 'e', 'n', 'e']
				version split: ['h', '_', 'e', 'u', 'e', 'n', 'e']
				{'string': 'h/_/e/u/e/n/e', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue))/((n))/((n))$'}
				_____REMOVING________['h', '_', 'e', 'u', 'e', 'n', 'e']
				version split: ['h', '_', 'eu', 'e', 'n', 'e']
				{'string': 'h/_/eu/e/n/e', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue))/((n))/((n))$'}
				_____REMOVING________['h', '_', 'eu', 'e', 'n', 'e']
				version split: ['h', '_', 'e', 'ue', 'n', 'e']
				{'string': 'h/_/e/ue/n/e', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue))/((n))/((n))$'}
				_____REMOVING________['h', '_', 'e', 'ue', 'n', 'e']
				version split: ['h', '_', 'eu', 'e', 'n', 'e']
				{'string': 'h/_/eu/e/n/e', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue))/((n))/((n))$'}
				_____REMOVING________['h', '_', 'eu', 'e', 'n', 'e']
				ANALYSING: houen
					resolving (10)
					> version: h/o/u/e/n
					> version: h/o/u/e/n
					> version: h/ou/e/n
					> version: h/o/ue/n
					> version: h/ou/e/n
					> version: h/_/o/u/e/n
					TRYING: n
					> version: h/_/o/u/e/n
					TRYING: n
					> version: h/_/ou/e/n
					> version: h/_/o/ue/n
					> version: h/_/ou/e/n
					RESULT:  ['n']
				version split: ['h', 'o', 'u', 'e', 'n']
				{'string': 'h/o/u/e/n', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue))/((n))/((n))$'}
				_____REMOVING________['h', 'o', 'u', 'e', 'n']
				version split: ['h', 'o', 'u', 'e', 'n']
				{'string': 'h/o/u/e/n', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue))/((n))/((n))$'}
				_____REMOVING________['h', 'o', 'u', 'e', 'n']
				version split: ['h', 'ou', 'e', 'n']
				{'string': 'h/ou/e/n', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue))/((n))/((n))$'}
				_____REMOVING________['h', 'ou', 'e', 'n']
				version split: ['h', 'o', 'ue', 'n']
				{'string': 'h/o/ue/n', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue))/((n))/((n))$'}
				_____REMOVING________['h', 'o', 'ue', 'n']
				version split: ['h', 'ou', 'e', 'n']
				{'string': 'h/ou/e/n', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue))/((n))/((n))$'}
				_____REMOVING________['h', 'ou', 'e', 'n']
				version split: ['h', '_', 'o', 'u', 'e', 'n']
				{'string': 'h/_/o/u/e/n', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue))/((n))/((n))$'}
				_____REMOVING________['h', '_', 'o', 'u', 'e', 'n']
				version split: ['h', '_', 'o', 'u', 'e', 'n']
				{'string': 'h/_/o/u/e/n', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue))/((n))/((n))$'}
				_____REMOVING________['h', '_', 'o', 'u', 'e', 'n']
				version split: ['h', '_', 'ou', 'e', 'n']
				{'string': 'h/_/ou/e/n', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue))/((n))/((n))$'}
				_____REMOVING________['h', '_', 'ou', 'e', 'n']
				version split: ['h', '_', 'o', 'ue', 'n']
				{'string': 'h/_/o/ue/n', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue))/((n))/((n))$'}
				_____REMOVING________['h', '_', 'o', 'ue', 'n']
				version split: ['h', '_', 'ou', 'e', 'n']
				{'string': 'h/_/ou/e/n', 'rgx': '((h))/((_))/((u))/((u)|(e)|(ue))/((n))/((n))$'}
				_____REMOVING________['h', '_', 'ou', 'e', 'n']
				ANALYSING: lich
					resolving (128)
					> version: l/i/c/h
					> version: l/i/c/h
					> version: l/i/ch
					> version: l/i/ch
					> version: _/l/i/c/h
					> version: _/l/i/c/h
					> version: _/l/i/ch
					> version: _/l/i/ch
					> version: l/_/i/c/h
					> version: l/_/i/c/h
					> version: l/_/i/ch
					> version: l/_/i/ch
					> version: _/_/l/i/c/h
					TRYING: h
					adding blocked set: C = C >> h, _, n
					> version: _/_/l/i/c/h
					TRYING: h
					adding blocked set: C = C >> h, _, n
					> version: _/_/l/i/ch
					> version: _/_/l/i/ch
					> version: l/i/_/c/h
					> version: l/i/_/c/h
					> version: l/i/_/ch
					> version: l/i/_/ch
					> version: _/l/_/i/c/h
					TRYING: h
					adding blocked set: C = C >> h, _, n
					> version: _/l/_/i/c/h
					TRYING: h
					adding blocked set: C = C >> h, _, n
					> version: _/l/_/i/ch
					> version: _/l/_/i/ch
					> version: l/_/_/i/c/h
					TRYING: h
					adding blocked set: C = C >> h, _, n
					> version: l/_/_/i/c/h
					TRYING: h
					adding blocked set: C = C >> h, _, n
					> version: l/_/_/i/ch
					> version: l/_/_/i/ch
					> version: _/_/_/l/i/c/h
					TRYING: c
					adding blocked set: C = C >> c, _, n
					> version: _/_/_/l/i/c/h
					TRYING: c
					adding blocked set: C = C >> c, _, n
					> version: _/_/_/l/i/ch
					TRYING: ch
					adding blocked set: C = C >> ch, _, n
					> version: _/_/_/l/i/ch
					TRYING: ch
					adding blocked set: C = C >> ch, _, n
					> version: l/i/c/_/h
					> version: l/i/c/_/h
					> version: l/i/ch/_
					> version: l/i/ch/_
					> version: _/l/i/_/c/h
					TRYING: h
					adding blocked set: C = C >> h, _, n
					> version: _/l/i/_/c/h
					TRYING: h
					adding blocked set: C = C >> h, _, n
					> version: _/l/i/_/ch
					> version: _/l/i/_/ch
					> version: l/_/i/_/c/h
					TRYING: h
					adding blocked set: C = C >> h, _, n
					> version: l/_/i/_/c/h
					TRYING: h
					adding blocked set: C = C >> h, _, n
					> version: l/_/i/_/ch
					> version: l/_/i/_/ch
					> version: _/_/l/_/i/c/h
					TRYING: c
					adding blocked set: C = C >> c, _, n
					> version: _/_/l/_/i/c/h
					TRYING: c
					adding blocked set: C = C >> c, _, n
					> version: _/_/l/_/i/ch
					TRYING: ch
					adding blocked set: C = C >> ch, _, n
					> version: _/_/l/_/i/ch
					TRYING: ch
					adding blocked set: C = C >> ch, _, n
					> version: l/i/_/_/c/h
					TRYING: h
					adding blocked set: C = C >> h, _, n
					> version: l/i/_/_/c/h
					TRYING: h
					adding blocked set: C = C >> h, _, n
					> version: l/i/_/_/ch
					> version: l/i/_/_/ch
					> version: _/l/_/_/i/c/h
					TRYING: c
					adding blocked set: C = C >> c, _, n
					> version: _/l/_/_/i/c/h
					TRYING: c
					adding blocked set: C = C >> c, _, n
					> version: _/l/_/_/i/ch
					TRYING: ch
					adding blocked set: C = C >> ch, _, n
					> version: _/l/_/_/i/ch
					TRYING: ch
					adding blocked set: C = C >> ch, _, n
					> version: l/_/_/_/i/c/h
					TRYING: c
					adding blocked set: C = C >> c, _, n
					> version: l/_/_/_/i/c/h
					TRYING: c
					adding blocked set: C = C >> c, _, n
					> version: l/_/_/_/i/ch
					TRYING: ch
					adding blocked set: C = C >> ch, _, n
					> version: l/_/_/_/i/ch
					TRYING: ch
					adding blocked set: C = C >> ch, _, n
					> version: _/_/_/_/l/i/c/h
					TRYING: i
					adding blocked set: C = C >> i, _, n
					> version: _/_/_/_/l/i/c/h
					TRYING: i
					adding blocked set: C = C >> i, _, n
					> version: _/_/_/_/l/i/ch
					TRYING: i
					adding blocked set: C = C >> i, _, n
					> version: _/_/_/_/l/i/ch
					TRYING: i
					adding blocked set: C = C >> i, _, n
					> version: l/i/c/h/_
					> version: l/i/c/h/_
					> version: l/i/ch/_
					> version: l/i/ch/_
					> version: _/l/i/c/_/h
					TRYING: h
					adding blocked set: C = C >> h, _, n
					> version: _/l/i/c/_/h
					TRYING: h
					adding blocked set: C = C >> h, _, n
					> version: _/l/i/ch/_
					> version: _/l/i/ch/_
					> version: l/_/i/c/_/h
					TRYING: h
					adding blocked set: C = C >> h, _, n
					> version: l/_/i/c/_/h
					TRYING: h
					adding blocked set: C = C >> h, _, n
					> version: l/_/i/ch/_
					> version: l/_/i/ch/_
					> version: _/_/l/i/_/c/h
					TRYING: c
					adding blocked set: C = C >> c, _, n
					> version: _/_/l/i/_/c/h
					TRYING: c
					adding blocked set: C = C >> c, _, n
					> version: _/_/l/i/_/ch
					TRYING: ch
					adding blocked set: C = C >> ch, _, n
					> version: _/_/l/i/_/ch
					TRYING: ch
					adding blocked set: C = C >> ch, _, n
					> version: l/i/_/c/_/h
					TRYING: h
					adding blocked set: C = C >> h, _, n
					> version: l/i/_/c/_/h
					TRYING: h
					adding blocked set: C = C >> h, _, n
					> version: l/i/_/ch/_
					> version: l/i/_/ch/_
					> version: _/l/_/i/_/c/h
					TRYING: c
					adding blocked set: C = C >> c, _, n
					> version: _/l/_/i/_/c/h
					TRYING: c
					adding blocked set: C = C >> c, _, n
					> version: _/l/_/i/_/ch
					TRYING: ch
					adding blocked set: C = C >> ch, _, n
					> version: _/l/_/i/_/ch
					TRYING: ch
					adding blocked set: C = C >> ch, _, n
					> version: l/_/_/i/_/c/h
					TRYING: c
					adding blocked set: C = C >> c, _, n
					> version: l/_/_/i/_/c/h
					TRYING: c
					adding blocked set: C = C >> c, _, n
					> version: l/_/_/i/_/ch
					TRYING: ch
					adding blocked set: C = C >> ch, _, n
					> version: l/_/_/i/_/ch
					TRYING: ch
					adding blocked set: C = C >> ch, _, n
					> version: _/_/_/l/_/i/c/h
					TRYING: i
					adding blocked set: C = C >> i, _, n
					> version: _/_/_/l/_/i/c/h
					TRYING: i
					adding blocked set: C = C >> i, _, n
					> version: _/_/_/l/_/i/ch
					TRYING: i
					adding blocked set: C = C >> i, _, n
					> version: _/_/_/l/_/i/ch
					TRYING: i
					adding blocked set: C = C >> i, _, n
					> version: l/i/c/_/_/h
					TRYING: h
					adding blocked set: C = C >> h, _, n
					> version: l/i/c/_/_/h
					TRYING: h
					adding blocked set: C = C >> h, _, n
					> version: l/i/ch/_/_
					> version: l/i/ch/_/_
					> version: _/l/i/_/_/c/h
					TRYING: c
					adding blocked set: C = C >> c, _, n
					> version: _/l/i/_/_/c/h
					TRYING: c
					adding blocked set: C = C >> c, _, n
					> version: _/l/i/_/_/ch
					TRYING: ch
					adding blocked set: C = C >> ch, _, n
					> version: _/l/i/_/_/ch
					TRYING: ch
					adding blocked set: C = C >> ch, _, n
					> version: l/_/i/_/_/c/h
					TRYING: c
					adding blocked set: C = C >> c, _, n
					> version: l/_/i/_/_/c/h
					TRYING: c
					adding blocked set: C = C >> c, _, n
					> version: l/_/i/_/_/ch
					TRYING: ch
					adding blocked set: C = C >> ch, _, n
					> version: l/_/i/_/_/ch
					TRYING: ch
					adding blocked set: C = C >> ch, _, n
					> version: _/_/l/_/_/i/c/h
					TRYING: i
					adding blocked set: C = C >> i, _, n
					> version: _/_/l/_/_/i/c/h
					TRYING: i
					adding blocked set: C = C >> i, _, n
					> version: _/_/l/_/_/i/ch
					TRYING: i
					adding blocked set: C = C >> i, _, n
					> version: _/_/l/_/_/i/ch
					TRYING: i
					adding blocked set: C = C >> i, _, n
					> version: l/i/_/_/_/c/h
					TRYING: c
					adding blocked set: C = C >> c, _, n
					> version: l/i/_/_/_/c/h
					TRYING: c
					adding blocked set: C = C >> c, _, n
					> version: l/i/_/_/_/ch
					TRYING: ch
					adding blocked set: C = C >> ch, _, n
					> version: l/i/_/_/_/ch
					TRYING: ch
					adding blocked set: C = C >> ch, _, n
					> version: _/l/_/_/_/i/c/h
					TRYING: i
					adding blocked set: C = C >> i, _, n
					> version: _/l/_/_/_/i/c/h
					TRYING: i
					adding blocked set: C = C >> i, _, n
					> version: _/l/_/_/_/i/ch
					TRYING: i
					adding blocked set: C = C >> i, _, n
					> version: _/l/_/_/_/i/ch
					TRYING: i
					adding blocked set: C = C >> i, _, n
					> version: l/_/_/_/_/i/c/h
					TRYING: i
					adding blocked set: C = C >> i, _, n
					> version: l/_/_/_/_/i/c/h
					TRYING: i
					adding blocked set: C = C >> i, _, n
					> version: l/_/_/_/_/i/ch
					TRYING: i
					adding blocked set: C = C >> i, _, n
					> version: l/_/_/_/_/i/ch
					TRYING: i
					adding blocked set: C = C >> i, _, n
					> version: _/_/_/_/_/l/i/c/h
					TRYING: l
					adding blocked set: C = C >> _, l, n
					> version: _/_/_/_/_/l/i/c/h
					TRYING: l
					adding blocked set: C = C >> _, l, n
					> version: _/_/_/_/_/l/i/ch
					TRYING: l
					adding blocked set: C = C >> _, l, n
					> version: _/_/_/_/_/l/i/ch
					TRYING: l
					adding blocked set: C = C >> _, l, n
					RESULT:  ['_']
				adding dashed alternative: ['l', 'i', 'c', 'h', '_']
				adding dashed alternative: ['l', 'i', 'c', 'h', '_']
				adding dashed alternative: ['l', 'i', 'ch', '_']
				adding dashed alternative: ['l', 'i', 'ch', '_']
				adding dashed alternative: ['_', 'l', 'i', 'c', 'h', '_']
				adding dashed alternative: ['_', 'l', 'i', 'c', 'h', '_']
				adding dashed alternative: ['_', 'l', 'i', 'ch', '_']
				adding dashed alternative: ['_', 'l', 'i', 'ch', '_']
				adding dashed alternative: ['l', '_', 'i', 'c', 'h', '_']
				adding dashed alternative: ['l', '_', 'i', 'c', 'h', '_']
				adding dashed alternative: ['l', '_', 'i', 'ch', '_']
				adding dashed alternative: ['l', '_', 'i', 'ch', '_']
				adding dashed alternative: ['_', '_', 'l', 'i', 'c', '_', 'h']
				adding dashed alternative: ['_', '_', 'l', 'i', 'c', '_', 'h']
				adding dashed alternative: ['_', '_', 'l', 'i', 'ch', '_']
				adding dashed alternative: ['_', '_', 'l', 'i', 'ch', '_']
				adding dashed alternative: ['l', 'i', '_', 'c', 'h', '_']
				adding dashed alternative: ['l', 'i', '_', 'c', 'h', '_']
				adding dashed alternative: ['l', 'i', '_', 'ch', '_']
				adding dashed alternative: ['l', 'i', '_', 'ch', '_']
				adding dashed alternative: ['_', 'l', '_', 'i', 'c', '_', 'h']
				adding dashed alternative: ['_', 'l', '_', 'i', 'c', '_', 'h']
				adding dashed alternative: ['_', 'l', '_', 'i', 'ch', '_']
				adding dashed alternative: ['_', 'l', '_', 'i', 'ch', '_']
				adding dashed alternative: ['l', '_', '_', 'i', 'c', '_', 'h']
				adding dashed alternative: ['l', '_', '_', 'i', 'c', '_', 'h']
				adding dashed alternative: ['l', '_', '_', 'i', 'ch', '_']
				adding dashed alternative: ['l', '_', '_', 'i', 'ch', '_']
				adding dashed alternative: ['_', '_', '_', 'l', 'i', '_', 'c', 'h']
				adding dashed alternative: ['_', '_', '_', 'l', 'i', '_', 'c', 'h']
				adding dashed alternative: ['_', '_', '_', 'l', 'i', '_', 'ch']
				adding dashed alternative: ['_', '_', '_', 'l', 'i', '_', 'ch']
				adding dashed alternative: ['l', 'i', 'c', '_', 'h', '_']
				adding dashed alternative: ['l', 'i', 'c', '_', 'h', '_']
				adding dashed alternative: ['l', 'i', 'ch', '_', '_']
				adding dashed alternative: ['l', 'i', 'ch', '_', '_']
				adding dashed alternative: ['_', 'l', 'i', '_', 'c', '_', 'h']
				adding dashed alternative: ['_', 'l', 'i', '_', 'c', '_', 'h']
				adding dashed alternative: ['_', 'l', 'i', '_', 'ch', '_']
				adding dashed alternative: ['_', 'l', 'i', '_', 'ch', '_']
				adding dashed alternative: ['l', '_', 'i', '_', 'c', '_', 'h']
				adding dashed alternative: ['l', '_', 'i', '_', 'c', '_', 'h']
				adding dashed alternative: ['l', '_', 'i', '_', 'ch', '_']
				adding dashed alternative: ['l', '_', 'i', '_', 'ch', '_']
				adding dashed alternative: ['_', '_', 'l', '_', 'i', '_', 'c', 'h']
				adding dashed alternative: ['_', '_', 'l', '_', 'i', '_', 'c', 'h']
				adding dashed alternative: ['_', '_', 'l', '_', 'i', '_', 'ch']
				adding dashed alternative: ['_', '_', 'l', '_', 'i', '_', 'ch']
				adding dashed alternative: ['l', 'i', '_', '_', 'c', '_', 'h']
				adding dashed alternative: ['l', 'i', '_', '_', 'c', '_', 'h']
				adding dashed alternative: ['l', 'i', '_', '_', 'ch', '_']
				adding dashed alternative: ['l', 'i', '_', '_', 'ch', '_']
				adding dashed alternative: ['_', 'l', '_', '_', 'i', '_', 'c', 'h']
				adding dashed alternative: ['_', 'l', '_', '_', 'i', '_', 'c', 'h']
				adding dashed alternative: ['_', 'l', '_', '_', 'i', '_', 'ch']
				adding dashed alternative: ['_', 'l', '_', '_', 'i', '_', 'ch']
				adding dashed alternative: ['l', '_', '_', '_', 'i', '_', 'c', 'h']
				adding dashed alternative: ['l', '_', '_', '_', 'i', '_', 'c', 'h']
				adding dashed alternative: ['l', '_', '_', '_', 'i', '_', 'ch']
				adding dashed alternative: ['l', '_', '_', '_', 'i', '_', 'ch']
				adding dashed alternative: ['_', '_', '_', '_', 'l', '_', 'i', 'c', 'h']
				adding dashed alternative: ['_', '_', '_', '_', 'l', '_', 'i', 'c', 'h']
				adding dashed alternative: ['_', '_', '_', '_', 'l', '_', 'i', 'ch']
				adding dashed alternative: ['_', '_', '_', '_', 'l', '_', 'i', 'ch']
				adding dashed alternative: ['l', 'i', 'c', 'h', '_', '_']
				adding dashed alternative: ['l', 'i', 'c', 'h', '_', '_']
				adding dashed alternative: ['l', 'i', 'ch', '_', '_']
				adding dashed alternative: ['l', 'i', 'ch', '_', '_']
				adding dashed alternative: ['_', 'l', 'i', 'c', '_', '_', 'h']
				adding dashed alternative: ['_', 'l', 'i', 'c', '_', '_', 'h']
				adding dashed alternative: ['_', 'l', 'i', 'ch', '_', '_']
				adding dashed alternative: ['_', 'l', 'i', 'ch', '_', '_']
				adding dashed alternative: ['l', '_', 'i', 'c', '_', '_', 'h']
				adding dashed alternative: ['l', '_', 'i', 'c', '_', '_', 'h']
				adding dashed alternative: ['l', '_', 'i', 'ch', '_', '_']
				adding dashed alternative: ['l', '_', 'i', 'ch', '_', '_']
				adding dashed alternative: ['_', '_', 'l', 'i', '_', '_', 'c', 'h']
				adding dashed alternative: ['_', '_', 'l', 'i', '_', '_', 'c', 'h']
				adding dashed alternative: ['_', '_', 'l', 'i', '_', '_', 'ch']
				adding dashed alternative: ['_', '_', 'l', 'i', '_', '_', 'ch']
				adding dashed alternative: ['l', 'i', '_', 'c', '_', '_', 'h']
				adding dashed alternative: ['l', 'i', '_', 'c', '_', '_', 'h']
				adding dashed alternative: ['l', 'i', '_', 'ch', '_', '_']
				adding dashed alternative: ['l', 'i', '_', 'ch', '_', '_']
				adding dashed alternative: ['_', 'l', '_', 'i', '_', '_', 'c', 'h']
				adding dashed alternative: ['_', 'l', '_', 'i', '_', '_', 'c', 'h']
				adding dashed alternative: ['_', 'l', '_', 'i', '_', '_', 'ch']
				adding dashed alternative: ['_', 'l', '_', 'i', '_', '_', 'ch']
				adding dashed alternative: ['l', '_', '_', 'i', '_', '_', 'c', 'h']
				adding dashed alternative: ['l', '_', '_', 'i', '_', '_', 'c', 'h']
				adding dashed alternative: ['l', '_', '_', 'i', '_', '_', 'ch']
				adding dashed alternative: ['l', '_', '_', 'i', '_', '_', 'ch']
				adding dashed alternative: ['_', '_', '_', 'l', '_', '_', 'i', 'c', 'h']
				adding dashed alternative: ['_', '_', '_', 'l', '_', '_', 'i', 'c', 'h']
				adding dashed alternative: ['_', '_', '_', 'l', '_', '_', 'i', 'ch']
				adding dashed alternative: ['_', '_', '_', 'l', '_', '_', 'i', 'ch']
				adding dashed alternative: ['l', 'i', 'c', '_', '_', '_', 'h']
				adding dashed alternative: ['l', 'i', 'c', '_', '_', '_', 'h']
				adding dashed alternative: ['l', 'i', 'ch', '_', '_', '_']
				adding dashed alternative: ['l', 'i', 'ch', '_', '_', '_']
				adding dashed alternative: ['_', 'l', 'i', '_', '_', '_', 'c', 'h']
				adding dashed alternative: ['_', 'l', 'i', '_', '_', '_', 'c', 'h']
				adding dashed alternative: ['_', 'l', 'i', '_', '_', '_', 'ch']
				adding dashed alternative: ['_', 'l', 'i', '_', '_', '_', 'ch']
				adding dashed alternative: ['l', '_', 'i', '_', '_', '_', 'c', 'h']
				adding dashed alternative: ['l', '_', 'i', '_', '_', '_', 'c', 'h']
				adding dashed alternative: ['l', '_', 'i', '_', '_', '_', 'ch']
				adding dashed alternative: ['l', '_', 'i', '_', '_', '_', 'ch']
				adding dashed alternative: ['_', '_', 'l', '_', '_', '_', 'i', 'c', 'h']
				adding dashed alternative: ['_', '_', 'l', '_', '_', '_', 'i', 'c', 'h']
				adding dashed alternative: ['_', '_', 'l', '_', '_', '_', 'i', 'ch']
				adding dashed alternative: ['_', '_', 'l', '_', '_', '_', 'i', 'ch']
				adding dashed alternative: ['l', 'i', '_', '_', '_', '_', 'c', 'h']
				adding dashed alternative: ['l', 'i', '_', '_', '_', '_', 'c', 'h']
				adding dashed alternative: ['l', 'i', '_', '_', '_', '_', 'ch']
				adding dashed alternative: ['l', 'i', '_', '_', '_', '_', 'ch']
				adding dashed alternative: ['_', 'l', '_', '_', '_', '_', 'i', 'c', 'h']
				adding dashed alternative: ['_', 'l', '_', '_', '_', '_', 'i', 'c', 'h']
				adding dashed alternative: ['_', 'l', '_', '_', '_', '_', 'i', 'ch']
				adding dashed alternative: ['_', 'l', '_', '_', '_', '_', 'i', 'ch']
				adding dashed alternative: ['l', '_', '_', '_', '_', '_', 'i', 'c', 'h']
				adding dashed alternative: ['l', '_', '_', '_', '_', '_', 'i', 'c', 'h']
				adding dashed alternative: ['l', '_', '_', '_', '_', '_', 'i', 'ch']
				adding dashed alternative: ['l', '_', '_', '_', '_', '_', 'i', 'ch']
				adding dashed alternative: ['_', '_', '_', '_', '_', '_', 'l', 'i', 'c', 'h']
				adding dashed alternative: ['_', '_', '_', '_', '_', '_', 'l', 'i', 'c', 'h']
				adding dashed alternative: ['_', '_', '_', '_', '_', '_', 'l', 'i', 'ch']
				adding dashed alternative: ['_', '_', '_', '_', '_', '_', 'l', 'i', 'ch']
				l/i/c/h(CCCC)
l/i/c/h(CVCC)
l/i/ch(CCC)
l/i/ch(CVC)
_/l/i/c/h(ACACC)
_/l/i/c/h(ACACC)
_/l/i/ch(ACAC)
_/l/i/ch(ACAC)
l/_/i/c/h(CAACC)
l/_/i/c/h(CAACC)
l/_/i/ch(CAAC)
l/_/i/ch(CAAC)
_/_/l/i/c/h(AACACC)
_/_/l/i/c/h(AACACC)
_/_/l/i/ch(AACAC)
_/_/l/i/ch(AACAC)
l/i/_/c/h(CAACC)
l/i/_/c/h(CAACC)
l/i/_/ch(CAAC)
l/i/_/ch(CAAC)
_/l/_/i/c/h(ACAACC)
_/l/_/i/c/h(ACAACC)
_/l/_/i/ch(ACAAC)
_/l/_/i/ch(ACAAC)
l/_/_/i/c/h(CAAACC)
l/_/_/i/c/h(CAAACC)
l/_/_/i/ch(CAAAC)
l/_/_/i/ch(CAAAC)
_/_/_/l/i/c/h(AAACACC)
_/_/_/l/i/c/h(AAACACC)
_/_/_/l/i/ch(AAACAC)
_/_/_/l/i/ch(AAACAC)
l/i/c/_/h(CACAC)
l/i/c/_/h(CACAC)
l/i/ch/_(CACA)
l/i/ch/_(CACA)
_/l/i/_/c/h(ACAACC)
_/l/i/_/c/h(ACAACC)
_/l/i/_/ch(ACAAC)
_/l/i/_/ch(ACAAC)
l/_/i/_/c/h(CAAACC)
l/_/i/_/c/h(CAAACC)
l/_/i/_/ch(CAAAC)
l/_/i/_/ch(CAAAC)
_/_/l/_/i/c/h(AACAACC)
_/_/l/_/i/c/h(AACAACC)
_/_/l/_/i/ch(AACAAC)
_/_/l/_/i/ch(AACAAC)
l/i/_/_/c/h(CAAACC)
l/i/_/_/c/h(CAAACC)
l/i/_/_/ch(CAAAC)
l/i/_/_/ch(CAAAC)
_/l/_/_/i/c/h(ACAAACC)
_/l/_/_/i/c/h(ACAAACC)
_/l/_/_/i/ch(ACAAAC)
_/l/_/_/i/ch(ACAAAC)
l/_/_/_/i/c/h(CAAAACC)
l/_/_/_/i/c/h(CAAAACC)
l/_/_/_/i/ch(CAAAAC)
l/_/_/_/i/ch(CAAAAC)
_/_/_/_/l/i/c/h(AAAACACC)
_/_/_/_/l/i/c/h(AAAACACC)
_/_/_/_/l/i/ch(AAAACAC)
_/_/_/_/l/i/ch(AAAACAC)
l/i/c/h/_(CACCA)
l/i/c/h/_(CACCA)
l/i/ch/_(CACA)
l/i/ch/_(CACA)
_/l/i/c/_/h(ACACAC)
_/l/i/c/_/h(ACACAC)
_/l/i/ch/_(ACACA)
_/l/i/ch/_(ACACA)
l/_/i/c/_/h(CAACAC)
l/_/i/c/_/h(CAACAC)
l/_/i/ch/_(CAACA)
l/_/i/ch/_(CAACA)
_/_/l/i/_/c/h(AACAACC)
_/_/l/i/_/c/h(AACAACC)
_/_/l/i/_/ch(AACAAC)
_/_/l/i/_/ch(AACAAC)
l/i/_/c/_/h(CAACAC)
l/i/_/c/_/h(CAACAC)
l/i/_/ch/_(CAACA)
l/i/_/ch/_(CAACA)
_/l/_/i/_/c/h(ACAAACC)
_/l/_/i/_/c/h(ACAAACC)
_/l/_/i/_/ch(ACAAAC)
_/l/_/i/_/ch(ACAAAC)
l/_/_/i/_/c/h(CAAAACC)
l/_/_/i/_/c/h(CAAAACC)
l/_/_/i/_/ch(CAAAAC)
l/_/_/i/_/ch(CAAAAC)
_/_/_/l/_/i/c/h(AAACAACC)
_/_/_/l/_/i/c/h(AAACAACC)
_/_/_/l/_/i/ch(AAACAAC)
_/_/_/l/_/i/ch(AAACAAC)
l/i/c/_/_/h(CACAAC)
l/i/c/_/_/h(CACAAC)
l/i/ch/_/_(CACAA)
l/i/ch/_/_(CACAA)
_/l/i/_/_/c/h(ACAAACC)
_/l/i/_/_/c/h(ACAAACC)
_/l/i/_/_/ch(ACAAAC)
_/l/i/_/_/ch(ACAAAC)
l/_/i/_/_/c/h(CAAAACC)
l/_/i/_/_/c/h(CAAAACC)
l/_/i/_/_/ch(CAAAAC)
l/_/i/_/_/ch(CAAAAC)
_/_/l/_/_/i/c/h(AACAAACC)
_/_/l/_/_/i/c/h(AACAAACC)
_/_/l/_/_/i/ch(AACAAAC)
_/_/l/_/_/i/ch(AACAAAC)
l/i/_/_/_/c/h(CAAAACC)
l/i/_/_/_/c/h(CAAAACC)
l/i/_/_/_/ch(CAAAAC)
l/i/_/_/_/ch(CAAAAC)
_/l/_/_/_/i/c/h(ACAAAACC)
_/l/_/_/_/i/c/h(ACAAAACC)
_/l/_/_/_/i/ch(ACAAAAC)
_/l/_/_/_/i/ch(ACAAAAC)
l/_/_/_/_/i/c/h(CAAAAACC)
l/_/_/_/_/i/c/h(CAAAAACC)
l/_/_/_/_/i/ch(CAAAAAC)
l/_/_/_/_/i/ch(CAAAAAC)
_/_/_/_/_/l/i/c/h(AAAAACACC)
_/_/_/_/_/l/i/c/h(AAAAACACC)
_/_/_/_/_/l/i/ch(AAAAACAC)
_/_/_/_/_/l/i/ch(AAAAACAC)
l/i/c/h/_(CACCA)
l/i/c/h/_(CACCA)
l/i/ch/_(CACA)
l/i/ch/_(CACA)
_/l/i/c/h/_(ACACCA)
_/l/i/c/h/_(ACACCA)
_/l/i/ch/_(ACACA)
_/l/i/ch/_(ACACA)
l/_/i/c/h/_(CAACCA)
l/_/i/c/h/_(CAACCA)
l/_/i/ch/_(CAACA)
l/_/i/ch/_(CAACA)
_/_/l/i/c/_/h(AACACAC)
_/_/l/i/c/_/h(AACACAC)
_/_/l/i/ch/_(AACACA)
_/_/l/i/ch/_(AACACA)
l/i/_/c/h/_(CAACCA)
l/i/_/c/h/_(CAACCA)
l/i/_/ch/_(CAACA)
l/i/_/ch/_(CAACA)
_/l/_/i/c/_/h(ACAACAC)
_/l/_/i/c/_/h(ACAACAC)
_/l/_/i/ch/_(ACAACA)
_/l/_/i/ch/_(ACAACA)
l/_/_/i/c/_/h(CAAACAC)
l/_/_/i/c/_/h(CAAACAC)
l/_/_/i/ch/_(CAAACA)
l/_/_/i/ch/_(CAAACA)
_/_/_/l/i/_/c/h(AAACAACC)
_/_/_/l/i/_/c/h(AAACAACC)
_/_/_/l/i/_/ch(AAACAAC)
_/_/_/l/i/_/ch(AAACAAC)
l/i/c/_/h/_(CACACA)
l/i/c/_/h/_(CACACA)
l/i/ch/_/_(CACAA)
l/i/ch/_/_(CACAA)
_/l/i/_/c/_/h(ACAACAC)
_/l/i/_/c/_/h(ACAACAC)
_/l/i/_/ch/_(ACAACA)
_/l/i/_/ch/_(ACAACA)
l/_/i/_/c/_/h(CAAACAC)
l/_/i/_/c/_/h(CAAACAC)
l/_/i/_/ch/_(CAAACA)
l/_/i/_/ch/_(CAAACA)
_/_/l/_/i/_/c/h(AACAAACC)
_/_/l/_/i/_/c/h(AACAAACC)
_/_/l/_/i/_/ch(AACAAAC)
_/_/l/_/i/_/ch(AACAAAC)
l/i/_/_/c/_/h(CAAACAC)
l/i/_/_/c/_/h(CAAACAC)
l/i/_/_/ch/_(CAAACA)
l/i/_/_/ch/_(CAAACA)
_/l/_/_/i/_/c/h(ACAAAACC)
_/l/_/_/i/_/c/h(ACAAAACC)
_/l/_/_/i/_/ch(ACAAAAC)
_/l/_/_/i/_/ch(ACAAAAC)
l/_/_/_/i/_/c/h(CAAAAACC)
l/_/_/_/i/_/c/h(CAAAAACC)
l/_/_/_/i/_/ch(CAAAAAC)
l/_/_/_/i/_/ch(CAAAAAC)
_/_/_/_/l/_/i/c/h(AAAACAACC)
_/_/_/_/l/_/i/c/h(AAAACAACC)
_/_/_/_/l/_/i/ch(AAAACAAC)
_/_/_/_/l/_/i/ch(AAAACAAC)
l/i/c/h/_/_(CACCAA)
l/i/c/h/_/_(CACCAA)
l/i/ch/_/_(CACAA)
l/i/ch/_/_(CACAA)
_/l/i/c/_/_/h(ACACAAC)
_/l/i/c/_/_/h(ACACAAC)
_/l/i/ch/_/_(ACACAA)
_/l/i/ch/_/_(ACACAA)
l/_/i/c/_/_/h(CAACAAC)
l/_/i/c/_/_/h(CAACAAC)
l/_/i/ch/_/_(CAACAA)
l/_/i/ch/_/_(CAACAA)
_/_/l/i/_/_/c/h(AACAAACC)
_/_/l/i/_/_/c/h(AACAAACC)
_/_/l/i/_/_/ch(AACAAAC)
_/_/l/i/_/_/ch(AACAAAC)
l/i/_/c/_/_/h(CAACAAC)
l/i/_/c/_/_/h(CAACAAC)
l/i/_/ch/_/_(CAACAA)
l/i/_/ch/_/_(CAACAA)
_/l/_/i/_/_/c/h(ACAAAACC)
_/l/_/i/_/_/c/h(ACAAAACC)
_/l/_/i/_/_/ch(ACAAAAC)
_/l/_/i/_/_/ch(ACAAAAC)
l/_/_/i/_/_/c/h(CAAAAACC)
l/_/_/i/_/_/c/h(CAAAAACC)
l/_/_/i/_/_/ch(CAAAAAC)
l/_/_/i/_/_/ch(CAAAAAC)
_/_/_/l/_/_/i/c/h(AAACAAACC)
_/_/_/l/_/_/i/c/h(AAACAAACC)
_/_/_/l/_/_/i/ch(AAACAAAC)
_/_/_/l/_/_/i/ch(AAACAAAC)
l/i/c/_/_/_/h(CACAAAC)
l/i/c/_/_/_/h(CACAAAC)
l/i/ch/_/_/_(CACAAA)
l/i/ch/_/_/_(CACAAA)
_/l/i/_/_/_/c/h(ACAAAACC)
_/l/i/_/_/_/c/h(ACAAAACC)
_/l/i/_/_/_/ch(ACAAAAC)
_/l/i/_/_/_/ch(ACAAAAC)
l/_/i/_/_/_/c/h(CAAAAACC)
l/_/i/_/_/_/c/h(CAAAAACC)
l/_/i/_/_/_/ch(CAAAAAC)
l/_/i/_/_/_/ch(CAAAAAC)
_/_/l/_/_/_/i/c/h(AACAAAACC)
_/_/l/_/_/_/i/c/h(AACAAAACC)
_/_/l/_/_/_/i/ch(AACAAAAC)
_/_/l/_/_/_/i/ch(AACAAAAC)
l/i/_/_/_/_/c/h(CAAAAACC)
l/i/_/_/_/_/c/h(CAAAAACC)
l/i/_/_/_/_/ch(CAAAAAC)
l/i/_/_/_/_/ch(CAAAAAC)
_/l/_/_/_/_/i/c/h(ACAAAAACC)
_/l/_/_/_/_/i/c/h(ACAAAAACC)
_/l/_/_/_/_/i/ch(ACAAAAAC)
_/l/_/_/_/_/i/ch(ACAAAAAC)
l/_/_/_/_/_/i/c/h(CAAAAAACC)
l/_/_/_/_/_/i/c/h(CAAAAAACC)
l/_/_/_/_/_/i/ch(CAAAAAAC)
l/_/_/_/_/_/i/ch(CAAAAAAC)
_/_/_/_/_/_/l/i/c/h(AAAAAACACC)
_/_/_/_/_/_/l/i/c/h(AAAAAACACC)
_/_/_/_/_/_/l/i/ch(AAAAAACAC)
_/_/_/_/_/_/l/i/ch(AAAAAACAC)
				version split: ['l', 'i', 'c', 'h']
				{'string': 'l/i/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', 'c', 'h']
				version split: ['l', 'i', 'c', 'h']
				{'string': 'l/i/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', 'c', 'h']
				version split: ['l', 'i', 'ch']
				{'string': 'l/i/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', 'ch']
				version split: ['l', 'i', 'ch']
				{'string': 'l/i/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', 'ch']
				version split: ['_', 'l', 'i', 'c', 'h']
				{'string': '_/l/i/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', 'i', 'c', 'h']
				version split: ['_', 'l', 'i', 'c', 'h']
				{'string': '_/l/i/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', 'i', 'c', 'h']
				version split: ['_', 'l', 'i', 'ch']
				{'string': '_/l/i/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', 'i', 'ch']
				version split: ['_', 'l', 'i', 'ch']
				{'string': '_/l/i/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', 'i', 'ch']
				version split: ['l', '_', 'i', 'c', 'h']
				{'string': 'l/_/i/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', 'i', 'c', 'h']
				version split: ['l', '_', 'i', 'c', 'h']
				{'string': 'l/_/i/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', 'i', 'c', 'h']
				version split: ['l', '_', 'i', 'ch']
				{'string': 'l/_/i/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', 'i', 'ch']
				version split: ['l', '_', 'i', 'ch']
				{'string': 'l/_/i/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', 'i', 'ch']
				version split: ['_', '_', 'l', 'i', 'c', 'h']
				{'string': '_/_/l/i/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'l', 'i', 'c', 'h']
				version split: ['_', '_', 'l', 'i', 'c', 'h']
				{'string': '_/_/l/i/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'l', 'i', 'c', 'h']
				version split: ['_', '_', 'l', 'i', 'ch']
				{'string': '_/_/l/i/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'l', 'i', 'ch']
				version split: ['_', '_', 'l', 'i', 'ch']
				{'string': '_/_/l/i/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'l', 'i', 'ch']
				version split: ['l', 'i', '_', 'c', 'h']
				{'string': 'l/i/_/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', '_', 'c', 'h']
				version split: ['l', 'i', '_', 'c', 'h']
				{'string': 'l/i/_/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', '_', 'c', 'h']
				version split: ['l', 'i', '_', 'ch']
				{'string': 'l/i/_/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', '_', 'ch']
				version split: ['l', 'i', '_', 'ch']
				{'string': 'l/i/_/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', '_', 'ch']
				version split: ['_', 'l', '_', 'i', 'c', 'h']
				{'string': '_/l/_/i/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', '_', 'i', 'c', 'h']
				version split: ['_', 'l', '_', 'i', 'c', 'h']
				{'string': '_/l/_/i/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', '_', 'i', 'c', 'h']
				version split: ['_', 'l', '_', 'i', 'ch']
				{'string': '_/l/_/i/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', '_', 'i', 'ch']
				version split: ['_', 'l', '_', 'i', 'ch']
				{'string': '_/l/_/i/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', '_', 'i', 'ch']
				version split: ['l', '_', '_', 'i', 'c', 'h']
				{'string': 'l/_/_/i/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', '_', 'i', 'c', 'h']
				version split: ['l', '_', '_', 'i', 'c', 'h']
				{'string': 'l/_/_/i/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', '_', 'i', 'c', 'h']
				version split: ['l', '_', '_', 'i', 'ch']
				{'string': 'l/_/_/i/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', '_', 'i', 'ch']
				version split: ['l', '_', '_', 'i', 'ch']
				{'string': 'l/_/_/i/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', '_', 'i', 'ch']
				version split: ['_', '_', '_', 'l', 'i', 'c', 'h']
				{'string': '_/_/_/l/i/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', 'l', 'i', 'c', 'h']
				version split: ['_', '_', '_', 'l', 'i', 'c', 'h']
				{'string': '_/_/_/l/i/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', 'l', 'i', 'c', 'h']
				version split: ['_', '_', '_', 'l', 'i', 'ch']
				{'string': '_/_/_/l/i/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', 'l', 'i', 'ch']
				version split: ['_', '_', '_', 'l', 'i', 'ch']
				{'string': '_/_/_/l/i/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', 'l', 'i', 'ch']
				version split: ['l', 'i', 'c', '_', 'h']
				{'string': 'l/i/c/_/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', 'c', '_', 'h']
				version split: ['l', 'i', 'c', '_', 'h']
				{'string': 'l/i/c/_/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', 'c', '_', 'h']
				version split: ['l', 'i', 'ch', '_']
				{'string': 'l/i/ch/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', 'ch', '_']
				version split: ['l', 'i', 'ch', '_']
				{'string': 'l/i/ch/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', 'ch', '_']
				version split: ['_', 'l', 'i', '_', 'c', 'h']
				{'string': '_/l/i/_/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', 'i', '_', 'c', 'h']
				version split: ['_', 'l', 'i', '_', 'c', 'h']
				{'string': '_/l/i/_/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', 'i', '_', 'c', 'h']
				version split: ['_', 'l', 'i', '_', 'ch']
				{'string': '_/l/i/_/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', 'i', '_', 'ch']
				version split: ['_', 'l', 'i', '_', 'ch']
				{'string': '_/l/i/_/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', 'i', '_', 'ch']
				version split: ['l', '_', 'i', '_', 'c', 'h']
				{'string': 'l/_/i/_/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', 'i', '_', 'c', 'h']
				version split: ['l', '_', 'i', '_', 'c', 'h']
				{'string': 'l/_/i/_/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', 'i', '_', 'c', 'h']
				version split: ['l', '_', 'i', '_', 'ch']
				{'string': 'l/_/i/_/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', 'i', '_', 'ch']
				version split: ['l', '_', 'i', '_', 'ch']
				{'string': 'l/_/i/_/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', 'i', '_', 'ch']
				version split: ['_', '_', 'l', '_', 'i', 'c', 'h']
				{'string': '_/_/l/_/i/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'l', '_', 'i', 'c', 'h']
				version split: ['_', '_', 'l', '_', 'i', 'c', 'h']
				{'string': '_/_/l/_/i/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'l', '_', 'i', 'c', 'h']
				version split: ['_', '_', 'l', '_', 'i', 'ch']
				{'string': '_/_/l/_/i/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'l', '_', 'i', 'ch']
				version split: ['_', '_', 'l', '_', 'i', 'ch']
				{'string': '_/_/l/_/i/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'l', '_', 'i', 'ch']
				version split: ['l', 'i', '_', '_', 'c', 'h']
				{'string': 'l/i/_/_/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', '_', '_', 'c', 'h']
				version split: ['l', 'i', '_', '_', 'c', 'h']
				{'string': 'l/i/_/_/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', '_', '_', 'c', 'h']
				version split: ['l', 'i', '_', '_', 'ch']
				{'string': 'l/i/_/_/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', '_', '_', 'ch']
				version split: ['l', 'i', '_', '_', 'ch']
				{'string': 'l/i/_/_/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', '_', '_', 'ch']
				version split: ['_', 'l', '_', '_', 'i', 'c', 'h']
				{'string': '_/l/_/_/i/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', '_', '_', 'i', 'c', 'h']
				version split: ['_', 'l', '_', '_', 'i', 'c', 'h']
				{'string': '_/l/_/_/i/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', '_', '_', 'i', 'c', 'h']
				version split: ['_', 'l', '_', '_', 'i', 'ch']
				{'string': '_/l/_/_/i/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', '_', '_', 'i', 'ch']
				version split: ['_', 'l', '_', '_', 'i', 'ch']
				{'string': '_/l/_/_/i/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', '_', '_', 'i', 'ch']
				version split: ['l', '_', '_', '_', 'i', 'c', 'h']
				{'string': 'l/_/_/_/i/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', '_', '_', 'i', 'c', 'h']
				version split: ['l', '_', '_', '_', 'i', 'c', 'h']
				{'string': 'l/_/_/_/i/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', '_', '_', 'i', 'c', 'h']
				version split: ['l', '_', '_', '_', 'i', 'ch']
				{'string': 'l/_/_/_/i/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', '_', '_', 'i', 'ch']
				version split: ['l', '_', '_', '_', 'i', 'ch']
				{'string': 'l/_/_/_/i/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', '_', '_', 'i', 'ch']
				version split: ['_', '_', '_', '_', 'l', 'i', 'c', 'h']
				{'string': '_/_/_/_/l/i/c', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', '_', 'l', 'i', 'c', 'h']
				version split: ['_', '_', '_', '_', 'l', 'i', 'c', 'h']
				{'string': '_/_/_/_/l/i/c', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', '_', 'l', 'i', 'c', 'h']
				version split: ['_', '_', '_', '_', 'l', 'i', 'ch']
				{'string': '_/_/_/_/l/i/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', '_', 'l', 'i', 'ch']
				version split: ['_', '_', '_', '_', 'l', 'i', 'ch']
				{'string': '_/_/_/_/l/i/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', '_', 'l', 'i', 'ch']
				version split: ['l', 'i', 'c', 'h', '_']
				{'string': 'l/i/c/h/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', 'c', 'h', '_']
				version split: ['l', 'i', 'c', 'h', '_']
				{'string': 'l/i/c/h/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', 'c', 'h', '_']
				version split: ['l', 'i', 'ch', '_']
				{'string': 'l/i/ch/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', 'ch', '_']
				version split: ['l', 'i', 'ch', '_']
				{'string': 'l/i/ch/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', 'ch', '_']
				version split: ['_', 'l', 'i', 'c', '_', 'h']
				{'string': '_/l/i/c/_/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', 'i', 'c', '_', 'h']
				version split: ['_', 'l', 'i', 'c', '_', 'h']
				{'string': '_/l/i/c/_/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', 'i', 'c', '_', 'h']
				version split: ['_', 'l', 'i', 'ch', '_']
				{'string': '_/l/i/ch/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', 'i', 'ch', '_']
				version split: ['_', 'l', 'i', 'ch', '_']
				{'string': '_/l/i/ch/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', 'i', 'ch', '_']
				version split: ['l', '_', 'i', 'c', '_', 'h']
				{'string': 'l/_/i/c/_/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', 'i', 'c', '_', 'h']
				version split: ['l', '_', 'i', 'c', '_', 'h']
				{'string': 'l/_/i/c/_/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', 'i', 'c', '_', 'h']
				version split: ['l', '_', 'i', 'ch', '_']
				{'string': 'l/_/i/ch/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', 'i', 'ch', '_']
				version split: ['l', '_', 'i', 'ch', '_']
				{'string': 'l/_/i/ch/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', 'i', 'ch', '_']
				version split: ['_', '_', 'l', 'i', '_', 'c', 'h']
				{'string': '_/_/l/i/_/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'l', 'i', '_', 'c', 'h']
				version split: ['_', '_', 'l', 'i', '_', 'c', 'h']
				{'string': '_/_/l/i/_/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'l', 'i', '_', 'c', 'h']
				version split: ['_', '_', 'l', 'i', '_', 'ch']
				{'string': '_/_/l/i/_/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'l', 'i', '_', 'ch']
				version split: ['_', '_', 'l', 'i', '_', 'ch']
				{'string': '_/_/l/i/_/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'l', 'i', '_', 'ch']
				version split: ['l', 'i', '_', 'c', '_', 'h']
				{'string': 'l/i/_/c/_/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', '_', 'c', '_', 'h']
				version split: ['l', 'i', '_', 'c', '_', 'h']
				{'string': 'l/i/_/c/_/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', '_', 'c', '_', 'h']
				version split: ['l', 'i', '_', 'ch', '_']
				{'string': 'l/i/_/ch/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', '_', 'ch', '_']
				version split: ['l', 'i', '_', 'ch', '_']
				{'string': 'l/i/_/ch/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', '_', 'ch', '_']
				version split: ['_', 'l', '_', 'i', '_', 'c', 'h']
				{'string': '_/l/_/i/_/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', '_', 'i', '_', 'c', 'h']
				version split: ['_', 'l', '_', 'i', '_', 'c', 'h']
				{'string': '_/l/_/i/_/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', '_', 'i', '_', 'c', 'h']
				version split: ['_', 'l', '_', 'i', '_', 'ch']
				{'string': '_/l/_/i/_/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', '_', 'i', '_', 'ch']
				version split: ['_', 'l', '_', 'i', '_', 'ch']
				{'string': '_/l/_/i/_/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', '_', 'i', '_', 'ch']
				version split: ['l', '_', '_', 'i', '_', 'c', 'h']
				{'string': 'l/_/_/i/_/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', '_', 'i', '_', 'c', 'h']
				version split: ['l', '_', '_', 'i', '_', 'c', 'h']
				{'string': 'l/_/_/i/_/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', '_', 'i', '_', 'c', 'h']
				version split: ['l', '_', '_', 'i', '_', 'ch']
				{'string': 'l/_/_/i/_/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', '_', 'i', '_', 'ch']
				version split: ['l', '_', '_', 'i', '_', 'ch']
				{'string': 'l/_/_/i/_/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', '_', 'i', '_', 'ch']
				version split: ['_', '_', '_', 'l', '_', 'i', 'c', 'h']
				{'string': '_/_/_/l/_/i/c', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', 'l', '_', 'i', 'c', 'h']
				version split: ['_', '_', '_', 'l', '_', 'i', 'c', 'h']
				{'string': '_/_/_/l/_/i/c', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', 'l', '_', 'i', 'c', 'h']
				version split: ['_', '_', '_', 'l', '_', 'i', 'ch']
				{'string': '_/_/_/l/_/i/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', 'l', '_', 'i', 'ch']
				version split: ['_', '_', '_', 'l', '_', 'i', 'ch']
				{'string': '_/_/_/l/_/i/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', 'l', '_', 'i', 'ch']
				version split: ['l', 'i', 'c', '_', '_', 'h']
				{'string': 'l/i/c/_/_/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', 'c', '_', '_', 'h']
				version split: ['l', 'i', 'c', '_', '_', 'h']
				{'string': 'l/i/c/_/_/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', 'c', '_', '_', 'h']
				version split: ['l', 'i', 'ch', '_', '_']
				{'string': 'l/i/ch/_/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', 'ch', '_', '_']
				version split: ['l', 'i', 'ch', '_', '_']
				{'string': 'l/i/ch/_/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', 'ch', '_', '_']
				version split: ['_', 'l', 'i', '_', '_', 'c', 'h']
				{'string': '_/l/i/_/_/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', 'i', '_', '_', 'c', 'h']
				version split: ['_', 'l', 'i', '_', '_', 'c', 'h']
				{'string': '_/l/i/_/_/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', 'i', '_', '_', 'c', 'h']
				version split: ['_', 'l', 'i', '_', '_', 'ch']
				{'string': '_/l/i/_/_/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', 'i', '_', '_', 'ch']
				version split: ['_', 'l', 'i', '_', '_', 'ch']
				{'string': '_/l/i/_/_/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', 'i', '_', '_', 'ch']
				version split: ['l', '_', 'i', '_', '_', 'c', 'h']
				{'string': 'l/_/i/_/_/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', 'i', '_', '_', 'c', 'h']
				version split: ['l', '_', 'i', '_', '_', 'c', 'h']
				{'string': 'l/_/i/_/_/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', 'i', '_', '_', 'c', 'h']
				version split: ['l', '_', 'i', '_', '_', 'ch']
				{'string': 'l/_/i/_/_/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', 'i', '_', '_', 'ch']
				version split: ['l', '_', 'i', '_', '_', 'ch']
				{'string': 'l/_/i/_/_/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', 'i', '_', '_', 'ch']
				version split: ['_', '_', 'l', '_', '_', 'i', 'c', 'h']
				{'string': '_/_/l/_/_/i/c', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'l', '_', '_', 'i', 'c', 'h']
				version split: ['_', '_', 'l', '_', '_', 'i', 'c', 'h']
				{'string': '_/_/l/_/_/i/c', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'l', '_', '_', 'i', 'c', 'h']
				version split: ['_', '_', 'l', '_', '_', 'i', 'ch']
				{'string': '_/_/l/_/_/i/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'l', '_', '_', 'i', 'ch']
				version split: ['_', '_', 'l', '_', '_', 'i', 'ch']
				{'string': '_/_/l/_/_/i/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'l', '_', '_', 'i', 'ch']
				version split: ['l', 'i', '_', '_', '_', 'c', 'h']
				{'string': 'l/i/_/_/_/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', '_', '_', '_', 'c', 'h']
				version split: ['l', 'i', '_', '_', '_', 'c', 'h']
				{'string': 'l/i/_/_/_/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', '_', '_', '_', 'c', 'h']
				version split: ['l', 'i', '_', '_', '_', 'ch']
				{'string': 'l/i/_/_/_/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', '_', '_', '_', 'ch']
				version split: ['l', 'i', '_', '_', '_', 'ch']
				{'string': 'l/i/_/_/_/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', '_', '_', '_', 'ch']
				version split: ['_', 'l', '_', '_', '_', 'i', 'c', 'h']
				{'string': '_/l/_/_/_/i/c', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', '_', '_', '_', 'i', 'c', 'h']
				version split: ['_', 'l', '_', '_', '_', 'i', 'c', 'h']
				{'string': '_/l/_/_/_/i/c', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', '_', '_', '_', 'i', 'c', 'h']
				version split: ['_', 'l', '_', '_', '_', 'i', 'ch']
				{'string': '_/l/_/_/_/i/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', '_', '_', '_', 'i', 'ch']
				version split: ['_', 'l', '_', '_', '_', 'i', 'ch']
				{'string': '_/l/_/_/_/i/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', '_', '_', '_', 'i', 'ch']
				version split: ['l', '_', '_', '_', '_', 'i', 'c', 'h']
				{'string': 'l/_/_/_/_/i/c', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', '_', '_', '_', 'i', 'c', 'h']
				version split: ['l', '_', '_', '_', '_', 'i', 'c', 'h']
				{'string': 'l/_/_/_/_/i/c', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', '_', '_', '_', 'i', 'c', 'h']
				version split: ['l', '_', '_', '_', '_', 'i', 'ch']
				{'string': 'l/_/_/_/_/i/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', '_', '_', '_', 'i', 'ch']
				version split: ['l', '_', '_', '_', '_', 'i', 'ch']
				{'string': 'l/_/_/_/_/i/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', '_', '_', '_', 'i', 'ch']
				version split: ['_', '_', '_', '_', '_', 'l', 'i', 'c', 'h']
				{'string': '_/_/_/_/_/l/i', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', '_', '_', 'l', 'i', 'c', 'h']
				version split: ['_', '_', '_', '_', '_', 'l', 'i', 'c', 'h']
				{'string': '_/_/_/_/_/l/i', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', '_', '_', 'l', 'i', 'c', 'h']
				version split: ['_', '_', '_', '_', '_', 'l', 'i', 'ch']
				{'string': '_/_/_/_/_/l/i', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', '_', '_', 'l', 'i', 'ch']
				version split: ['_', '_', '_', '_', '_', 'l', 'i', 'ch']
				{'string': '_/_/_/_/_/l/i', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', '_', '_', 'l', 'i', 'ch']
				version split: ['l', 'i', 'c', 'h', '_']
				{'string': 'l/i/c/h/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', 'c', 'h', '_']
				version split: ['l', 'i', 'c', 'h', '_']
				{'string': 'l/i/c/h/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', 'c', 'h', '_']
				version split: ['l', 'i', 'ch', '_']
				{'string': 'l/i/ch/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', 'ch', '_']
				version split: ['l', 'i', 'ch', '_']
				{'string': 'l/i/ch/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', 'ch', '_']
				version split: ['_', 'l', 'i', 'c', 'h', '_']
				{'string': '_/l/i/c/h/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', 'i', 'c', 'h', '_']
				version split: ['_', 'l', 'i', 'c', 'h', '_']
				{'string': '_/l/i/c/h/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', 'i', 'c', 'h', '_']
				version split: ['_', 'l', 'i', 'ch', '_']
				{'string': '_/l/i/ch/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', 'i', 'ch', '_']
				version split: ['_', 'l', 'i', 'ch', '_']
				{'string': '_/l/i/ch/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', 'i', 'ch', '_']
				version split: ['l', '_', 'i', 'c', 'h', '_']
				{'string': 'l/_/i/c/h/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', 'i', 'c', 'h', '_']
				version split: ['l', '_', 'i', 'c', 'h', '_']
				{'string': 'l/_/i/c/h/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', 'i', 'c', 'h', '_']
				version split: ['l', '_', 'i', 'ch', '_']
				{'string': 'l/_/i/ch/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', 'i', 'ch', '_']
				version split: ['l', '_', 'i', 'ch', '_']
				{'string': 'l/_/i/ch/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', 'i', 'ch', '_']
				version split: ['_', '_', 'l', 'i', 'c', '_', 'h']
				{'string': '_/_/l/i/c/_/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'l', 'i', 'c', '_', 'h']
				version split: ['_', '_', 'l', 'i', 'c', '_', 'h']
				{'string': '_/_/l/i/c/_/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'l', 'i', 'c', '_', 'h']
				version split: ['_', '_', 'l', 'i', 'ch', '_']
				{'string': '_/_/l/i/ch/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'l', 'i', 'ch', '_']
				version split: ['_', '_', 'l', 'i', 'ch', '_']
				{'string': '_/_/l/i/ch/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'l', 'i', 'ch', '_']
				version split: ['l', 'i', '_', 'c', 'h', '_']
				{'string': 'l/i/_/c/h/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', '_', 'c', 'h', '_']
				version split: ['l', 'i', '_', 'c', 'h', '_']
				{'string': 'l/i/_/c/h/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', '_', 'c', 'h', '_']
				version split: ['l', 'i', '_', 'ch', '_']
				{'string': 'l/i/_/ch/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', '_', 'ch', '_']
				version split: ['l', 'i', '_', 'ch', '_']
				{'string': 'l/i/_/ch/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', '_', 'ch', '_']
				version split: ['_', 'l', '_', 'i', 'c', '_', 'h']
				{'string': '_/l/_/i/c/_/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', '_', 'i', 'c', '_', 'h']
				version split: ['_', 'l', '_', 'i', 'c', '_', 'h']
				{'string': '_/l/_/i/c/_/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', '_', 'i', 'c', '_', 'h']
				version split: ['_', 'l', '_', 'i', 'ch', '_']
				{'string': '_/l/_/i/ch/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', '_', 'i', 'ch', '_']
				version split: ['_', 'l', '_', 'i', 'ch', '_']
				{'string': '_/l/_/i/ch/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', '_', 'i', 'ch', '_']
				version split: ['l', '_', '_', 'i', 'c', '_', 'h']
				{'string': 'l/_/_/i/c/_/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', '_', 'i', 'c', '_', 'h']
				version split: ['l', '_', '_', 'i', 'c', '_', 'h']
				{'string': 'l/_/_/i/c/_/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', '_', 'i', 'c', '_', 'h']
				version split: ['l', '_', '_', 'i', 'ch', '_']
				{'string': 'l/_/_/i/ch/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', '_', 'i', 'ch', '_']
				version split: ['l', '_', '_', 'i', 'ch', '_']
				{'string': 'l/_/_/i/ch/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', '_', 'i', 'ch', '_']
				version split: ['_', '_', '_', 'l', 'i', '_', 'c', 'h']
				{'string': '_/_/_/l/i/_/c', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', 'l', 'i', '_', 'c', 'h']
				version split: ['_', '_', '_', 'l', 'i', '_', 'c', 'h']
				{'string': '_/_/_/l/i/_/c', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', 'l', 'i', '_', 'c', 'h']
				version split: ['_', '_', '_', 'l', 'i', '_', 'ch']
				{'string': '_/_/_/l/i/_/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', 'l', 'i', '_', 'ch']
				version split: ['_', '_', '_', 'l', 'i', '_', 'ch']
				{'string': '_/_/_/l/i/_/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', 'l', 'i', '_', 'ch']
				version split: ['l', 'i', 'c', '_', 'h', '_']
				{'string': 'l/i/c/_/h/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', 'c', '_', 'h', '_']
				version split: ['l', 'i', 'c', '_', 'h', '_']
				{'string': 'l/i/c/_/h/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', 'c', '_', 'h', '_']
				version split: ['l', 'i', 'ch', '_', '_']
				{'string': 'l/i/ch/_/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', 'ch', '_', '_']
				version split: ['l', 'i', 'ch', '_', '_']
				{'string': 'l/i/ch/_/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', 'ch', '_', '_']
				version split: ['_', 'l', 'i', '_', 'c', '_', 'h']
				{'string': '_/l/i/_/c/_/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', 'i', '_', 'c', '_', 'h']
				version split: ['_', 'l', 'i', '_', 'c', '_', 'h']
				{'string': '_/l/i/_/c/_/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', 'i', '_', 'c', '_', 'h']
				version split: ['_', 'l', 'i', '_', 'ch', '_']
				{'string': '_/l/i/_/ch/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', 'i', '_', 'ch', '_']
				version split: ['_', 'l', 'i', '_', 'ch', '_']
				{'string': '_/l/i/_/ch/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', 'i', '_', 'ch', '_']
				version split: ['l', '_', 'i', '_', 'c', '_', 'h']
				{'string': 'l/_/i/_/c/_/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', 'i', '_', 'c', '_', 'h']
				version split: ['l', '_', 'i', '_', 'c', '_', 'h']
				{'string': 'l/_/i/_/c/_/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', 'i', '_', 'c', '_', 'h']
				version split: ['l', '_', 'i', '_', 'ch', '_']
				{'string': 'l/_/i/_/ch/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', 'i', '_', 'ch', '_']
				version split: ['l', '_', 'i', '_', 'ch', '_']
				{'string': 'l/_/i/_/ch/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', 'i', '_', 'ch', '_']
				version split: ['_', '_', 'l', '_', 'i', '_', 'c', 'h']
				{'string': '_/_/l/_/i/_/c', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'l', '_', 'i', '_', 'c', 'h']
				version split: ['_', '_', 'l', '_', 'i', '_', 'c', 'h']
				{'string': '_/_/l/_/i/_/c', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'l', '_', 'i', '_', 'c', 'h']
				version split: ['_', '_', 'l', '_', 'i', '_', 'ch']
				{'string': '_/_/l/_/i/_/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'l', '_', 'i', '_', 'ch']
				version split: ['_', '_', 'l', '_', 'i', '_', 'ch']
				{'string': '_/_/l/_/i/_/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'l', '_', 'i', '_', 'ch']
				version split: ['l', 'i', '_', '_', 'c', '_', 'h']
				{'string': 'l/i/_/_/c/_/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', '_', '_', 'c', '_', 'h']
				version split: ['l', 'i', '_', '_', 'c', '_', 'h']
				{'string': 'l/i/_/_/c/_/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', '_', '_', 'c', '_', 'h']
				version split: ['l', 'i', '_', '_', 'ch', '_']
				{'string': 'l/i/_/_/ch/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', '_', '_', 'ch', '_']
				version split: ['l', 'i', '_', '_', 'ch', '_']
				{'string': 'l/i/_/_/ch/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', '_', '_', 'ch', '_']
				version split: ['_', 'l', '_', '_', 'i', '_', 'c', 'h']
				{'string': '_/l/_/_/i/_/c', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', '_', '_', 'i', '_', 'c', 'h']
				version split: ['_', 'l', '_', '_', 'i', '_', 'c', 'h']
				{'string': '_/l/_/_/i/_/c', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', '_', '_', 'i', '_', 'c', 'h']
				version split: ['_', 'l', '_', '_', 'i', '_', 'ch']
				{'string': '_/l/_/_/i/_/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', '_', '_', 'i', '_', 'ch']
				version split: ['_', 'l', '_', '_', 'i', '_', 'ch']
				{'string': '_/l/_/_/i/_/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', '_', '_', 'i', '_', 'ch']
				version split: ['l', '_', '_', '_', 'i', '_', 'c', 'h']
				{'string': 'l/_/_/_/i/_/c', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', '_', '_', 'i', '_', 'c', 'h']
				version split: ['l', '_', '_', '_', 'i', '_', 'c', 'h']
				{'string': 'l/_/_/_/i/_/c', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', '_', '_', 'i', '_', 'c', 'h']
				version split: ['l', '_', '_', '_', 'i', '_', 'ch']
				{'string': 'l/_/_/_/i/_/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', '_', '_', 'i', '_', 'ch']
				version split: ['l', '_', '_', '_', 'i', '_', 'ch']
				{'string': 'l/_/_/_/i/_/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', '_', '_', 'i', '_', 'ch']
				version split: ['_', '_', '_', '_', 'l', '_', 'i', 'c', 'h']
				{'string': '_/_/_/_/l/_/i', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', '_', 'l', '_', 'i', 'c', 'h']
				version split: ['_', '_', '_', '_', 'l', '_', 'i', 'c', 'h']
				{'string': '_/_/_/_/l/_/i', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', '_', 'l', '_', 'i', 'c', 'h']
				version split: ['_', '_', '_', '_', 'l', '_', 'i', 'ch']
				{'string': '_/_/_/_/l/_/i', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', '_', 'l', '_', 'i', 'ch']
				version split: ['_', '_', '_', '_', 'l', '_', 'i', 'ch']
				{'string': '_/_/_/_/l/_/i', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', '_', 'l', '_', 'i', 'ch']
				version split: ['l', 'i', 'c', 'h', '_', '_']
				{'string': 'l/i/c/h/_/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', 'c', 'h', '_', '_']
				version split: ['l', 'i', 'c', 'h', '_', '_']
				{'string': 'l/i/c/h/_/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', 'c', 'h', '_', '_']
				version split: ['l', 'i', 'ch', '_', '_']
				{'string': 'l/i/ch/_/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', 'ch', '_', '_']
				version split: ['l', 'i', 'ch', '_', '_']
				{'string': 'l/i/ch/_/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', 'ch', '_', '_']
				version split: ['_', 'l', 'i', 'c', '_', '_', 'h']
				{'string': '_/l/i/c/_/_/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', 'i', 'c', '_', '_', 'h']
				version split: ['_', 'l', 'i', 'c', '_', '_', 'h']
				{'string': '_/l/i/c/_/_/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', 'i', 'c', '_', '_', 'h']
				version split: ['_', 'l', 'i', 'ch', '_', '_']
				{'string': '_/l/i/ch/_/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', 'i', 'ch', '_', '_']
				version split: ['_', 'l', 'i', 'ch', '_', '_']
				{'string': '_/l/i/ch/_/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', 'i', 'ch', '_', '_']
				version split: ['l', '_', 'i', 'c', '_', '_', 'h']
				{'string': 'l/_/i/c/_/_/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', 'i', 'c', '_', '_', 'h']
				version split: ['l', '_', 'i', 'c', '_', '_', 'h']
				{'string': 'l/_/i/c/_/_/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', 'i', 'c', '_', '_', 'h']
				version split: ['l', '_', 'i', 'ch', '_', '_']
				{'string': 'l/_/i/ch/_/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', 'i', 'ch', '_', '_']
				version split: ['l', '_', 'i', 'ch', '_', '_']
				{'string': 'l/_/i/ch/_/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', 'i', 'ch', '_', '_']
				version split: ['_', '_', 'l', 'i', '_', '_', 'c', 'h']
				{'string': '_/_/l/i/_/_/c', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'l', 'i', '_', '_', 'c', 'h']
				version split: ['_', '_', 'l', 'i', '_', '_', 'c', 'h']
				{'string': '_/_/l/i/_/_/c', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'l', 'i', '_', '_', 'c', 'h']
				version split: ['_', '_', 'l', 'i', '_', '_', 'ch']
				{'string': '_/_/l/i/_/_/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'l', 'i', '_', '_', 'ch']
				version split: ['_', '_', 'l', 'i', '_', '_', 'ch']
				{'string': '_/_/l/i/_/_/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'l', 'i', '_', '_', 'ch']
				version split: ['l', 'i', '_', 'c', '_', '_', 'h']
				{'string': 'l/i/_/c/_/_/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', '_', 'c', '_', '_', 'h']
				version split: ['l', 'i', '_', 'c', '_', '_', 'h']
				{'string': 'l/i/_/c/_/_/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', '_', 'c', '_', '_', 'h']
				version split: ['l', 'i', '_', 'ch', '_', '_']
				{'string': 'l/i/_/ch/_/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', '_', 'ch', '_', '_']
				version split: ['l', 'i', '_', 'ch', '_', '_']
				{'string': 'l/i/_/ch/_/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', '_', 'ch', '_', '_']
				version split: ['_', 'l', '_', 'i', '_', '_', 'c', 'h']
				{'string': '_/l/_/i/_/_/c', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', '_', 'i', '_', '_', 'c', 'h']
				version split: ['_', 'l', '_', 'i', '_', '_', 'c', 'h']
				{'string': '_/l/_/i/_/_/c', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', '_', 'i', '_', '_', 'c', 'h']
				version split: ['_', 'l', '_', 'i', '_', '_', 'ch']
				{'string': '_/l/_/i/_/_/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', '_', 'i', '_', '_', 'ch']
				version split: ['_', 'l', '_', 'i', '_', '_', 'ch']
				{'string': '_/l/_/i/_/_/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', '_', 'i', '_', '_', 'ch']
				version split: ['l', '_', '_', 'i', '_', '_', 'c', 'h']
				{'string': 'l/_/_/i/_/_/c', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', '_', 'i', '_', '_', 'c', 'h']
				version split: ['l', '_', '_', 'i', '_', '_', 'c', 'h']
				{'string': 'l/_/_/i/_/_/c', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', '_', 'i', '_', '_', 'c', 'h']
				version split: ['l', '_', '_', 'i', '_', '_', 'ch']
				{'string': 'l/_/_/i/_/_/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', '_', 'i', '_', '_', 'ch']
				version split: ['l', '_', '_', 'i', '_', '_', 'ch']
				{'string': 'l/_/_/i/_/_/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', '_', 'i', '_', '_', 'ch']
				version split: ['_', '_', '_', 'l', '_', '_', 'i', 'c', 'h']
				{'string': '_/_/_/l/_/_/i', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', 'l', '_', '_', 'i', 'c', 'h']
				version split: ['_', '_', '_', 'l', '_', '_', 'i', 'c', 'h']
				{'string': '_/_/_/l/_/_/i', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', 'l', '_', '_', 'i', 'c', 'h']
				version split: ['_', '_', '_', 'l', '_', '_', 'i', 'ch']
				{'string': '_/_/_/l/_/_/i', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', 'l', '_', '_', 'i', 'ch']
				version split: ['_', '_', '_', 'l', '_', '_', 'i', 'ch']
				{'string': '_/_/_/l/_/_/i', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', 'l', '_', '_', 'i', 'ch']
				version split: ['l', 'i', 'c', '_', '_', '_', 'h']
				{'string': 'l/i/c/_/_/_/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', 'c', '_', '_', '_', 'h']
				version split: ['l', 'i', 'c', '_', '_', '_', 'h']
				{'string': 'l/i/c/_/_/_/h', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', 'c', '_', '_', '_', 'h']
				version split: ['l', 'i', 'ch', '_', '_', '_']
				{'string': 'l/i/ch/_/_/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', 'ch', '_', '_', '_']
				version split: ['l', 'i', 'ch', '_', '_', '_']
				{'string': 'l/i/ch/_/_/_', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', 'ch', '_', '_', '_']
				version split: ['_', 'l', 'i', '_', '_', '_', 'c', 'h']
				{'string': '_/l/i/_/_/_/c', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', 'i', '_', '_', '_', 'c', 'h']
				version split: ['_', 'l', 'i', '_', '_', '_', 'c', 'h']
				{'string': '_/l/i/_/_/_/c', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', 'i', '_', '_', '_', 'c', 'h']
				version split: ['_', 'l', 'i', '_', '_', '_', 'ch']
				{'string': '_/l/i/_/_/_/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', 'i', '_', '_', '_', 'ch']
				version split: ['_', 'l', 'i', '_', '_', '_', 'ch']
				{'string': '_/l/i/_/_/_/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', 'i', '_', '_', '_', 'ch']
				version split: ['l', '_', 'i', '_', '_', '_', 'c', 'h']
				{'string': 'l/_/i/_/_/_/c', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', 'i', '_', '_', '_', 'c', 'h']
				version split: ['l', '_', 'i', '_', '_', '_', 'c', 'h']
				{'string': 'l/_/i/_/_/_/c', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', 'i', '_', '_', '_', 'c', 'h']
				version split: ['l', '_', 'i', '_', '_', '_', 'ch']
				{'string': 'l/_/i/_/_/_/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', 'i', '_', '_', '_', 'ch']
				version split: ['l', '_', 'i', '_', '_', '_', 'ch']
				{'string': 'l/_/i/_/_/_/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', 'i', '_', '_', '_', 'ch']
				version split: ['_', '_', 'l', '_', '_', '_', 'i', 'c', 'h']
				{'string': '_/_/l/_/_/_/i', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'l', '_', '_', '_', 'i', 'c', 'h']
				version split: ['_', '_', 'l', '_', '_', '_', 'i', 'c', 'h']
				{'string': '_/_/l/_/_/_/i', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'l', '_', '_', '_', 'i', 'c', 'h']
				version split: ['_', '_', 'l', '_', '_', '_', 'i', 'ch']
				{'string': '_/_/l/_/_/_/i', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'l', '_', '_', '_', 'i', 'ch']
				version split: ['_', '_', 'l', '_', '_', '_', 'i', 'ch']
				{'string': '_/_/l/_/_/_/i', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'l', '_', '_', '_', 'i', 'ch']
				version split: ['l', 'i', '_', '_', '_', '_', 'c', 'h']
				{'string': 'l/i/_/_/_/_/c', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', '_', '_', '_', '_', 'c', 'h']
				version split: ['l', 'i', '_', '_', '_', '_', 'c', 'h']
				{'string': 'l/i/_/_/_/_/c', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', '_', '_', '_', '_', 'c', 'h']
				version split: ['l', 'i', '_', '_', '_', '_', 'ch']
				{'string': 'l/i/_/_/_/_/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', '_', '_', '_', '_', 'ch']
				version split: ['l', 'i', '_', '_', '_', '_', 'ch']
				{'string': 'l/i/_/_/_/_/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', '_', '_', '_', '_', 'ch']
				version split: ['_', 'l', '_', '_', '_', '_', 'i', 'c', 'h']
				{'string': '_/l/_/_/_/_/i', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', '_', '_', '_', '_', 'i', 'c', 'h']
				version split: ['_', 'l', '_', '_', '_', '_', 'i', 'c', 'h']
				{'string': '_/l/_/_/_/_/i', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', '_', '_', '_', '_', 'i', 'c', 'h']
				version split: ['_', 'l', '_', '_', '_', '_', 'i', 'ch']
				{'string': '_/l/_/_/_/_/i', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', '_', '_', '_', '_', 'i', 'ch']
				version split: ['_', 'l', '_', '_', '_', '_', 'i', 'ch']
				{'string': '_/l/_/_/_/_/i', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', '_', '_', '_', '_', 'i', 'ch']
				version split: ['l', '_', '_', '_', '_', '_', 'i', 'c', 'h']
				{'string': 'l/_/_/_/_/_/i', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', '_', '_', '_', '_', 'i', 'c', 'h']
				version split: ['l', '_', '_', '_', '_', '_', 'i', 'c', 'h']
				{'string': 'l/_/_/_/_/_/i', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', '_', '_', '_', '_', 'i', 'c', 'h']
				version split: ['l', '_', '_', '_', '_', '_', 'i', 'ch']
				{'string': 'l/_/_/_/_/_/i', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', '_', '_', '_', '_', 'i', 'ch']
				version split: ['l', '_', '_', '_', '_', '_', 'i', 'ch']
				{'string': 'l/_/_/_/_/_/i', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', '_', '_', '_', '_', 'i', 'ch']
				version split: ['_', '_', '_', '_', '_', '_', 'l', 'i', 'c', 'h']
				{'string': '_/_/_/_/_/_/l', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', '_', '_', '_', 'l', 'i', 'c', 'h']
				version split: ['_', '_', '_', '_', '_', '_', 'l', 'i', 'c', 'h']
				{'string': '_/_/_/_/_/_/l', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', '_', '_', '_', 'l', 'i', 'c', 'h']
				version split: ['_', '_', '_', '_', '_', '_', 'l', 'i', 'ch']
				{'string': '_/_/_/_/_/_/l', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', '_', '_', '_', 'l', 'i', 'ch']
				version split: ['_', '_', '_', '_', '_', '_', 'l', 'i', 'ch']
				{'string': '_/_/_/_/_/_/l', 'rgx': '((_))/((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', '_', '_', '_', 'l', 'i', 'ch']
				ANALYSING: liche
					resolving (64)
					> version: l/i/c/h/e
					> version: l/i/c/h/e
					> version: l/i/ch/e
					> version: l/i/ch/e
					> version: _/l/i/c/h/e
					TRYING: e
					> version: _/l/i/c/h/e
					TRYING: e
					> version: _/l/i/ch/e
					> version: _/l/i/ch/e
					> version: l/_/i/c/h/e
					TRYING: e
					> version: l/_/i/c/h/e
					TRYING: e
					> version: l/_/i/ch/e
					> version: l/_/i/ch/e
					> version: _/_/l/i/c/h/e
					TRYING: h
					adding blocked set: C = C >> h, _, n
					> version: _/_/l/i/c/h/e
					TRYING: h
					adding blocked set: C = C >> h, _, n
					> version: _/_/l/i/ch/e
					TRYING: e
					> version: _/_/l/i/ch/e
					TRYING: e
					> version: l/i/_/c/h/e
					TRYING: e
					> version: l/i/_/c/h/e
					TRYING: e
					> version: l/i/_/ch/e
					> version: l/i/_/ch/e
					> version: _/l/_/i/c/h/e
					TRYING: h
					adding blocked set: C = C >> h, _, n
					> version: _/l/_/i/c/h/e
					TRYING: h
					adding blocked set: C = C >> h, _, n
					> version: _/l/_/i/ch/e
					TRYING: e
					> version: _/l/_/i/ch/e
					TRYING: e
					> version: l/_/_/i/c/h/e
					TRYING: h
					adding blocked set: C = C >> h, _, n
					> version: l/_/_/i/c/h/e
					TRYING: h
					adding blocked set: C = C >> h, _, n
					> version: l/_/_/i/ch/e
					TRYING: e
					> version: l/_/_/i/ch/e
					TRYING: e
					> version: _/_/_/l/i/c/h/e
					TRYING: c
					adding blocked set: C = C >> c, _, n
					> version: _/_/_/l/i/c/h/e
					TRYING: c
					adding blocked set: C = C >> c, _, n
					> version: _/_/_/l/i/ch/e
					TRYING: ch
					adding blocked set: C = C >> ch, _, n
					> version: _/_/_/l/i/ch/e
					TRYING: ch
					adding blocked set: C = C >> ch, _, n
					> version: l/i/c/h/_/e
					TRYING: e
					> version: l/i/c/h/_/e
					TRYING: e
					> version: l/i/ch/e/_
					> version: l/i/ch/e/_
					> version: _/l/i/c/_/h/e
					TRYING: h
					adding blocked set: C = C >> h, _, n
					> version: _/l/i/c/_/h/e
					TRYING: h
					adding blocked set: C = C >> h, _, n
					> version: _/l/i/ch/_/e
					TRYING: e
					> version: _/l/i/ch/_/e
					TRYING: e
					> version: l/_/i/c/_/h/e
					TRYING: h
					adding blocked set: C = C >> h, _, n
					> version: l/_/i/c/_/h/e
					TRYING: h
					adding blocked set: C = C >> h, _, n
					> version: l/_/i/ch/_/e
					TRYING: e
					> version: l/_/i/ch/_/e
					TRYING: e
					> version: _/_/l/i/_/c/h/e
					TRYING: c
					adding blocked set: C = C >> c, _, n
					> version: _/_/l/i/_/c/h/e
					TRYING: c
					adding blocked set: C = C >> c, _, n
					> version: _/_/l/i/_/ch/e
					TRYING: ch
					adding blocked set: C = C >> ch, _, n
					> version: _/_/l/i/_/ch/e
					TRYING: ch
					adding blocked set: C = C >> ch, _, n
					> version: l/i/_/c/_/h/e
					TRYING: h
					adding blocked set: C = C >> h, _, n
					> version: l/i/_/c/_/h/e
					TRYING: h
					adding blocked set: C = C >> h, _, n
					> version: l/i/_/ch/_/e
					TRYING: e
					> version: l/i/_/ch/_/e
					TRYING: e
					> version: _/l/_/i/_/c/h/e
					TRYING: c
					adding blocked set: C = C >> c, _, n
					> version: _/l/_/i/_/c/h/e
					TRYING: c
					adding blocked set: C = C >> c, _, n
					> version: _/l/_/i/_/ch/e
					TRYING: ch
					adding blocked set: C = C >> ch, _, n
					> version: _/l/_/i/_/ch/e
					TRYING: ch
					adding blocked set: C = C >> ch, _, n
					> version: l/_/_/i/_/c/h/e
					TRYING: c
					adding blocked set: C = C >> c, _, n
					> version: l/_/_/i/_/c/h/e
					TRYING: c
					adding blocked set: C = C >> c, _, n
					> version: l/_/_/i/_/ch/e
					TRYING: ch
					adding blocked set: C = C >> ch, _, n
					> version: l/_/_/i/_/ch/e
					TRYING: ch
					adding blocked set: C = C >> ch, _, n
					> version: _/_/_/l/_/i/c/h/e
					TRYING: i
					adding blocked set: C = C >> i, _, n
					> version: _/_/_/l/_/i/c/h/e
					TRYING: i
					adding blocked set: C = C >> i, _, n
					> version: _/_/_/l/_/i/ch/e
					TRYING: i
					adding blocked set: C = C >> i, _, n
					> version: _/_/_/l/_/i/ch/e
					TRYING: i
					adding blocked set: C = C >> i, _, n
					RESULT:  ['_']
				adding dashed alternative: ['l', 'i', 'c', 'h', 'e', '_']
				adding dashed alternative: ['l', 'i', 'c', 'h', 'e', '_']
				adding dashed alternative: ['l', 'i', 'ch', 'e', '_']
				adding dashed alternative: ['l', 'i', 'ch', 'e', '_']
				adding dashed alternative: ['_', 'l', 'i', 'c', 'h', '_', 'e']
				adding dashed alternative: ['_', 'l', 'i', 'c', 'h', '_', 'e']
				adding dashed alternative: ['_', 'l', 'i', 'ch', 'e', '_']
				adding dashed alternative: ['_', 'l', 'i', 'ch', 'e', '_']
				adding dashed alternative: ['l', '_', 'i', 'c', 'h', '_', 'e']
				adding dashed alternative: ['l', '_', 'i', 'c', 'h', '_', 'e']
				adding dashed alternative: ['l', '_', 'i', 'ch', 'e', '_']
				adding dashed alternative: ['l', '_', 'i', 'ch', 'e', '_']
				adding dashed alternative: ['_', '_', 'l', 'i', 'c', '_', 'h', 'e']
				adding dashed alternative: ['_', '_', 'l', 'i', 'c', '_', 'h', 'e']
				adding dashed alternative: ['_', '_', 'l', 'i', 'ch', '_', 'e']
				adding dashed alternative: ['_', '_', 'l', 'i', 'ch', '_', 'e']
				adding dashed alternative: ['l', 'i', '_', 'c', 'h', '_', 'e']
				adding dashed alternative: ['l', 'i', '_', 'c', 'h', '_', 'e']
				adding dashed alternative: ['l', 'i', '_', 'ch', 'e', '_']
				adding dashed alternative: ['l', 'i', '_', 'ch', 'e', '_']
				adding dashed alternative: ['_', 'l', '_', 'i', 'c', '_', 'h', 'e']
				adding dashed alternative: ['_', 'l', '_', 'i', 'c', '_', 'h', 'e']
				adding dashed alternative: ['_', 'l', '_', 'i', 'ch', '_', 'e']
				adding dashed alternative: ['_', 'l', '_', 'i', 'ch', '_', 'e']
				adding dashed alternative: ['l', '_', '_', 'i', 'c', '_', 'h', 'e']
				adding dashed alternative: ['l', '_', '_', 'i', 'c', '_', 'h', 'e']
				adding dashed alternative: ['l', '_', '_', 'i', 'ch', '_', 'e']
				adding dashed alternative: ['l', '_', '_', 'i', 'ch', '_', 'e']
				adding dashed alternative: ['_', '_', '_', 'l', 'i', '_', 'c', 'h', 'e']
				adding dashed alternative: ['_', '_', '_', 'l', 'i', '_', 'c', 'h', 'e']
				adding dashed alternative: ['_', '_', '_', 'l', 'i', '_', 'ch', 'e']
				adding dashed alternative: ['_', '_', '_', 'l', 'i', '_', 'ch', 'e']
				adding dashed alternative: ['l', 'i', 'c', 'h', '_', '_', 'e']
				adding dashed alternative: ['l', 'i', 'c', 'h', '_', '_', 'e']
				adding dashed alternative: ['l', 'i', 'ch', 'e', '_', '_']
				adding dashed alternative: ['l', 'i', 'ch', 'e', '_', '_']
				adding dashed alternative: ['_', 'l', 'i', 'c', '_', '_', 'h', 'e']
				adding dashed alternative: ['_', 'l', 'i', 'c', '_', '_', 'h', 'e']
				adding dashed alternative: ['_', 'l', 'i', 'ch', '_', '_', 'e']
				adding dashed alternative: ['_', 'l', 'i', 'ch', '_', '_', 'e']
				adding dashed alternative: ['l', '_', 'i', 'c', '_', '_', 'h', 'e']
				adding dashed alternative: ['l', '_', 'i', 'c', '_', '_', 'h', 'e']
				adding dashed alternative: ['l', '_', 'i', 'ch', '_', '_', 'e']
				adding dashed alternative: ['l', '_', 'i', 'ch', '_', '_', 'e']
				adding dashed alternative: ['_', '_', 'l', 'i', '_', '_', 'c', 'h', 'e']
				adding dashed alternative: ['_', '_', 'l', 'i', '_', '_', 'c', 'h', 'e']
				adding dashed alternative: ['_', '_', 'l', 'i', '_', '_', 'ch', 'e']
				adding dashed alternative: ['_', '_', 'l', 'i', '_', '_', 'ch', 'e']
				adding dashed alternative: ['l', 'i', '_', 'c', '_', '_', 'h', 'e']
				adding dashed alternative: ['l', 'i', '_', 'c', '_', '_', 'h', 'e']
				adding dashed alternative: ['l', 'i', '_', 'ch', '_', '_', 'e']
				adding dashed alternative: ['l', 'i', '_', 'ch', '_', '_', 'e']
				adding dashed alternative: ['_', 'l', '_', 'i', '_', '_', 'c', 'h', 'e']
				adding dashed alternative: ['_', 'l', '_', 'i', '_', '_', 'c', 'h', 'e']
				adding dashed alternative: ['_', 'l', '_', 'i', '_', '_', 'ch', 'e']
				adding dashed alternative: ['_', 'l', '_', 'i', '_', '_', 'ch', 'e']
				adding dashed alternative: ['l', '_', '_', 'i', '_', '_', 'c', 'h', 'e']
				adding dashed alternative: ['l', '_', '_', 'i', '_', '_', 'c', 'h', 'e']
				adding dashed alternative: ['l', '_', '_', 'i', '_', '_', 'ch', 'e']
				adding dashed alternative: ['l', '_', '_', 'i', '_', '_', 'ch', 'e']
				adding dashed alternative: ['_', '_', '_', 'l', '_', '_', 'i', 'c', 'h', 'e']
				adding dashed alternative: ['_', '_', '_', 'l', '_', '_', 'i', 'c', 'h', 'e']
				adding dashed alternative: ['_', '_', '_', 'l', '_', '_', 'i', 'ch', 'e']
				adding dashed alternative: ['_', '_', '_', 'l', '_', '_', 'i', 'ch', 'e']
				l/i/c/h/e(CCCCV)
l/i/c/h/e(CVCCV)
l/i/ch/e(CCCV)
l/i/ch/e(CVCV)
_/l/i/c/h/e(ACACCV)
_/l/i/c/h/e(ACACCV)
_/l/i/ch/e(ACACV)
_/l/i/ch/e(ACACV)
l/_/i/c/h/e(CAACCV)
l/_/i/c/h/e(CAACCV)
l/_/i/ch/e(CAACV)
l/_/i/ch/e(CAACV)
_/_/l/i/c/h/e(AACACCV)
_/_/l/i/c/h/e(AACACCV)
_/_/l/i/ch/e(AACACV)
_/_/l/i/ch/e(AACACV)
l/i/_/c/h/e(CAACCV)
l/i/_/c/h/e(CAACCV)
l/i/_/ch/e(CAACV)
l/i/_/ch/e(CAACV)
_/l/_/i/c/h/e(ACAACCV)
_/l/_/i/c/h/e(ACAACCV)
_/l/_/i/ch/e(ACAACV)
_/l/_/i/ch/e(ACAACV)
l/_/_/i/c/h/e(CAAACCV)
l/_/_/i/c/h/e(CAAACCV)
l/_/_/i/ch/e(CAAACV)
l/_/_/i/ch/e(CAAACV)
_/_/_/l/i/c/h/e(AAACACCV)
_/_/_/l/i/c/h/e(AAACACCV)
_/_/_/l/i/ch/e(AAACACV)
_/_/_/l/i/ch/e(AAACACV)
l/i/c/h/_/e(CACCAV)
l/i/c/h/_/e(CACCAV)
l/i/ch/e/_(CACVA)
l/i/ch/e/_(CACVA)
_/l/i/c/_/h/e(ACACACV)
_/l/i/c/_/h/e(ACACACV)
_/l/i/ch/_/e(ACACAV)
_/l/i/ch/_/e(ACACAV)
l/_/i/c/_/h/e(CAACACV)
l/_/i/c/_/h/e(CAACACV)
l/_/i/ch/_/e(CAACAV)
l/_/i/ch/_/e(CAACAV)
_/_/l/i/_/c/h/e(AACAACCV)
_/_/l/i/_/c/h/e(AACAACCV)
_/_/l/i/_/ch/e(AACAACV)
_/_/l/i/_/ch/e(AACAACV)
l/i/_/c/_/h/e(CAACACV)
l/i/_/c/_/h/e(CAACACV)
l/i/_/ch/_/e(CAACAV)
l/i/_/ch/_/e(CAACAV)
_/l/_/i/_/c/h/e(ACAAACCV)
_/l/_/i/_/c/h/e(ACAAACCV)
_/l/_/i/_/ch/e(ACAAACV)
_/l/_/i/_/ch/e(ACAAACV)
l/_/_/i/_/c/h/e(CAAAACCV)
l/_/_/i/_/c/h/e(CAAAACCV)
l/_/_/i/_/ch/e(CAAAACV)
l/_/_/i/_/ch/e(CAAAACV)
_/_/_/l/_/i/c/h/e(AAACAACCV)
_/_/_/l/_/i/c/h/e(AAACAACCV)
_/_/_/l/_/i/ch/e(AAACAACV)
_/_/_/l/_/i/ch/e(AAACAACV)
l/i/c/h/e/_(CACCVA)
l/i/c/h/e/_(CACCVA)
l/i/ch/e/_(CACVA)
l/i/ch/e/_(CACVA)
_/l/i/c/h/_/e(ACACCAV)
_/l/i/c/h/_/e(ACACCAV)
_/l/i/ch/e/_(ACACVA)
_/l/i/ch/e/_(ACACVA)
l/_/i/c/h/_/e(CAACCAV)
l/_/i/c/h/_/e(CAACCAV)
l/_/i/ch/e/_(CAACVA)
l/_/i/ch/e/_(CAACVA)
_/_/l/i/c/_/h/e(AACACACV)
_/_/l/i/c/_/h/e(AACACACV)
_/_/l/i/ch/_/e(AACACAV)
_/_/l/i/ch/_/e(AACACAV)
l/i/_/c/h/_/e(CAACCAV)
l/i/_/c/h/_/e(CAACCAV)
l/i/_/ch/e/_(CAACVA)
l/i/_/ch/e/_(CAACVA)
_/l/_/i/c/_/h/e(ACAACACV)
_/l/_/i/c/_/h/e(ACAACACV)
_/l/_/i/ch/_/e(ACAACAV)
_/l/_/i/ch/_/e(ACAACAV)
l/_/_/i/c/_/h/e(CAAACACV)
l/_/_/i/c/_/h/e(CAAACACV)
l/_/_/i/ch/_/e(CAAACAV)
l/_/_/i/ch/_/e(CAAACAV)
_/_/_/l/i/_/c/h/e(AAACAACCV)
_/_/_/l/i/_/c/h/e(AAACAACCV)
_/_/_/l/i/_/ch/e(AAACAACV)
_/_/_/l/i/_/ch/e(AAACAACV)
l/i/c/h/_/_/e(CACCAAV)
l/i/c/h/_/_/e(CACCAAV)
l/i/ch/e/_/_(CACVAA)
l/i/ch/e/_/_(CACVAA)
_/l/i/c/_/_/h/e(ACACAACV)
_/l/i/c/_/_/h/e(ACACAACV)
_/l/i/ch/_/_/e(ACACAAV)
_/l/i/ch/_/_/e(ACACAAV)
l/_/i/c/_/_/h/e(CAACAACV)
l/_/i/c/_/_/h/e(CAACAACV)
l/_/i/ch/_/_/e(CAACAAV)
l/_/i/ch/_/_/e(CAACAAV)
_/_/l/i/_/_/c/h/e(AACAAACCV)
_/_/l/i/_/_/c/h/e(AACAAACCV)
_/_/l/i/_/_/ch/e(AACAAACV)
_/_/l/i/_/_/ch/e(AACAAACV)
l/i/_/c/_/_/h/e(CAACAACV)
l/i/_/c/_/_/h/e(CAACAACV)
l/i/_/ch/_/_/e(CAACAAV)
l/i/_/ch/_/_/e(CAACAAV)
_/l/_/i/_/_/c/h/e(ACAAAACCV)
_/l/_/i/_/_/c/h/e(ACAAAACCV)
_/l/_/i/_/_/ch/e(ACAAAACV)
_/l/_/i/_/_/ch/e(ACAAAACV)
l/_/_/i/_/_/c/h/e(CAAAAACCV)
l/_/_/i/_/_/c/h/e(CAAAAACCV)
l/_/_/i/_/_/ch/e(CAAAAACV)
l/_/_/i/_/_/ch/e(CAAAAACV)
_/_/_/l/_/_/i/c/h/e(AAACAAACCV)
_/_/_/l/_/_/i/c/h/e(AAACAAACCV)
_/_/_/l/_/_/i/ch/e(AAACAAACV)
_/_/_/l/_/_/i/ch/e(AAACAAACV)
				version split: ['l', 'i', 'c', 'h', 'e']
				{'string': 'l/i/c/h/e', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['l', 'i', 'c', 'h', 'e']
				version split: ['l', 'i', 'c', 'h', 'e']
				{'string': 'l/i/c/h/e', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['l', 'i', 'c', 'h', 'e']
				version split: ['l', 'i', 'ch', 'e']
				{'string': 'l/i/ch/e', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['l', 'i', 'ch', 'e']
				version split: ['l', 'i', 'ch', 'e']
				{'string': 'l/i/ch/e', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['l', 'i', 'ch', 'e']
				version split: ['_', 'l', 'i', 'c', 'h', 'e']
				{'string': '_/l/i/c/h/e', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['_', 'l', 'i', 'c', 'h', 'e']
				version split: ['_', 'l', 'i', 'c', 'h', 'e']
				{'string': '_/l/i/c/h/e', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['_', 'l', 'i', 'c', 'h', 'e']
				version split: ['_', 'l', 'i', 'ch', 'e']
				{'string': '_/l/i/ch/e', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['_', 'l', 'i', 'ch', 'e']
				version split: ['_', 'l', 'i', 'ch', 'e']
				{'string': '_/l/i/ch/e', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['_', 'l', 'i', 'ch', 'e']
				version split: ['l', '_', 'i', 'c', 'h', 'e']
				{'string': 'l/_/i/c/h/e', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['l', '_', 'i', 'c', 'h', 'e']
				version split: ['l', '_', 'i', 'c', 'h', 'e']
				{'string': 'l/_/i/c/h/e', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['l', '_', 'i', 'c', 'h', 'e']
				version split: ['l', '_', 'i', 'ch', 'e']
				{'string': 'l/_/i/ch/e', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['l', '_', 'i', 'ch', 'e']
				version split: ['l', '_', 'i', 'ch', 'e']
				{'string': 'l/_/i/ch/e', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['l', '_', 'i', 'ch', 'e']
				version split: ['_', '_', 'l', 'i', 'c', 'h', 'e']
				{'string': '_/_/l/i/c/h/e', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'l', 'i', 'c', 'h', 'e']
				version split: ['_', '_', 'l', 'i', 'c', 'h', 'e']
				{'string': '_/_/l/i/c/h/e', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'l', 'i', 'c', 'h', 'e']
				version split: ['_', '_', 'l', 'i', 'ch', 'e']
				{'string': '_/_/l/i/ch/e', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'l', 'i', 'ch', 'e']
				version split: ['_', '_', 'l', 'i', 'ch', 'e']
				{'string': '_/_/l/i/ch/e', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'l', 'i', 'ch', 'e']
				version split: ['l', 'i', '_', 'c', 'h', 'e']
				{'string': 'l/i/_/c/h/e', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['l', 'i', '_', 'c', 'h', 'e']
				version split: ['l', 'i', '_', 'c', 'h', 'e']
				{'string': 'l/i/_/c/h/e', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['l', 'i', '_', 'c', 'h', 'e']
				version split: ['l', 'i', '_', 'ch', 'e']
				{'string': 'l/i/_/ch/e', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['l', 'i', '_', 'ch', 'e']
				version split: ['l', 'i', '_', 'ch', 'e']
				{'string': 'l/i/_/ch/e', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['l', 'i', '_', 'ch', 'e']
				version split: ['_', 'l', '_', 'i', 'c', 'h', 'e']
				{'string': '_/l/_/i/c/h/e', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['_', 'l', '_', 'i', 'c', 'h', 'e']
				version split: ['_', 'l', '_', 'i', 'c', 'h', 'e']
				{'string': '_/l/_/i/c/h/e', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['_', 'l', '_', 'i', 'c', 'h', 'e']
				version split: ['_', 'l', '_', 'i', 'ch', 'e']
				{'string': '_/l/_/i/ch/e', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['_', 'l', '_', 'i', 'ch', 'e']
				version split: ['_', 'l', '_', 'i', 'ch', 'e']
				{'string': '_/l/_/i/ch/e', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['_', 'l', '_', 'i', 'ch', 'e']
				version split: ['l', '_', '_', 'i', 'c', 'h', 'e']
				{'string': 'l/_/_/i/c/h/e', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['l', '_', '_', 'i', 'c', 'h', 'e']
				version split: ['l', '_', '_', 'i', 'c', 'h', 'e']
				{'string': 'l/_/_/i/c/h/e', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['l', '_', '_', 'i', 'c', 'h', 'e']
				version split: ['l', '_', '_', 'i', 'ch', 'e']
				{'string': 'l/_/_/i/ch/e', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['l', '_', '_', 'i', 'ch', 'e']
				version split: ['l', '_', '_', 'i', 'ch', 'e']
				{'string': 'l/_/_/i/ch/e', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['l', '_', '_', 'i', 'ch', 'e']
				version split: ['_', '_', '_', 'l', 'i', 'c', 'h', 'e']
				{'string': '_/_/_/l/i/c/h', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', 'l', 'i', 'c', 'h', 'e']
				version split: ['_', '_', '_', 'l', 'i', 'c', 'h', 'e']
				{'string': '_/_/_/l/i/c/h', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', 'l', 'i', 'c', 'h', 'e']
				version split: ['_', '_', '_', 'l', 'i', 'ch', 'e']
				{'string': '_/_/_/l/i/ch/e', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', 'l', 'i', 'ch', 'e']
				version split: ['_', '_', '_', 'l', 'i', 'ch', 'e']
				{'string': '_/_/_/l/i/ch/e', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', 'l', 'i', 'ch', 'e']
				version split: ['l', 'i', 'c', 'h', '_', 'e']
				{'string': 'l/i/c/h/_/e', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['l', 'i', 'c', 'h', '_', 'e']
				version split: ['l', 'i', 'c', 'h', '_', 'e']
				{'string': 'l/i/c/h/_/e', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['l', 'i', 'c', 'h', '_', 'e']
				version split: ['l', 'i', 'ch', 'e', '_']
				{'string': 'l/i/ch/e/_', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['l', 'i', 'ch', 'e', '_']
				version split: ['l', 'i', 'ch', 'e', '_']
				{'string': 'l/i/ch/e/_', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['l', 'i', 'ch', 'e', '_']
				version split: ['_', 'l', 'i', 'c', '_', 'h', 'e']
				{'string': '_/l/i/c/_/h/e', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['_', 'l', 'i', 'c', '_', 'h', 'e']
				version split: ['_', 'l', 'i', 'c', '_', 'h', 'e']
				{'string': '_/l/i/c/_/h/e', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['_', 'l', 'i', 'c', '_', 'h', 'e']
				version split: ['_', 'l', 'i', 'ch', '_', 'e']
				{'string': '_/l/i/ch/_/e', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['_', 'l', 'i', 'ch', '_', 'e']
				version split: ['_', 'l', 'i', 'ch', '_', 'e']
				{'string': '_/l/i/ch/_/e', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['_', 'l', 'i', 'ch', '_', 'e']
				version split: ['l', '_', 'i', 'c', '_', 'h', 'e']
				{'string': 'l/_/i/c/_/h/e', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['l', '_', 'i', 'c', '_', 'h', 'e']
				version split: ['l', '_', 'i', 'c', '_', 'h', 'e']
				{'string': 'l/_/i/c/_/h/e', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['l', '_', 'i', 'c', '_', 'h', 'e']
				version split: ['l', '_', 'i', 'ch', '_', 'e']
				{'string': 'l/_/i/ch/_/e', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['l', '_', 'i', 'ch', '_', 'e']
				version split: ['l', '_', 'i', 'ch', '_', 'e']
				{'string': 'l/_/i/ch/_/e', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['l', '_', 'i', 'ch', '_', 'e']
				version split: ['_', '_', 'l', 'i', '_', 'c', 'h', 'e']
				{'string': '_/_/l/i/_/c/h', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'l', 'i', '_', 'c', 'h', 'e']
				version split: ['_', '_', 'l', 'i', '_', 'c', 'h', 'e']
				{'string': '_/_/l/i/_/c/h', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'l', 'i', '_', 'c', 'h', 'e']
				version split: ['_', '_', 'l', 'i', '_', 'ch', 'e']
				{'string': '_/_/l/i/_/ch/e', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'l', 'i', '_', 'ch', 'e']
				version split: ['_', '_', 'l', 'i', '_', 'ch', 'e']
				{'string': '_/_/l/i/_/ch/e', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'l', 'i', '_', 'ch', 'e']
				version split: ['l', 'i', '_', 'c', '_', 'h', 'e']
				{'string': 'l/i/_/c/_/h/e', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['l', 'i', '_', 'c', '_', 'h', 'e']
				version split: ['l', 'i', '_', 'c', '_', 'h', 'e']
				{'string': 'l/i/_/c/_/h/e', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['l', 'i', '_', 'c', '_', 'h', 'e']
				version split: ['l', 'i', '_', 'ch', '_', 'e']
				{'string': 'l/i/_/ch/_/e', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['l', 'i', '_', 'ch', '_', 'e']
				version split: ['l', 'i', '_', 'ch', '_', 'e']
				{'string': 'l/i/_/ch/_/e', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['l', 'i', '_', 'ch', '_', 'e']
				version split: ['_', 'l', '_', 'i', '_', 'c', 'h', 'e']
				{'string': '_/l/_/i/_/c/h', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['_', 'l', '_', 'i', '_', 'c', 'h', 'e']
				version split: ['_', 'l', '_', 'i', '_', 'c', 'h', 'e']
				{'string': '_/l/_/i/_/c/h', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['_', 'l', '_', 'i', '_', 'c', 'h', 'e']
				version split: ['_', 'l', '_', 'i', '_', 'ch', 'e']
				{'string': '_/l/_/i/_/ch/e', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['_', 'l', '_', 'i', '_', 'ch', 'e']
				version split: ['_', 'l', '_', 'i', '_', 'ch', 'e']
				{'string': '_/l/_/i/_/ch/e', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['_', 'l', '_', 'i', '_', 'ch', 'e']
				version split: ['l', '_', '_', 'i', '_', 'c', 'h', 'e']
				{'string': 'l/_/_/i/_/c/h', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['l', '_', '_', 'i', '_', 'c', 'h', 'e']
				version split: ['l', '_', '_', 'i', '_', 'c', 'h', 'e']
				{'string': 'l/_/_/i/_/c/h', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['l', '_', '_', 'i', '_', 'c', 'h', 'e']
				version split: ['l', '_', '_', 'i', '_', 'ch', 'e']
				{'string': 'l/_/_/i/_/ch/e', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['l', '_', '_', 'i', '_', 'ch', 'e']
				version split: ['l', '_', '_', 'i', '_', 'ch', 'e']
				{'string': 'l/_/_/i/_/ch/e', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['l', '_', '_', 'i', '_', 'ch', 'e']
				version split: ['_', '_', '_', 'l', '_', 'i', 'c', 'h', 'e']
				{'string': '_/_/_/l/_/i/c', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', 'l', '_', 'i', 'c', 'h', 'e']
				version split: ['_', '_', '_', 'l', '_', 'i', 'c', 'h', 'e']
				{'string': '_/_/_/l/_/i/c', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', 'l', '_', 'i', 'c', 'h', 'e']
				version split: ['_', '_', '_', 'l', '_', 'i', 'ch', 'e']
				{'string': '_/_/_/l/_/i/ch', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', 'l', '_', 'i', 'ch', 'e']
				version split: ['_', '_', '_', 'l', '_', 'i', 'ch', 'e']
				{'string': '_/_/_/l/_/i/ch', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', 'l', '_', 'i', 'ch', 'e']
				version split: ['l', 'i', 'c', 'h', 'e', '_']
				{'string': 'l/i/c/h/e/_', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['l', 'i', 'c', 'h', 'e', '_']
				version split: ['l', 'i', 'c', 'h', 'e', '_']
				{'string': 'l/i/c/h/e/_', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['l', 'i', 'c', 'h', 'e', '_']
				version split: ['l', 'i', 'ch', 'e', '_']
				{'string': 'l/i/ch/e/_', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['l', 'i', 'ch', 'e', '_']
				version split: ['l', 'i', 'ch', 'e', '_']
				{'string': 'l/i/ch/e/_', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['l', 'i', 'ch', 'e', '_']
				version split: ['_', 'l', 'i', 'c', 'h', '_', 'e']
				{'string': '_/l/i/c/h/_/e', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['_', 'l', 'i', 'c', 'h', '_', 'e']
				version split: ['_', 'l', 'i', 'c', 'h', '_', 'e']
				{'string': '_/l/i/c/h/_/e', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['_', 'l', 'i', 'c', 'h', '_', 'e']
				version split: ['_', 'l', 'i', 'ch', 'e', '_']
				{'string': '_/l/i/ch/e/_', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['_', 'l', 'i', 'ch', 'e', '_']
				version split: ['_', 'l', 'i', 'ch', 'e', '_']
				{'string': '_/l/i/ch/e/_', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['_', 'l', 'i', 'ch', 'e', '_']
				version split: ['l', '_', 'i', 'c', 'h', '_', 'e']
				{'string': 'l/_/i/c/h/_/e', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['l', '_', 'i', 'c', 'h', '_', 'e']
				version split: ['l', '_', 'i', 'c', 'h', '_', 'e']
				{'string': 'l/_/i/c/h/_/e', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['l', '_', 'i', 'c', 'h', '_', 'e']
				version split: ['l', '_', 'i', 'ch', 'e', '_']
				{'string': 'l/_/i/ch/e/_', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['l', '_', 'i', 'ch', 'e', '_']
				version split: ['l', '_', 'i', 'ch', 'e', '_']
				{'string': 'l/_/i/ch/e/_', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['l', '_', 'i', 'ch', 'e', '_']
				version split: ['_', '_', 'l', 'i', 'c', '_', 'h', 'e']
				{'string': '_/_/l/i/c/_/h', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'l', 'i', 'c', '_', 'h', 'e']
				version split: ['_', '_', 'l', 'i', 'c', '_', 'h', 'e']
				{'string': '_/_/l/i/c/_/h', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'l', 'i', 'c', '_', 'h', 'e']
				version split: ['_', '_', 'l', 'i', 'ch', '_', 'e']
				{'string': '_/_/l/i/ch/_/e', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'l', 'i', 'ch', '_', 'e']
				version split: ['_', '_', 'l', 'i', 'ch', '_', 'e']
				{'string': '_/_/l/i/ch/_/e', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'l', 'i', 'ch', '_', 'e']
				version split: ['l', 'i', '_', 'c', 'h', '_', 'e']
				{'string': 'l/i/_/c/h/_/e', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['l', 'i', '_', 'c', 'h', '_', 'e']
				version split: ['l', 'i', '_', 'c', 'h', '_', 'e']
				{'string': 'l/i/_/c/h/_/e', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['l', 'i', '_', 'c', 'h', '_', 'e']
				version split: ['l', 'i', '_', 'ch', 'e', '_']
				{'string': 'l/i/_/ch/e/_', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['l', 'i', '_', 'ch', 'e', '_']
				version split: ['l', 'i', '_', 'ch', 'e', '_']
				{'string': 'l/i/_/ch/e/_', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['l', 'i', '_', 'ch', 'e', '_']
				version split: ['_', 'l', '_', 'i', 'c', '_', 'h', 'e']
				{'string': '_/l/_/i/c/_/h', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['_', 'l', '_', 'i', 'c', '_', 'h', 'e']
				version split: ['_', 'l', '_', 'i', 'c', '_', 'h', 'e']
				{'string': '_/l/_/i/c/_/h', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['_', 'l', '_', 'i', 'c', '_', 'h', 'e']
				version split: ['_', 'l', '_', 'i', 'ch', '_', 'e']
				{'string': '_/l/_/i/ch/_/e', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['_', 'l', '_', 'i', 'ch', '_', 'e']
				version split: ['_', 'l', '_', 'i', 'ch', '_', 'e']
				{'string': '_/l/_/i/ch/_/e', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['_', 'l', '_', 'i', 'ch', '_', 'e']
				version split: ['l', '_', '_', 'i', 'c', '_', 'h', 'e']
				{'string': 'l/_/_/i/c/_/h', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['l', '_', '_', 'i', 'c', '_', 'h', 'e']
				version split: ['l', '_', '_', 'i', 'c', '_', 'h', 'e']
				{'string': 'l/_/_/i/c/_/h', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['l', '_', '_', 'i', 'c', '_', 'h', 'e']
				version split: ['l', '_', '_', 'i', 'ch', '_', 'e']
				{'string': 'l/_/_/i/ch/_/e', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['l', '_', '_', 'i', 'ch', '_', 'e']
				version split: ['l', '_', '_', 'i', 'ch', '_', 'e']
				{'string': 'l/_/_/i/ch/_/e', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['l', '_', '_', 'i', 'ch', '_', 'e']
				version split: ['_', '_', '_', 'l', 'i', '_', 'c', 'h', 'e']
				{'string': '_/_/_/l/i/_/c', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', 'l', 'i', '_', 'c', 'h', 'e']
				version split: ['_', '_', '_', 'l', 'i', '_', 'c', 'h', 'e']
				{'string': '_/_/_/l/i/_/c', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', 'l', 'i', '_', 'c', 'h', 'e']
				version split: ['_', '_', '_', 'l', 'i', '_', 'ch', 'e']
				{'string': '_/_/_/l/i/_/ch', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', 'l', 'i', '_', 'ch', 'e']
				version split: ['_', '_', '_', 'l', 'i', '_', 'ch', 'e']
				{'string': '_/_/_/l/i/_/ch', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', 'l', 'i', '_', 'ch', 'e']
				version split: ['l', 'i', 'c', 'h', '_', '_', 'e']
				{'string': 'l/i/c/h/_/_/e', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['l', 'i', 'c', 'h', '_', '_', 'e']
				version split: ['l', 'i', 'c', 'h', '_', '_', 'e']
				{'string': 'l/i/c/h/_/_/e', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['l', 'i', 'c', 'h', '_', '_', 'e']
				version split: ['l', 'i', 'ch', 'e', '_', '_']
				{'string': 'l/i/ch/e/_/_', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['l', 'i', 'ch', 'e', '_', '_']
				version split: ['l', 'i', 'ch', 'e', '_', '_']
				{'string': 'l/i/ch/e/_/_', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['l', 'i', 'ch', 'e', '_', '_']
				version split: ['_', 'l', 'i', 'c', '_', '_', 'h', 'e']
				{'string': '_/l/i/c/_/_/h', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['_', 'l', 'i', 'c', '_', '_', 'h', 'e']
				version split: ['_', 'l', 'i', 'c', '_', '_', 'h', 'e']
				{'string': '_/l/i/c/_/_/h', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['_', 'l', 'i', 'c', '_', '_', 'h', 'e']
				version split: ['_', 'l', 'i', 'ch', '_', '_', 'e']
				{'string': '_/l/i/ch/_/_/e', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['_', 'l', 'i', 'ch', '_', '_', 'e']
				version split: ['_', 'l', 'i', 'ch', '_', '_', 'e']
				{'string': '_/l/i/ch/_/_/e', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['_', 'l', 'i', 'ch', '_', '_', 'e']
				version split: ['l', '_', 'i', 'c', '_', '_', 'h', 'e']
				{'string': 'l/_/i/c/_/_/h', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['l', '_', 'i', 'c', '_', '_', 'h', 'e']
				version split: ['l', '_', 'i', 'c', '_', '_', 'h', 'e']
				{'string': 'l/_/i/c/_/_/h', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['l', '_', 'i', 'c', '_', '_', 'h', 'e']
				version split: ['l', '_', 'i', 'ch', '_', '_', 'e']
				{'string': 'l/_/i/ch/_/_/e', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['l', '_', 'i', 'ch', '_', '_', 'e']
				version split: ['l', '_', 'i', 'ch', '_', '_', 'e']
				{'string': 'l/_/i/ch/_/_/e', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['l', '_', 'i', 'ch', '_', '_', 'e']
				version split: ['_', '_', 'l', 'i', '_', '_', 'c', 'h', 'e']
				{'string': '_/_/l/i/_/_/c', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'l', 'i', '_', '_', 'c', 'h', 'e']
				version split: ['_', '_', 'l', 'i', '_', '_', 'c', 'h', 'e']
				{'string': '_/_/l/i/_/_/c', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'l', 'i', '_', '_', 'c', 'h', 'e']
				version split: ['_', '_', 'l', 'i', '_', '_', 'ch', 'e']
				{'string': '_/_/l/i/_/_/ch', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'l', 'i', '_', '_', 'ch', 'e']
				version split: ['_', '_', 'l', 'i', '_', '_', 'ch', 'e']
				{'string': '_/_/l/i/_/_/ch', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'l', 'i', '_', '_', 'ch', 'e']
				version split: ['l', 'i', '_', 'c', '_', '_', 'h', 'e']
				{'string': 'l/i/_/c/_/_/h', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['l', 'i', '_', 'c', '_', '_', 'h', 'e']
				version split: ['l', 'i', '_', 'c', '_', '_', 'h', 'e']
				{'string': 'l/i/_/c/_/_/h', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['l', 'i', '_', 'c', '_', '_', 'h', 'e']
				version split: ['l', 'i', '_', 'ch', '_', '_', 'e']
				{'string': 'l/i/_/ch/_/_/e', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['l', 'i', '_', 'ch', '_', '_', 'e']
				version split: ['l', 'i', '_', 'ch', '_', '_', 'e']
				{'string': 'l/i/_/ch/_/_/e', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['l', 'i', '_', 'ch', '_', '_', 'e']
				version split: ['_', 'l', '_', 'i', '_', '_', 'c', 'h', 'e']
				{'string': '_/l/_/i/_/_/c', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['_', 'l', '_', 'i', '_', '_', 'c', 'h', 'e']
				version split: ['_', 'l', '_', 'i', '_', '_', 'c', 'h', 'e']
				{'string': '_/l/_/i/_/_/c', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['_', 'l', '_', 'i', '_', '_', 'c', 'h', 'e']
				version split: ['_', 'l', '_', 'i', '_', '_', 'ch', 'e']
				{'string': '_/l/_/i/_/_/ch', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['_', 'l', '_', 'i', '_', '_', 'ch', 'e']
				version split: ['_', 'l', '_', 'i', '_', '_', 'ch', 'e']
				{'string': '_/l/_/i/_/_/ch', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['_', 'l', '_', 'i', '_', '_', 'ch', 'e']
				version split: ['l', '_', '_', 'i', '_', '_', 'c', 'h', 'e']
				{'string': 'l/_/_/i/_/_/c', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['l', '_', '_', 'i', '_', '_', 'c', 'h', 'e']
				version split: ['l', '_', '_', 'i', '_', '_', 'c', 'h', 'e']
				{'string': 'l/_/_/i/_/_/c', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['l', '_', '_', 'i', '_', '_', 'c', 'h', 'e']
				version split: ['l', '_', '_', 'i', '_', '_', 'ch', 'e']
				{'string': 'l/_/_/i/_/_/ch', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['l', '_', '_', 'i', '_', '_', 'ch', 'e']
				version split: ['l', '_', '_', 'i', '_', '_', 'ch', 'e']
				{'string': 'l/_/_/i/_/_/ch', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['l', '_', '_', 'i', '_', '_', 'ch', 'e']
				version split: ['_', '_', '_', 'l', '_', '_', 'i', 'c', 'h', 'e']
				{'string': '_/_/_/l/_/_/i', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', 'l', '_', '_', 'i', 'c', 'h', 'e']
				version split: ['_', '_', '_', 'l', '_', '_', 'i', 'c', 'h', 'e']
				{'string': '_/_/_/l/_/_/i', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', 'l', '_', '_', 'i', 'c', 'h', 'e']
				version split: ['_', '_', '_', 'l', '_', '_', 'i', 'ch', 'e']
				{'string': '_/_/_/l/_/_/i', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', 'l', '_', '_', 'i', 'ch', 'e']
				version split: ['_', '_', '_', 'l', '_', '_', 'i', 'ch', 'e']
				{'string': '_/_/_/l/_/_/i', 'rgx': '((_))/((_))/((_))/((e))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', 'l', '_', '_', 'i', 'ch', 'e']
		only one version left: ['_', 'e', 'u', 'e', '_', '_']
		only one version left: ['h', '_', '_', 'e', '_', '_']
		only one version left: ['h', '_', '_', 'eo', '_', '_']
		FAIL: 
		FAIL: 
		FAIL: 
		FAIL: 
		FAIL: 
		FAIL: 
		FAIL: 
		FAIL: 
		FAIL: 
		FAIL: 
		FAIL: 
		SPLIT: ['h', 'eo', 'f', 'e', 'n', 'n']
		SPLIT: ['_', 'e', 'u', 'e', '_', '_']
		['_', 'e', 'u', 'e', '_', '_']
		['_', 'e', 'u', 'e', '_', '_']
		SPLIT: ['h', '_', '_', 'e', '_', '_']
		['h', '_', '_', 'e', '_', '_']
		SPLIT: ['h', '_', '_', 'eo', '_', '_']
		['h', '_', '_', 'eo', '_', '_']
		SPLIT: ['h', '_', 'f', 'e.o', 'n', 'n', '----!']
		SPLIT: ['h', '_', 'f', 'o', 'n', 'n', '----!']
		SPLIT: ['h', '_', 'u', 'u.e.ue.o', '_', '_', '----!']
		SPLIT: ['h', '_', 'u', 'u.e.ue.o', 'n', 'n', '----!']
		SPLIT: ['h', '_', 'u', 'u.e.ue.o', 'n', 'n', '----!']
		SPLIT: ['h', '_', 'u', 'u.e.ue', '_', '_', '----!']
		SPLIT: ['h', '_', 'u', 'u.e.ue', 'n', 'n', '----!']
		SPLIT: ['h', '_', 'u', 'u.e.ue', 'n', 'n', '----!']
		SPLIT: ['h', '_', 'u', 'u.e.ue', 'n', 'n', '----!']
		SPLIT: ['_', '_', '_', '_', '_', '_', '----!']
		SPLIT: ['_', '_', '_', 'e', '_', '_', '----!']
		version for pattern CVCVCC is INVALID
		[{'u', 'eu', 'ue', '_', 'eo', 'e'}]
		11
		OVERVIEW: version for pattern CVCVCC
{'u', 'eu', 'ue', '_', 'eo', 'e'}
faulty splits: 11
hfe.onn----! <-! heofen
hfonn----! <-! heofon
huu.e.ue.o----! <-! heoue
huu.e.ue.onn----! <-! heouen
huu.e.ue.onn----! <-! heouene
huu.e.ue----! <-! heue
huu.e.uenn----! <-! heuen
huu.e.uenn----! <-! heuene
huu.e.uenn----! <-! houen
----! <-! lich
e----! <-! liche
h | eo | f | e | n | n
_ | e | u | e | _ | _
h | _ | _ | e | _ | _
h | _ | _ | eo | _ | _
h | _ | f | e.o | n | n | ----!
h | _ | f | o | n | n | ----!
h | _ | u | u.e.ue.o | _ | _ | ----!
h | _ | u | u.e.ue.o | n | n | ----!
h | _ | u | u.e.ue.o | n | n | ----!
h | _ | u | u.e.ue | _ | _ | ----!
h | _ | u | u.e.ue | n | n | ----!
h | _ | u | u.e.ue | n | n | ----!
h | _ | u | u.e.ue | n | n | ----!
_ | _ | _ | _ | _ | _ | ----!
_ | _ | _ | e | _ | _ | ----!
0 : {'h', '_', 'l'}
1 : {'u', 'eu', 'ue', 'eo', 'e'},{'u', 'eu', 'ue', '_', 'eo', 'ou', 'e'},{'u', 'eu', 'ue', '_', 'eo', 'e', 'o'},{'u', 'eu', 'ue', '_', 'eo', 'e'},{'u', 'eu', 'i', 'ue', '_', 'eo', 'e'}
2 : {'u', 'f', '_', 'l'},{'u', 'c', 'f', '_'},{'u', 'ch', 'f', '_'},{'u', 'i', 'f', '_'}
3 : {'u', 'i', 'ue', 'eo', 'e', 'o'}
4 : {'ch', '_', 'n'},{'h', '_', 'n'},{'u', '_', 'n'},{'c', '_', 'n'},{'i', '_', 'n'},{'_', 'l', 'n'}
5 : {'ch', '_', 'n'},{'h', '_', 'n'},{'u', '_', 'n'},{'c', '_', 'n'},{'i', '_', 'n'},{'_', 'l', 'n'}
	[[{'lit': 'eu', 'ln': 2, 'index': 0}], [{'lit': 'ue', 'ln': 2, 'index': 1}]]
	[[{'lit': 'eu', 'ln': 2, 'index': 0}], [{'lit': 'ue', 'ln': 2, 'index': 1}], [{'lit': 'eu', 'ln': 2, 'index': 0}, {'lit': 'ue', 'ln': 2, 'index': 1}]]
	[[{'lit': 'eo', 'ln': 2, 'index': 1}]]
	[[{'lit': 'eo', 'ln': 2, 'index': 1}]]
	[[{'lit': 'nn', 'ln': 2, 'index': 5}], [{'lit': 'eo', 'ln': 2, 'index': 1}]]
	[[{'lit': 'nn', 'ln': 2, 'index': 5}], [{'lit': 'eo', 'ln': 2, 'index': 1}], [{'lit': 'nn', 'ln': 2, 'index': 5}, {'lit': 'eo', 'ln': 2, 'index': 1}]]
	[[{'lit': 'eo', 'ln': 2, 'index': 1}]]
	[[{'lit': 'ou', 'ln': 2, 'index': 2}], [{'lit': 'eo', 'ln': 2, 'index': 1}], [{'lit': 'ue', 'ln': 2, 'index': 3}]]
	[[{'lit': 'ou', 'ln': 2, 'index': 2}], [{'lit': 'eo', 'ln': 2, 'index': 1}], [{'lit': 'ue', 'ln': 2, 'index': 3}], [{'lit': 'ou', 'ln': 2, 'index': 2}, {'lit': 'eo', 'ln': 2, 'index': 1}], [{'lit': 'ou', 'ln': 2, 'index': 2}, {'lit': 'ue', 'ln': 2, 'index': 3}], [{'lit': 'eo', 'ln': 2, 'index': 1}, {'lit': 'ue', 'ln': 2, 'index': 3}]]
	[[{'lit': 'ou', 'ln': 2, 'index': 2}], [{'lit': 'eo', 'ln': 2, 'index': 1}], [{'lit': 'ue', 'ln': 2, 'index': 3}], [{'lit': 'ou', 'ln': 2, 'index': 2}, {'lit': 'eo', 'ln': 2, 'index': 1}], [{'lit': 'ou', 'ln': 2, 'index': 2}, {'lit': 'ue', 'ln': 2, 'index': 3}], [{'lit': 'eo', 'ln': 2, 'index': 1}, {'lit': 'ue', 'ln': 2, 'index': 3}], [{'lit': 'ou', 'ln': 2, 'index': 2}, {'lit': 'eo', 'ln': 2, 'index': 1}, {'lit': 'ue', 'ln': 2, 'index': 3}]]
	[[{'lit': 'ou', 'ln': 2, 'index': 2}], [{'lit': 'eo', 'ln': 2, 'index': 1}], [{'lit': 'ue', 'ln': 2, 'index': 3}]]
	[[{'lit': 'ou', 'ln': 2, 'index': 2}], [{'lit': 'eo', 'ln': 2, 'index': 1}], [{'lit': 'ue', 'ln': 2, 'index': 3}], [{'lit': 'ou', 'ln': 2, 'index': 2}, {'lit': 'eo', 'ln': 2, 'index': 1}], [{'lit': 'ou', 'ln': 2, 'index': 2}, {'lit': 'ue', 'ln': 2, 'index': 3}], [{'lit': 'eo', 'ln': 2, 'index': 1}, {'lit': 'ue', 'ln': 2, 'index': 3}]]
	[[{'lit': 'ou', 'ln': 2, 'index': 2}], [{'lit': 'eo', 'ln': 2, 'index': 1}], [{'lit': 'ue', 'ln': 2, 'index': 3}], [{'lit': 'ou', 'ln': 2, 'index': 2}, {'lit': 'eo', 'ln': 2, 'index': 1}], [{'lit': 'ou', 'ln': 2, 'index': 2}, {'lit': 'ue', 'ln': 2, 'index': 3}], [{'lit': 'eo', 'ln': 2, 'index': 1}, {'lit': 'ue', 'ln': 2, 'index': 3}], [{'lit': 'ou', 'ln': 2, 'index': 2}, {'lit': 'eo', 'ln': 2, 'index': 1}, {'lit': 'ue', 'ln': 2, 'index': 3}]]
	[[{'lit': 'ou', 'ln': 2, 'index': 2}], [{'lit': 'eo', 'ln': 2, 'index': 1}], [{'lit': 'ue', 'ln': 2, 'index': 3}]]
	[[{'lit': 'ou', 'ln': 2, 'index': 2}], [{'lit': 'eo', 'ln': 2, 'index': 1}], [{'lit': 'ue', 'ln': 2, 'index': 3}], [{'lit': 'ou', 'ln': 2, 'index': 2}, {'lit': 'eo', 'ln': 2, 'index': 1}], [{'lit': 'ou', 'ln': 2, 'index': 2}, {'lit': 'ue', 'ln': 2, 'index': 3}], [{'lit': 'eo', 'ln': 2, 'index': 1}, {'lit': 'ue', 'ln': 2, 'index': 3}]]
	[[{'lit': 'ou', 'ln': 2, 'index': 2}], [{'lit': 'eo', 'ln': 2, 'index': 1}], [{'lit': 'ue', 'ln': 2, 'index': 3}], [{'lit': 'ou', 'ln': 2, 'index': 2}, {'lit': 'eo', 'ln': 2, 'index': 1}], [{'lit': 'ou', 'ln': 2, 'index': 2}, {'lit': 'ue', 'ln': 2, 'index': 3}], [{'lit': 'eo', 'ln': 2, 'index': 1}, {'lit': 'ue', 'ln': 2, 'index': 3}], [{'lit': 'ou', 'ln': 2, 'index': 2}, {'lit': 'eo', 'ln': 2, 'index': 1}, {'lit': 'ue', 'ln': 2, 'index': 3}]]
	[[{'lit': 'eu', 'ln': 2, 'index': 1}], [{'lit': 'ue', 'ln': 2, 'index': 2}]]
	[[{'lit': 'eu', 'ln': 2, 'index': 1}], [{'lit': 'ue', 'ln': 2, 'index': 2}], [{'lit': 'eu', 'ln': 2, 'index': 1}, {'lit': 'ue', 'ln': 2, 'index': 2}]]
	[[{'lit': 'eu', 'ln': 2, 'index': 1}], [{'lit': 'ue', 'ln': 2, 'index': 2}]]
	[[{'lit': 'eu', 'ln': 2, 'index': 1}], [{'lit': 'ue', 'ln': 2, 'index': 2}], [{'lit': 'eu', 'ln': 2, 'index': 1}, {'lit': 'ue', 'ln': 2, 'index': 2}]]
	[[{'lit': 'eu', 'ln': 2, 'index': 1}], [{'lit': 'ue', 'ln': 2, 'index': 2}]]
	[[{'lit': 'eu', 'ln': 2, 'index': 1}], [{'lit': 'ue', 'ln': 2, 'index': 2}], [{'lit': 'eu', 'ln': 2, 'index': 1}, {'lit': 'ue', 'ln': 2, 'index': 2}]]
	[[{'lit': 'ou', 'ln': 2, 'index': 1}], [{'lit': 'ue', 'ln': 2, 'index': 2}]]
	[[{'lit': 'ou', 'ln': 2, 'index': 1}], [{'lit': 'ue', 'ln': 2, 'index': 2}], [{'lit': 'ou', 'ln': 2, 'index': 1}, {'lit': 'ue', 'ln': 2, 'index': 2}]]
	[[{'lit': 'ch', 'ln': 2, 'index': 2}]]
	[[{'lit': 'ch', 'ln': 2, 'index': 2}]]
	MIN pattern length=5
	Pattern VV is invalid
	Pattern CV is invalid
	Pattern CVV is invalid
	Pattern CVVCVC is invalid
	Pattern CVVCVCV is invalid
	Pattern CVVVVC is invalid
	Pattern CVVCV is invalid
	Pattern CVVVCV is invalid
	Pattern VCV is invalid
	Pattern VVV is invalid
	Pattern CVVC is invalid
	Pattern CVC is invalid
	Pattern CVCVCV is valid
	Pattern CCCC is invalid
	Pattern CVVVVCV is invalid
	Pattern CVVV is invalid
	Pattern CVVVC is invalid
	Pattern CVVVV is invalid
	Pattern CVCCV is valid
	Pattern CVCVCC is valid
	Pattern CVCC is invalid
	Pattern CVCVC is valid
	Pattern CCCV is invalid
	Pattern CVVCVCC is invalid
	Pattern CVCV is invalid
	Pattern CCCCV is invalid
	Pattern CCC is invalid
	Making the selection for pattern: CVCVC
	Selection for pattern: CVCVC completed
	Making a version for pattern: CVCVC
			___CVCVC : 0___
				ANALYSING: heofen
				adding littera based on matching pattern
				ANALYSING: heofenn
				adding littera based on matching pattern
				ANALYSING: heofon
				adding littera based on matching pattern
				ANALYSING: heouen
				adding littera based on matching pattern
				ANALYSING: heuen
				adding littera based on matching pattern
				ANALYSING: houen
				adding littera based on matching pattern
				ANALYSING: eue
					resolving (5)
					> version: e/u/e
					TRYING: e
					> version: e/u/e
					TRYING: e
					> version: eu/e
					TRYING: eu
					> version: e/ue
					TRYING: e
					> version: eu/e
					TRYING: eu
					RESULT:  ['_']
				adding dashed alternative: ['_', 'e', 'u', 'e']
				adding dashed alternative: ['_', 'e', 'u', 'e']
				adding dashed alternative: ['_', 'eu', 'e']
				adding dashed alternative: ['_', 'e', 'ue']
				adding dashed alternative: ['_', 'eu', 'e']
				e/u/e(VCV)
e/u/e(VVV)
eu/e(VV)
e/ue(VV)
eu/e(VV)
_/e/u/e(AVAV)
_/e/u/e(AVAV)
_/eu/e(AVV)
_/e/ue(AVV)
_/eu/e(AVV)
				ANALYSING: he
					resolving (1)
					> version: h/e
					TRYING: h
					RESULT:  ['h']
				ANALYSING: heo
					resolving (2)
					> version: h/e/o
					TRYING: h
					> version: h/eo
					TRYING: h
					RESULT:  ['h']
				ANALYSING: heoue
					resolving (11)
					> version: h/e/o/u/e
					TRYING: h
					> version: h/e/o/u/e
					TRYING: h
					> version: h/e/ou/e
					TRYING: h
					> version: h/eo/u/e
					TRYING: h
					> version: h/eo/u/e
					TRYING: h
					> version: h/e/o/ue
					TRYING: h
					> version: h/eo/u/e
					TRYING: h
					> version: h/eo/u/e
					TRYING: h
					> version: h/e/ou/e
					TRYING: h
					> version: h/eo/ue
					TRYING: h
					> version: h/eo/ue
					TRYING: h
					RESULT:  ['h']
				ANALYSING: heouene
					resolving (11)
					> version: h/e/o/u/e/n/e
					TRYING: h
					> version: h/e/o/u/e/n/e
					TRYING: h
					> version: h/e/ou/e/n/e
					TRYING: h
					> version: h/eo/u/e/n/e
					TRYING: h
					> version: h/eo/u/e/n/e
					TRYING: h
					> version: h/e/o/ue/n/e
					TRYING: h
					> version: h/eo/u/e/n/e
					TRYING: h
					> version: h/eo/u/e/n/e
					TRYING: h
					> version: h/e/ou/e/n/e
					TRYING: h
					> version: h/eo/ue/n/e
					TRYING: h
					> version: h/eo/ue/n/e
					TRYING: h
					RESULT:  ['h']
				ANALYSING: heue
					resolving (5)
					> version: h/e/u/e
					TRYING: h
					> version: h/e/u/e
					TRYING: h
					> version: h/eu/e
					TRYING: h
					> version: h/e/ue
					TRYING: h
					> version: h/eu/e
					TRYING: h
					RESULT:  ['h']
				ANALYSING: heuene
					resolving (5)
					> version: h/e/u/e/n/e
					TRYING: h
					> version: h/e/u/e/n/e
					TRYING: h
					> version: h/eu/e/n/e
					TRYING: h
					> version: h/e/ue/n/e
					TRYING: h
					> version: h/eu/e/n/e
					TRYING: h
					RESULT:  ['h']
				ANALYSING: lich
					resolving (4)
					> version: l/i/c/h
					TRYING: l
					adding blocked set: C = C >> h, _, l
					> version: l/i/c/h
					TRYING: l
					adding blocked set: C = C >> h, _, l
					> version: l/i/ch
					TRYING: l
					adding blocked set: C = C >> h, _, l
					> version: l/i/ch
					TRYING: l
					adding blocked set: C = C >> h, _, l
					RESULT:  ['_']
				adding dashed alternative: ['_', 'l', 'i', 'c', 'h']
				adding dashed alternative: ['_', 'l', 'i', 'c', 'h']
				adding dashed alternative: ['_', 'l', 'i', 'ch']
				adding dashed alternative: ['_', 'l', 'i', 'ch']
				l/i/c/h(CCCC)
l/i/c/h(CVCC)
l/i/ch(CCC)
l/i/ch(CVC)
_/l/i/c/h(ACACC)
_/l/i/c/h(ACACC)
_/l/i/ch(ACAC)
_/l/i/ch(ACAC)
				ANALYSING: liche
					resolving (4)
					> version: l/i/c/h/e
					TRYING: l
					adding blocked set: C = C >> h, _, l
					> version: l/i/c/h/e
					TRYING: l
					adding blocked set: C = C >> h, _, l
					> version: l/i/ch/e
					TRYING: l
					adding blocked set: C = C >> h, _, l
					> version: l/i/ch/e
					TRYING: l
					adding blocked set: C = C >> h, _, l
					RESULT:  ['_']
				adding dashed alternative: ['_', 'l', 'i', 'c', 'h', 'e']
				adding dashed alternative: ['_', 'l', 'i', 'c', 'h', 'e']
				adding dashed alternative: ['_', 'l', 'i', 'ch', 'e']
				adding dashed alternative: ['_', 'l', 'i', 'ch', 'e']
				l/i/c/h/e(CCCCV)
l/i/c/h/e(CVCCV)
l/i/ch/e(CCCV)
l/i/ch/e(CVCV)
_/l/i/c/h/e(ACACCV)
_/l/i/c/h/e(ACACCV)
_/l/i/ch/e(ACACV)
_/l/i/ch/e(ACACV)
			___CVCVC : 1___
				ANALYSING: heofen
				adding littera based on matching pattern
				ANALYSING: heofenn
				adding littera based on matching pattern
				ANALYSING: heofon
				adding littera based on matching pattern
				ANALYSING: heouen
				adding littera based on matching pattern
				ANALYSING: heuen
				adding littera based on matching pattern
				ANALYSING: houen
				adding littera based on matching pattern
				ANALYSING: eue
					resolving (10)
					> version: e/u/e
					TRYING: u
					> version: e/u/e
					TRYING: u
					> version: eu/e
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e'}
					> version: e/ue
					TRYING: ue
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: eu/e
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: _/e/u/e
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: _/e/u/e
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: _/eu/e
					TRYING: eu
					adding blocked set: V = V >> eu, e, eo, o
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: _/e/ue
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: _/eu/e
					TRYING: eu
					adding blocked set: V = V >> eu, e, eo, o
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					RESULT:  ['u', 'e', 'ue']
				ANALYSING: he
					resolving (1)
					> version: h/e
					TRYING: e
					RESULT:  ['e']
				ANALYSING: heo
					resolving (2)
					> version: h/e/o
					TRYING: e
					> version: h/eo
					TRYING: eo
					>>> MULTIPLE RESOLVE OPTIONS: {'e', 'eo'}
					RESULT:  ['e', 'eo']
				ANALYSING: heoue
					resolving (11)
					> version: h/e/o/u/e
					TRYING: e
					> version: h/e/o/u/e
					TRYING: e
					> version: h/e/ou/e
					TRYING: e
					> version: h/eo/u/e
					TRYING: eo
					>>> MULTIPLE RESOLVE OPTIONS: {'e', 'eo'}
					> version: h/eo/u/e
					TRYING: eo
					>>> MULTIPLE RESOLVE OPTIONS: {'e', 'eo'}
					> version: h/e/o/ue
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'e', 'eo'}
					> version: h/eo/u/e
					TRYING: eo
					>>> MULTIPLE RESOLVE OPTIONS: {'e', 'eo'}
					> version: h/eo/u/e
					TRYING: eo
					>>> MULTIPLE RESOLVE OPTIONS: {'e', 'eo'}
					> version: h/e/ou/e
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'e', 'eo'}
					> version: h/eo/ue
					TRYING: eo
					>>> MULTIPLE RESOLVE OPTIONS: {'e', 'eo'}
					> version: h/eo/ue
					TRYING: eo
					>>> MULTIPLE RESOLVE OPTIONS: {'e', 'eo'}
					RESULT:  ['e', 'eo']
				ANALYSING: heouene
					resolving (11)
					> version: h/e/o/u/e/n/e
					TRYING: e
					> version: h/e/o/u/e/n/e
					TRYING: e
					> version: h/e/ou/e/n/e
					TRYING: e
					> version: h/eo/u/e/n/e
					TRYING: eo
					>>> MULTIPLE RESOLVE OPTIONS: {'e', 'eo'}
					> version: h/eo/u/e/n/e
					TRYING: eo
					>>> MULTIPLE RESOLVE OPTIONS: {'e', 'eo'}
					> version: h/e/o/ue/n/e
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'e', 'eo'}
					> version: h/eo/u/e/n/e
					TRYING: eo
					>>> MULTIPLE RESOLVE OPTIONS: {'e', 'eo'}
					> version: h/eo/u/e/n/e
					TRYING: eo
					>>> MULTIPLE RESOLVE OPTIONS: {'e', 'eo'}
					> version: h/e/ou/e/n/e
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'e', 'eo'}
					> version: h/eo/ue/n/e
					TRYING: eo
					>>> MULTIPLE RESOLVE OPTIONS: {'e', 'eo'}
					> version: h/eo/ue/n/e
					TRYING: eo
					>>> MULTIPLE RESOLVE OPTIONS: {'e', 'eo'}
					RESULT:  ['e', 'eo']
				ANALYSING: heue
					resolving (5)
					> version: h/e/u/e
					TRYING: e
					> version: h/e/u/e
					TRYING: e
					> version: h/eu/e
					TRYING: eu
					adding blocked set: V = V >> u, eu, ue, eo, e, o
					> version: h/e/ue
					TRYING: e
					> version: h/eu/e
					TRYING: eu
					adding blocked set: V = V >> u, eu, ue, eo, e, o
					RESULT:  ['e']
				ANALYSING: heuene
					resolving (5)
					> version: h/e/u/e/n/e
					TRYING: e
					> version: h/e/u/e/n/e
					TRYING: e
					> version: h/eu/e/n/e
					TRYING: eu
					adding blocked set: V = V >> u, eu, ue, eo, e, o
					> version: h/e/ue/n/e
					TRYING: e
					> version: h/eu/e/n/e
					TRYING: eu
					adding blocked set: V = V >> u, eu, ue, eo, e, o
					RESULT:  ['e']
				ANALYSING: lich
					resolving (8)
					> version: l/i/c/h
					TRYING: i
					adding blocked set: V = V >> u, i, ue, eo, e, o
					> version: l/i/c/h
					TRYING: i
					adding blocked set: V = V >> u, i, ue, eo, e, o
					> version: l/i/ch
					TRYING: i
					adding blocked set: V = V >> u, i, ue, eo, e, o
					> version: l/i/ch
					TRYING: i
					adding blocked set: V = V >> u, i, ue, eo, e, o
					> version: _/l/i/c/h
					TRYING: l
					> version: _/l/i/c/h
					TRYING: l
					> version: _/l/i/ch
					TRYING: l
					> version: _/l/i/ch
					TRYING: l
					RESULT:  ['_']
				adding dashed alternative: ['l', '_', 'i', 'c', 'h']
				adding dashed alternative: ['l', '_', 'i', 'c', 'h']
				adding dashed alternative: ['l', '_', 'i', 'ch']
				adding dashed alternative: ['l', '_', 'i', 'ch']
				adding dashed alternative: ['_', '_', 'l', 'i', 'c', 'h']
				adding dashed alternative: ['_', '_', 'l', 'i', 'c', 'h']
				adding dashed alternative: ['_', '_', 'l', 'i', 'ch']
				adding dashed alternative: ['_', '_', 'l', 'i', 'ch']
				l/i/c/h(CCCC)
l/i/c/h(CVCC)
l/i/ch(CCC)
l/i/ch(CVC)
_/l/i/c/h(ACACC)
_/l/i/c/h(ACACC)
_/l/i/ch(ACAC)
_/l/i/ch(ACAC)
l/_/i/c/h(CAACC)
l/_/i/c/h(CAACC)
l/_/i/ch(CAAC)
l/_/i/ch(CAAC)
_/_/l/i/c/h(AACACC)
_/_/l/i/c/h(AACACC)
_/_/l/i/ch(AACAC)
_/_/l/i/ch(AACAC)
				ANALYSING: liche
					resolving (8)
					> version: l/i/c/h/e
					TRYING: i
					adding blocked set: V = V >> u, i, ue, _, eo, e, o
					> version: l/i/c/h/e
					TRYING: i
					adding blocked set: V = V >> u, i, ue, _, eo, e, o
					> version: l/i/ch/e
					TRYING: i
					adding blocked set: V = V >> u, i, ue, _, eo, e, o
					> version: l/i/ch/e
					TRYING: i
					adding blocked set: V = V >> u, i, ue, _, eo, e, o
					> version: _/l/i/c/h/e
					TRYING: l
					> version: _/l/i/c/h/e
					TRYING: l
					> version: _/l/i/ch/e
					TRYING: l
					> version: _/l/i/ch/e
					TRYING: l
					RESULT:  ['_']
				adding dashed alternative: ['l', '_', 'i', 'c', 'h', 'e']
				adding dashed alternative: ['l', '_', 'i', 'c', 'h', 'e']
				adding dashed alternative: ['l', '_', 'i', 'ch', 'e']
				adding dashed alternative: ['l', '_', 'i', 'ch', 'e']
				adding dashed alternative: ['_', '_', 'l', 'i', 'c', 'h', 'e']
				adding dashed alternative: ['_', '_', 'l', 'i', 'c', 'h', 'e']
				adding dashed alternative: ['_', '_', 'l', 'i', 'ch', 'e']
				adding dashed alternative: ['_', '_', 'l', 'i', 'ch', 'e']
				l/i/c/h/e(CCCCV)
l/i/c/h/e(CVCCV)
l/i/ch/e(CCCV)
l/i/ch/e(CVCV)
_/l/i/c/h/e(ACACCV)
_/l/i/c/h/e(ACACCV)
_/l/i/ch/e(ACACV)
_/l/i/ch/e(ACACV)
l/_/i/c/h/e(CAACCV)
l/_/i/c/h/e(CAACCV)
l/_/i/ch/e(CAACV)
l/_/i/ch/e(CAACV)
_/_/l/i/c/h/e(AACACCV)
_/_/l/i/c/h/e(AACACCV)
_/_/l/i/ch/e(AACACV)
_/_/l/i/ch/e(AACACV)
			___CVCVC : 2___
				ANALYSING: heofen
				adding littera based on matching pattern
				ANALYSING: heofenn
				adding littera based on matching pattern
				ANALYSING: heofon
				adding littera based on matching pattern
				ANALYSING: heouen
				adding littera based on matching pattern
				ANALYSING: heuen
				adding littera based on matching pattern
				ANALYSING: houen
				adding littera based on matching pattern
				ANALYSING: eue
					resolving (10)
					> version: e/u/e
					TRYING: e
					> version: e/u/e
					TRYING: e
					> version: eu/e
					> version: e/ue
					> version: eu/e
					> version: _/e/u/e
					TRYING: u
					> version: _/e/u/e
					TRYING: u
					> version: _/eu/e
					TRYING: e
					> version: _/e/ue
					TRYING: ue
					> version: _/eu/e
					TRYING: e
					RESULT:  ['u']
				ANALYSING: he
					resolving (1)
					> version: h/e
					RESULT:  ['_']
				adding dashed alternative: ['h', 'e', '_']
				h/e(CV)
h/e/_(CVA)
				ANALYSING: heo
					resolving (2)
					> version: h/e/o
					TRYING: o
					> version: h/eo
					RESULT:  ['_']
				adding dashed alternative: ['h', 'e', '_', 'o']
				adding dashed alternative: ['h', 'eo', '_']
				h/e/o(CVV)
h/eo(CV)
h/e/_/o(CVAV)
h/eo/_(CVA)
				ANALYSING: heoue
					resolving (11)
					> version: h/e/o/u/e
					TRYING: o
					> version: h/e/o/u/e
					TRYING: o
					> version: h/e/ou/e
					TRYING: ou
					> version: h/eo/u/e
					TRYING: u
					> version: h/eo/u/e
					TRYING: u
					> version: h/e/o/ue
					TRYING: o
					> version: h/eo/u/e
					TRYING: u
					> version: h/eo/u/e
					TRYING: u
					> version: h/e/ou/e
					TRYING: ou
					> version: h/eo/ue
					TRYING: ue
					> version: h/eo/ue
					TRYING: ue
					RESULT:  ['u']
				ANALYSING: heouene
					resolving (11)
					> version: h/e/o/u/e/n/e
					TRYING: o
					> version: h/e/o/u/e/n/e
					TRYING: o
					> version: h/e/ou/e/n/e
					TRYING: ou
					> version: h/eo/u/e/n/e
					TRYING: u
					> version: h/eo/u/e/n/e
					TRYING: u
					> version: h/e/o/ue/n/e
					TRYING: o
					> version: h/eo/u/e/n/e
					TRYING: u
					> version: h/eo/u/e/n/e
					TRYING: u
					> version: h/e/ou/e/n/e
					TRYING: ou
					> version: h/eo/ue/n/e
					TRYING: ue
					> version: h/eo/ue/n/e
					TRYING: ue
					RESULT:  ['u']
				ANALYSING: heue
					resolving (5)
					> version: h/e/u/e
					TRYING: u
					> version: h/e/u/e
					TRYING: u
					> version: h/eu/e
					TRYING: e
					> version: h/e/ue
					TRYING: ue
					> version: h/eu/e
					TRYING: e
					RESULT:  ['u']
				ANALYSING: heuene
					resolving (5)
					> version: h/e/u/e/n/e
					TRYING: u
					> version: h/e/u/e/n/e
					TRYING: u
					> version: h/eu/e/n/e
					TRYING: e
					> version: h/e/ue/n/e
					TRYING: ue
					> version: h/eu/e/n/e
					TRYING: e
					RESULT:  ['u']
				ANALYSING: lich
					resolving (16)
					> version: l/i/c/h
					TRYING: c
					adding blocked set: C = C >> u, c, f, _
					> version: l/i/c/h
					TRYING: c
					adding blocked set: C = C >> u, c, f, _
					> version: l/i/ch
					TRYING: ch
					adding blocked set: C = C >> u, ch, f, _
					> version: l/i/ch
					TRYING: ch
					adding blocked set: C = C >> u, ch, f, _
					> version: _/l/i/c/h
					TRYING: i
					adding blocked set: C = C >> u, i, f, _
					> version: _/l/i/c/h
					TRYING: i
					adding blocked set: C = C >> u, i, f, _
					> version: _/l/i/ch
					TRYING: i
					adding blocked set: C = C >> u, i, f, _
					> version: _/l/i/ch
					TRYING: i
					adding blocked set: C = C >> u, i, f, _
					> version: l/_/i/c/h
					TRYING: i
					adding blocked set: C = C >> u, i, f, _
					> version: l/_/i/c/h
					TRYING: i
					adding blocked set: C = C >> u, i, f, _
					> version: l/_/i/ch
					TRYING: i
					adding blocked set: C = C >> u, i, f, _
					> version: l/_/i/ch
					TRYING: i
					adding blocked set: C = C >> u, i, f, _
					> version: _/_/l/i/c/h
					TRYING: l
					adding blocked set: C = C >> u, f, _, l
					> version: _/_/l/i/c/h
					TRYING: l
					adding blocked set: C = C >> u, f, _, l
					> version: _/_/l/i/ch
					TRYING: l
					adding blocked set: C = C >> u, f, _, l
					> version: _/_/l/i/ch
					TRYING: l
					adding blocked set: C = C >> u, f, _, l
					RESULT:  ['_']
				adding dashed alternative: ['l', 'i', '_', 'c', 'h']
				adding dashed alternative: ['l', 'i', '_', 'c', 'h']
				adding dashed alternative: ['l', 'i', '_', 'ch']
				adding dashed alternative: ['l', 'i', '_', 'ch']
				adding dashed alternative: ['_', 'l', '_', 'i', 'c', 'h']
				adding dashed alternative: ['_', 'l', '_', 'i', 'c', 'h']
				adding dashed alternative: ['_', 'l', '_', 'i', 'ch']
				adding dashed alternative: ['_', 'l', '_', 'i', 'ch']
				adding dashed alternative: ['l', '_', '_', 'i', 'c', 'h']
				adding dashed alternative: ['l', '_', '_', 'i', 'c', 'h']
				adding dashed alternative: ['l', '_', '_', 'i', 'ch']
				adding dashed alternative: ['l', '_', '_', 'i', 'ch']
				adding dashed alternative: ['_', '_', '_', 'l', 'i', 'c', 'h']
				adding dashed alternative: ['_', '_', '_', 'l', 'i', 'c', 'h']
				adding dashed alternative: ['_', '_', '_', 'l', 'i', 'ch']
				adding dashed alternative: ['_', '_', '_', 'l', 'i', 'ch']
				l/i/c/h(CCCC)
l/i/c/h(CVCC)
l/i/ch(CCC)
l/i/ch(CVC)
_/l/i/c/h(ACACC)
_/l/i/c/h(ACACC)
_/l/i/ch(ACAC)
_/l/i/ch(ACAC)
l/_/i/c/h(CAACC)
l/_/i/c/h(CAACC)
l/_/i/ch(CAAC)
l/_/i/ch(CAAC)
_/_/l/i/c/h(AACACC)
_/_/l/i/c/h(AACACC)
_/_/l/i/ch(AACAC)
_/_/l/i/ch(AACAC)
l/i/_/c/h(CAACC)
l/i/_/c/h(CAACC)
l/i/_/ch(CAAC)
l/i/_/ch(CAAC)
_/l/_/i/c/h(ACAACC)
_/l/_/i/c/h(ACAACC)
_/l/_/i/ch(ACAAC)
_/l/_/i/ch(ACAAC)
l/_/_/i/c/h(CAAACC)
l/_/_/i/c/h(CAAACC)
l/_/_/i/ch(CAAAC)
l/_/_/i/ch(CAAAC)
_/_/_/l/i/c/h(AAACACC)
_/_/_/l/i/c/h(AAACACC)
_/_/_/l/i/ch(AAACAC)
_/_/_/l/i/ch(AAACAC)
				ANALYSING: liche
					resolving (16)
					> version: l/i/c/h/e
					TRYING: c
					adding blocked set: C = C >> u, c, f, _
					> version: l/i/c/h/e
					TRYING: c
					adding blocked set: C = C >> u, c, f, _
					> version: l/i/ch/e
					TRYING: ch
					adding blocked set: C = C >> u, ch, f, _
					> version: l/i/ch/e
					TRYING: ch
					adding blocked set: C = C >> u, ch, f, _
					> version: _/l/i/c/h/e
					TRYING: i
					adding blocked set: C = C >> u, i, f, _
					> version: _/l/i/c/h/e
					TRYING: i
					adding blocked set: C = C >> u, i, f, _
					> version: _/l/i/ch/e
					TRYING: i
					adding blocked set: C = C >> u, i, f, _
					> version: _/l/i/ch/e
					TRYING: i
					adding blocked set: C = C >> u, i, f, _
					> version: l/_/i/c/h/e
					TRYING: i
					adding blocked set: C = C >> u, i, f, _
					> version: l/_/i/c/h/e
					TRYING: i
					adding blocked set: C = C >> u, i, f, _
					> version: l/_/i/ch/e
					TRYING: i
					adding blocked set: C = C >> u, i, f, _
					> version: l/_/i/ch/e
					TRYING: i
					adding blocked set: C = C >> u, i, f, _
					> version: _/_/l/i/c/h/e
					TRYING: l
					adding blocked set: C = C >> u, f, _, l
					> version: _/_/l/i/c/h/e
					TRYING: l
					adding blocked set: C = C >> u, f, _, l
					> version: _/_/l/i/ch/e
					TRYING: l
					adding blocked set: C = C >> u, f, _, l
					> version: _/_/l/i/ch/e
					TRYING: l
					adding blocked set: C = C >> u, f, _, l
					RESULT:  ['_']
				adding dashed alternative: ['l', 'i', '_', 'c', 'h', 'e']
				adding dashed alternative: ['l', 'i', '_', 'c', 'h', 'e']
				adding dashed alternative: ['l', 'i', '_', 'ch', 'e']
				adding dashed alternative: ['l', 'i', '_', 'ch', 'e']
				adding dashed alternative: ['_', 'l', '_', 'i', 'c', 'h', 'e']
				adding dashed alternative: ['_', 'l', '_', 'i', 'c', 'h', 'e']
				adding dashed alternative: ['_', 'l', '_', 'i', 'ch', 'e']
				adding dashed alternative: ['_', 'l', '_', 'i', 'ch', 'e']
				adding dashed alternative: ['l', '_', '_', 'i', 'c', 'h', 'e']
				adding dashed alternative: ['l', '_', '_', 'i', 'c', 'h', 'e']
				adding dashed alternative: ['l', '_', '_', 'i', 'ch', 'e']
				adding dashed alternative: ['l', '_', '_', 'i', 'ch', 'e']
				adding dashed alternative: ['_', '_', '_', 'l', 'i', 'c', 'h', 'e']
				adding dashed alternative: ['_', '_', '_', 'l', 'i', 'c', 'h', 'e']
				adding dashed alternative: ['_', '_', '_', 'l', 'i', 'ch', 'e']
				adding dashed alternative: ['_', '_', '_', 'l', 'i', 'ch', 'e']
				l/i/c/h/e(CCCCV)
l/i/c/h/e(CVCCV)
l/i/ch/e(CCCV)
l/i/ch/e(CVCV)
_/l/i/c/h/e(ACACCV)
_/l/i/c/h/e(ACACCV)
_/l/i/ch/e(ACACV)
_/l/i/ch/e(ACACV)
l/_/i/c/h/e(CAACCV)
l/_/i/c/h/e(CAACCV)
l/_/i/ch/e(CAACV)
l/_/i/ch/e(CAACV)
_/_/l/i/c/h/e(AACACCV)
_/_/l/i/c/h/e(AACACCV)
_/_/l/i/ch/e(AACACV)
_/_/l/i/ch/e(AACACV)
l/i/_/c/h/e(CAACCV)
l/i/_/c/h/e(CAACCV)
l/i/_/ch/e(CAACV)
l/i/_/ch/e(CAACV)
_/l/_/i/c/h/e(ACAACCV)
_/l/_/i/c/h/e(ACAACCV)
_/l/_/i/ch/e(ACAACV)
_/l/_/i/ch/e(ACAACV)
l/_/_/i/c/h/e(CAAACCV)
l/_/_/i/c/h/e(CAAACCV)
l/_/_/i/ch/e(CAAACV)
l/_/_/i/ch/e(CAAACV)
_/_/_/l/i/c/h/e(AAACACCV)
_/_/_/l/i/c/h/e(AAACACCV)
_/_/_/l/i/ch/e(AAACACV)
_/_/_/l/i/ch/e(AAACACV)
			___CVCVC : 3___
				ANALYSING: heofen
				adding littera based on matching pattern
				ANALYSING: heofenn
				adding littera based on matching pattern
				ANALYSING: heofon
				adding littera based on matching pattern
				ANALYSING: heouen
				adding littera based on matching pattern
				ANALYSING: heuen
				adding littera based on matching pattern
				ANALYSING: houen
				adding littera based on matching pattern
				ANALYSING: eue
					resolving (10)
					> version: e/u/e
					> version: e/u/e
					> version: eu/e
					> version: e/ue
					> version: eu/e
					> version: _/e/u/e
					TRYING: e
					> version: _/e/u/e
					TRYING: e
					> version: _/eu/e
					> version: _/e/ue
					> version: _/eu/e
					RESULT:  ['e']
				ANALYSING: he
					resolving (2)
					> version: h/e
					> version: h/e/_
					RESULT:  ['_']
				adding dashed alternative: ['h', 'e', '_']
				adding dashed alternative: ['h', 'e', '_', '_']
				h/e(CV)
h/e/_(CVA)
h/e/_(CVA)
h/e/_/_(CVAA)
				ANALYSING: heo
					resolving (4)
					> version: h/e/o
					> version: h/eo
					> version: h/e/_/o
					TRYING: o
					> version: h/eo/_
					RESULT:  ['o']
				ANALYSING: heoue
					resolving (11)
					> version: h/e/o/u/e
					TRYING: u
					> version: h/e/o/u/e
					TRYING: u
					> version: h/e/ou/e
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e'}
					> version: h/eo/u/e
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e'}
					> version: h/eo/u/e
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e'}
					> version: h/e/o/ue
					TRYING: ue
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: h/eo/u/e
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: h/eo/u/e
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: h/e/ou/e
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: h/eo/ue
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: h/eo/ue
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					RESULT:  ['u', 'e', 'ue']
				ANALYSING: heouene
					resolving (11)
					> version: h/e/o/u/e/n/e
					TRYING: u
					> version: h/e/o/u/e/n/e
					TRYING: u
					> version: h/e/ou/e/n/e
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e'}
					> version: h/eo/u/e/n/e
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e'}
					> version: h/eo/u/e/n/e
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e'}
					> version: h/e/o/ue/n/e
					TRYING: ue
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: h/eo/u/e/n/e
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: h/eo/u/e/n/e
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: h/e/ou/e/n/e
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: h/eo/ue/n/e
					TRYING: n
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					> version: h/eo/ue/n/e
					TRYING: n
					>>> MULTIPLE RESOLVE OPTIONS: {'u', 'e', 'ue'}
					RESULT:  ['u', 'e', 'ue']
				ANALYSING: heue
					resolving (5)
					> version: h/e/u/e
					TRYING: e
					> version: h/e/u/e
					TRYING: e
					> version: h/eu/e
					> version: h/e/ue
					> version: h/eu/e
					RESULT:  ['e']
				ANALYSING: heuene
					resolving (5)
					> version: h/e/u/e/n/e
					TRYING: e
					> version: h/e/u/e/n/e
					TRYING: e
					> version: h/eu/e/n/e
					TRYING: n
					> version: h/e/ue/n/e
					TRYING: n
					> version: h/eu/e/n/e
					TRYING: n
					RESULT:  ['e']
				ANALYSING: lich
					resolving (32)
					> version: l/i/c/h
					TRYING: h
					> version: l/i/c/h
					TRYING: h
					> version: l/i/ch
					> version: l/i/ch
					> version: _/l/i/c/h
					TRYING: c
					> version: _/l/i/c/h
					TRYING: c
					> version: _/l/i/ch
					TRYING: ch
					> version: _/l/i/ch
					TRYING: ch
					> version: l/_/i/c/h
					TRYING: c
					> version: l/_/i/c/h
					TRYING: c
					> version: l/_/i/ch
					TRYING: ch
					> version: l/_/i/ch
					TRYING: ch
					> version: _/_/l/i/c/h
					TRYING: i
					adding blocked set: V = V >> u, i, ue, _, e, o
					> version: _/_/l/i/c/h
					TRYING: i
					adding blocked set: V = V >> u, i, ue, _, e, o
					> version: _/_/l/i/ch
					TRYING: i
					adding blocked set: V = V >> u, i, ue, _, e, o
					> version: _/_/l/i/ch
					TRYING: i
					adding blocked set: V = V >> u, i, ue, _, e, o
					> version: l/i/_/c/h
					TRYING: c
					> version: l/i/_/c/h
					TRYING: c
					> version: l/i/_/ch
					TRYING: ch
					> version: l/i/_/ch
					TRYING: ch
					> version: _/l/_/i/c/h
					TRYING: i
					adding blocked set: V = V >> u, i, ue, _, e, o
					> version: _/l/_/i/c/h
					TRYING: i
					adding blocked set: V = V >> u, i, ue, _, e, o
					> version: _/l/_/i/ch
					TRYING: i
					adding blocked set: V = V >> u, i, ue, _, e, o
					> version: _/l/_/i/ch
					TRYING: i
					adding blocked set: V = V >> u, i, ue, _, e, o
					> version: l/_/_/i/c/h
					TRYING: i
					adding blocked set: V = V >> u, i, ue, _, e, o
					> version: l/_/_/i/c/h
					TRYING: i
					adding blocked set: V = V >> u, i, ue, _, e, o
					> version: l/_/_/i/ch
					TRYING: i
					adding blocked set: V = V >> u, i, ue, _, e, o
					> version: l/_/_/i/ch
					TRYING: i
					adding blocked set: V = V >> u, i, ue, _, e, o
					> version: _/_/_/l/i/c/h
					TRYING: l
					> version: _/_/_/l/i/c/h
					TRYING: l
					> version: _/_/_/l/i/ch
					TRYING: l
					> version: _/_/_/l/i/ch
					TRYING: l
					RESULT:  ['_']
				adding dashed alternative: ['l', 'i', 'c', '_', 'h']
				adding dashed alternative: ['l', 'i', 'c', '_', 'h']
				adding dashed alternative: ['l', 'i', 'ch', '_']
				adding dashed alternative: ['l', 'i', 'ch', '_']
				adding dashed alternative: ['_', 'l', 'i', '_', 'c', 'h']
				adding dashed alternative: ['_', 'l', 'i', '_', 'c', 'h']
				adding dashed alternative: ['_', 'l', 'i', '_', 'ch']
				adding dashed alternative: ['_', 'l', 'i', '_', 'ch']
				adding dashed alternative: ['l', '_', 'i', '_', 'c', 'h']
				adding dashed alternative: ['l', '_', 'i', '_', 'c', 'h']
				adding dashed alternative: ['l', '_', 'i', '_', 'ch']
				adding dashed alternative: ['l', '_', 'i', '_', 'ch']
				adding dashed alternative: ['_', '_', 'l', '_', 'i', 'c', 'h']
				adding dashed alternative: ['_', '_', 'l', '_', 'i', 'c', 'h']
				adding dashed alternative: ['_', '_', 'l', '_', 'i', 'ch']
				adding dashed alternative: ['_', '_', 'l', '_', 'i', 'ch']
				adding dashed alternative: ['l', 'i', '_', '_', 'c', 'h']
				adding dashed alternative: ['l', 'i', '_', '_', 'c', 'h']
				adding dashed alternative: ['l', 'i', '_', '_', 'ch']
				adding dashed alternative: ['l', 'i', '_', '_', 'ch']
				adding dashed alternative: ['_', 'l', '_', '_', 'i', 'c', 'h']
				adding dashed alternative: ['_', 'l', '_', '_', 'i', 'c', 'h']
				adding dashed alternative: ['_', 'l', '_', '_', 'i', 'ch']
				adding dashed alternative: ['_', 'l', '_', '_', 'i', 'ch']
				adding dashed alternative: ['l', '_', '_', '_', 'i', 'c', 'h']
				adding dashed alternative: ['l', '_', '_', '_', 'i', 'c', 'h']
				adding dashed alternative: ['l', '_', '_', '_', 'i', 'ch']
				adding dashed alternative: ['l', '_', '_', '_', 'i', 'ch']
				adding dashed alternative: ['_', '_', '_', '_', 'l', 'i', 'c', 'h']
				adding dashed alternative: ['_', '_', '_', '_', 'l', 'i', 'c', 'h']
				adding dashed alternative: ['_', '_', '_', '_', 'l', 'i', 'ch']
				adding dashed alternative: ['_', '_', '_', '_', 'l', 'i', 'ch']
				l/i/c/h(CCCC)
l/i/c/h(CVCC)
l/i/ch(CCC)
l/i/ch(CVC)
_/l/i/c/h(ACACC)
_/l/i/c/h(ACACC)
_/l/i/ch(ACAC)
_/l/i/ch(ACAC)
l/_/i/c/h(CAACC)
l/_/i/c/h(CAACC)
l/_/i/ch(CAAC)
l/_/i/ch(CAAC)
_/_/l/i/c/h(AACACC)
_/_/l/i/c/h(AACACC)
_/_/l/i/ch(AACAC)
_/_/l/i/ch(AACAC)
l/i/_/c/h(CAACC)
l/i/_/c/h(CAACC)
l/i/_/ch(CAAC)
l/i/_/ch(CAAC)
_/l/_/i/c/h(ACAACC)
_/l/_/i/c/h(ACAACC)
_/l/_/i/ch(ACAAC)
_/l/_/i/ch(ACAAC)
l/_/_/i/c/h(CAAACC)
l/_/_/i/c/h(CAAACC)
l/_/_/i/ch(CAAAC)
l/_/_/i/ch(CAAAC)
_/_/_/l/i/c/h(AAACACC)
_/_/_/l/i/c/h(AAACACC)
_/_/_/l/i/ch(AAACAC)
_/_/_/l/i/ch(AAACAC)
l/i/c/_/h(CACAC)
l/i/c/_/h(CACAC)
l/i/ch/_(CACA)
l/i/ch/_(CACA)
_/l/i/_/c/h(ACAACC)
_/l/i/_/c/h(ACAACC)
_/l/i/_/ch(ACAAC)
_/l/i/_/ch(ACAAC)
l/_/i/_/c/h(CAAACC)
l/_/i/_/c/h(CAAACC)
l/_/i/_/ch(CAAAC)
l/_/i/_/ch(CAAAC)
_/_/l/_/i/c/h(AACAACC)
_/_/l/_/i/c/h(AACAACC)
_/_/l/_/i/ch(AACAAC)
_/_/l/_/i/ch(AACAAC)
l/i/_/_/c/h(CAAACC)
l/i/_/_/c/h(CAAACC)
l/i/_/_/ch(CAAAC)
l/i/_/_/ch(CAAAC)
_/l/_/_/i/c/h(ACAAACC)
_/l/_/_/i/c/h(ACAAACC)
_/l/_/_/i/ch(ACAAAC)
_/l/_/_/i/ch(ACAAAC)
l/_/_/_/i/c/h(CAAAACC)
l/_/_/_/i/c/h(CAAAACC)
l/_/_/_/i/ch(CAAAAC)
l/_/_/_/i/ch(CAAAAC)
_/_/_/_/l/i/c/h(AAAACACC)
_/_/_/_/l/i/c/h(AAAACACC)
_/_/_/_/l/i/ch(AAAACAC)
_/_/_/_/l/i/ch(AAAACAC)
				ANALYSING: liche
					resolving (32)
					> version: l/i/c/h/e
					TRYING: h
					> version: l/i/c/h/e
					TRYING: h
					> version: l/i/ch/e
					TRYING: e
					> version: l/i/ch/e
					TRYING: e
					> version: _/l/i/c/h/e
					TRYING: c
					> version: _/l/i/c/h/e
					TRYING: c
					> version: _/l/i/ch/e
					TRYING: ch
					> version: _/l/i/ch/e
					TRYING: ch
					> version: l/_/i/c/h/e
					TRYING: c
					> version: l/_/i/c/h/e
					TRYING: c
					> version: l/_/i/ch/e
					TRYING: ch
					> version: l/_/i/ch/e
					TRYING: ch
					> version: _/_/l/i/c/h/e
					TRYING: i
					adding blocked set: V = V >> u, i, ue, _, e, o
					> version: _/_/l/i/c/h/e
					TRYING: i
					adding blocked set: V = V >> u, i, ue, _, e, o
					> version: _/_/l/i/ch/e
					TRYING: i
					adding blocked set: V = V >> u, i, ue, _, e, o
					> version: _/_/l/i/ch/e
					TRYING: i
					adding blocked set: V = V >> u, i, ue, _, e, o
					> version: l/i/_/c/h/e
					TRYING: c
					> version: l/i/_/c/h/e
					TRYING: c
					> version: l/i/_/ch/e
					TRYING: ch
					> version: l/i/_/ch/e
					TRYING: ch
					> version: _/l/_/i/c/h/e
					TRYING: i
					adding blocked set: V = V >> u, i, ue, _, e, o
					> version: _/l/_/i/c/h/e
					TRYING: i
					adding blocked set: V = V >> u, i, ue, _, e, o
					> version: _/l/_/i/ch/e
					TRYING: i
					adding blocked set: V = V >> u, i, ue, _, e, o
					> version: _/l/_/i/ch/e
					TRYING: i
					adding blocked set: V = V >> u, i, ue, _, e, o
					> version: l/_/_/i/c/h/e
					TRYING: i
					adding blocked set: V = V >> u, i, ue, _, e, o
					> version: l/_/_/i/c/h/e
					TRYING: i
					adding blocked set: V = V >> u, i, ue, _, e, o
					> version: l/_/_/i/ch/e
					TRYING: i
					adding blocked set: V = V >> u, i, ue, _, e, o
					> version: l/_/_/i/ch/e
					TRYING: i
					adding blocked set: V = V >> u, i, ue, _, e, o
					> version: _/_/_/l/i/c/h/e
					TRYING: l
					> version: _/_/_/l/i/c/h/e
					TRYING: l
					> version: _/_/_/l/i/ch/e
					TRYING: l
					> version: _/_/_/l/i/ch/e
					TRYING: l
					RESULT:  ['e']
			___CVCVC : 4___
				ANALYSING: heofen
				adding littera based on matching pattern
				ANALYSING: heofenn
				adding littera based on matching pattern
				ANALYSING: heofon
				adding littera based on matching pattern
				ANALYSING: heouen
				adding littera based on matching pattern
				ANALYSING: heuen
				adding littera based on matching pattern
				ANALYSING: houen
				adding littera based on matching pattern
				ANALYSING: eue
					resolving (10)
					> version: e/u/e
					> version: e/u/e
					> version: eu/e
					> version: e/ue
					> version: eu/e
					> version: _/e/u/e
					> version: _/e/u/e
					> version: _/eu/e
					> version: _/e/ue
					> version: _/eu/e
					RESULT:  ['_']
				adding dashed alternative: ['e', 'u', 'e', '_']
				adding dashed alternative: ['e', 'u', 'e', '_']
				adding dashed alternative: ['eu', 'e', '_']
				adding dashed alternative: ['e', 'ue', '_']
				adding dashed alternative: ['eu', 'e', '_']
				adding dashed alternative: ['_', 'e', 'u', 'e', '_']
				adding dashed alternative: ['_', 'e', 'u', 'e', '_']
				adding dashed alternative: ['_', 'eu', 'e', '_']
				adding dashed alternative: ['_', 'e', 'ue', '_']
				adding dashed alternative: ['_', 'eu', 'e', '_']
				e/u/e(VCV)
e/u/e(VVV)
eu/e(VV)
e/ue(VV)
eu/e(VV)
_/e/u/e(AVAV)
_/e/u/e(AVAV)
_/eu/e(AVV)
_/e/ue(AVV)
_/eu/e(AVV)
e/u/e/_(VAVA)
e/u/e/_(VAVA)
eu/e/_(VVA)
e/ue/_(VVA)
eu/e/_(VVA)
_/e/u/e/_(AVAVA)
_/e/u/e/_(AVAVA)
_/eu/e/_(AVVA)
_/e/ue/_(AVVA)
_/eu/e/_(AVVA)
				version split: ['e', 'u', 'e']
				{'string': 'e/u/e', 'rgx': '((_))/((u)|(e)|(ue))/((u))/((e))/((_))$'}
				_____REMOVING________['e', 'u', 'e']
				version split: ['e', 'u', 'e']
				{'string': 'e/u/e', 'rgx': '((_))/((u)|(e)|(ue))/((u))/((e))/((_))$'}
				_____REMOVING________['e', 'u', 'e']
				version split: ['eu', 'e']
				{'string': 'eu/e', 'rgx': '((_))/((u)|(e)|(ue))/((u))/((e))/((_))$'}
				_____REMOVING________['eu', 'e']
				version split: ['e', 'ue']
				{'string': 'e/ue', 'rgx': '((_))/((u)|(e)|(ue))/((u))/((e))/((_))$'}
				_____REMOVING________['e', 'ue']
				version split: ['eu', 'e']
				{'string': 'eu/e', 'rgx': '((_))/((u)|(e)|(ue))/((u))/((e))/((_))$'}
				_____REMOVING________['eu', 'e']
				version split: ['_', 'e', 'u', 'e']
				{'string': '_/e/u/e', 'rgx': '((_))/((u)|(e)|(ue))/((u))/((e))/((_))$'}
				_____REMOVING________['_', 'e', 'u', 'e']
				version split: ['_', 'e', 'u', 'e']
				{'string': '_/e/u/e', 'rgx': '((_))/((u)|(e)|(ue))/((u))/((e))/((_))$'}
				_____REMOVING________['_', 'e', 'u', 'e']
				version split: ['_', 'eu', 'e']
				{'string': '_/eu/e', 'rgx': '((_))/((u)|(e)|(ue))/((u))/((e))/((_))$'}
				_____REMOVING________['_', 'eu', 'e']
				version split: ['_', 'e', 'ue']
				{'string': '_/e/ue', 'rgx': '((_))/((u)|(e)|(ue))/((u))/((e))/((_))$'}
				_____REMOVING________['_', 'e', 'ue']
				version split: ['_', 'eu', 'e']
				{'string': '_/eu/e', 'rgx': '((_))/((u)|(e)|(ue))/((u))/((e))/((_))$'}
				_____REMOVING________['_', 'eu', 'e']
				version split: ['e', 'u', 'e', '_']
				{'string': 'e/u/e/_', 'rgx': '((_))/((u)|(e)|(ue))/((u))/((e))/((_))$'}
				_____REMOVING________['e', 'u', 'e', '_']
				version split: ['e', 'u', 'e', '_']
				{'string': 'e/u/e/_', 'rgx': '((_))/((u)|(e)|(ue))/((u))/((e))/((_))$'}
				_____REMOVING________['e', 'u', 'e', '_']
				version split: ['eu', 'e', '_']
				{'string': 'eu/e/_', 'rgx': '((_))/((u)|(e)|(ue))/((u))/((e))/((_))$'}
				_____REMOVING________['eu', 'e', '_']
				version split: ['e', 'ue', '_']
				{'string': 'e/ue/_', 'rgx': '((_))/((u)|(e)|(ue))/((u))/((e))/((_))$'}
				_____REMOVING________['e', 'ue', '_']
				version split: ['eu', 'e', '_']
				{'string': 'eu/e/_', 'rgx': '((_))/((u)|(e)|(ue))/((u))/((e))/((_))$'}
				_____REMOVING________['eu', 'e', '_']
				version split: ['_', 'e', 'u', 'e', '_']
				{'string': '_/e/u/e/_', 'rgx': '((_))/((u)|(e)|(ue))/((u))/((e))/((_))$'}
				version split: ['_', 'e', 'u', 'e', '_']
				{'string': '_/e/u/e/_', 'rgx': '((_))/((u)|(e)|(ue))/((u))/((e))/((_))$'}
				version split: ['_', 'eu', 'e', '_']
				{'string': '_/eu/e/_', 'rgx': '((_))/((u)|(e)|(ue))/((u))/((e))/((_))$'}
				_____REMOVING________['_', 'eu', 'e', '_']
				version split: ['_', 'e', 'ue', '_']
				{'string': '_/e/ue/_', 'rgx': '((_))/((u)|(e)|(ue))/((u))/((e))/((_))$'}
				_____REMOVING________['_', 'e', 'ue', '_']
				version split: ['_', 'eu', 'e', '_']
				{'string': '_/eu/e/_', 'rgx': '((_))/((u)|(e)|(ue))/((u))/((e))/((_))$'}
				_____REMOVING________['_', 'eu', 'e', '_']
				ANALYSING: he
					resolving (4)
					> version: h/e
					> version: h/e/_
					> version: h/e/_
					> version: h/e/_/_
					RESULT:  ['_']
				adding dashed alternative: ['h', 'e', '_']
				adding dashed alternative: ['h', 'e', '_', '_']
				adding dashed alternative: ['h', 'e', '_', '_']
				adding dashed alternative: ['h', 'e', '_', '_', '_']
				h/e(CV)
h/e/_(CVA)
h/e/_(CVA)
h/e/_/_(CVAA)
h/e/_(CVA)
h/e/_/_(CVAA)
h/e/_/_(CVAA)
h/e/_/_/_(CVAAA)
				version split: ['h', 'e']
				{'string': 'h/e', 'rgx': '((h))/((e))/((_))/((_))/((_))$'}
				_____REMOVING________['h', 'e']
				version split: ['h', 'e', '_']
				{'string': 'h/e/_', 'rgx': '((h))/((e))/((_))/((_))/((_))$'}
				_____REMOVING________['h', 'e', '_']
				version split: ['h', 'e', '_']
				{'string': 'h/e/_', 'rgx': '((h))/((e))/((_))/((_))/((_))$'}
				_____REMOVING________['h', 'e', '_']
				version split: ['h', 'e', '_', '_']
				{'string': 'h/e/_/_', 'rgx': '((h))/((e))/((_))/((_))/((_))$'}
				_____REMOVING________['h', 'e', '_', '_']
				version split: ['h', 'e', '_']
				{'string': 'h/e/_', 'rgx': '((h))/((e))/((_))/((_))/((_))$'}
				_____REMOVING________['h', 'e', '_']
				version split: ['h', 'e', '_', '_']
				{'string': 'h/e/_/_', 'rgx': '((h))/((e))/((_))/((_))/((_))$'}
				_____REMOVING________['h', 'e', '_', '_']
				version split: ['h', 'e', '_', '_']
				{'string': 'h/e/_/_', 'rgx': '((h))/((e))/((_))/((_))/((_))$'}
				_____REMOVING________['h', 'e', '_', '_']
				version split: ['h', 'e', '_', '_', '_']
				{'string': 'h/e/_/_/_', 'rgx': '((h))/((e))/((_))/((_))/((_))$'}
				ANALYSING: heo
					resolving (4)
					> version: h/e/o
					> version: h/eo
					> version: h/e/_/o
					> version: h/eo/_
					RESULT:  ['_']
				adding dashed alternative: ['h', 'e', 'o', '_']
				adding dashed alternative: ['h', 'eo', '_']
				adding dashed alternative: ['h', 'e', '_', 'o', '_']
				adding dashed alternative: ['h', 'eo', '_', '_']
				h/e/o(CVV)
h/eo(CV)
h/e/_/o(CVAV)
h/eo/_(CVA)
h/e/o/_(CVVA)
h/eo/_(CVA)
h/e/_/o/_(CVAVA)
h/eo/_/_(CVAA)
				version split: ['h', 'e', 'o']
				{'string': 'h/e/o', 'rgx': '((h))/((e)|(eo))/((_))/((o))/((_))$'}
				_____REMOVING________['h', 'e', 'o']
				version split: ['h', 'eo']
				{'string': 'h/eo', 'rgx': '((h))/((e)|(eo))/((_))/((o))/((_))$'}
				_____REMOVING________['h', 'eo']
				version split: ['h', 'e', '_', 'o']
				{'string': 'h/e/_/o', 'rgx': '((h))/((e)|(eo))/((_))/((o))/((_))$'}
				_____REMOVING________['h', 'e', '_', 'o']
				version split: ['h', 'eo', '_']
				{'string': 'h/eo/_', 'rgx': '((h))/((e)|(eo))/((_))/((o))/((_))$'}
				_____REMOVING________['h', 'eo', '_']
				version split: ['h', 'e', 'o', '_']
				{'string': 'h/e/o/_', 'rgx': '((h))/((e)|(eo))/((_))/((o))/((_))$'}
				_____REMOVING________['h', 'e', 'o', '_']
				version split: ['h', 'eo', '_']
				{'string': 'h/eo/_', 'rgx': '((h))/((e)|(eo))/((_))/((o))/((_))$'}
				_____REMOVING________['h', 'eo', '_']
				version split: ['h', 'e', '_', 'o', '_']
				{'string': 'h/e/_/o/_', 'rgx': '((h))/((e)|(eo))/((_))/((o))/((_))$'}
				version split: ['h', 'eo', '_', '_']
				{'string': 'h/eo/_/_', 'rgx': '((h))/((e)|(eo))/((_))/((o))/((_))$'}
				_____REMOVING________['h', 'eo', '_', '_']
				ANALYSING: heoue
					resolving (11)
					> version: h/e/o/u/e
					TRYING: e
					> version: h/e/o/u/e
					TRYING: e
					> version: h/e/ou/e
					> version: h/eo/u/e
					> version: h/eo/u/e
					> version: h/e/o/ue
					> version: h/eo/u/e
					> version: h/eo/u/e
					> version: h/e/ou/e
					> version: h/eo/ue
					> version: h/eo/ue
					RESULT:  ['_']
				adding dashed alternative: ['h', 'e', 'o', 'u', '_', 'e']
				adding dashed alternative: ['h', 'e', 'o', 'u', '_', 'e']
				adding dashed alternative: ['h', 'e', 'ou', 'e', '_']
				adding dashed alternative: ['h', 'eo', 'u', 'e', '_']
				adding dashed alternative: ['h', 'eo', 'u', 'e', '_']
				adding dashed alternative: ['h', 'e', 'o', 'ue', '_']
				adding dashed alternative: ['h', 'eo', 'u', 'e', '_']
				adding dashed alternative: ['h', 'eo', 'u', 'e', '_']
				adding dashed alternative: ['h', 'e', 'ou', 'e', '_']
				adding dashed alternative: ['h', 'eo', 'ue', '_']
				adding dashed alternative: ['h', 'eo', 'ue', '_']
				h/e/o/u/e(CVVCV)
h/e/o/u/e(CVVVV)
h/e/ou/e(CVVV)
h/eo/u/e(CVCV)
h/eo/u/e(CVVV)
h/e/o/ue(CVVV)
h/eo/u/e(CVCV)
h/eo/u/e(CVVV)
h/e/ou/e(CVVV)
h/eo/ue(CVV)
h/eo/ue(CVV)
h/e/o/u/_/e(CVVAAV)
h/e/o/u/_/e(CVVAAV)
h/e/ou/e/_(CVVVA)
h/eo/u/e/_(CVAVA)
h/eo/u/e/_(CVAVA)
h/e/o/ue/_(CVVVA)
h/eo/u/e/_(CVAVA)
h/eo/u/e/_(CVAVA)
h/e/ou/e/_(CVVVA)
h/eo/ue/_(CVVA)
h/eo/ue/_(CVVA)
				version split: ['h', 'e', 'o', 'u', 'e']
				{'string': 'h/e/o/u/e', 'rgx': '((h))/((e)|(eo))/((u))/((u)|(e)|(ue))/((_))$'}
				_____REMOVING________['h', 'e', 'o', 'u', 'e']
				version split: ['h', 'e', 'o', 'u', 'e']
				{'string': 'h/e/o/u/e', 'rgx': '((h))/((e)|(eo))/((u))/((u)|(e)|(ue))/((_))$'}
				_____REMOVING________['h', 'e', 'o', 'u', 'e']
				version split: ['h', 'e', 'ou', 'e']
				{'string': 'h/e/ou/e', 'rgx': '((h))/((e)|(eo))/((u))/((u)|(e)|(ue))/((_))$'}
				_____REMOVING________['h', 'e', 'ou', 'e']
				version split: ['h', 'eo', 'u', 'e']
				{'string': 'h/eo/u/e', 'rgx': '((h))/((e)|(eo))/((u))/((u)|(e)|(ue))/((_))$'}
				_____REMOVING________['h', 'eo', 'u', 'e']
				version split: ['h', 'eo', 'u', 'e']
				{'string': 'h/eo/u/e', 'rgx': '((h))/((e)|(eo))/((u))/((u)|(e)|(ue))/((_))$'}
				_____REMOVING________['h', 'eo', 'u', 'e']
				version split: ['h', 'e', 'o', 'ue']
				{'string': 'h/e/o/ue', 'rgx': '((h))/((e)|(eo))/((u))/((u)|(e)|(ue))/((_))$'}
				_____REMOVING________['h', 'e', 'o', 'ue']
				version split: ['h', 'eo', 'u', 'e']
				{'string': 'h/eo/u/e', 'rgx': '((h))/((e)|(eo))/((u))/((u)|(e)|(ue))/((_))$'}
				_____REMOVING________['h', 'eo', 'u', 'e']
				version split: ['h', 'eo', 'u', 'e']
				{'string': 'h/eo/u/e', 'rgx': '((h))/((e)|(eo))/((u))/((u)|(e)|(ue))/((_))$'}
				_____REMOVING________['h', 'eo', 'u', 'e']
				version split: ['h', 'e', 'ou', 'e']
				{'string': 'h/e/ou/e', 'rgx': '((h))/((e)|(eo))/((u))/((u)|(e)|(ue))/((_))$'}
				_____REMOVING________['h', 'e', 'ou', 'e']
				version split: ['h', 'eo', 'ue']
				{'string': 'h/eo/ue', 'rgx': '((h))/((e)|(eo))/((u))/((u)|(e)|(ue))/((_))$'}
				_____REMOVING________['h', 'eo', 'ue']
				version split: ['h', 'eo', 'ue']
				{'string': 'h/eo/ue', 'rgx': '((h))/((e)|(eo))/((u))/((u)|(e)|(ue))/((_))$'}
				_____REMOVING________['h', 'eo', 'ue']
				version split: ['h', 'e', 'o', 'u', '_', 'e']
				{'string': 'h/e/o/u/_/e', 'rgx': '((h))/((e)|(eo))/((u))/((u)|(e)|(ue))/((_))$'}
				_____REMOVING________['h', 'e', 'o', 'u', '_', 'e']
				version split: ['h', 'e', 'o', 'u', '_', 'e']
				{'string': 'h/e/o/u/_/e', 'rgx': '((h))/((e)|(eo))/((u))/((u)|(e)|(ue))/((_))$'}
				_____REMOVING________['h', 'e', 'o', 'u', '_', 'e']
				version split: ['h', 'e', 'ou', 'e', '_']
				{'string': 'h/e/ou/e/_', 'rgx': '((h))/((e)|(eo))/((u))/((u)|(e)|(ue))/((_))$'}
				_____REMOVING________['h', 'e', 'ou', 'e', '_']
				version split: ['h', 'eo', 'u', 'e', '_']
				{'string': 'h/eo/u/e/_', 'rgx': '((h))/((e)|(eo))/((u))/((u)|(e)|(ue))/((_))$'}
				version split: ['h', 'eo', 'u', 'e', '_']
				{'string': 'h/eo/u/e/_', 'rgx': '((h))/((e)|(eo))/((u))/((u)|(e)|(ue))/((_))$'}
				version split: ['h', 'e', 'o', 'ue', '_']
				{'string': 'h/e/o/ue/_', 'rgx': '((h))/((e)|(eo))/((u))/((u)|(e)|(ue))/((_))$'}
				_____REMOVING________['h', 'e', 'o', 'ue', '_']
				version split: ['h', 'eo', 'u', 'e', '_']
				{'string': 'h/eo/u/e/_', 'rgx': '((h))/((e)|(eo))/((u))/((u)|(e)|(ue))/((_))$'}
				version split: ['h', 'eo', 'u', 'e', '_']
				{'string': 'h/eo/u/e/_', 'rgx': '((h))/((e)|(eo))/((u))/((u)|(e)|(ue))/((_))$'}
				version split: ['h', 'e', 'ou', 'e', '_']
				{'string': 'h/e/ou/e/_', 'rgx': '((h))/((e)|(eo))/((u))/((u)|(e)|(ue))/((_))$'}
				_____REMOVING________['h', 'e', 'ou', 'e', '_']
				version split: ['h', 'eo', 'ue', '_']
				{'string': 'h/eo/ue/_', 'rgx': '((h))/((e)|(eo))/((u))/((u)|(e)|(ue))/((_))$'}
				_____REMOVING________['h', 'eo', 'ue', '_']
				version split: ['h', 'eo', 'ue', '_']
				{'string': 'h/eo/ue/_', 'rgx': '((h))/((e)|(eo))/((u))/((u)|(e)|(ue))/((_))$'}
				_____REMOVING________['h', 'eo', 'ue', '_']
				ANALYSING: heouene
					resolving (11)
					> version: h/e/o/u/e/n/e
					TRYING: e
					> version: h/e/o/u/e/n/e
					TRYING: e
					> version: h/e/ou/e/n/e
					TRYING: n
					> version: h/eo/u/e/n/e
					TRYING: n
					> version: h/eo/u/e/n/e
					TRYING: n
					> version: h/e/o/ue/n/e
					TRYING: n
					> version: h/eo/u/e/n/e
					TRYING: n
					> version: h/eo/u/e/n/e
					TRYING: n
					> version: h/e/ou/e/n/e
					TRYING: n
					> version: h/eo/ue/n/e
					TRYING: e
					> version: h/eo/ue/n/e
					TRYING: e
					RESULT:  ['n']
				version split: ['h', 'e', 'o', 'u', 'e', 'n', 'e']
				{'string': 'h/e/o/u/e/n', 'rgx': '((h))/((e)|(eo))/((u))/((u)|(e)|(ue))/((n))$'}
				_____REMOVING________['h', 'e', 'o', 'u', 'e', 'n', 'e']
				version split: ['h', 'e', 'o', 'u', 'e', 'n', 'e']
				{'string': 'h/e/o/u/e/n', 'rgx': '((h))/((e)|(eo))/((u))/((u)|(e)|(ue))/((n))$'}
				_____REMOVING________['h', 'e', 'o', 'u', 'e', 'n', 'e']
				version split: ['h', 'e', 'ou', 'e', 'n', 'e']
				{'string': 'h/e/ou/e/n/e', 'rgx': '((h))/((e)|(eo))/((u))/((u)|(e)|(ue))/((n))$'}
				_____REMOVING________['h', 'e', 'ou', 'e', 'n', 'e']
				version split: ['h', 'eo', 'u', 'e', 'n', 'e']
				{'string': 'h/eo/u/e/n/e', 'rgx': '((h))/((e)|(eo))/((u))/((u)|(e)|(ue))/((n))$'}
				_____REMOVING________['h', 'eo', 'u', 'e', 'n', 'e']
				version split: ['h', 'eo', 'u', 'e', 'n', 'e']
				{'string': 'h/eo/u/e/n/e', 'rgx': '((h))/((e)|(eo))/((u))/((u)|(e)|(ue))/((n))$'}
				_____REMOVING________['h', 'eo', 'u', 'e', 'n', 'e']
				version split: ['h', 'e', 'o', 'ue', 'n', 'e']
				{'string': 'h/e/o/ue/n/e', 'rgx': '((h))/((e)|(eo))/((u))/((u)|(e)|(ue))/((n))$'}
				_____REMOVING________['h', 'e', 'o', 'ue', 'n', 'e']
				version split: ['h', 'eo', 'u', 'e', 'n', 'e']
				{'string': 'h/eo/u/e/n/e', 'rgx': '((h))/((e)|(eo))/((u))/((u)|(e)|(ue))/((n))$'}
				_____REMOVING________['h', 'eo', 'u', 'e', 'n', 'e']
				version split: ['h', 'eo', 'u', 'e', 'n', 'e']
				{'string': 'h/eo/u/e/n/e', 'rgx': '((h))/((e)|(eo))/((u))/((u)|(e)|(ue))/((n))$'}
				_____REMOVING________['h', 'eo', 'u', 'e', 'n', 'e']
				version split: ['h', 'e', 'ou', 'e', 'n', 'e']
				{'string': 'h/e/ou/e/n/e', 'rgx': '((h))/((e)|(eo))/((u))/((u)|(e)|(ue))/((n))$'}
				_____REMOVING________['h', 'e', 'ou', 'e', 'n', 'e']
				version split: ['h', 'eo', 'ue', 'n', 'e']
				{'string': 'h/eo/ue/n/e', 'rgx': '((h))/((e)|(eo))/((u))/((u)|(e)|(ue))/((n))$'}
				_____REMOVING________['h', 'eo', 'ue', 'n', 'e']
				version split: ['h', 'eo', 'ue', 'n', 'e']
				{'string': 'h/eo/ue/n/e', 'rgx': '((h))/((e)|(eo))/((u))/((u)|(e)|(ue))/((n))$'}
				_____REMOVING________['h', 'eo', 'ue', 'n', 'e']
				ANALYSING: heue
					resolving (5)
					> version: h/e/u/e
					> version: h/e/u/e
					> version: h/eu/e
					> version: h/e/ue
					> version: h/eu/e
					RESULT:  ['_']
				adding dashed alternative: ['h', 'e', 'u', 'e', '_']
				adding dashed alternative: ['h', 'e', 'u', 'e', '_']
				adding dashed alternative: ['h', 'eu', 'e', '_']
				adding dashed alternative: ['h', 'e', 'ue', '_']
				adding dashed alternative: ['h', 'eu', 'e', '_']
				h/e/u/e(CVCV)
h/e/u/e(CVVV)
h/eu/e(CVV)
h/e/ue(CVV)
h/eu/e(CVV)
h/e/u/e/_(CVAVA)
h/e/u/e/_(CVAVA)
h/eu/e/_(CVVA)
h/e/ue/_(CVVA)
h/eu/e/_(CVVA)
				version split: ['h', 'e', 'u', 'e']
				{'string': 'h/e/u/e', 'rgx': '((h))/((e))/((u))/((e))/((_))$'}
				_____REMOVING________['h', 'e', 'u', 'e']
				version split: ['h', 'e', 'u', 'e']
				{'string': 'h/e/u/e', 'rgx': '((h))/((e))/((u))/((e))/((_))$'}
				_____REMOVING________['h', 'e', 'u', 'e']
				version split: ['h', 'eu', 'e']
				{'string': 'h/eu/e', 'rgx': '((h))/((e))/((u))/((e))/((_))$'}
				_____REMOVING________['h', 'eu', 'e']
				version split: ['h', 'e', 'ue']
				{'string': 'h/e/ue', 'rgx': '((h))/((e))/((u))/((e))/((_))$'}
				_____REMOVING________['h', 'e', 'ue']
				version split: ['h', 'eu', 'e']
				{'string': 'h/eu/e', 'rgx': '((h))/((e))/((u))/((e))/((_))$'}
				_____REMOVING________['h', 'eu', 'e']
				version split: ['h', 'e', 'u', 'e', '_']
				{'string': 'h/e/u/e/_', 'rgx': '((h))/((e))/((u))/((e))/((_))$'}
				version split: ['h', 'e', 'u', 'e', '_']
				{'string': 'h/e/u/e/_', 'rgx': '((h))/((e))/((u))/((e))/((_))$'}
				version split: ['h', 'eu', 'e', '_']
				{'string': 'h/eu/e/_', 'rgx': '((h))/((e))/((u))/((e))/((_))$'}
				_____REMOVING________['h', 'eu', 'e', '_']
				version split: ['h', 'e', 'ue', '_']
				{'string': 'h/e/ue/_', 'rgx': '((h))/((e))/((u))/((e))/((_))$'}
				_____REMOVING________['h', 'e', 'ue', '_']
				version split: ['h', 'eu', 'e', '_']
				{'string': 'h/eu/e/_', 'rgx': '((h))/((e))/((u))/((e))/((_))$'}
				_____REMOVING________['h', 'eu', 'e', '_']
				ANALYSING: heuene
					resolving (5)
					> version: h/e/u/e/n/e
					TRYING: n
					> version: h/e/u/e/n/e
					TRYING: n
					> version: h/eu/e/n/e
					TRYING: e
					> version: h/e/ue/n/e
					TRYING: e
					> version: h/eu/e/n/e
					TRYING: e
					RESULT:  ['n']
				version split: ['h', 'e', 'u', 'e', 'n', 'e']
				{'string': 'h/e/u/e/n/e', 'rgx': '((h))/((e))/((u))/((e))/((n))$'}
				_____REMOVING________['h', 'e', 'u', 'e', 'n', 'e']
				version split: ['h', 'e', 'u', 'e', 'n', 'e']
				{'string': 'h/e/u/e/n/e', 'rgx': '((h))/((e))/((u))/((e))/((n))$'}
				_____REMOVING________['h', 'e', 'u', 'e', 'n', 'e']
				version split: ['h', 'eu', 'e', 'n', 'e']
				{'string': 'h/eu/e/n/e', 'rgx': '((h))/((e))/((u))/((e))/((n))$'}
				_____REMOVING________['h', 'eu', 'e', 'n', 'e']
				version split: ['h', 'e', 'ue', 'n', 'e']
				{'string': 'h/e/ue/n/e', 'rgx': '((h))/((e))/((u))/((e))/((n))$'}
				_____REMOVING________['h', 'e', 'ue', 'n', 'e']
				version split: ['h', 'eu', 'e', 'n', 'e']
				{'string': 'h/eu/e/n/e', 'rgx': '((h))/((e))/((u))/((e))/((n))$'}
				_____REMOVING________['h', 'eu', 'e', 'n', 'e']
				ANALYSING: lich
					resolving (64)
					> version: l/i/c/h
					> version: l/i/c/h
					> version: l/i/ch
					> version: l/i/ch
					> version: _/l/i/c/h
					TRYING: h
					adding blocked set: C = C >> nn, h, _, n
					> version: _/l/i/c/h
					TRYING: h
					adding blocked set: C = C >> nn, h, _, n
					> version: _/l/i/ch
					> version: _/l/i/ch
					> version: l/_/i/c/h
					TRYING: h
					adding blocked set: C = C >> nn, h, _, n
					> version: l/_/i/c/h
					TRYING: h
					adding blocked set: C = C >> nn, h, _, n
					> version: l/_/i/ch
					> version: l/_/i/ch
					> version: _/_/l/i/c/h
					TRYING: c
					adding blocked set: C = C >> nn, c, _, n
					> version: _/_/l/i/c/h
					TRYING: c
					adding blocked set: C = C >> nn, c, _, n
					> version: _/_/l/i/ch
					TRYING: ch
					adding blocked set: C = C >> ch, nn, _, n
					> version: _/_/l/i/ch
					TRYING: ch
					adding blocked set: C = C >> ch, nn, _, n
					> version: l/i/_/c/h
					TRYING: h
					adding blocked set: C = C >> nn, h, _, n
					> version: l/i/_/c/h
					TRYING: h
					adding blocked set: C = C >> nn, h, _, n
					> version: l/i/_/ch
					> version: l/i/_/ch
					> version: _/l/_/i/c/h
					TRYING: c
					adding blocked set: C = C >> nn, c, _, n
					> version: _/l/_/i/c/h
					TRYING: c
					adding blocked set: C = C >> nn, c, _, n
					> version: _/l/_/i/ch
					TRYING: ch
					adding blocked set: C = C >> ch, nn, _, n
					> version: _/l/_/i/ch
					TRYING: ch
					adding blocked set: C = C >> ch, nn, _, n
					> version: l/_/_/i/c/h
					TRYING: c
					adding blocked set: C = C >> nn, c, _, n
					> version: l/_/_/i/c/h
					TRYING: c
					adding blocked set: C = C >> nn, c, _, n
					> version: l/_/_/i/ch
					TRYING: ch
					adding blocked set: C = C >> ch, nn, _, n
					> version: l/_/_/i/ch
					TRYING: ch
					adding blocked set: C = C >> ch, nn, _, n
					> version: _/_/_/l/i/c/h
					TRYING: i
					adding blocked set: C = C >> nn, i, _, n
					> version: _/_/_/l/i/c/h
					TRYING: i
					adding blocked set: C = C >> nn, i, _, n
					> version: _/_/_/l/i/ch
					TRYING: i
					adding blocked set: C = C >> nn, i, _, n
					> version: _/_/_/l/i/ch
					TRYING: i
					adding blocked set: C = C >> nn, i, _, n
					> version: l/i/c/_/h
					TRYING: h
					adding blocked set: C = C >> nn, h, _, n
					> version: l/i/c/_/h
					TRYING: h
					adding blocked set: C = C >> nn, h, _, n
					> version: l/i/ch/_
					> version: l/i/ch/_
					> version: _/l/i/_/c/h
					TRYING: c
					adding blocked set: C = C >> nn, c, _, n
					> version: _/l/i/_/c/h
					TRYING: c
					adding blocked set: C = C >> nn, c, _, n
					> version: _/l/i/_/ch
					TRYING: ch
					adding blocked set: C = C >> ch, nn, _, n
					> version: _/l/i/_/ch
					TRYING: ch
					adding blocked set: C = C >> ch, nn, _, n
					> version: l/_/i/_/c/h
					TRYING: c
					adding blocked set: C = C >> nn, c, _, n
					> version: l/_/i/_/c/h
					TRYING: c
					adding blocked set: C = C >> nn, c, _, n
					> version: l/_/i/_/ch
					TRYING: ch
					adding blocked set: C = C >> ch, nn, _, n
					> version: l/_/i/_/ch
					TRYING: ch
					adding blocked set: C = C >> ch, nn, _, n
					> version: _/_/l/_/i/c/h
					TRYING: i
					adding blocked set: C = C >> nn, i, _, n
					> version: _/_/l/_/i/c/h
					TRYING: i
					adding blocked set: C = C >> nn, i, _, n
					> version: _/_/l/_/i/ch
					TRYING: i
					adding blocked set: C = C >> nn, i, _, n
					> version: _/_/l/_/i/ch
					TRYING: i
					adding blocked set: C = C >> nn, i, _, n
					> version: l/i/_/_/c/h
					TRYING: c
					adding blocked set: C = C >> nn, c, _, n
					> version: l/i/_/_/c/h
					TRYING: c
					adding blocked set: C = C >> nn, c, _, n
					> version: l/i/_/_/ch
					TRYING: ch
					adding blocked set: C = C >> ch, nn, _, n
					> version: l/i/_/_/ch
					TRYING: ch
					adding blocked set: C = C >> ch, nn, _, n
					> version: _/l/_/_/i/c/h
					TRYING: i
					adding blocked set: C = C >> nn, i, _, n
					> version: _/l/_/_/i/c/h
					TRYING: i
					adding blocked set: C = C >> nn, i, _, n
					> version: _/l/_/_/i/ch
					TRYING: i
					adding blocked set: C = C >> nn, i, _, n
					> version: _/l/_/_/i/ch
					TRYING: i
					adding blocked set: C = C >> nn, i, _, n
					> version: l/_/_/_/i/c/h
					TRYING: i
					adding blocked set: C = C >> nn, i, _, n
					> version: l/_/_/_/i/c/h
					TRYING: i
					adding blocked set: C = C >> nn, i, _, n
					> version: l/_/_/_/i/ch
					TRYING: i
					adding blocked set: C = C >> nn, i, _, n
					> version: l/_/_/_/i/ch
					TRYING: i
					adding blocked set: C = C >> nn, i, _, n
					> version: _/_/_/_/l/i/c/h
					TRYING: l
					adding blocked set: C = C >> nn, _, l, n
					> version: _/_/_/_/l/i/c/h
					TRYING: l
					adding blocked set: C = C >> nn, _, l, n
					> version: _/_/_/_/l/i/ch
					TRYING: l
					adding blocked set: C = C >> nn, _, l, n
					> version: _/_/_/_/l/i/ch
					TRYING: l
					adding blocked set: C = C >> nn, _, l, n
					RESULT:  ['_']
				adding dashed alternative: ['l', 'i', 'c', 'h', '_']
				adding dashed alternative: ['l', 'i', 'c', 'h', '_']
				adding dashed alternative: ['l', 'i', 'ch', '_']
				adding dashed alternative: ['l', 'i', 'ch', '_']
				adding dashed alternative: ['_', 'l', 'i', 'c', '_', 'h']
				adding dashed alternative: ['_', 'l', 'i', 'c', '_', 'h']
				adding dashed alternative: ['_', 'l', 'i', 'ch', '_']
				adding dashed alternative: ['_', 'l', 'i', 'ch', '_']
				adding dashed alternative: ['l', '_', 'i', 'c', '_', 'h']
				adding dashed alternative: ['l', '_', 'i', 'c', '_', 'h']
				adding dashed alternative: ['l', '_', 'i', 'ch', '_']
				adding dashed alternative: ['l', '_', 'i', 'ch', '_']
				adding dashed alternative: ['_', '_', 'l', 'i', '_', 'c', 'h']
				adding dashed alternative: ['_', '_', 'l', 'i', '_', 'c', 'h']
				adding dashed alternative: ['_', '_', 'l', 'i', '_', 'ch']
				adding dashed alternative: ['_', '_', 'l', 'i', '_', 'ch']
				adding dashed alternative: ['l', 'i', '_', 'c', '_', 'h']
				adding dashed alternative: ['l', 'i', '_', 'c', '_', 'h']
				adding dashed alternative: ['l', 'i', '_', 'ch', '_']
				adding dashed alternative: ['l', 'i', '_', 'ch', '_']
				adding dashed alternative: ['_', 'l', '_', 'i', '_', 'c', 'h']
				adding dashed alternative: ['_', 'l', '_', 'i', '_', 'c', 'h']
				adding dashed alternative: ['_', 'l', '_', 'i', '_', 'ch']
				adding dashed alternative: ['_', 'l', '_', 'i', '_', 'ch']
				adding dashed alternative: ['l', '_', '_', 'i', '_', 'c', 'h']
				adding dashed alternative: ['l', '_', '_', 'i', '_', 'c', 'h']
				adding dashed alternative: ['l', '_', '_', 'i', '_', 'ch']
				adding dashed alternative: ['l', '_', '_', 'i', '_', 'ch']
				adding dashed alternative: ['_', '_', '_', 'l', '_', 'i', 'c', 'h']
				adding dashed alternative: ['_', '_', '_', 'l', '_', 'i', 'c', 'h']
				adding dashed alternative: ['_', '_', '_', 'l', '_', 'i', 'ch']
				adding dashed alternative: ['_', '_', '_', 'l', '_', 'i', 'ch']
				adding dashed alternative: ['l', 'i', 'c', '_', '_', 'h']
				adding dashed alternative: ['l', 'i', 'c', '_', '_', 'h']
				adding dashed alternative: ['l', 'i', 'ch', '_', '_']
				adding dashed alternative: ['l', 'i', 'ch', '_', '_']
				adding dashed alternative: ['_', 'l', 'i', '_', '_', 'c', 'h']
				adding dashed alternative: ['_', 'l', 'i', '_', '_', 'c', 'h']
				adding dashed alternative: ['_', 'l', 'i', '_', '_', 'ch']
				adding dashed alternative: ['_', 'l', 'i', '_', '_', 'ch']
				adding dashed alternative: ['l', '_', 'i', '_', '_', 'c', 'h']
				adding dashed alternative: ['l', '_', 'i', '_', '_', 'c', 'h']
				adding dashed alternative: ['l', '_', 'i', '_', '_', 'ch']
				adding dashed alternative: ['l', '_', 'i', '_', '_', 'ch']
				adding dashed alternative: ['_', '_', 'l', '_', '_', 'i', 'c', 'h']
				adding dashed alternative: ['_', '_', 'l', '_', '_', 'i', 'c', 'h']
				adding dashed alternative: ['_', '_', 'l', '_', '_', 'i', 'ch']
				adding dashed alternative: ['_', '_', 'l', '_', '_', 'i', 'ch']
				adding dashed alternative: ['l', 'i', '_', '_', '_', 'c', 'h']
				adding dashed alternative: ['l', 'i', '_', '_', '_', 'c', 'h']
				adding dashed alternative: ['l', 'i', '_', '_', '_', 'ch']
				adding dashed alternative: ['l', 'i', '_', '_', '_', 'ch']
				adding dashed alternative: ['_', 'l', '_', '_', '_', 'i', 'c', 'h']
				adding dashed alternative: ['_', 'l', '_', '_', '_', 'i', 'c', 'h']
				adding dashed alternative: ['_', 'l', '_', '_', '_', 'i', 'ch']
				adding dashed alternative: ['_', 'l', '_', '_', '_', 'i', 'ch']
				adding dashed alternative: ['l', '_', '_', '_', '_', 'i', 'c', 'h']
				adding dashed alternative: ['l', '_', '_', '_', '_', 'i', 'c', 'h']
				adding dashed alternative: ['l', '_', '_', '_', '_', 'i', 'ch']
				adding dashed alternative: ['l', '_', '_', '_', '_', 'i', 'ch']
				adding dashed alternative: ['_', '_', '_', '_', '_', 'l', 'i', 'c', 'h']
				adding dashed alternative: ['_', '_', '_', '_', '_', 'l', 'i', 'c', 'h']
				adding dashed alternative: ['_', '_', '_', '_', '_', 'l', 'i', 'ch']
				adding dashed alternative: ['_', '_', '_', '_', '_', 'l', 'i', 'ch']
				l/i/c/h(CCCC)
l/i/c/h(CVCC)
l/i/ch(CCC)
l/i/ch(CVC)
_/l/i/c/h(ACACC)
_/l/i/c/h(ACACC)
_/l/i/ch(ACAC)
_/l/i/ch(ACAC)
l/_/i/c/h(CAACC)
l/_/i/c/h(CAACC)
l/_/i/ch(CAAC)
l/_/i/ch(CAAC)
_/_/l/i/c/h(AACACC)
_/_/l/i/c/h(AACACC)
_/_/l/i/ch(AACAC)
_/_/l/i/ch(AACAC)
l/i/_/c/h(CAACC)
l/i/_/c/h(CAACC)
l/i/_/ch(CAAC)
l/i/_/ch(CAAC)
_/l/_/i/c/h(ACAACC)
_/l/_/i/c/h(ACAACC)
_/l/_/i/ch(ACAAC)
_/l/_/i/ch(ACAAC)
l/_/_/i/c/h(CAAACC)
l/_/_/i/c/h(CAAACC)
l/_/_/i/ch(CAAAC)
l/_/_/i/ch(CAAAC)
_/_/_/l/i/c/h(AAACACC)
_/_/_/l/i/c/h(AAACACC)
_/_/_/l/i/ch(AAACAC)
_/_/_/l/i/ch(AAACAC)
l/i/c/_/h(CACAC)
l/i/c/_/h(CACAC)
l/i/ch/_(CACA)
l/i/ch/_(CACA)
_/l/i/_/c/h(ACAACC)
_/l/i/_/c/h(ACAACC)
_/l/i/_/ch(ACAAC)
_/l/i/_/ch(ACAAC)
l/_/i/_/c/h(CAAACC)
l/_/i/_/c/h(CAAACC)
l/_/i/_/ch(CAAAC)
l/_/i/_/ch(CAAAC)
_/_/l/_/i/c/h(AACAACC)
_/_/l/_/i/c/h(AACAACC)
_/_/l/_/i/ch(AACAAC)
_/_/l/_/i/ch(AACAAC)
l/i/_/_/c/h(CAAACC)
l/i/_/_/c/h(CAAACC)
l/i/_/_/ch(CAAAC)
l/i/_/_/ch(CAAAC)
_/l/_/_/i/c/h(ACAAACC)
_/l/_/_/i/c/h(ACAAACC)
_/l/_/_/i/ch(ACAAAC)
_/l/_/_/i/ch(ACAAAC)
l/_/_/_/i/c/h(CAAAACC)
l/_/_/_/i/c/h(CAAAACC)
l/_/_/_/i/ch(CAAAAC)
l/_/_/_/i/ch(CAAAAC)
_/_/_/_/l/i/c/h(AAAACACC)
_/_/_/_/l/i/c/h(AAAACACC)
_/_/_/_/l/i/ch(AAAACAC)
_/_/_/_/l/i/ch(AAAACAC)
l/i/c/h/_(CACCA)
l/i/c/h/_(CACCA)
l/i/ch/_(CACA)
l/i/ch/_(CACA)
_/l/i/c/_/h(ACACAC)
_/l/i/c/_/h(ACACAC)
_/l/i/ch/_(ACACA)
_/l/i/ch/_(ACACA)
l/_/i/c/_/h(CAACAC)
l/_/i/c/_/h(CAACAC)
l/_/i/ch/_(CAACA)
l/_/i/ch/_(CAACA)
_/_/l/i/_/c/h(AACAACC)
_/_/l/i/_/c/h(AACAACC)
_/_/l/i/_/ch(AACAAC)
_/_/l/i/_/ch(AACAAC)
l/i/_/c/_/h(CAACAC)
l/i/_/c/_/h(CAACAC)
l/i/_/ch/_(CAACA)
l/i/_/ch/_(CAACA)
_/l/_/i/_/c/h(ACAAACC)
_/l/_/i/_/c/h(ACAAACC)
_/l/_/i/_/ch(ACAAAC)
_/l/_/i/_/ch(ACAAAC)
l/_/_/i/_/c/h(CAAAACC)
l/_/_/i/_/c/h(CAAAACC)
l/_/_/i/_/ch(CAAAAC)
l/_/_/i/_/ch(CAAAAC)
_/_/_/l/_/i/c/h(AAACAACC)
_/_/_/l/_/i/c/h(AAACAACC)
_/_/_/l/_/i/ch(AAACAAC)
_/_/_/l/_/i/ch(AAACAAC)
l/i/c/_/_/h(CACAAC)
l/i/c/_/_/h(CACAAC)
l/i/ch/_/_(CACAA)
l/i/ch/_/_(CACAA)
_/l/i/_/_/c/h(ACAAACC)
_/l/i/_/_/c/h(ACAAACC)
_/l/i/_/_/ch(ACAAAC)
_/l/i/_/_/ch(ACAAAC)
l/_/i/_/_/c/h(CAAAACC)
l/_/i/_/_/c/h(CAAAACC)
l/_/i/_/_/ch(CAAAAC)
l/_/i/_/_/ch(CAAAAC)
_/_/l/_/_/i/c/h(AACAAACC)
_/_/l/_/_/i/c/h(AACAAACC)
_/_/l/_/_/i/ch(AACAAAC)
_/_/l/_/_/i/ch(AACAAAC)
l/i/_/_/_/c/h(CAAAACC)
l/i/_/_/_/c/h(CAAAACC)
l/i/_/_/_/ch(CAAAAC)
l/i/_/_/_/ch(CAAAAC)
_/l/_/_/_/i/c/h(ACAAAACC)
_/l/_/_/_/i/c/h(ACAAAACC)
_/l/_/_/_/i/ch(ACAAAAC)
_/l/_/_/_/i/ch(ACAAAAC)
l/_/_/_/_/i/c/h(CAAAAACC)
l/_/_/_/_/i/c/h(CAAAAACC)
l/_/_/_/_/i/ch(CAAAAAC)
l/_/_/_/_/i/ch(CAAAAAC)
_/_/_/_/_/l/i/c/h(AAAAACACC)
_/_/_/_/_/l/i/c/h(AAAAACACC)
_/_/_/_/_/l/i/ch(AAAAACAC)
_/_/_/_/_/l/i/ch(AAAAACAC)
				version split: ['l', 'i', 'c', 'h']
				{'string': 'l/i/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', 'c', 'h']
				version split: ['l', 'i', 'c', 'h']
				{'string': 'l/i/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', 'c', 'h']
				version split: ['l', 'i', 'ch']
				{'string': 'l/i/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', 'ch']
				version split: ['l', 'i', 'ch']
				{'string': 'l/i/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', 'ch']
				version split: ['_', 'l', 'i', 'c', 'h']
				{'string': '_/l/i/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', 'i', 'c', 'h']
				version split: ['_', 'l', 'i', 'c', 'h']
				{'string': '_/l/i/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', 'i', 'c', 'h']
				version split: ['_', 'l', 'i', 'ch']
				{'string': '_/l/i/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', 'i', 'ch']
				version split: ['_', 'l', 'i', 'ch']
				{'string': '_/l/i/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', 'i', 'ch']
				version split: ['l', '_', 'i', 'c', 'h']
				{'string': 'l/_/i/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', 'i', 'c', 'h']
				version split: ['l', '_', 'i', 'c', 'h']
				{'string': 'l/_/i/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', 'i', 'c', 'h']
				version split: ['l', '_', 'i', 'ch']
				{'string': 'l/_/i/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', 'i', 'ch']
				version split: ['l', '_', 'i', 'ch']
				{'string': 'l/_/i/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', 'i', 'ch']
				version split: ['_', '_', 'l', 'i', 'c', 'h']
				{'string': '_/_/l/i/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'l', 'i', 'c', 'h']
				version split: ['_', '_', 'l', 'i', 'c', 'h']
				{'string': '_/_/l/i/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'l', 'i', 'c', 'h']
				version split: ['_', '_', 'l', 'i', 'ch']
				{'string': '_/_/l/i/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'l', 'i', 'ch']
				version split: ['_', '_', 'l', 'i', 'ch']
				{'string': '_/_/l/i/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'l', 'i', 'ch']
				version split: ['l', 'i', '_', 'c', 'h']
				{'string': 'l/i/_/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', '_', 'c', 'h']
				version split: ['l', 'i', '_', 'c', 'h']
				{'string': 'l/i/_/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', '_', 'c', 'h']
				version split: ['l', 'i', '_', 'ch']
				{'string': 'l/i/_/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', '_', 'ch']
				version split: ['l', 'i', '_', 'ch']
				{'string': 'l/i/_/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', '_', 'ch']
				version split: ['_', 'l', '_', 'i', 'c', 'h']
				{'string': '_/l/_/i/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', '_', 'i', 'c', 'h']
				version split: ['_', 'l', '_', 'i', 'c', 'h']
				{'string': '_/l/_/i/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', '_', 'i', 'c', 'h']
				version split: ['_', 'l', '_', 'i', 'ch']
				{'string': '_/l/_/i/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', '_', 'i', 'ch']
				version split: ['_', 'l', '_', 'i', 'ch']
				{'string': '_/l/_/i/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', '_', 'i', 'ch']
				version split: ['l', '_', '_', 'i', 'c', 'h']
				{'string': 'l/_/_/i/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', '_', 'i', 'c', 'h']
				version split: ['l', '_', '_', 'i', 'c', 'h']
				{'string': 'l/_/_/i/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', '_', 'i', 'c', 'h']
				version split: ['l', '_', '_', 'i', 'ch']
				{'string': 'l/_/_/i/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', '_', 'i', 'ch']
				version split: ['l', '_', '_', 'i', 'ch']
				{'string': 'l/_/_/i/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', '_', 'i', 'ch']
				version split: ['_', '_', '_', 'l', 'i', 'c', 'h']
				{'string': '_/_/_/l/i/c', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', 'l', 'i', 'c', 'h']
				version split: ['_', '_', '_', 'l', 'i', 'c', 'h']
				{'string': '_/_/_/l/i/c', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', 'l', 'i', 'c', 'h']
				version split: ['_', '_', '_', 'l', 'i', 'ch']
				{'string': '_/_/_/l/i/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', 'l', 'i', 'ch']
				version split: ['_', '_', '_', 'l', 'i', 'ch']
				{'string': '_/_/_/l/i/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', 'l', 'i', 'ch']
				version split: ['l', 'i', 'c', '_', 'h']
				{'string': 'l/i/c/_/h', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', 'c', '_', 'h']
				version split: ['l', 'i', 'c', '_', 'h']
				{'string': 'l/i/c/_/h', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', 'c', '_', 'h']
				version split: ['l', 'i', 'ch', '_']
				{'string': 'l/i/ch/_', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', 'ch', '_']
				version split: ['l', 'i', 'ch', '_']
				{'string': 'l/i/ch/_', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', 'ch', '_']
				version split: ['_', 'l', 'i', '_', 'c', 'h']
				{'string': '_/l/i/_/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', 'i', '_', 'c', 'h']
				version split: ['_', 'l', 'i', '_', 'c', 'h']
				{'string': '_/l/i/_/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', 'i', '_', 'c', 'h']
				version split: ['_', 'l', 'i', '_', 'ch']
				{'string': '_/l/i/_/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', 'i', '_', 'ch']
				version split: ['_', 'l', 'i', '_', 'ch']
				{'string': '_/l/i/_/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', 'i', '_', 'ch']
				version split: ['l', '_', 'i', '_', 'c', 'h']
				{'string': 'l/_/i/_/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', 'i', '_', 'c', 'h']
				version split: ['l', '_', 'i', '_', 'c', 'h']
				{'string': 'l/_/i/_/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', 'i', '_', 'c', 'h']
				version split: ['l', '_', 'i', '_', 'ch']
				{'string': 'l/_/i/_/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', 'i', '_', 'ch']
				version split: ['l', '_', 'i', '_', 'ch']
				{'string': 'l/_/i/_/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', 'i', '_', 'ch']
				version split: ['_', '_', 'l', '_', 'i', 'c', 'h']
				{'string': '_/_/l/_/i/c', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'l', '_', 'i', 'c', 'h']
				version split: ['_', '_', 'l', '_', 'i', 'c', 'h']
				{'string': '_/_/l/_/i/c', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'l', '_', 'i', 'c', 'h']
				version split: ['_', '_', 'l', '_', 'i', 'ch']
				{'string': '_/_/l/_/i/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'l', '_', 'i', 'ch']
				version split: ['_', '_', 'l', '_', 'i', 'ch']
				{'string': '_/_/l/_/i/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'l', '_', 'i', 'ch']
				version split: ['l', 'i', '_', '_', 'c', 'h']
				{'string': 'l/i/_/_/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', '_', '_', 'c', 'h']
				version split: ['l', 'i', '_', '_', 'c', 'h']
				{'string': 'l/i/_/_/c/h', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', '_', '_', 'c', 'h']
				version split: ['l', 'i', '_', '_', 'ch']
				{'string': 'l/i/_/_/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', '_', '_', 'ch']
				version split: ['l', 'i', '_', '_', 'ch']
				{'string': 'l/i/_/_/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', '_', '_', 'ch']
				version split: ['_', 'l', '_', '_', 'i', 'c', 'h']
				{'string': '_/l/_/_/i/c', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', '_', '_', 'i', 'c', 'h']
				version split: ['_', 'l', '_', '_', 'i', 'c', 'h']
				{'string': '_/l/_/_/i/c', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', '_', '_', 'i', 'c', 'h']
				version split: ['_', 'l', '_', '_', 'i', 'ch']
				{'string': '_/l/_/_/i/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', '_', '_', 'i', 'ch']
				version split: ['_', 'l', '_', '_', 'i', 'ch']
				{'string': '_/l/_/_/i/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', '_', '_', 'i', 'ch']
				version split: ['l', '_', '_', '_', 'i', 'c', 'h']
				{'string': 'l/_/_/_/i/c', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', '_', '_', 'i', 'c', 'h']
				version split: ['l', '_', '_', '_', 'i', 'c', 'h']
				{'string': 'l/_/_/_/i/c', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', '_', '_', 'i', 'c', 'h']
				version split: ['l', '_', '_', '_', 'i', 'ch']
				{'string': 'l/_/_/_/i/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', '_', '_', 'i', 'ch']
				version split: ['l', '_', '_', '_', 'i', 'ch']
				{'string': 'l/_/_/_/i/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', '_', '_', 'i', 'ch']
				version split: ['_', '_', '_', '_', 'l', 'i', 'c', 'h']
				{'string': '_/_/_/_/l/i', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', '_', 'l', 'i', 'c', 'h']
				version split: ['_', '_', '_', '_', 'l', 'i', 'c', 'h']
				{'string': '_/_/_/_/l/i', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', '_', 'l', 'i', 'c', 'h']
				version split: ['_', '_', '_', '_', 'l', 'i', 'ch']
				{'string': '_/_/_/_/l/i', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', '_', 'l', 'i', 'ch']
				version split: ['_', '_', '_', '_', 'l', 'i', 'ch']
				{'string': '_/_/_/_/l/i', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', '_', 'l', 'i', 'ch']
				version split: ['l', 'i', 'c', 'h', '_']
				{'string': 'l/i/c/h/_', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', 'c', 'h', '_']
				version split: ['l', 'i', 'c', 'h', '_']
				{'string': 'l/i/c/h/_', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', 'c', 'h', '_']
				version split: ['l', 'i', 'ch', '_']
				{'string': 'l/i/ch/_', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', 'ch', '_']
				version split: ['l', 'i', 'ch', '_']
				{'string': 'l/i/ch/_', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', 'ch', '_']
				version split: ['_', 'l', 'i', 'c', '_', 'h']
				{'string': '_/l/i/c/_/h', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', 'i', 'c', '_', 'h']
				version split: ['_', 'l', 'i', 'c', '_', 'h']
				{'string': '_/l/i/c/_/h', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', 'i', 'c', '_', 'h']
				version split: ['_', 'l', 'i', 'ch', '_']
				{'string': '_/l/i/ch/_', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', 'i', 'ch', '_']
				version split: ['_', 'l', 'i', 'ch', '_']
				{'string': '_/l/i/ch/_', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', 'i', 'ch', '_']
				version split: ['l', '_', 'i', 'c', '_', 'h']
				{'string': 'l/_/i/c/_/h', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', 'i', 'c', '_', 'h']
				version split: ['l', '_', 'i', 'c', '_', 'h']
				{'string': 'l/_/i/c/_/h', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', 'i', 'c', '_', 'h']
				version split: ['l', '_', 'i', 'ch', '_']
				{'string': 'l/_/i/ch/_', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', 'i', 'ch', '_']
				version split: ['l', '_', 'i', 'ch', '_']
				{'string': 'l/_/i/ch/_', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', 'i', 'ch', '_']
				version split: ['_', '_', 'l', 'i', '_', 'c', 'h']
				{'string': '_/_/l/i/_/c', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'l', 'i', '_', 'c', 'h']
				version split: ['_', '_', 'l', 'i', '_', 'c', 'h']
				{'string': '_/_/l/i/_/c', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'l', 'i', '_', 'c', 'h']
				version split: ['_', '_', 'l', 'i', '_', 'ch']
				{'string': '_/_/l/i/_/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'l', 'i', '_', 'ch']
				version split: ['_', '_', 'l', 'i', '_', 'ch']
				{'string': '_/_/l/i/_/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'l', 'i', '_', 'ch']
				version split: ['l', 'i', '_', 'c', '_', 'h']
				{'string': 'l/i/_/c/_/h', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', '_', 'c', '_', 'h']
				version split: ['l', 'i', '_', 'c', '_', 'h']
				{'string': 'l/i/_/c/_/h', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', '_', 'c', '_', 'h']
				version split: ['l', 'i', '_', 'ch', '_']
				{'string': 'l/i/_/ch/_', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', '_', 'ch', '_']
				version split: ['l', 'i', '_', 'ch', '_']
				{'string': 'l/i/_/ch/_', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', '_', 'ch', '_']
				version split: ['_', 'l', '_', 'i', '_', 'c', 'h']
				{'string': '_/l/_/i/_/c', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', '_', 'i', '_', 'c', 'h']
				version split: ['_', 'l', '_', 'i', '_', 'c', 'h']
				{'string': '_/l/_/i/_/c', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', '_', 'i', '_', 'c', 'h']
				version split: ['_', 'l', '_', 'i', '_', 'ch']
				{'string': '_/l/_/i/_/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', '_', 'i', '_', 'ch']
				version split: ['_', 'l', '_', 'i', '_', 'ch']
				{'string': '_/l/_/i/_/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', '_', 'i', '_', 'ch']
				version split: ['l', '_', '_', 'i', '_', 'c', 'h']
				{'string': 'l/_/_/i/_/c', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', '_', 'i', '_', 'c', 'h']
				version split: ['l', '_', '_', 'i', '_', 'c', 'h']
				{'string': 'l/_/_/i/_/c', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', '_', 'i', '_', 'c', 'h']
				version split: ['l', '_', '_', 'i', '_', 'ch']
				{'string': 'l/_/_/i/_/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', '_', 'i', '_', 'ch']
				version split: ['l', '_', '_', 'i', '_', 'ch']
				{'string': 'l/_/_/i/_/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', '_', 'i', '_', 'ch']
				version split: ['_', '_', '_', 'l', '_', 'i', 'c', 'h']
				{'string': '_/_/_/l/_/i', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', 'l', '_', 'i', 'c', 'h']
				version split: ['_', '_', '_', 'l', '_', 'i', 'c', 'h']
				{'string': '_/_/_/l/_/i', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', 'l', '_', 'i', 'c', 'h']
				version split: ['_', '_', '_', 'l', '_', 'i', 'ch']
				{'string': '_/_/_/l/_/i', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', 'l', '_', 'i', 'ch']
				version split: ['_', '_', '_', 'l', '_', 'i', 'ch']
				{'string': '_/_/_/l/_/i', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', 'l', '_', 'i', 'ch']
				version split: ['l', 'i', 'c', '_', '_', 'h']
				{'string': 'l/i/c/_/_/h', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', 'c', '_', '_', 'h']
				version split: ['l', 'i', 'c', '_', '_', 'h']
				{'string': 'l/i/c/_/_/h', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', 'c', '_', '_', 'h']
				version split: ['l', 'i', 'ch', '_', '_']
				{'string': 'l/i/ch/_/_', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', 'ch', '_', '_']
				version split: ['l', 'i', 'ch', '_', '_']
				{'string': 'l/i/ch/_/_', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', 'ch', '_', '_']
				version split: ['_', 'l', 'i', '_', '_', 'c', 'h']
				{'string': '_/l/i/_/_/c', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', 'i', '_', '_', 'c', 'h']
				version split: ['_', 'l', 'i', '_', '_', 'c', 'h']
				{'string': '_/l/i/_/_/c', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', 'i', '_', '_', 'c', 'h']
				version split: ['_', 'l', 'i', '_', '_', 'ch']
				{'string': '_/l/i/_/_/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', 'i', '_', '_', 'ch']
				version split: ['_', 'l', 'i', '_', '_', 'ch']
				{'string': '_/l/i/_/_/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', 'i', '_', '_', 'ch']
				version split: ['l', '_', 'i', '_', '_', 'c', 'h']
				{'string': 'l/_/i/_/_/c', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', 'i', '_', '_', 'c', 'h']
				version split: ['l', '_', 'i', '_', '_', 'c', 'h']
				{'string': 'l/_/i/_/_/c', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', 'i', '_', '_', 'c', 'h']
				version split: ['l', '_', 'i', '_', '_', 'ch']
				{'string': 'l/_/i/_/_/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', 'i', '_', '_', 'ch']
				version split: ['l', '_', 'i', '_', '_', 'ch']
				{'string': 'l/_/i/_/_/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', 'i', '_', '_', 'ch']
				version split: ['_', '_', 'l', '_', '_', 'i', 'c', 'h']
				{'string': '_/_/l/_/_/i', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'l', '_', '_', 'i', 'c', 'h']
				version split: ['_', '_', 'l', '_', '_', 'i', 'c', 'h']
				{'string': '_/_/l/_/_/i', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'l', '_', '_', 'i', 'c', 'h']
				version split: ['_', '_', 'l', '_', '_', 'i', 'ch']
				{'string': '_/_/l/_/_/i', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'l', '_', '_', 'i', 'ch']
				version split: ['_', '_', 'l', '_', '_', 'i', 'ch']
				{'string': '_/_/l/_/_/i', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', 'l', '_', '_', 'i', 'ch']
				version split: ['l', 'i', '_', '_', '_', 'c', 'h']
				{'string': 'l/i/_/_/_/c', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', '_', '_', '_', 'c', 'h']
				version split: ['l', 'i', '_', '_', '_', 'c', 'h']
				{'string': 'l/i/_/_/_/c', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', '_', '_', '_', 'c', 'h']
				version split: ['l', 'i', '_', '_', '_', 'ch']
				{'string': 'l/i/_/_/_/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', '_', '_', '_', 'ch']
				version split: ['l', 'i', '_', '_', '_', 'ch']
				{'string': 'l/i/_/_/_/ch', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', 'i', '_', '_', '_', 'ch']
				version split: ['_', 'l', '_', '_', '_', 'i', 'c', 'h']
				{'string': '_/l/_/_/_/i', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', '_', '_', '_', 'i', 'c', 'h']
				version split: ['_', 'l', '_', '_', '_', 'i', 'c', 'h']
				{'string': '_/l/_/_/_/i', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', '_', '_', '_', 'i', 'c', 'h']
				version split: ['_', 'l', '_', '_', '_', 'i', 'ch']
				{'string': '_/l/_/_/_/i', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', '_', '_', '_', 'i', 'ch']
				version split: ['_', 'l', '_', '_', '_', 'i', 'ch']
				{'string': '_/l/_/_/_/i', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', 'l', '_', '_', '_', 'i', 'ch']
				version split: ['l', '_', '_', '_', '_', 'i', 'c', 'h']
				{'string': 'l/_/_/_/_/i', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', '_', '_', '_', 'i', 'c', 'h']
				version split: ['l', '_', '_', '_', '_', 'i', 'c', 'h']
				{'string': 'l/_/_/_/_/i', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', '_', '_', '_', 'i', 'c', 'h']
				version split: ['l', '_', '_', '_', '_', 'i', 'ch']
				{'string': 'l/_/_/_/_/i', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', '_', '_', '_', 'i', 'ch']
				version split: ['l', '_', '_', '_', '_', 'i', 'ch']
				{'string': 'l/_/_/_/_/i', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['l', '_', '_', '_', '_', 'i', 'ch']
				version split: ['_', '_', '_', '_', '_', 'l', 'i', 'c', 'h']
				{'string': '_/_/_/_/_/l', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', '_', '_', 'l', 'i', 'c', 'h']
				version split: ['_', '_', '_', '_', '_', 'l', 'i', 'c', 'h']
				{'string': '_/_/_/_/_/l', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', '_', '_', 'l', 'i', 'c', 'h']
				version split: ['_', '_', '_', '_', '_', 'l', 'i', 'ch']
				{'string': '_/_/_/_/_/l', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', '_', '_', 'l', 'i', 'ch']
				version split: ['_', '_', '_', '_', '_', 'l', 'i', 'ch']
				{'string': '_/_/_/_/_/l', 'rgx': '((_))/((_))/((_))/((_))/((_))$'}
				_____REMOVING________['_', '_', '_', '_', '_', 'l', 'i', 'ch']
				ANALYSING: liche
					resolving (32)
					> version: l/i/c/h/e
					TRYING: e
					> version: l/i/c/h/e
					TRYING: e
					> version: l/i/ch/e
					> version: l/i/ch/e
					> version: _/l/i/c/h/e
					TRYING: h
					adding blocked set: C = C >> nn, h, _, n
					> version: _/l/i/c/h/e
					TRYING: h
					adding blocked set: C = C >> nn, h, _, n
					> version: _/l/i/ch/e
					TRYING: e
					> version: _/l/i/ch/e
					TRYING: e
					> version: l/_/i/c/h/e
					TRYING: h
					adding blocked set: C = C >> nn, h, _, n
					> version: l/_/i/c/h/e
					TRYING: h
					adding blocked set: C = C >> nn, h, _, n
					> version: l/_/i/ch/e
					TRYING: e
					> version: l/_/i/ch/e
					TRYING: e
					> version: _/_/l/i/c/h/e
					TRYING: c
					adding blocked set: C = C >> nn, c, _, n
					> version: _/_/l/i/c/h/e
					TRYING: c
					adding blocked set: C = C >> nn, c, _, n
					> version: _/_/l/i/ch/e
					TRYING: ch
					adding blocked set: C = C >> ch, nn, _, n
					> version: _/_/l/i/ch/e
					TRYING: ch
					adding blocked set: C = C >> ch, nn, _, n
					> version: l/i/_/c/h/e
					TRYING: h
					adding blocked set: C = C >> nn, h, _, n
					> version: l/i/_/c/h/e
					TRYING: h
					adding blocked set: C = C >> nn, h, _, n
					> version: l/i/_/ch/e
					TRYING: e
					> version: l/i/_/ch/e
					TRYING: e
					> version: _/l/_/i/c/h/e
					TRYING: c
					adding blocked set: C = C >> nn, c, _, n
					> version: _/l/_/i/c/h/e
					TRYING: c
					adding blocked set: C = C >> nn, c, _, n
					> version: _/l/_/i/ch/e
					TRYING: ch
					adding blocked set: C = C >> ch, nn, _, n
					> version: _/l/_/i/ch/e
					TRYING: ch
					adding blocked set: C = C >> ch, nn, _, n
					> version: l/_/_/i/c/h/e
					TRYING: c
					adding blocked set: C = C >> nn, c, _, n
					> version: l/_/_/i/c/h/e
					TRYING: c
					adding blocked set: C = C >> nn, c, _, n
					> version: l/_/_/i/ch/e
					TRYING: ch
					adding blocked set: C = C >> ch, nn, _, n
					> version: l/_/_/i/ch/e
					TRYING: ch
					adding blocked set: C = C >> ch, nn, _, n
					> version: _/_/_/l/i/c/h/e
					TRYING: i
					adding blocked set: C = C >> nn, i, _, n
					> version: _/_/_/l/i/c/h/e
					TRYING: i
					adding blocked set: C = C >> nn, i, _, n
					> version: _/_/_/l/i/ch/e
					TRYING: i
					adding blocked set: C = C >> nn, i, _, n
					> version: _/_/_/l/i/ch/e
					TRYING: i
					adding blocked set: C = C >> nn, i, _, n
					RESULT:  ['_']
				adding dashed alternative: ['l', 'i', 'c', 'h', '_', 'e']
				adding dashed alternative: ['l', 'i', 'c', 'h', '_', 'e']
				adding dashed alternative: ['l', 'i', 'ch', 'e', '_']
				adding dashed alternative: ['l', 'i', 'ch', 'e', '_']
				adding dashed alternative: ['_', 'l', 'i', 'c', '_', 'h', 'e']
				adding dashed alternative: ['_', 'l', 'i', 'c', '_', 'h', 'e']
				adding dashed alternative: ['_', 'l', 'i', 'ch', '_', 'e']
				adding dashed alternative: ['_', 'l', 'i', 'ch', '_', 'e']
				adding dashed alternative: ['l', '_', 'i', 'c', '_', 'h', 'e']
				adding dashed alternative: ['l', '_', 'i', 'c', '_', 'h', 'e']
				adding dashed alternative: ['l', '_', 'i', 'ch', '_', 'e']
				adding dashed alternative: ['l', '_', 'i', 'ch', '_', 'e']
				adding dashed alternative: ['_', '_', 'l', 'i', '_', 'c', 'h', 'e']
				adding dashed alternative: ['_', '_', 'l', 'i', '_', 'c', 'h', 'e']
				adding dashed alternative: ['_', '_', 'l', 'i', '_', 'ch', 'e']
				adding dashed alternative: ['_', '_', 'l', 'i', '_', 'ch', 'e']
				adding dashed alternative: ['l', 'i', '_', 'c', '_', 'h', 'e']
				adding dashed alternative: ['l', 'i', '_', 'c', '_', 'h', 'e']
				adding dashed alternative: ['l', 'i', '_', 'ch', '_', 'e']
				adding dashed alternative: ['l', 'i', '_', 'ch', '_', 'e']
				adding dashed alternative: ['_', 'l', '_', 'i', '_', 'c', 'h', 'e']
				adding dashed alternative: ['_', 'l', '_', 'i', '_', 'c', 'h', 'e']
				adding dashed alternative: ['_', 'l', '_', 'i', '_', 'ch', 'e']
				adding dashed alternative: ['_', 'l', '_', 'i', '_', 'ch', 'e']
				adding dashed alternative: ['l', '_', '_', 'i', '_', 'c', 'h', 'e']
				adding dashed alternative: ['l', '_', '_', 'i', '_', 'c', 'h', 'e']
				adding dashed alternative: ['l', '_', '_', 'i', '_', 'ch', 'e']
				adding dashed alternative: ['l', '_', '_', 'i', '_', 'ch', 'e']
				adding dashed alternative: ['_', '_', '_', 'l', '_', 'i', 'c', 'h', 'e']
				adding dashed alternative: ['_', '_', '_', 'l', '_', 'i', 'c', 'h', 'e']
				adding dashed alternative: ['_', '_', '_', 'l', '_', 'i', 'ch', 'e']
				adding dashed alternative: ['_', '_', '_', 'l', '_', 'i', 'ch', 'e']
				l/i/c/h/e(CCCCV)
l/i/c/h/e(CVCCV)
l/i/ch/e(CCCV)
l/i/ch/e(CVCV)
_/l/i/c/h/e(ACACCV)
_/l/i/c/h/e(ACACCV)
_/l/i/ch/e(ACACV)
_/l/i/ch/e(ACACV)
l/_/i/c/h/e(CAACCV)
l/_/i/c/h/e(CAACCV)
l/_/i/ch/e(CAACV)
l/_/i/ch/e(CAACV)
_/_/l/i/c/h/e(AACACCV)
_/_/l/i/c/h/e(AACACCV)
_/_/l/i/ch/e(AACACV)
_/_/l/i/ch/e(AACACV)
l/i/_/c/h/e(CAACCV)
l/i/_/c/h/e(CAACCV)
l/i/_/ch/e(CAACV)
l/i/_/ch/e(CAACV)
_/l/_/i/c/h/e(ACAACCV)
_/l/_/i/c/h/e(ACAACCV)
_/l/_/i/ch/e(ACAACV)
_/l/_/i/ch/e(ACAACV)
l/_/_/i/c/h/e(CAAACCV)
l/_/_/i/c/h/e(CAAACCV)
l/_/_/i/ch/e(CAAACV)
l/_/_/i/ch/e(CAAACV)
_/_/_/l/i/c/h/e(AAACACCV)
_/_/_/l/i/c/h/e(AAACACCV)
_/_/_/l/i/ch/e(AAACACV)
_/_/_/l/i/ch/e(AAACACV)
l/i/c/h/_/e(CACCAV)
l/i/c/h/_/e(CACCAV)
l/i/ch/e/_(CACVA)
l/i/ch/e/_(CACVA)
_/l/i/c/_/h/e(ACACACV)
_/l/i/c/_/h/e(ACACACV)
_/l/i/ch/_/e(ACACAV)
_/l/i/ch/_/e(ACACAV)
l/_/i/c/_/h/e(CAACACV)
l/_/i/c/_/h/e(CAACACV)
l/_/i/ch/_/e(CAACAV)
l/_/i/ch/_/e(CAACAV)
_/_/l/i/_/c/h/e(AACAACCV)
_/_/l/i/_/c/h/e(AACAACCV)
_/_/l/i/_/ch/e(AACAACV)
_/_/l/i/_/ch/e(AACAACV)
l/i/_/c/_/h/e(CAACACV)
l/i/_/c/_/h/e(CAACACV)
l/i/_/ch/_/e(CAACAV)
l/i/_/ch/_/e(CAACAV)
_/l/_/i/_/c/h/e(ACAAACCV)
_/l/_/i/_/c/h/e(ACAAACCV)
_/l/_/i/_/ch/e(ACAAACV)
_/l/_/i/_/ch/e(ACAAACV)
l/_/_/i/_/c/h/e(CAAAACCV)
l/_/_/i/_/c/h/e(CAAAACCV)
l/_/_/i/_/ch/e(CAAAACV)
l/_/_/i/_/ch/e(CAAAACV)
_/_/_/l/_/i/c/h/e(AAACAACCV)
_/_/_/l/_/i/c/h/e(AAACAACCV)
_/_/_/l/_/i/ch/e(AAACAACV)
_/_/_/l/_/i/ch/e(AAACAACV)
				version split: ['l', 'i', 'c', 'h', 'e']
				{'string': 'l/i/c/h/e', 'rgx': '((_))/((_))/((_))/((e))/((_))$'}
				_____REMOVING________['l', 'i', 'c', 'h', 'e']
				version split: ['l', 'i', 'c', 'h', 'e']
				{'string': 'l/i/c/h/e', 'rgx': '((_))/((_))/((_))/((e))/((_))$'}
				_____REMOVING________['l', 'i', 'c', 'h', 'e']
				version split: ['l', 'i', 'ch', 'e']
				{'string': 'l/i/ch/e', 'rgx': '((_))/((_))/((_))/((e))/((_))$'}
				_____REMOVING________['l', 'i', 'ch', 'e']
				version split: ['l', 'i', 'ch', 'e']
				{'string': 'l/i/ch/e', 'rgx': '((_))/((_))/((_))/((e))/((_))$'}
				_____REMOVING________['l', 'i', 'ch', 'e']
				version split: ['_', 'l', 'i', 'c', 'h', 'e']
				{'string': '_/l/i/c/h/e', 'rgx': '((_))/((_))/((_))/((e))/((_))$'}
				_____REMOVING________['_', 'l', 'i', 'c', 'h', 'e']
				version split: ['_', 'l', 'i', 'c', 'h', 'e']
				{'string': '_/l/i/c/h/e', 'rgx': '((_))/((_))/((_))/((e))/((_))$'}
				_____REMOVING________['_', 'l', 'i', 'c', 'h', 'e']
				version split: ['_', 'l', 'i', 'ch', 'e']
				{'string': '_/l/i/ch/e', 'rgx': '((_))/((_))/((_))/((e))/((_))$'}
				_____REMOVING________['_', 'l', 'i', 'ch', 'e']
				version split: ['_', 'l', 'i', 'ch', 'e']
				{'string': '_/l/i/ch/e', 'rgx': '((_))/((_))/((_))/((e))/((_))$'}
				_____REMOVING________['_', 'l', 'i', 'ch', 'e']
				version split: ['l', '_', 'i', 'c', 'h', 'e']
				{'string': 'l/_/i/c/h/e', 'rgx': '((_))/((_))/((_))/((e))/((_))$'}
				_____REMOVING________['l', '_', 'i', 'c', 'h', 'e']
				version split: ['l', '_', 'i', 'c', 'h', 'e']
				{'string': 'l/_/i/c/h/e', 'rgx': '((_))/((_))/((_))/((e))/((_))$'}
				_____REMOVING________['l', '_', 'i', 'c', 'h', 'e']
				version split: ['l', '_', 'i', 'ch', 'e']
				{'string': 'l/_/i/ch/e', 'rgx': '((_))/((_))/((_))/((e))/((_))$'}
				_____REMOVING________['l', '_', 'i', 'ch', 'e']
				version split: ['l', '_', 'i', 'ch', 'e']
				{'string': 'l/_/i/ch/e', 'rgx': '((_))/((_))/((_))/((e))/((_))$'}
				_____REMOVING________['l', '_', 'i', 'ch', 'e']
				version split: ['_', '_', 'l', 'i', 'c', 'h', 'e']
				{'string': '_/_/l/i/c/h', 'rgx': '((_))/((_))/((_))/((e))/((_))$'}
				_____REMOVING________['_', '_', 'l', 'i', 'c', 'h', 'e']
				version split: ['_', '_', 'l', 'i', 'c', 'h', 'e']
				{'string': '_/_/l/i/c/h', 'rgx': '((_))/((_))/((_))/((e))/((_))$'}
				_____REMOVING________['_', '_', 'l', 'i', 'c', 'h', 'e']
				version split: ['_', '_', 'l', 'i', 'ch', 'e']
				{'string': '_/_/l/i/ch/e', 'rgx': '((_))/((_))/((_))/((e))/((_))$'}
				_____REMOVING________['_', '_', 'l', 'i', 'ch', 'e']
				version split: ['_', '_', 'l', 'i', 'ch', 'e']
				{'string': '_/_/l/i/ch/e', 'rgx': '((_))/((_))/((_))/((e))/((_))$'}
				_____REMOVING________['_', '_', 'l', 'i', 'ch', 'e']
				version split: ['l', 'i', '_', 'c', 'h', 'e']
				{'string': 'l/i/_/c/h/e', 'rgx': '((_))/((_))/((_))/((e))/((_))$'}
				_____REMOVING________['l', 'i', '_', 'c', 'h', 'e']
				version split: ['l', 'i', '_', 'c', 'h', 'e']
				{'string': 'l/i/_/c/h/e', 'rgx': '((_))/((_))/((_))/((e))/((_))$'}
				_____REMOVING________['l', 'i', '_', 'c', 'h', 'e']
				version split: ['l', 'i', '_', 'ch', 'e']
				{'string': 'l/i/_/ch/e', 'rgx': '((_))/((_))/((_))/((e))/((_))$'}
				_____REMOVING________['l', 'i', '_', 'ch', 'e']
				version split: ['l', 'i', '_', 'ch', 'e']
				{'string': 'l/i/_/ch/e', 'rgx': '((_))/((_))/((_))/((e))/((_))$'}
				_____REMOVING________['l', 'i', '_', 'ch', 'e']
				version split: ['_', 'l', '_', 'i', 'c', 'h', 'e']
				{'string': '_/l/_/i/c/h', 'rgx': '((_))/((_))/((_))/((e))/((_))$'}
				_____REMOVING________['_', 'l', '_', 'i', 'c', 'h', 'e']
				version split: ['_', 'l', '_', 'i', 'c', 'h', 'e']
				{'string': '_/l/_/i/c/h', 'rgx': '((_))/((_))/((_))/((e))/((_))$'}
				_____REMOVING________['_', 'l', '_', 'i', 'c', 'h', 'e']
				version split: ['_', 'l', '_', 'i', 'ch', 'e']
				{'string': '_/l/_/i/ch/e', 'rgx': '((_))/((_))/((_))/((e))/((_))$'}
				_____REMOVING________['_', 'l', '_', 'i', 'ch', 'e']
				version split: ['_', 'l', '_', 'i', 'ch', 'e']
				{'string': '_/l/_/i/ch/e', 'rgx': '((_))/((_))/((_))/((e))/((_))$'}
				_____REMOVING________['_', 'l', '_', 'i', 'ch', 'e']
				version split: ['l', '_', '_', 'i', 'c', 'h', 'e']
				{'string': 'l/_/_/i/c/h', 'rgx': '((_))/((_))/((_))/((e))/((_))$'}
				_____REMOVING________['l', '_', '_', 'i', 'c', 'h', 'e']
				version split: ['l', '_', '_', 'i', 'c', 'h', 'e']
				{'string': 'l/_/_/i/c/h', 'rgx': '((_))/((_))/((_))/((e))/((_))$'}
				_____REMOVING________['l', '_', '_', 'i', 'c', 'h', 'e']
				version split: ['l', '_', '_', 'i', 'ch', 'e']
				{'string': 'l/_/_/i/ch/e', 'rgx': '((_))/((_))/((_))/((e))/((_))$'}
				_____REMOVING________['l', '_', '_', 'i', 'ch', 'e']
				version split: ['l', '_', '_', 'i', 'ch', 'e']
				{'string': 'l/_/_/i/ch/e', 'rgx': '((_))/((_))/((_))/((e))/((_))$'}
				_____REMOVING________['l', '_', '_', 'i', 'ch', 'e']
				version split: ['_', '_', '_', 'l', 'i', 'c', 'h', 'e']
				{'string': '_/_/_/l/i/c', 'rgx': '((_))/((_))/((_))/((e))/((_))$'}
				_____REMOVING________['_', '_', '_', 'l', 'i', 'c', 'h', 'e']
				version split: ['_', '_', '_', 'l', 'i', 'c', 'h', 'e']
				{'string': '_/_/_/l/i/c', 'rgx': '((_))/((_))/((_))/((e))/((_))$'}
				_____REMOVING________['_', '_', '_', 'l', 'i', 'c', 'h', 'e']
				version split: ['_', '_', '_', 'l', 'i', 'ch', 'e']
				{'string': '_/_/_/l/i/ch', 'rgx': '((_))/((_))/((_))/((e))/((_))$'}
				_____REMOVING________['_', '_', '_', 'l', 'i', 'ch', 'e']
				version split: ['_', '_', '_', 'l', 'i', 'ch', 'e']
				{'string': '_/_/_/l/i/ch', 'rgx': '((_))/((_))/((_))/((e))/((_))$'}
				_____REMOVING________['_', '_', '_', 'l', 'i', 'ch', 'e']
				version split: ['l', 'i', 'c', 'h', '_', 'e']
				{'string': 'l/i/c/h/_/e', 'rgx': '((_))/((_))/((_))/((e))/((_))$'}
				_____REMOVING________['l', 'i', 'c', 'h', '_', 'e']
				version split: ['l', 'i', 'c', 'h', '_', 'e']
				{'string': 'l/i/c/h/_/e', 'rgx': '((_))/((_))/((_))/((e))/((_))$'}
				_____REMOVING________['l', 'i', 'c', 'h', '_', 'e']
				version split: ['l', 'i', 'ch', 'e', '_']
				{'string': 'l/i/ch/e/_', 'rgx': '((_))/((_))/((_))/((e))/((_))$'}
				_____REMOVING________['l', 'i', 'ch', 'e', '_']
				version split: ['l', 'i', 'ch', 'e', '_']
				{'string': 'l/i/ch/e/_', 'rgx': '((_))/((_))/((_))/((e))/((_))$'}
				_____REMOVING________['l', 'i', 'ch', 'e', '_']
				version split: ['_', 'l', 'i', 'c', '_', 'h', 'e']
				{'string': '_/l/i/c/_/h', 'rgx': '((_))/((_))/((_))/((e))/((_))$'}
				_____REMOVING________['_', 'l', 'i', 'c', '_', 'h', 'e']
				version split: ['_', 'l', 'i', 'c', '_', 'h', 'e']
				{'string': '_/l/i/c/_/h', 'rgx': '((_))/((_))/((_))/((e))/((_))$'}
				_____REMOVING________['_', 'l', 'i', 'c', '_', 'h', 'e']
				version split: ['_', 'l', 'i', 'ch', '_', 'e']
				{'string': '_/l/i/ch/_/e', 'rgx': '((_))/((_))/((_))/((e))/((_))$'}
				_____REMOVING________['_', 'l', 'i', 'ch', '_', 'e']
				version split: ['_', 'l', 'i', 'ch', '_', 'e']
				{'string': '_/l/i/ch/_/e', 'rgx': '((_))/((_))/((_))/((e))/((_))$'}
				_____REMOVING________['_', 'l', 'i', 'ch', '_', 'e']
				version split: ['l', '_', 'i', 'c', '_', 'h', 'e']
				{'string': 'l/_/i/c/_/h', 'rgx': '((_))/((_))/((_))/((e))/((_))$'}
				_____REMOVING________['l', '_', 'i', 'c', '_', 'h', 'e']
				version split: ['l', '_', 'i', 'c', '_', 'h', 'e']
				{'string': 'l/_/i/c/_/h', 'rgx': '((_))/((_))/((_))/((e))/((_))$'}
				_____REMOVING________['l', '_', 'i', 'c', '_', 'h', 'e']
				version split: ['l', '_', 'i', 'ch', '_', 'e']
				{'string': 'l/_/i/ch/_/e', 'rgx': '((_))/((_))/((_))/((e))/((_))$'}
				_____REMOVING________['l', '_', 'i', 'ch', '_', 'e']
				version split: ['l', '_', 'i', 'ch', '_', 'e']
				{'string': 'l/_/i/ch/_/e', 'rgx': '((_))/((_))/((_))/((e))/((_))$'}
				_____REMOVING________['l', '_', 'i', 'ch', '_', 'e']
				version split: ['_', '_', 'l', 'i', '_', 'c', 'h', 'e']
				{'string': '_/_/l/i/_/c', 'rgx': '((_))/((_))/((_))/((e))/((_))$'}
				_____REMOVING________['_', '_', 'l', 'i', '_', 'c', 'h', 'e']
				version split: ['_', '_', 'l', 'i', '_', 'c', 'h', 'e']
				{'string': '_/_/l/i/_/c', 'rgx': '((_))/((_))/((_))/((e))/((_))$'}
				_____REMOVING________['_', '_', 'l', 'i', '_', 'c', 'h', 'e']
				version split: ['_', '_', 'l', 'i', '_', 'ch', 'e']
				{'string': '_/_/l/i/_/ch', 'rgx': '((_))/((_))/((_))/((e))/((_))$'}
				_____REMOVING________['_', '_', 'l', 'i', '_', 'ch', 'e']
				version split: ['_', '_', 'l', 'i', '_', 'ch', 'e']
				{'string': '_/_/l/i/_/ch', 'rgx': '((_))/((_))/((_))/((e))/((_))$'}
				_____REMOVING________['_', '_', 'l', 'i', '_', 'ch', 'e']
				version split: ['l', 'i', '_', 'c', '_', 'h', 'e']
				{'string': 'l/i/_/c/_/h', 'rgx': '((_))/((_))/((_))/((e))/((_))$'}
				_____REMOVING________['l', 'i', '_', 'c', '_', 'h', 'e']
				version split: ['l', 'i', '_', 'c', '_', 'h', 'e']
				{'string': 'l/i/_/c/_/h', 'rgx': '((_))/((_))/((_))/((e))/((_))$'}
				_____REMOVING________['l', 'i', '_', 'c', '_', 'h', 'e']
				version split: ['l', 'i', '_', 'ch', '_', 'e']
				{'string': 'l/i/_/ch/_/e', 'rgx': '((_))/((_))/((_))/((e))/((_))$'}
				_____REMOVING________['l', 'i', '_', 'ch', '_', 'e']
				version split: ['l', 'i', '_', 'ch', '_', 'e']
				{'string': 'l/i/_/ch/_/e', 'rgx': '((_))/((_))/((_))/((e))/((_))$'}
				_____REMOVING________['l', 'i', '_', 'ch', '_', 'e']
				version split: ['_', 'l', '_', 'i', '_', 'c', 'h', 'e']
				{'string': '_/l/_/i/_/c', 'rgx': '((_))/((_))/((_))/((e))/((_))$'}
				_____REMOVING________['_', 'l', '_', 'i', '_', 'c', 'h', 'e']
				version split: ['_', 'l', '_', 'i', '_', 'c', 'h', 'e']
				{'string': '_/l/_/i/_/c', 'rgx': '((_))/((_))/((_))/((e))/((_))$'}
				_____REMOVING________['_', 'l', '_', 'i', '_', 'c', 'h', 'e']
				version split: ['_', 'l', '_', 'i', '_', 'ch', 'e']
				{'string': '_/l/_/i/_/ch', 'rgx': '((_))/((_))/((_))/((e))/((_))$'}
				_____REMOVING________['_', 'l', '_', 'i', '_', 'ch', 'e']
				version split: ['_', 'l', '_', 'i', '_', 'ch', 'e']
				{'string': '_/l/_/i/_/ch', 'rgx': '((_))/((_))/((_))/((e))/((_))$'}
				_____REMOVING________['_', 'l', '_', 'i', '_', 'ch', 'e']
				version split: ['l', '_', '_', 'i', '_', 'c', 'h', 'e']
				{'string': 'l/_/_/i/_/c', 'rgx': '((_))/((_))/((_))/((e))/((_))$'}
				_____REMOVING________['l', '_', '_', 'i', '_', 'c', 'h', 'e']
				version split: ['l', '_', '_', 'i', '_', 'c', 'h', 'e']
				{'string': 'l/_/_/i/_/c', 'rgx': '((_))/((_))/((_))/((e))/((_))$'}
				_____REMOVING________['l', '_', '_', 'i', '_', 'c', 'h', 'e']
				version split: ['l', '_', '_', 'i', '_', 'ch', 'e']
				{'string': 'l/_/_/i/_/ch', 'rgx': '((_))/((_))/((_))/((e))/((_))$'}
				_____REMOVING________['l', '_', '_', 'i', '_', 'ch', 'e']
				version split: ['l', '_', '_', 'i', '_', 'ch', 'e']
				{'string': 'l/_/_/i/_/ch', 'rgx': '((_))/((_))/((_))/((e))/((_))$'}
				_____REMOVING________['l', '_', '_', 'i', '_', 'ch', 'e']
				version split: ['_', '_', '_', 'l', '_', 'i', 'c', 'h', 'e']
				{'string': '_/_/_/l/_/i', 'rgx': '((_))/((_))/((_))/((e))/((_))$'}
				_____REMOVING________['_', '_', '_', 'l', '_', 'i', 'c', 'h', 'e']
				version split: ['_', '_', '_', 'l', '_', 'i', 'c', 'h', 'e']
				{'string': '_/_/_/l/_/i', 'rgx': '((_))/((_))/((_))/((e))/((_))$'}
				_____REMOVING________['_', '_', '_', 'l', '_', 'i', 'c', 'h', 'e']
				version split: ['_', '_', '_', 'l', '_', 'i', 'ch', 'e']
				{'string': '_/_/_/l/_/i', 'rgx': '((_))/((_))/((_))/((e))/((_))$'}
				_____REMOVING________['_', '_', '_', 'l', '_', 'i', 'ch', 'e']
				version split: ['_', '_', '_', 'l', '_', 'i', 'ch', 'e']
				{'string': '_/_/_/l/_/i', 'rgx': '((_))/((_))/((_))/((e))/((_))$'}
				_____REMOVING________['_', '_', '_', 'l', '_', 'i', 'ch', 'e']
		only one version left: ['_', 'e', 'u', 'e', '_']
		only one version left: ['h', 'e', '_', '_', '_']
		only one version left: ['h', 'e', '_', 'o', '_']
		only one version left: ['h', 'eo', 'u', 'e', '_']
		FAIL: 
		only one version left: ['h', 'e', 'u', 'e', '_']
		FAIL: 
		FAIL: 
		FAIL: 
		SPLIT: ['h', 'eo', 'f', 'e', 'n']
		SPLIT: ['h', 'eo', 'f', 'e', 'nn']
		SPLIT: ['h', 'eo', 'f', 'o', 'n']
		SPLIT: ['h', 'eo', 'u', 'e', 'n']
		SPLIT: ['h', 'e', 'u', 'e', 'n']
		SPLIT: ['h', 'o', 'u', 'e', 'n']
		SPLIT: ['_', 'e', 'u', 'e', '_']
		['_', 'e', 'u', 'e', '_']
		['_', 'e', 'u', 'e', '_']
		SPLIT: ['h', 'e', '_', '_', '_']
		['h', 'e', '_', '_', '_']
		SPLIT: ['h', 'e', '_', 'o', '_']
		['h', 'e', '_', 'o', '_']
		SPLIT: ['h', 'eo', 'u', 'e', '_']
		['h', 'eo', 'u', 'e', '_']
		['h', 'eo', 'u', 'e', '_']
		['h', 'eo', 'u', 'e', '_']
		['h', 'eo', 'u', 'e', '_']
		SPLIT: ['h', 'e.eo', 'u', 'u.e.ue', 'n', '----!']
		SPLIT: ['h', 'e', 'u', 'e', '_']
		['h', 'e', 'u', 'e', '_']
		['h', 'e', 'u', 'e', '_']
		SPLIT: ['h', 'e', 'u', 'e', 'n', '----!']
		SPLIT: ['_', '_', '_', '_', '_', '----!']
		SPLIT: ['_', '_', '_', 'e', '_', '----!']
		version for pattern CVCVC is INVALID
		[]
		4
		OVERVIEW: version for pattern CVCVC

faulty splits: 4
he.eouu.e.uen----! <-! heouene
heuen----! <-! heuene
----! <-! lich
e----! <-! liche
h | eo | f | e | n
h | eo | f | e | nn
h | eo | f | o | n
h | eo | u | e | n
h | e | u | e | n
h | o | u | e | n
_ | e | u | e | _
h | e | _ | _ | _
h | e | _ | o | _
h | eo | u | e | _
h | e.eo | u | u.e.ue | n | ----!
h | e | u | e | _
h | e | u | e | n | ----!
_ | _ | _ | _ | _ | ----!
_ | _ | _ | e | _ | ----!
0 : {'h', '_', 'l'}
1 : {'u', 'i', 'ue', '_', 'eo', 'e', 'o'},{'u', 'i', 'ue', 'eo', 'e', 'o'}
2 : {'u', 'f', '_', 'l'},{'u', 'c', 'f', '_'},{'u', 'ch', 'f', '_'},{'u', 'i', 'f', '_'}
3 : {'u', 'i', 'ue', '_', 'e', 'o'}
4 : {'nn', 'i', '_', 'n'},{'nn', 'c', '_', 'n'},{'nn', '_', 'l', 'n'},{'nn', 'h', '_', 'n'},{'ch', 'nn', '_', 'n'}
	FOUND __ 0 __ VALID VERSION(S)
	OVERVIEW: version for pattern CVCVC

faulty splits: 4
he.eouu.e.uen----! <-! heouene
heuen----! <-! heuene
----! <-! lich
e----! <-! liche
h | eo | f | e | n
h | eo | f | e | nn
h | eo | f | o | n
h | eo | u | e | n
h | e | u | e | n
h | o | u | e | n
_ | e | u | e | _
h | e | _ | _ | _
h | e | _ | o | _
h | eo | u | e | _
h | e.eo | u | u.e.ue | n | ----!
h | e | u | e | _
h | e | u | e | n | ----!
_ | _ | _ | _ | _ | ----!
_ | _ | _ | e | _ | ----!
0 : {'h', '_', 'l'}
1 : {'u', 'i', 'ue', '_', 'eo', 'e', 'o'},{'u', 'i', 'ue', 'eo', 'e', 'o'}
2 : {'u', 'f', '_', 'l'},{'u', 'c', 'f', '_'},{'u', 'ch', 'f', '_'},{'u', 'i', 'f', '_'}
3 : {'u', 'i', 'ue', '_', 'e', 'o'}
4 : {'nn', 'i', '_', 'n'},{'nn', 'c', '_', 'n'},{'nn', '_', 'l', 'n'},{'nn', 'h', '_', 'n'},{'ch', 'nn', '_', 'n'}
	{'CCVCVCC', 'CCVCVCV', 'CCVCVC', 'CVCCVCV'}
