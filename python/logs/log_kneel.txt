Analysis object initialized
{'cne': 1, 'cnel': 4, 'cneo': 2, 'cneol': 22, 'cneoli': 1, 'cneolin': 1, 'cneul': 1, 'cneƿl': 2, 'cnoul': 1, 'cnyle': 1, 'keiel': 1, 'kenel': 1, 'knel': 5, 'kneo': 1, 'kneol': 5, 'kneoli': 1, 'kneoly': 1, 'kneƿ': 1, 'knewel': 1}
Lexel initialized
[[{'lit': 'eo', 'ln': 2, 'index': 2}]]
[[{'lit': 'eo', 'ln': 2, 'index': 2}]]
[[{'lit': 'eo', 'ln': 2, 'index': 2}]]
[[{'lit': 'eo', 'ln': 2, 'index': 2}]]
[[{'lit': 'eu', 'ln': 2, 'index': 2}]]
[[{'lit': 'eƿ', 'ln': 2, 'index': 2}]]
[[{'lit': 'ou', 'ln': 2, 'index': 2}]]
[[{'lit': 'ie', 'ln': 2, 'index': 2}], [{'lit': 'ei', 'ln': 2, 'index': 1}]]
[[{'lit': 'ie', 'ln': 2, 'index': 2}], [{'lit': 'ei', 'ln': 2, 'index': 1}], [{'lit': 'ie', 'ln': 2, 'index': 2}, {'lit': 'ei', 'ln': 2, 'index': 1}]]
[[{'lit': 'eo', 'ln': 2, 'index': 2}]]
[[{'lit': 'eo', 'ln': 2, 'index': 2}]]
[[{'lit': 'eo', 'ln': 2, 'index': 2}]]
[[{'lit': 'eo', 'ln': 2, 'index': 2}]]
[[{'lit': 'eƿ', 'ln': 2, 'index': 2}]]
[[{'lit': 'ew', 'ln': 2, 'index': 2}]]
MIN pattern length=6
Pattern CCVCVC is valid
Pattern CCVVCVC is invalid
Pattern CCVC is invalid
Pattern CCVV is invalid
Pattern CCVCCC is valid
Pattern CCCCV is invalid
Pattern CCVVCCC is invalid
Pattern CCVVCV is invalid
Pattern CVVVC is invalid
Pattern CCVCC is invalid
Pattern CCVVC is invalid
Pattern CCVVCC is invalid
Pattern CCV is invalid
Pattern CVCVC is invalid
Pattern CCVCV is invalid
Pattern CVVC is invalid
{'value': 2, 'patterns': ['CCVCVC']}
	[[{'lit': 'eo', 'ln': 2, 'index': 2}]]
	[[{'lit': 'eo', 'ln': 2, 'index': 2}]]
	[[{'lit': 'eo', 'ln': 2, 'index': 2}]]
	[[{'lit': 'eo', 'ln': 2, 'index': 2}]]
	[[{'lit': 'eu', 'ln': 2, 'index': 2}]]
	[[{'lit': 'eƿ', 'ln': 2, 'index': 2}]]
	[[{'lit': 'ou', 'ln': 2, 'index': 2}]]
	[[{'lit': 'ie', 'ln': 2, 'index': 2}], [{'lit': 'ei', 'ln': 2, 'index': 1}]]
	[[{'lit': 'ie', 'ln': 2, 'index': 2}], [{'lit': 'ei', 'ln': 2, 'index': 1}], [{'lit': 'ie', 'ln': 2, 'index': 2}, {'lit': 'ei', 'ln': 2, 'index': 1}]]
	[[{'lit': 'eo', 'ln': 2, 'index': 2}]]
	[[{'lit': 'eo', 'ln': 2, 'index': 2}]]
	[[{'lit': 'eo', 'ln': 2, 'index': 2}]]
	[[{'lit': 'eo', 'ln': 2, 'index': 2}]]
	[[{'lit': 'eƿ', 'ln': 2, 'index': 2}]]
	[[{'lit': 'ew', 'ln': 2, 'index': 2}]]
	MIN pattern length=6
	Pattern CCVCVC is valid
	Pattern CCVVCVC is invalid
	Pattern CCVC is invalid
	Pattern CCVCCC is valid
	Pattern CCVV is invalid
	Pattern CCCCV is invalid
	Pattern CCVVCCC is invalid
	Pattern CCVVCV is invalid
	Pattern CVVVC is invalid
	Pattern CCVCC is invalid
	Pattern CCVVC is invalid
	Pattern CCV is invalid
	Pattern CCVVCC is invalid
	Pattern CVCVC is invalid
	Pattern CCVCV is invalid
	Pattern CVVC is invalid
	Making the selection for pattern: CCVCVC
	Selection for pattern: CCVCVC completed
	Making a version for pattern: CCVCVC
			___CCVCVC : 0___
				ANALYSING: cneolin
				adding littera based on matching pattern
				ANALYSING: knewel
				adding littera based on matching pattern
				ANALYSING: cne
					resolving (1)
					> version: c/n/e
					TRYING: c
					RESULT:  ['c']
				ANALYSING: cnel
					resolving (1)
					> version: c/n/e/l
					TRYING: c
					RESULT:  ['c']
				ANALYSING: cneo
					resolving (2)
					> version: c/n/e/o
					TRYING: c
					> version: c/n/eo
					TRYING: c
					RESULT:  ['c']
				ANALYSING: cneol
					resolving (2)
					> version: c/n/e/o/l
					TRYING: c
					> version: c/n/eo/l
					TRYING: c
					RESULT:  ['c']
				ANALYSING: cneoli
					resolving (4)
					> version: c/n/e/o/l/i
					TRYING: c
					> version: c/n/e/o/l/i
					TRYING: c
					> version: c/n/eo/l/i
					TRYING: c
					> version: c/n/eo/l/i
					TRYING: c
					RESULT:  ['c']
				ANALYSING: cneul
					resolving (3)
					> version: c/n/e/u/l
					TRYING: c
					> version: c/n/e/u/l
					TRYING: c
					> version: c/n/eu/l
					TRYING: c
					RESULT:  ['c']
				ANALYSING: cneƿl
					resolving (2)
					> version: c/n/e/ƿ/l
					TRYING: c
					> version: c/n/eƿ/l
					TRYING: c
					RESULT:  ['c']
				ANALYSING: cnoul
					resolving (3)
					> version: c/n/o/u/l
					TRYING: c
					> version: c/n/o/u/l
					TRYING: c
					> version: c/n/ou/l
					TRYING: c
					RESULT:  ['c']
				ANALYSING: cnyle
					resolving (2)
					> version: c/n/y/l/e
					TRYING: c
					> version: c/n/y/l/e
					TRYING: c
					RESULT:  ['c']
				ANALYSING: keiel
					resolving (5)
					> version: k/e/i/e/l
					TRYING: k
					> version: k/e/i/e/l
					TRYING: k
					> version: k/e/ie/l
					TRYING: k
					> version: k/ei/e/l
					TRYING: k
					> version: k/ei/e/l
					TRYING: k
					RESULT:  ['k']
				ANALYSING: kenel
					resolving (1)
					> version: k/e/n/e/l
					TRYING: k
					RESULT:  ['k']
				ANALYSING: knel
					resolving (1)
					> version: k/n/e/l
					TRYING: k
					RESULT:  ['k']
				ANALYSING: kneo
					resolving (2)
					> version: k/n/e/o
					TRYING: k
					> version: k/n/eo
					TRYING: k
					RESULT:  ['k']
				ANALYSING: kneol
					resolving (2)
					> version: k/n/e/o/l
					TRYING: k
					> version: k/n/eo/l
					TRYING: k
					RESULT:  ['k']
				ANALYSING: kneoli
					resolving (4)
					> version: k/n/e/o/l/i
					TRYING: k
					> version: k/n/e/o/l/i
					TRYING: k
					> version: k/n/eo/l/i
					TRYING: k
					> version: k/n/eo/l/i
					TRYING: k
					RESULT:  ['k']
				ANALYSING: kneoly
					resolving (4)
					> version: k/n/e/o/l/y
					TRYING: k
					> version: k/n/e/o/l/y
					TRYING: k
					> version: k/n/eo/l/y
					TRYING: k
					> version: k/n/eo/l/y
					TRYING: k
					RESULT:  ['k']
				ANALYSING: kneƿ
					resolving (2)
					> version: k/n/e/ƿ
					TRYING: k
					> version: k/n/eƿ
					TRYING: k
					RESULT:  ['k']
			___CCVCVC : 1___
				ANALYSING: cneolin
				adding littera based on matching pattern
				ANALYSING: knewel
				adding littera based on matching pattern
				ANALYSING: cne
					resolving (1)
					> version: c/n/e
					TRYING: n
					RESULT:  ['n']
				ANALYSING: cnel
					resolving (1)
					> version: c/n/e/l
					TRYING: n
					RESULT:  ['n']
				ANALYSING: cneo
					resolving (2)
					> version: c/n/e/o
					TRYING: n
					> version: c/n/eo
					TRYING: n
					RESULT:  ['n']
				ANALYSING: cneol
					resolving (2)
					> version: c/n/e/o/l
					TRYING: n
					> version: c/n/eo/l
					TRYING: n
					RESULT:  ['n']
				ANALYSING: cneoli
					resolving (4)
					> version: c/n/e/o/l/i
					TRYING: n
					> version: c/n/e/o/l/i
					TRYING: n
					> version: c/n/eo/l/i
					TRYING: n
					> version: c/n/eo/l/i
					TRYING: n
					RESULT:  ['n']
				ANALYSING: cneul
					resolving (3)
					> version: c/n/e/u/l
					TRYING: n
					> version: c/n/e/u/l
					TRYING: n
					> version: c/n/eu/l
					TRYING: n
					RESULT:  ['n']
				ANALYSING: cneƿl
					resolving (2)
					> version: c/n/e/ƿ/l
					TRYING: n
					> version: c/n/eƿ/l
					TRYING: n
					RESULT:  ['n']
				ANALYSING: cnoul
					resolving (3)
					> version: c/n/o/u/l
					TRYING: n
					> version: c/n/o/u/l
					TRYING: n
					> version: c/n/ou/l
					TRYING: n
					RESULT:  ['n']
				ANALYSING: cnyle
					resolving (2)
					> version: c/n/y/l/e
					TRYING: n
					> version: c/n/y/l/e
					TRYING: n
					RESULT:  ['n']
				ANALYSING: keiel
					resolving (5)
					> version: k/e/i/e/l
					TRYING: e
					> version: k/e/i/e/l
					TRYING: e
					> version: k/e/ie/l
					TRYING: e
					> version: k/ei/e/l
					TRYING: ei
					> version: k/ei/e/l
					TRYING: ei
					RESULT:  ['_']
				adding dashed alternative: ['k', '_', 'e', 'i', 'e', 'l']
				adding dashed alternative: ['k', '_', 'e', 'i', 'e', 'l']
				adding dashed alternative: ['k', '_', 'e', 'ie', 'l']
				adding dashed alternative: ['k', '_', 'ei', 'e', 'l']
				adding dashed alternative: ['k', '_', 'ei', 'e', 'l']
				k/e/i/e/l(CVCVC)
k/e/i/e/l(CVVVC)
k/e/ie/l(CVVC)
k/ei/e/l(CVVC)
k/ei/e/l(CVVC)
k/_/e/i/e/l(CAVAVC)
k/_/e/i/e/l(CAVAVC)
k/_/e/ie/l(CAVVC)
k/_/ei/e/l(CAVVC)
k/_/ei/e/l(CAVVC)
				ANALYSING: kenel
					resolving (1)
					> version: k/e/n/e/l
					TRYING: e
					RESULT:  ['_']
				adding dashed alternative: ['k', '_', 'e', 'n', 'e', 'l']
				k/e/n/e/l(CVCVC)
k/_/e/n/e/l(CAVCVC)
				ANALYSING: knel
					resolving (1)
					> version: k/n/e/l
					TRYING: n
					RESULT:  ['n']
				ANALYSING: kneo
					resolving (2)
					> version: k/n/e/o
					TRYING: n
					> version: k/n/eo
					TRYING: n
					RESULT:  ['n']
				ANALYSING: kneol
					resolving (2)
					> version: k/n/e/o/l
					TRYING: n
					> version: k/n/eo/l
					TRYING: n
					RESULT:  ['n']
				ANALYSING: kneoli
					resolving (4)
					> version: k/n/e/o/l/i
					TRYING: n
					> version: k/n/e/o/l/i
					TRYING: n
					> version: k/n/eo/l/i
					TRYING: n
					> version: k/n/eo/l/i
					TRYING: n
					RESULT:  ['n']
				ANALYSING: kneoly
					resolving (4)
					> version: k/n/e/o/l/y
					TRYING: n
					> version: k/n/e/o/l/y
					TRYING: n
					> version: k/n/eo/l/y
					TRYING: n
					> version: k/n/eo/l/y
					TRYING: n
					RESULT:  ['n']
				ANALYSING: kneƿ
					resolving (2)
					> version: k/n/e/ƿ
					TRYING: n
					> version: k/n/eƿ
					TRYING: n
					RESULT:  ['n']
			___CCVCVC : 2___
				ANALYSING: cneolin
				adding littera based on matching pattern
				ANALYSING: knewel
				adding littera based on matching pattern
				ANALYSING: cne
					resolving (1)
					> version: c/n/e
					TRYING: e
					RESULT:  ['e']
				ANALYSING: cnel
					resolving (1)
					> version: c/n/e/l
					TRYING: e
					RESULT:  ['e']
				ANALYSING: cneo
					resolving (2)
					> version: c/n/e/o
					TRYING: e
					> version: c/n/eo
					TRYING: eo
					>>> MULTIPLE RESOLVE OPTIONS: {'eo', 'e'}
					RESULT:  ['eo', 'e']
				ANALYSING: cneol
					resolving (2)
					> version: c/n/e/o/l
					TRYING: e
					> version: c/n/eo/l
					TRYING: eo
					>>> MULTIPLE RESOLVE OPTIONS: {'eo', 'e'}
					RESULT:  ['eo', 'e']
				ANALYSING: cneoli
					resolving (4)
					> version: c/n/e/o/l/i
					TRYING: e
					> version: c/n/e/o/l/i
					TRYING: e
					> version: c/n/eo/l/i
					TRYING: eo
					>>> MULTIPLE RESOLVE OPTIONS: {'eo', 'e'}
					> version: c/n/eo/l/i
					TRYING: eo
					>>> MULTIPLE RESOLVE OPTIONS: {'eo', 'e'}
					RESULT:  ['eo', 'e']
				ANALYSING: cneul
					resolving (3)
					> version: c/n/e/u/l
					TRYING: e
					> version: c/n/e/u/l
					TRYING: e
					> version: c/n/eu/l
					TRYING: eu
					>>> MULTIPLE RESOLVE OPTIONS: {'eu', 'e'}
					RESULT:  ['eu', 'e']
				ANALYSING: cneƿl
					resolving (2)
					> version: c/n/e/ƿ/l
					TRYING: e
					> version: c/n/eƿ/l
					TRYING: eƿ
					>>> MULTIPLE RESOLVE OPTIONS: {'eƿ', 'e'}
					RESULT:  ['eƿ', 'e']
				ANALYSING: cnoul
					resolving (3)
					> version: c/n/o/u/l
					TRYING: o
					> version: c/n/o/u/l
					TRYING: o
					> version: c/n/ou/l
					TRYING: ou
					>>> MULTIPLE RESOLVE OPTIONS: {'o', 'ou'}
					RESULT:  ['o', 'ou']
				ANALYSING: cnyle
					resolving (2)
					> version: c/n/y/l/e
					TRYING: y
					> version: c/n/y/l/e
					TRYING: y
					RESULT:  ['y']
				ANALYSING: keiel
					resolving (10)
					> version: k/e/i/e/l
					TRYING: i
					> version: k/e/i/e/l
					TRYING: i
					> version: k/e/ie/l
					TRYING: ie
					>>> MULTIPLE RESOLVE OPTIONS: {'i', 'ie'}
					> version: k/ei/e/l
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'i', 'ie', 'e'}
					> version: k/ei/e/l
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'i', 'ie', 'e'}
					> version: k/_/e/i/e/l
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'i', 'ie', 'e'}
					> version: k/_/e/i/e/l
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'i', 'ie', 'e'}
					> version: k/_/e/ie/l
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'i', 'ie', 'e'}
					> version: k/_/ei/e/l
					TRYING: ei
					>>> MULTIPLE RESOLVE OPTIONS: {'i', 'ie', 'ei', 'e'}
					> version: k/_/ei/e/l
					TRYING: ei
					>>> MULTIPLE RESOLVE OPTIONS: {'i', 'ie', 'ei', 'e'}
					RESULT:  ['i', 'ie', 'ei', 'e']
				ANALYSING: kenel
					resolving (2)
					> version: k/e/n/e/l
					TRYING: n
					> version: k/_/e/n/e/l
					TRYING: e
					RESULT:  ['e']
				ANALYSING: knel
					resolving (1)
					> version: k/n/e/l
					TRYING: e
					RESULT:  ['e']
				ANALYSING: kneo
					resolving (2)
					> version: k/n/e/o
					TRYING: e
					> version: k/n/eo
					TRYING: eo
					>>> MULTIPLE RESOLVE OPTIONS: {'eo', 'e'}
					RESULT:  ['eo', 'e']
				ANALYSING: kneol
					resolving (2)
					> version: k/n/e/o/l
					TRYING: e
					> version: k/n/eo/l
					TRYING: eo
					>>> MULTIPLE RESOLVE OPTIONS: {'eo', 'e'}
					RESULT:  ['eo', 'e']
				ANALYSING: kneoli
					resolving (4)
					> version: k/n/e/o/l/i
					TRYING: e
					> version: k/n/e/o/l/i
					TRYING: e
					> version: k/n/eo/l/i
					TRYING: eo
					>>> MULTIPLE RESOLVE OPTIONS: {'eo', 'e'}
					> version: k/n/eo/l/i
					TRYING: eo
					>>> MULTIPLE RESOLVE OPTIONS: {'eo', 'e'}
					RESULT:  ['eo', 'e']
				ANALYSING: kneoly
					resolving (4)
					> version: k/n/e/o/l/y
					TRYING: e
					> version: k/n/e/o/l/y
					TRYING: e
					> version: k/n/eo/l/y
					TRYING: eo
					>>> MULTIPLE RESOLVE OPTIONS: {'eo', 'e'}
					> version: k/n/eo/l/y
					TRYING: eo
					>>> MULTIPLE RESOLVE OPTIONS: {'eo', 'e'}
					RESULT:  ['eo', 'e']
				ANALYSING: kneƿ
					resolving (2)
					> version: k/n/e/ƿ
					TRYING: e
					> version: k/n/eƿ
					TRYING: eƿ
					>>> MULTIPLE RESOLVE OPTIONS: {'eƿ', 'e'}
					RESULT:  ['eƿ', 'e']
			___CCVCVC : 3___
				ANALYSING: cneolin
				adding littera based on matching pattern
				ANALYSING: knewel
				adding littera based on matching pattern
				ANALYSING: cne
					resolving (1)
					> version: c/n/e
					RESULT:  ['_']
				adding dashed alternative: ['c', 'n', 'e', '_']
				c/n/e(CCV)
c/n/e/_(CCVA)
				ANALYSING: cnel
					resolving (1)
					> version: c/n/e/l
					TRYING: l
					adding blocked set: C = C >> l, w, _
					RESULT:  ['_']
				adding dashed alternative: ['c', 'n', 'e', '_', 'l']
				c/n/e/l(CCVC)
c/n/e/_/l(CCVAC)
				ANALYSING: cneo
					resolving (2)
					> version: c/n/e/o
					TRYING: o
					> version: c/n/eo
					RESULT:  ['_']
				adding dashed alternative: ['c', 'n', 'e', '_', 'o']
				adding dashed alternative: ['c', 'n', 'eo', '_']
				c/n/e/o(CCVV)
c/n/eo(CCV)
c/n/e/_/o(CCVAV)
c/n/eo/_(CCVA)
				ANALYSING: cneol
					resolving (2)
					> version: c/n/e/o/l
					TRYING: o
					> version: c/n/eo/l
					TRYING: l
					adding blocked set: C = C >> l, w, _
					RESULT:  ['_']
				adding dashed alternative: ['c', 'n', 'e', '_', 'o', 'l']
				adding dashed alternative: ['c', 'n', 'eo', '_', 'l']
				c/n/e/o/l(CCVVC)
c/n/eo/l(CCVC)
c/n/e/_/o/l(CCVAVC)
c/n/eo/_/l(CCVAC)
				ANALYSING: cneoli
					resolving (4)
					> version: c/n/e/o/l/i
					TRYING: o
					> version: c/n/e/o/l/i
					TRYING: o
					> version: c/n/eo/l/i
					TRYING: l
					adding blocked set: C = C >> l, w, _
					> version: c/n/eo/l/i
					TRYING: l
					adding blocked set: C = C >> l, w, _
					RESULT:  ['_']
				adding dashed alternative: ['c', 'n', 'e', '_', 'o', 'l', 'i']
				adding dashed alternative: ['c', 'n', 'e', '_', 'o', 'l', 'i']
				adding dashed alternative: ['c', 'n', 'eo', '_', 'l', 'i']
				adding dashed alternative: ['c', 'n', 'eo', '_', 'l', 'i']
				c/n/e/o/l/i(CCVVCC)
c/n/e/o/l/i(CCVVCV)
c/n/eo/l/i(CCVCC)
c/n/eo/l/i(CCVCV)
c/n/e/_/o/l/i(CCVAVCA)
c/n/e/_/o/l/i(CCVAVCA)
c/n/eo/_/l/i(CCVACA)
c/n/eo/_/l/i(CCVACA)
				ANALYSING: cneul
					resolving (3)
					> version: c/n/e/u/l
					TRYING: u
					adding blocked set: C = C >> l, u, w, _
					> version: c/n/e/u/l
					TRYING: u
					adding blocked set: C = C >> l, u, w, _
					> version: c/n/eu/l
					TRYING: l
					adding blocked set: C = C >> l, w, _
					RESULT:  ['_']
				adding dashed alternative: ['c', 'n', 'e', '_', 'u', 'l']
				adding dashed alternative: ['c', 'n', 'e', '_', 'u', 'l']
				adding dashed alternative: ['c', 'n', 'eu', '_', 'l']
				c/n/e/u/l(CCVCC)
c/n/e/u/l(CCVVC)
c/n/eu/l(CCVC)
c/n/e/_/u/l(CCVAAC)
c/n/e/_/u/l(CCVAAC)
c/n/eu/_/l(CCVAC)
				ANALYSING: cneƿl
					resolving (2)
					> version: c/n/e/ƿ/l
					TRYING: ƿ
					adding blocked set: C = C >> ƿ, l, w, _
					> version: c/n/eƿ/l
					TRYING: l
					adding blocked set: C = C >> l, w, _
					RESULT:  ['_']
				adding dashed alternative: ['c', 'n', 'e', '_', 'ƿ', 'l']
				adding dashed alternative: ['c', 'n', 'eƿ', '_', 'l']
				c/n/e/ƿ/l(CCVCC)
c/n/eƿ/l(CCVC)
c/n/e/_/ƿ/l(CCVACC)
c/n/eƿ/_/l(CCVAC)
				ANALYSING: cnoul
					resolving (3)
					> version: c/n/o/u/l
					TRYING: u
					adding blocked set: C = C >> l, u, w, _
					> version: c/n/o/u/l
					TRYING: u
					adding blocked set: C = C >> l, u, w, _
					> version: c/n/ou/l
					TRYING: l
					adding blocked set: C = C >> l, w, _
					RESULT:  ['_']
				adding dashed alternative: ['c', 'n', 'o', '_', 'u', 'l']
				adding dashed alternative: ['c', 'n', 'o', '_', 'u', 'l']
				adding dashed alternative: ['c', 'n', 'ou', '_', 'l']
				c/n/o/u/l(CCVCC)
c/n/o/u/l(CCVVC)
c/n/ou/l(CCVC)
c/n/o/_/u/l(CCVAAC)
c/n/o/_/u/l(CCVAAC)
c/n/ou/_/l(CCVAC)
				ANALYSING: cnyle
					resolving (2)
					> version: c/n/y/l/e
					TRYING: l
					adding blocked set: C = C >> l, w, _
					> version: c/n/y/l/e
					TRYING: l
					adding blocked set: C = C >> l, w, _
					RESULT:  ['_']
				adding dashed alternative: ['c', 'n', 'y', '_', 'l', 'e']
				adding dashed alternative: ['c', 'n', 'y', '_', 'l', 'e']
				c/n/y/l/e(CCCCV)
c/n/y/l/e(CCVCV)
c/n/y/_/l/e(CCAACV)
c/n/y/_/l/e(CCAACV)
				ANALYSING: keiel
					resolving (10)
					> version: k/e/i/e/l
					TRYING: e
					> version: k/e/i/e/l
					TRYING: e
					> version: k/e/ie/l
					TRYING: l
					adding blocked set: C = C >> l, w, _
					> version: k/ei/e/l
					TRYING: l
					adding blocked set: C = C >> l, w, _
					> version: k/ei/e/l
					TRYING: l
					adding blocked set: C = C >> l, w, _
					> version: k/_/e/i/e/l
					TRYING: i
					adding blocked set: C = C >> i, l, w, _
					> version: k/_/e/i/e/l
					TRYING: i
					adding blocked set: C = C >> i, l, w, _
					> version: k/_/e/ie/l
					TRYING: ie
					> version: k/_/ei/e/l
					TRYING: e
					> version: k/_/ei/e/l
					TRYING: e
					RESULT:  ['_']
				adding dashed alternative: ['k', 'e', 'i', '_', 'e', 'l']
				adding dashed alternative: ['k', 'e', 'i', '_', 'e', 'l']
				adding dashed alternative: ['k', 'e', 'ie', '_', 'l']
				adding dashed alternative: ['k', 'ei', 'e', '_', 'l']
				adding dashed alternative: ['k', 'ei', 'e', '_', 'l']
				adding dashed alternative: ['k', '_', 'e', '_', 'i', 'e', 'l']
				adding dashed alternative: ['k', '_', 'e', '_', 'i', 'e', 'l']
				adding dashed alternative: ['k', '_', 'e', '_', 'ie', 'l']
				adding dashed alternative: ['k', '_', 'ei', '_', 'e', 'l']
				adding dashed alternative: ['k', '_', 'ei', '_', 'e', 'l']
				k/e/i/e/l(CVCVC)
k/e/i/e/l(CVVVC)
k/e/ie/l(CVVC)
k/ei/e/l(CVVC)
k/ei/e/l(CVVC)
k/_/e/i/e/l(CAVAVC)
k/_/e/i/e/l(CAVAVC)
k/_/e/ie/l(CAVVC)
k/_/ei/e/l(CAVVC)
k/_/ei/e/l(CAVVC)
k/e/i/_/e/l(CVAAVC)
k/e/i/_/e/l(CVAAVC)
k/e/ie/_/l(CVVAC)
k/ei/e/_/l(CVVAC)
k/ei/e/_/l(CVVAC)
k/_/e/_/i/e/l(CAVAAVC)
k/_/e/_/i/e/l(CAVAAVC)
k/_/e/_/ie/l(CAVAVC)
k/_/ei/_/e/l(CAVAVC)
k/_/ei/_/e/l(CAVAVC)
				ANALYSING: kenel
					resolving (2)
					> version: k/e/n/e/l
					TRYING: e
					> version: k/_/e/n/e/l
					TRYING: n
					adding blocked set: C = C >> l, n, w, _
					RESULT:  ['_']
				adding dashed alternative: ['k', 'e', 'n', '_', 'e', 'l']
				adding dashed alternative: ['k', '_', 'e', '_', 'n', 'e', 'l']
				k/e/n/e/l(CVCVC)
k/_/e/n/e/l(CAVCVC)
k/e/n/_/e/l(CVCAVC)
k/_/e/_/n/e/l(CAVACVC)
				ANALYSING: knel
					resolving (1)
					> version: k/n/e/l
					TRYING: l
					adding blocked set: C = C >> l, w, _
					RESULT:  ['_']
				adding dashed alternative: ['k', 'n', 'e', '_', 'l']
				k/n/e/l(CCVC)
k/n/e/_/l(CCVAC)
				ANALYSING: kneo
					resolving (2)
					> version: k/n/e/o
					TRYING: o
					> version: k/n/eo
					RESULT:  ['_']
				adding dashed alternative: ['k', 'n', 'e', '_', 'o']
				adding dashed alternative: ['k', 'n', 'eo', '_']
				k/n/e/o(CCVV)
k/n/eo(CCV)
k/n/e/_/o(CCVAV)
k/n/eo/_(CCVA)
				ANALYSING: kneol
					resolving (2)
					> version: k/n/e/o/l
					TRYING: o
					> version: k/n/eo/l
					TRYING: l
					adding blocked set: C = C >> l, w, _
					RESULT:  ['_']
				adding dashed alternative: ['k', 'n', 'e', '_', 'o', 'l']
				adding dashed alternative: ['k', 'n', 'eo', '_', 'l']
				k/n/e/o/l(CCVVC)
k/n/eo/l(CCVC)
k/n/e/_/o/l(CCVAVC)
k/n/eo/_/l(CCVAC)
				ANALYSING: kneoli
					resolving (4)
					> version: k/n/e/o/l/i
					TRYING: o
					> version: k/n/e/o/l/i
					TRYING: o
					> version: k/n/eo/l/i
					TRYING: l
					adding blocked set: C = C >> l, w, _
					> version: k/n/eo/l/i
					TRYING: l
					adding blocked set: C = C >> l, w, _
					RESULT:  ['_']
				adding dashed alternative: ['k', 'n', 'e', '_', 'o', 'l', 'i']
				adding dashed alternative: ['k', 'n', 'e', '_', 'o', 'l', 'i']
				adding dashed alternative: ['k', 'n', 'eo', '_', 'l', 'i']
				adding dashed alternative: ['k', 'n', 'eo', '_', 'l', 'i']
				k/n/e/o/l/i(CCVVCC)
k/n/e/o/l/i(CCVVCV)
k/n/eo/l/i(CCVCC)
k/n/eo/l/i(CCVCV)
k/n/e/_/o/l/i(CCVAVCA)
k/n/e/_/o/l/i(CCVAVCA)
k/n/eo/_/l/i(CCVACA)
k/n/eo/_/l/i(CCVACA)
				ANALYSING: kneoly
					resolving (4)
					> version: k/n/e/o/l/y
					TRYING: o
					> version: k/n/e/o/l/y
					TRYING: o
					> version: k/n/eo/l/y
					TRYING: l
					adding blocked set: C = C >> l, w, _
					> version: k/n/eo/l/y
					TRYING: l
					adding blocked set: C = C >> l, w, _
					RESULT:  ['_']
				adding dashed alternative: ['k', 'n', 'e', '_', 'o', 'l', 'y']
				adding dashed alternative: ['k', 'n', 'e', '_', 'o', 'l', 'y']
				adding dashed alternative: ['k', 'n', 'eo', '_', 'l', 'y']
				adding dashed alternative: ['k', 'n', 'eo', '_', 'l', 'y']
				k/n/e/o/l/y(CCVVCC)
k/n/e/o/l/y(CCVVCV)
k/n/eo/l/y(CCVCC)
k/n/eo/l/y(CCVCV)
k/n/e/_/o/l/y(CCVAVCA)
k/n/e/_/o/l/y(CCVAVCA)
k/n/eo/_/l/y(CCVACA)
k/n/eo/_/l/y(CCVACA)
				ANALYSING: kneƿ
					resolving (2)
					> version: k/n/e/ƿ
					TRYING: ƿ
					adding blocked set: C = C >> ƿ, l, w, _
					> version: k/n/eƿ
					RESULT:  ['_']
				adding dashed alternative: ['k', 'n', 'e', '_', 'ƿ']
				adding dashed alternative: ['k', 'n', 'eƿ', '_']
				k/n/e/ƿ(CCVC)
k/n/eƿ(CCV)
k/n/e/_/ƿ(CCVAC)
k/n/eƿ/_(CCVA)
			___CCVCVC : 4___
				ANALYSING: cneolin
				adding littera based on matching pattern
				ANALYSING: knewel
				adding littera based on matching pattern
				ANALYSING: cne
					resolving (2)
					> version: c/n/e
					> version: c/n/e/_
					RESULT:  ['_']
				adding dashed alternative: ['c', 'n', 'e', '_']
				adding dashed alternative: ['c', 'n', 'e', '_', '_']
				c/n/e(CCV)
c/n/e/_(CCVA)
c/n/e/_(CCVA)
c/n/e/_/_(CCVAA)
				ANALYSING: cnel
					resolving (2)
					> version: c/n/e/l
					> version: c/n/e/_/l
					TRYING: l
					RESULT:  ['_']
				adding dashed alternative: ['c', 'n', 'e', 'l', '_']
				adding dashed alternative: ['c', 'n', 'e', '_', '_', 'l']
				c/n/e/l(CCVC)
c/n/e/_/l(CCVAC)
c/n/e/l/_(CCVCA)
c/n/e/_/_/l(CCVAAC)
				ANALYSING: cneo
					resolving (4)
					> version: c/n/e/o
					> version: c/n/eo
					> version: c/n/e/_/o
					TRYING: o
					> version: c/n/eo/_
					RESULT:  ['o']
				ANALYSING: cneol
					resolving (4)
					> version: c/n/e/o/l
					TRYING: l
					> version: c/n/eo/l
					> version: c/n/e/_/o/l
					TRYING: o
					> version: c/n/eo/_/l
					TRYING: l
					RESULT:  ['o']
				ANALYSING: cneoli
					resolving (8)
					> version: c/n/e/o/l/i
					TRYING: l
					> version: c/n/e/o/l/i
					TRYING: l
					> version: c/n/eo/l/i
					TRYING: i
					> version: c/n/eo/l/i
					TRYING: i
					> version: c/n/e/_/o/l/i
					TRYING: o
					>>> MULTIPLE RESOLVE OPTIONS: {'i', 'o'}
					> version: c/n/e/_/o/l/i
					TRYING: o
					>>> MULTIPLE RESOLVE OPTIONS: {'i', 'o'}
					> version: c/n/eo/_/l/i
					TRYING: l
					>>> MULTIPLE RESOLVE OPTIONS: {'i', 'o'}
					> version: c/n/eo/_/l/i
					TRYING: l
					>>> MULTIPLE RESOLVE OPTIONS: {'i', 'o'}
					RESULT:  ['i', 'o']
				ANALYSING: cneul
					resolving (6)
					> version: c/n/e/u/l
					TRYING: l
					> version: c/n/e/u/l
					TRYING: l
					> version: c/n/eu/l
					> version: c/n/e/_/u/l
					TRYING: u
					> version: c/n/e/_/u/l
					TRYING: u
					> version: c/n/eu/_/l
					TRYING: l
					RESULT:  ['u']
				ANALYSING: cneƿl
					resolving (4)
					> version: c/n/e/ƿ/l
					TRYING: l
					> version: c/n/eƿ/l
					> version: c/n/e/_/ƿ/l
					TRYING: ƿ
					> version: c/n/eƿ/_/l
					TRYING: l
					RESULT:  ['_']
				adding dashed alternative: ['c', 'n', 'e', 'ƿ', '_', 'l']
				adding dashed alternative: ['c', 'n', 'eƿ', 'l', '_']
				adding dashed alternative: ['c', 'n', 'e', '_', '_', 'ƿ', 'l']
				adding dashed alternative: ['c', 'n', 'eƿ', '_', '_', 'l']
				c/n/e/ƿ/l(CCVCC)
c/n/eƿ/l(CCVC)
c/n/e/_/ƿ/l(CCVACC)
c/n/eƿ/_/l(CCVAC)
c/n/e/ƿ/_/l(CCVCAC)
c/n/eƿ/l/_(CCVCA)
c/n/e/_/_/ƿ/l(CCVAACC)
c/n/eƿ/_/_/l(CCVAAC)
				ANALYSING: cnoul
					resolving (6)
					> version: c/n/o/u/l
					TRYING: l
					> version: c/n/o/u/l
					TRYING: l
					> version: c/n/ou/l
					> version: c/n/o/_/u/l
					TRYING: u
					> version: c/n/o/_/u/l
					TRYING: u
					> version: c/n/ou/_/l
					TRYING: l
					RESULT:  ['u']
				ANALYSING: cnyle
					resolving (4)
					> version: c/n/y/l/e
					TRYING: e
					> version: c/n/y/l/e
					TRYING: e
					> version: c/n/y/_/l/e
					TRYING: l
					> version: c/n/y/_/l/e
					TRYING: l
					RESULT:  ['e']
				ANALYSING: keiel
					resolving (20)
					> version: k/e/i/e/l
					TRYING: l
					> version: k/e/i/e/l
					TRYING: l
					> version: k/e/ie/l
					> version: k/ei/e/l
					> version: k/ei/e/l
					> version: k/_/e/i/e/l
					TRYING: e
					> version: k/_/e/i/e/l
					TRYING: e
					> version: k/_/e/ie/l
					TRYING: l
					> version: k/_/ei/e/l
					TRYING: l
					> version: k/_/ei/e/l
					TRYING: l
					> version: k/e/i/_/e/l
					TRYING: e
					> version: k/e/i/_/e/l
					TRYING: e
					> version: k/e/ie/_/l
					TRYING: l
					> version: k/ei/e/_/l
					TRYING: l
					> version: k/ei/e/_/l
					TRYING: l
					> version: k/_/e/_/i/e/l
					TRYING: i
					>>> MULTIPLE RESOLVE OPTIONS: {'i', 'e'}
					> version: k/_/e/_/i/e/l
					TRYING: i
					>>> MULTIPLE RESOLVE OPTIONS: {'i', 'e'}
					> version: k/_/e/_/ie/l
					TRYING: ie
					>>> MULTIPLE RESOLVE OPTIONS: {'i', 'ie', 'e'}
					> version: k/_/ei/_/e/l
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'i', 'ie', 'e'}
					> version: k/_/ei/_/e/l
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'i', 'ie', 'e'}
					RESULT:  ['i', 'ie', 'e']
				ANALYSING: kenel
					resolving (4)
					> version: k/e/n/e/l
					TRYING: l
					> version: k/_/e/n/e/l
					TRYING: e
					> version: k/e/n/_/e/l
					TRYING: e
					> version: k/_/e/_/n/e/l
					TRYING: n
					RESULT:  ['e']
				ANALYSING: knel
					resolving (2)
					> version: k/n/e/l
					> version: k/n/e/_/l
					TRYING: l
					RESULT:  ['_']
				adding dashed alternative: ['k', 'n', 'e', 'l', '_']
				adding dashed alternative: ['k', 'n', 'e', '_', '_', 'l']
				k/n/e/l(CCVC)
k/n/e/_/l(CCVAC)
k/n/e/l/_(CCVCA)
k/n/e/_/_/l(CCVAAC)
				ANALYSING: kneo
					resolving (4)
					> version: k/n/e/o
					> version: k/n/eo
					> version: k/n/e/_/o
					TRYING: o
					> version: k/n/eo/_
					RESULT:  ['o']
				ANALYSING: kneol
					resolving (4)
					> version: k/n/e/o/l
					TRYING: l
					> version: k/n/eo/l
					> version: k/n/e/_/o/l
					TRYING: o
					> version: k/n/eo/_/l
					TRYING: l
					RESULT:  ['o']
				ANALYSING: kneoli
					resolving (8)
					> version: k/n/e/o/l/i
					TRYING: l
					> version: k/n/e/o/l/i
					TRYING: l
					> version: k/n/eo/l/i
					TRYING: i
					> version: k/n/eo/l/i
					TRYING: i
					> version: k/n/e/_/o/l/i
					TRYING: o
					>>> MULTIPLE RESOLVE OPTIONS: {'i', 'o'}
					> version: k/n/e/_/o/l/i
					TRYING: o
					>>> MULTIPLE RESOLVE OPTIONS: {'i', 'o'}
					> version: k/n/eo/_/l/i
					TRYING: l
					>>> MULTIPLE RESOLVE OPTIONS: {'i', 'o'}
					> version: k/n/eo/_/l/i
					TRYING: l
					>>> MULTIPLE RESOLVE OPTIONS: {'i', 'o'}
					RESULT:  ['i', 'o']
				ANALYSING: kneoly
					resolving (8)
					> version: k/n/e/o/l/y
					TRYING: l
					> version: k/n/e/o/l/y
					TRYING: l
					> version: k/n/eo/l/y
					TRYING: y
					> version: k/n/eo/l/y
					TRYING: y
					> version: k/n/e/_/o/l/y
					TRYING: o
					>>> MULTIPLE RESOLVE OPTIONS: {'o', 'y'}
					> version: k/n/e/_/o/l/y
					TRYING: o
					>>> MULTIPLE RESOLVE OPTIONS: {'o', 'y'}
					> version: k/n/eo/_/l/y
					TRYING: l
					>>> MULTIPLE RESOLVE OPTIONS: {'o', 'y'}
					> version: k/n/eo/_/l/y
					TRYING: l
					>>> MULTIPLE RESOLVE OPTIONS: {'o', 'y'}
					RESULT:  ['o', 'y']
				ANALYSING: kneƿ
					resolving (4)
					> version: k/n/e/ƿ
					> version: k/n/eƿ
					> version: k/n/e/_/ƿ
					TRYING: ƿ
					> version: k/n/eƿ/_
					RESULT:  ['_']
				adding dashed alternative: ['k', 'n', 'e', 'ƿ', '_']
				adding dashed alternative: ['k', 'n', 'eƿ', '_']
				adding dashed alternative: ['k', 'n', 'e', '_', '_', 'ƿ']
				adding dashed alternative: ['k', 'n', 'eƿ', '_', '_']
				k/n/e/ƿ(CCVC)
k/n/eƿ(CCV)
k/n/e/_/ƿ(CCVAC)
k/n/eƿ/_(CCVA)
k/n/e/ƿ/_(CCVCA)
k/n/eƿ/_(CCVA)
k/n/e/_/_/ƿ(CCVAAC)
k/n/eƿ/_/_(CCVAA)
			___CCVCVC : 5___
				ANALYSING: cneolin
				adding littera based on matching pattern
				ANALYSING: knewel
				adding littera based on matching pattern
				ANALYSING: cne
					resolving (4)
					> version: c/n/e
					> version: c/n/e/_
					> version: c/n/e/_
					> version: c/n/e/_/_
					RESULT:  ['_']
				adding dashed alternative: ['c', 'n', 'e', '_']
				adding dashed alternative: ['c', 'n', 'e', '_', '_']
				adding dashed alternative: ['c', 'n', 'e', '_', '_']
				adding dashed alternative: ['c', 'n', 'e', '_', '_', '_']
				c/n/e(CCV)
c/n/e/_(CCVA)
c/n/e/_(CCVA)
c/n/e/_/_(CCVAA)
c/n/e/_(CCVA)
c/n/e/_/_(CCVAA)
c/n/e/_/_(CCVAA)
c/n/e/_/_/_(CCVAAA)
				version split: ['c', 'n', 'e']
				{'string': 'c/n/e', 'rgx': '((c))/((n))/((e))/((_))/((_))/((_))$'}
				_____REMOVING________['c', 'n', 'e']
				version split: ['c', 'n', 'e', '_']
				{'string': 'c/n/e/_', 'rgx': '((c))/((n))/((e))/((_))/((_))/((_))$'}
				_____REMOVING________['c', 'n', 'e', '_']
				version split: ['c', 'n', 'e', '_']
				{'string': 'c/n/e/_', 'rgx': '((c))/((n))/((e))/((_))/((_))/((_))$'}
				_____REMOVING________['c', 'n', 'e', '_']
				version split: ['c', 'n', 'e', '_', '_']
				{'string': 'c/n/e/_/_', 'rgx': '((c))/((n))/((e))/((_))/((_))/((_))$'}
				_____REMOVING________['c', 'n', 'e', '_', '_']
				version split: ['c', 'n', 'e', '_']
				{'string': 'c/n/e/_', 'rgx': '((c))/((n))/((e))/((_))/((_))/((_))$'}
				_____REMOVING________['c', 'n', 'e', '_']
				version split: ['c', 'n', 'e', '_', '_']
				{'string': 'c/n/e/_/_', 'rgx': '((c))/((n))/((e))/((_))/((_))/((_))$'}
				_____REMOVING________['c', 'n', 'e', '_', '_']
				version split: ['c', 'n', 'e', '_', '_']
				{'string': 'c/n/e/_/_', 'rgx': '((c))/((n))/((e))/((_))/((_))/((_))$'}
				_____REMOVING________['c', 'n', 'e', '_', '_']
				version split: ['c', 'n', 'e', '_', '_', '_']
				{'string': 'c/n/e/_/_/_', 'rgx': '((c))/((n))/((e))/((_))/((_))/((_))$'}
				ANALYSING: cnel
					resolving (4)
					> version: c/n/e/l
					> version: c/n/e/_/l
					> version: c/n/e/l/_
					> version: c/n/e/_/_/l
					TRYING: l
					adding blocked set: C = C >> l, n, _
					RESULT:  ['_']
				adding dashed alternative: ['c', 'n', 'e', 'l', '_']
				adding dashed alternative: ['c', 'n', 'e', '_', 'l', '_']
				adding dashed alternative: ['c', 'n', 'e', 'l', '_', '_']
				adding dashed alternative: ['c', 'n', 'e', '_', '_', '_', 'l']
				c/n/e/l(CCVC)
c/n/e/_/l(CCVAC)
c/n/e/l/_(CCVCA)
c/n/e/_/_/l(CCVAAC)
c/n/e/l/_(CCVCA)
c/n/e/_/l/_(CCVACA)
c/n/e/l/_/_(CCVCAA)
c/n/e/_/_/_/l(CCVAAAC)
				version split: ['c', 'n', 'e', 'l']
				{'string': 'c/n/e/l', 'rgx': '((c))/((n))/((e))/((_))/((_))/((_))$'}
				_____REMOVING________['c', 'n', 'e', 'l']
				version split: ['c', 'n', 'e', '_', 'l']
				{'string': 'c/n/e/_/l', 'rgx': '((c))/((n))/((e))/((_))/((_))/((_))$'}
				_____REMOVING________['c', 'n', 'e', '_', 'l']
				version split: ['c', 'n', 'e', 'l', '_']
				{'string': 'c/n/e/l/_', 'rgx': '((c))/((n))/((e))/((_))/((_))/((_))$'}
				_____REMOVING________['c', 'n', 'e', 'l', '_']
				version split: ['c', 'n', 'e', '_', '_', 'l']
				{'string': 'c/n/e/_/_/l', 'rgx': '((c))/((n))/((e))/((_))/((_))/((_))$'}
				_____REMOVING________['c', 'n', 'e', '_', '_', 'l']
				version split: ['c', 'n', 'e', 'l', '_']
				{'string': 'c/n/e/l/_', 'rgx': '((c))/((n))/((e))/((_))/((_))/((_))$'}
				_____REMOVING________['c', 'n', 'e', 'l', '_']
				version split: ['c', 'n', 'e', '_', 'l', '_']
				{'string': 'c/n/e/_/l/_', 'rgx': '((c))/((n))/((e))/((_))/((_))/((_))$'}
				_____REMOVING________['c', 'n', 'e', '_', 'l', '_']
				version split: ['c', 'n', 'e', 'l', '_', '_']
				{'string': 'c/n/e/l/_/_', 'rgx': '((c))/((n))/((e))/((_))/((_))/((_))$'}
				_____REMOVING________['c', 'n', 'e', 'l', '_', '_']
				version split: ['c', 'n', 'e', '_', '_', '_', 'l']
				{'string': 'c/n/e/_/_/_/l', 'rgx': '((c))/((n))/((e))/((_))/((_))/((_))$'}
				_____REMOVING________['c', 'n', 'e', '_', '_', '_', 'l']
				ANALYSING: cneo
					resolving (4)
					> version: c/n/e/o
					> version: c/n/eo
					> version: c/n/e/_/o
					> version: c/n/eo/_
					RESULT:  ['_']
				adding dashed alternative: ['c', 'n', 'e', 'o', '_']
				adding dashed alternative: ['c', 'n', 'eo', '_']
				adding dashed alternative: ['c', 'n', 'e', '_', 'o', '_']
				adding dashed alternative: ['c', 'n', 'eo', '_', '_']
				c/n/e/o(CCVV)
c/n/eo(CCV)
c/n/e/_/o(CCVAV)
c/n/eo/_(CCVA)
c/n/e/o/_(CCVVA)
c/n/eo/_(CCVA)
c/n/e/_/o/_(CCVAVA)
c/n/eo/_/_(CCVAA)
				version split: ['c', 'n', 'e', 'o']
				{'string': 'c/n/e/o', 'rgx': '((c))/((n))/((eo)|(e))/((_))/((o))/((_))$'}
				_____REMOVING________['c', 'n', 'e', 'o']
				version split: ['c', 'n', 'eo']
				{'string': 'c/n/eo', 'rgx': '((c))/((n))/((eo)|(e))/((_))/((o))/((_))$'}
				_____REMOVING________['c', 'n', 'eo']
				version split: ['c', 'n', 'e', '_', 'o']
				{'string': 'c/n/e/_/o', 'rgx': '((c))/((n))/((eo)|(e))/((_))/((o))/((_))$'}
				_____REMOVING________['c', 'n', 'e', '_', 'o']
				version split: ['c', 'n', 'eo', '_']
				{'string': 'c/n/eo/_', 'rgx': '((c))/((n))/((eo)|(e))/((_))/((o))/((_))$'}
				_____REMOVING________['c', 'n', 'eo', '_']
				version split: ['c', 'n', 'e', 'o', '_']
				{'string': 'c/n/e/o/_', 'rgx': '((c))/((n))/((eo)|(e))/((_))/((o))/((_))$'}
				_____REMOVING________['c', 'n', 'e', 'o', '_']
				version split: ['c', 'n', 'eo', '_']
				{'string': 'c/n/eo/_', 'rgx': '((c))/((n))/((eo)|(e))/((_))/((o))/((_))$'}
				_____REMOVING________['c', 'n', 'eo', '_']
				version split: ['c', 'n', 'e', '_', 'o', '_']
				{'string': 'c/n/e/_/o/_', 'rgx': '((c))/((n))/((eo)|(e))/((_))/((o))/((_))$'}
				version split: ['c', 'n', 'eo', '_', '_']
				{'string': 'c/n/eo/_/_', 'rgx': '((c))/((n))/((eo)|(e))/((_))/((o))/((_))$'}
				_____REMOVING________['c', 'n', 'eo', '_', '_']
				ANALYSING: cneol
					resolving (4)
					> version: c/n/e/o/l
					> version: c/n/eo/l
					> version: c/n/e/_/o/l
					TRYING: l
					adding blocked set: C = C >> l, n, _
					> version: c/n/eo/_/l
					RESULT:  ['_']
				adding dashed alternative: ['c', 'n', 'e', 'o', 'l', '_']
				adding dashed alternative: ['c', 'n', 'eo', 'l', '_']
				adding dashed alternative: ['c', 'n', 'e', '_', 'o', '_', 'l']
				adding dashed alternative: ['c', 'n', 'eo', '_', 'l', '_']
				c/n/e/o/l(CCVVC)
c/n/eo/l(CCVC)
c/n/e/_/o/l(CCVAVC)
c/n/eo/_/l(CCVAC)
c/n/e/o/l/_(CCVVCA)
c/n/eo/l/_(CCVCA)
c/n/e/_/o/_/l(CCVAVAC)
c/n/eo/_/l/_(CCVACA)
				version split: ['c', 'n', 'e', 'o', 'l']
				{'string': 'c/n/e/o/l', 'rgx': '((c))/((n))/((eo)|(e))/((_))/((o))/((_))$'}
				_____REMOVING________['c', 'n', 'e', 'o', 'l']
				version split: ['c', 'n', 'eo', 'l']
				{'string': 'c/n/eo/l', 'rgx': '((c))/((n))/((eo)|(e))/((_))/((o))/((_))$'}
				_____REMOVING________['c', 'n', 'eo', 'l']
				version split: ['c', 'n', 'e', '_', 'o', 'l']
				{'string': 'c/n/e/_/o/l', 'rgx': '((c))/((n))/((eo)|(e))/((_))/((o))/((_))$'}
				_____REMOVING________['c', 'n', 'e', '_', 'o', 'l']
				version split: ['c', 'n', 'eo', '_', 'l']
				{'string': 'c/n/eo/_/l', 'rgx': '((c))/((n))/((eo)|(e))/((_))/((o))/((_))$'}
				_____REMOVING________['c', 'n', 'eo', '_', 'l']
				version split: ['c', 'n', 'e', 'o', 'l', '_']
				{'string': 'c/n/e/o/l/_', 'rgx': '((c))/((n))/((eo)|(e))/((_))/((o))/((_))$'}
				_____REMOVING________['c', 'n', 'e', 'o', 'l', '_']
				version split: ['c', 'n', 'eo', 'l', '_']
				{'string': 'c/n/eo/l/_', 'rgx': '((c))/((n))/((eo)|(e))/((_))/((o))/((_))$'}
				_____REMOVING________['c', 'n', 'eo', 'l', '_']
				version split: ['c', 'n', 'e', '_', 'o', '_', 'l']
				{'string': 'c/n/e/_/o/_/l', 'rgx': '((c))/((n))/((eo)|(e))/((_))/((o))/((_))$'}
				_____REMOVING________['c', 'n', 'e', '_', 'o', '_', 'l']
				version split: ['c', 'n', 'eo', '_', 'l', '_']
				{'string': 'c/n/eo/_/l/_', 'rgx': '((c))/((n))/((eo)|(e))/((_))/((o))/((_))$'}
				_____REMOVING________['c', 'n', 'eo', '_', 'l', '_']
				ANALYSING: cneoli
					resolving (8)
					> version: c/n/e/o/l/i
					TRYING: i
					adding blocked set: C = C >> i, l, n, _
					> version: c/n/e/o/l/i
					TRYING: i
					adding blocked set: C = C >> i, l, n, _
					> version: c/n/eo/l/i
					> version: c/n/eo/l/i
					> version: c/n/e/_/o/l/i
					TRYING: l
					adding blocked set: C = C >> l, n, _
					> version: c/n/e/_/o/l/i
					TRYING: l
					adding blocked set: C = C >> l, n, _
					> version: c/n/eo/_/l/i
					TRYING: i
					adding blocked set: C = C >> i, l, n, _
					> version: c/n/eo/_/l/i
					TRYING: i
					adding blocked set: C = C >> i, l, n, _
					RESULT:  ['_']
				adding dashed alternative: ['c', 'n', 'e', 'o', 'l', '_', 'i']
				adding dashed alternative: ['c', 'n', 'e', 'o', 'l', '_', 'i']
				adding dashed alternative: ['c', 'n', 'eo', 'l', 'i', '_']
				adding dashed alternative: ['c', 'n', 'eo', 'l', 'i', '_']
				adding dashed alternative: ['c', 'n', 'e', '_', 'o', '_', 'l', 'i']
				adding dashed alternative: ['c', 'n', 'e', '_', 'o', '_', 'l', 'i']
				adding dashed alternative: ['c', 'n', 'eo', '_', 'l', '_', 'i']
				adding dashed alternative: ['c', 'n', 'eo', '_', 'l', '_', 'i']
				c/n/e/o/l/i(CCVVCC)
c/n/e/o/l/i(CCVVCV)
c/n/eo/l/i(CCVCC)
c/n/eo/l/i(CCVCV)
c/n/e/_/o/l/i(CCVAVCA)
c/n/e/_/o/l/i(CCVAVCA)
c/n/eo/_/l/i(CCVACA)
c/n/eo/_/l/i(CCVACA)
c/n/e/o/l/_/i(CCVVCAA)
c/n/e/o/l/_/i(CCVVCAA)
c/n/eo/l/i/_(CCVCAA)
c/n/eo/l/i/_(CCVCAA)
c/n/e/_/o/_/l/i(CCVAVACA)
c/n/e/_/o/_/l/i(CCVAVACA)
c/n/eo/_/l/_/i(CCVACAA)
c/n/eo/_/l/_/i(CCVACAA)
				version split: ['c', 'n', 'e', 'o', 'l', 'i']
				{'string': 'c/n/e/o/l/i', 'rgx': '((c))/((n))/((eo)|(e))/((_))/((i)|(o))/((_))$'}
				_____REMOVING________['c', 'n', 'e', 'o', 'l', 'i']
				version split: ['c', 'n', 'e', 'o', 'l', 'i']
				{'string': 'c/n/e/o/l/i', 'rgx': '((c))/((n))/((eo)|(e))/((_))/((i)|(o))/((_))$'}
				_____REMOVING________['c', 'n', 'e', 'o', 'l', 'i']
				version split: ['c', 'n', 'eo', 'l', 'i']
				{'string': 'c/n/eo/l/i', 'rgx': '((c))/((n))/((eo)|(e))/((_))/((i)|(o))/((_))$'}
				_____REMOVING________['c', 'n', 'eo', 'l', 'i']
				version split: ['c', 'n', 'eo', 'l', 'i']
				{'string': 'c/n/eo/l/i', 'rgx': '((c))/((n))/((eo)|(e))/((_))/((i)|(o))/((_))$'}
				_____REMOVING________['c', 'n', 'eo', 'l', 'i']
				version split: ['c', 'n', 'e', '_', 'o', 'l', 'i']
				{'string': 'c/n/e/_/o/l/i', 'rgx': '((c))/((n))/((eo)|(e))/((_))/((i)|(o))/((_))$'}
				_____REMOVING________['c', 'n', 'e', '_', 'o', 'l', 'i']
				version split: ['c', 'n', 'e', '_', 'o', 'l', 'i']
				{'string': 'c/n/e/_/o/l/i', 'rgx': '((c))/((n))/((eo)|(e))/((_))/((i)|(o))/((_))$'}
				_____REMOVING________['c', 'n', 'e', '_', 'o', 'l', 'i']
				version split: ['c', 'n', 'eo', '_', 'l', 'i']
				{'string': 'c/n/eo/_/l/i', 'rgx': '((c))/((n))/((eo)|(e))/((_))/((i)|(o))/((_))$'}
				_____REMOVING________['c', 'n', 'eo', '_', 'l', 'i']
				version split: ['c', 'n', 'eo', '_', 'l', 'i']
				{'string': 'c/n/eo/_/l/i', 'rgx': '((c))/((n))/((eo)|(e))/((_))/((i)|(o))/((_))$'}
				_____REMOVING________['c', 'n', 'eo', '_', 'l', 'i']
				version split: ['c', 'n', 'e', 'o', 'l', '_', 'i']
				{'string': 'c/n/e/o/l/_/i', 'rgx': '((c))/((n))/((eo)|(e))/((_))/((i)|(o))/((_))$'}
				_____REMOVING________['c', 'n', 'e', 'o', 'l', '_', 'i']
				version split: ['c', 'n', 'e', 'o', 'l', '_', 'i']
				{'string': 'c/n/e/o/l/_/i', 'rgx': '((c))/((n))/((eo)|(e))/((_))/((i)|(o))/((_))$'}
				_____REMOVING________['c', 'n', 'e', 'o', 'l', '_', 'i']
				version split: ['c', 'n', 'eo', 'l', 'i', '_']
				{'string': 'c/n/eo/l/i/_', 'rgx': '((c))/((n))/((eo)|(e))/((_))/((i)|(o))/((_))$'}
				_____REMOVING________['c', 'n', 'eo', 'l', 'i', '_']
				version split: ['c', 'n', 'eo', 'l', 'i', '_']
				{'string': 'c/n/eo/l/i/_', 'rgx': '((c))/((n))/((eo)|(e))/((_))/((i)|(o))/((_))$'}
				_____REMOVING________['c', 'n', 'eo', 'l', 'i', '_']
				version split: ['c', 'n', 'e', '_', 'o', '_', 'l', 'i']
				{'string': 'c/n/e/_/o/_/l', 'rgx': '((c))/((n))/((eo)|(e))/((_))/((i)|(o))/((_))$'}
				_____REMOVING________['c', 'n', 'e', '_', 'o', '_', 'l', 'i']
				version split: ['c', 'n', 'e', '_', 'o', '_', 'l', 'i']
				{'string': 'c/n/e/_/o/_/l', 'rgx': '((c))/((n))/((eo)|(e))/((_))/((i)|(o))/((_))$'}
				_____REMOVING________['c', 'n', 'e', '_', 'o', '_', 'l', 'i']
				version split: ['c', 'n', 'eo', '_', 'l', '_', 'i']
				{'string': 'c/n/eo/_/l/_/i', 'rgx': '((c))/((n))/((eo)|(e))/((_))/((i)|(o))/((_))$'}
				_____REMOVING________['c', 'n', 'eo', '_', 'l', '_', 'i']
				version split: ['c', 'n', 'eo', '_', 'l', '_', 'i']
				{'string': 'c/n/eo/_/l/_/i', 'rgx': '((c))/((n))/((eo)|(e))/((_))/((i)|(o))/((_))$'}
				_____REMOVING________['c', 'n', 'eo', '_', 'l', '_', 'i']
				ANALYSING: cneul
					resolving (6)
					> version: c/n/e/u/l
					> version: c/n/e/u/l
					> version: c/n/eu/l
					> version: c/n/e/_/u/l
					TRYING: l
					adding blocked set: C = C >> l, n, _
					> version: c/n/e/_/u/l
					TRYING: l
					adding blocked set: C = C >> l, n, _
					> version: c/n/eu/_/l
					RESULT:  ['_']
				adding dashed alternative: ['c', 'n', 'e', 'u', 'l', '_']
				adding dashed alternative: ['c', 'n', 'e', 'u', 'l', '_']
				adding dashed alternative: ['c', 'n', 'eu', 'l', '_']
				adding dashed alternative: ['c', 'n', 'e', '_', 'u', '_', 'l']
				adding dashed alternative: ['c', 'n', 'e', '_', 'u', '_', 'l']
				adding dashed alternative: ['c', 'n', 'eu', '_', 'l', '_']
				c/n/e/u/l(CCVCC)
c/n/e/u/l(CCVVC)
c/n/eu/l(CCVC)
c/n/e/_/u/l(CCVAAC)
c/n/e/_/u/l(CCVAAC)
c/n/eu/_/l(CCVAC)
c/n/e/u/l/_(CCVACA)
c/n/e/u/l/_(CCVACA)
c/n/eu/l/_(CCVCA)
c/n/e/_/u/_/l(CCVAAAC)
c/n/e/_/u/_/l(CCVAAAC)
c/n/eu/_/l/_(CCVACA)
				version split: ['c', 'n', 'e', 'u', 'l']
				{'string': 'c/n/e/u/l', 'rgx': '((c))/((n))/((eu)|(e))/((_))/((u))/((_))$'}
				_____REMOVING________['c', 'n', 'e', 'u', 'l']
				version split: ['c', 'n', 'e', 'u', 'l']
				{'string': 'c/n/e/u/l', 'rgx': '((c))/((n))/((eu)|(e))/((_))/((u))/((_))$'}
				_____REMOVING________['c', 'n', 'e', 'u', 'l']
				version split: ['c', 'n', 'eu', 'l']
				{'string': 'c/n/eu/l', 'rgx': '((c))/((n))/((eu)|(e))/((_))/((u))/((_))$'}
				_____REMOVING________['c', 'n', 'eu', 'l']
				version split: ['c', 'n', 'e', '_', 'u', 'l']
				{'string': 'c/n/e/_/u/l', 'rgx': '((c))/((n))/((eu)|(e))/((_))/((u))/((_))$'}
				_____REMOVING________['c', 'n', 'e', '_', 'u', 'l']
				version split: ['c', 'n', 'e', '_', 'u', 'l']
				{'string': 'c/n/e/_/u/l', 'rgx': '((c))/((n))/((eu)|(e))/((_))/((u))/((_))$'}
				_____REMOVING________['c', 'n', 'e', '_', 'u', 'l']
				version split: ['c', 'n', 'eu', '_', 'l']
				{'string': 'c/n/eu/_/l', 'rgx': '((c))/((n))/((eu)|(e))/((_))/((u))/((_))$'}
				_____REMOVING________['c', 'n', 'eu', '_', 'l']
				version split: ['c', 'n', 'e', 'u', 'l', '_']
				{'string': 'c/n/e/u/l/_', 'rgx': '((c))/((n))/((eu)|(e))/((_))/((u))/((_))$'}
				_____REMOVING________['c', 'n', 'e', 'u', 'l', '_']
				version split: ['c', 'n', 'e', 'u', 'l', '_']
				{'string': 'c/n/e/u/l/_', 'rgx': '((c))/((n))/((eu)|(e))/((_))/((u))/((_))$'}
				_____REMOVING________['c', 'n', 'e', 'u', 'l', '_']
				version split: ['c', 'n', 'eu', 'l', '_']
				{'string': 'c/n/eu/l/_', 'rgx': '((c))/((n))/((eu)|(e))/((_))/((u))/((_))$'}
				_____REMOVING________['c', 'n', 'eu', 'l', '_']
				version split: ['c', 'n', 'e', '_', 'u', '_', 'l']
				{'string': 'c/n/e/_/u/_/l', 'rgx': '((c))/((n))/((eu)|(e))/((_))/((u))/((_))$'}
				_____REMOVING________['c', 'n', 'e', '_', 'u', '_', 'l']
				version split: ['c', 'n', 'e', '_', 'u', '_', 'l']
				{'string': 'c/n/e/_/u/_/l', 'rgx': '((c))/((n))/((eu)|(e))/((_))/((u))/((_))$'}
				_____REMOVING________['c', 'n', 'e', '_', 'u', '_', 'l']
				version split: ['c', 'n', 'eu', '_', 'l', '_']
				{'string': 'c/n/eu/_/l/_', 'rgx': '((c))/((n))/((eu)|(e))/((_))/((u))/((_))$'}
				_____REMOVING________['c', 'n', 'eu', '_', 'l', '_']
				ANALYSING: cneƿl
					resolving (8)
					> version: c/n/e/ƿ/l
					> version: c/n/eƿ/l
					> version: c/n/e/_/ƿ/l
					TRYING: l
					adding blocked set: C = C >> l, n, _
					> version: c/n/eƿ/_/l
					> version: c/n/e/ƿ/_/l
					TRYING: l
					adding blocked set: C = C >> l, n, _
					> version: c/n/eƿ/l/_
					> version: c/n/e/_/_/ƿ/l
					TRYING: ƿ
					adding blocked set: C = C >> ƿ, l, n, _
					> version: c/n/eƿ/_/_/l
					TRYING: l
					adding blocked set: C = C >> l, n, _
					RESULT:  ['_']
				adding dashed alternative: ['c', 'n', 'e', 'ƿ', 'l', '_']
				adding dashed alternative: ['c', 'n', 'eƿ', 'l', '_']
				adding dashed alternative: ['c', 'n', 'e', '_', 'ƿ', '_', 'l']
				adding dashed alternative: ['c', 'n', 'eƿ', '_', 'l', '_']
				adding dashed alternative: ['c', 'n', 'e', 'ƿ', '_', '_', 'l']
				adding dashed alternative: ['c', 'n', 'eƿ', 'l', '_', '_']
				adding dashed alternative: ['c', 'n', 'e', '_', '_', '_', 'ƿ', 'l']
				adding dashed alternative: ['c', 'n', 'eƿ', '_', '_', '_', 'l']
				c/n/e/ƿ/l(CCVCC)
c/n/eƿ/l(CCVC)
c/n/e/_/ƿ/l(CCVACC)
c/n/eƿ/_/l(CCVAC)
c/n/e/ƿ/_/l(CCVCAC)
c/n/eƿ/l/_(CCVCA)
c/n/e/_/_/ƿ/l(CCVAACC)
c/n/eƿ/_/_/l(CCVAAC)
c/n/e/ƿ/l/_(CCVCCA)
c/n/eƿ/l/_(CCVCA)
c/n/e/_/ƿ/_/l(CCVACAC)
c/n/eƿ/_/l/_(CCVACA)
c/n/e/ƿ/_/_/l(CCVCAAC)
c/n/eƿ/l/_/_(CCVCAA)
c/n/e/_/_/_/ƿ/l(CCVAAACC)
c/n/eƿ/_/_/_/l(CCVAAAC)
				version split: ['c', 'n', 'e', 'ƿ', 'l']
				{'string': 'c/n/e/ƿ/l', 'rgx': '((c))/((n))/((eƿ)|(e))/((_))/((_))/((_))$'}
				_____REMOVING________['c', 'n', 'e', 'ƿ', 'l']
				version split: ['c', 'n', 'eƿ', 'l']
				{'string': 'c/n/eƿ/l', 'rgx': '((c))/((n))/((eƿ)|(e))/((_))/((_))/((_))$'}
				_____REMOVING________['c', 'n', 'eƿ', 'l']
				version split: ['c', 'n', 'e', '_', 'ƿ', 'l']
				{'string': 'c/n/e/_/ƿ/l', 'rgx': '((c))/((n))/((eƿ)|(e))/((_))/((_))/((_))$'}
				_____REMOVING________['c', 'n', 'e', '_', 'ƿ', 'l']
				version split: ['c', 'n', 'eƿ', '_', 'l']
				{'string': 'c/n/eƿ/_/l', 'rgx': '((c))/((n))/((eƿ)|(e))/((_))/((_))/((_))$'}
				_____REMOVING________['c', 'n', 'eƿ', '_', 'l']
				version split: ['c', 'n', 'e', 'ƿ', '_', 'l']
				{'string': 'c/n/e/ƿ/_/l', 'rgx': '((c))/((n))/((eƿ)|(e))/((_))/((_))/((_))$'}
				_____REMOVING________['c', 'n', 'e', 'ƿ', '_', 'l']
				version split: ['c', 'n', 'eƿ', 'l', '_']
				{'string': 'c/n/eƿ/l/_', 'rgx': '((c))/((n))/((eƿ)|(e))/((_))/((_))/((_))$'}
				_____REMOVING________['c', 'n', 'eƿ', 'l', '_']
				version split: ['c', 'n', 'e', '_', '_', 'ƿ', 'l']
				{'string': 'c/n/e/_/_/ƿ/l', 'rgx': '((c))/((n))/((eƿ)|(e))/((_))/((_))/((_))$'}
				_____REMOVING________['c', 'n', 'e', '_', '_', 'ƿ', 'l']
				version split: ['c', 'n', 'eƿ', '_', '_', 'l']
				{'string': 'c/n/eƿ/_/_/l', 'rgx': '((c))/((n))/((eƿ)|(e))/((_))/((_))/((_))$'}
				_____REMOVING________['c', 'n', 'eƿ', '_', '_', 'l']
				version split: ['c', 'n', 'e', 'ƿ', 'l', '_']
				{'string': 'c/n/e/ƿ/l/_', 'rgx': '((c))/((n))/((eƿ)|(e))/((_))/((_))/((_))$'}
				_____REMOVING________['c', 'n', 'e', 'ƿ', 'l', '_']
				version split: ['c', 'n', 'eƿ', 'l', '_']
				{'string': 'c/n/eƿ/l/_', 'rgx': '((c))/((n))/((eƿ)|(e))/((_))/((_))/((_))$'}
				_____REMOVING________['c', 'n', 'eƿ', 'l', '_']
				version split: ['c', 'n', 'e', '_', 'ƿ', '_', 'l']
				{'string': 'c/n/e/_/ƿ/_/l', 'rgx': '((c))/((n))/((eƿ)|(e))/((_))/((_))/((_))$'}
				_____REMOVING________['c', 'n', 'e', '_', 'ƿ', '_', 'l']
				version split: ['c', 'n', 'eƿ', '_', 'l', '_']
				{'string': 'c/n/eƿ/_/l/_', 'rgx': '((c))/((n))/((eƿ)|(e))/((_))/((_))/((_))$'}
				_____REMOVING________['c', 'n', 'eƿ', '_', 'l', '_']
				version split: ['c', 'n', 'e', 'ƿ', '_', '_', 'l']
				{'string': 'c/n/e/ƿ/_/_/l', 'rgx': '((c))/((n))/((eƿ)|(e))/((_))/((_))/((_))$'}
				_____REMOVING________['c', 'n', 'e', 'ƿ', '_', '_', 'l']
				version split: ['c', 'n', 'eƿ', 'l', '_', '_']
				{'string': 'c/n/eƿ/l/_/_', 'rgx': '((c))/((n))/((eƿ)|(e))/((_))/((_))/((_))$'}
				_____REMOVING________['c', 'n', 'eƿ', 'l', '_', '_']
				version split: ['c', 'n', 'e', '_', '_', '_', 'ƿ', 'l']
				{'string': 'c/n/e/_/_/_/ƿ', 'rgx': '((c))/((n))/((eƿ)|(e))/((_))/((_))/((_))$'}
				_____REMOVING________['c', 'n', 'e', '_', '_', '_', 'ƿ', 'l']
				version split: ['c', 'n', 'eƿ', '_', '_', '_', 'l']
				{'string': 'c/n/eƿ/_/_/_/l', 'rgx': '((c))/((n))/((eƿ)|(e))/((_))/((_))/((_))$'}
				_____REMOVING________['c', 'n', 'eƿ', '_', '_', '_', 'l']
				ANALYSING: cnoul
					resolving (6)
					> version: c/n/o/u/l
					> version: c/n/o/u/l
					> version: c/n/ou/l
					> version: c/n/o/_/u/l
					TRYING: l
					adding blocked set: C = C >> l, n, _
					> version: c/n/o/_/u/l
					TRYING: l
					adding blocked set: C = C >> l, n, _
					> version: c/n/ou/_/l
					RESULT:  ['_']
				adding dashed alternative: ['c', 'n', 'o', 'u', 'l', '_']
				adding dashed alternative: ['c', 'n', 'o', 'u', 'l', '_']
				adding dashed alternative: ['c', 'n', 'ou', 'l', '_']
				adding dashed alternative: ['c', 'n', 'o', '_', 'u', '_', 'l']
				adding dashed alternative: ['c', 'n', 'o', '_', 'u', '_', 'l']
				adding dashed alternative: ['c', 'n', 'ou', '_', 'l', '_']
				c/n/o/u/l(CCVCC)
c/n/o/u/l(CCVVC)
c/n/ou/l(CCVC)
c/n/o/_/u/l(CCVAAC)
c/n/o/_/u/l(CCVAAC)
c/n/ou/_/l(CCVAC)
c/n/o/u/l/_(CCVACA)
c/n/o/u/l/_(CCVACA)
c/n/ou/l/_(CCVCA)
c/n/o/_/u/_/l(CCVAAAC)
c/n/o/_/u/_/l(CCVAAAC)
c/n/ou/_/l/_(CCVACA)
				version split: ['c', 'n', 'o', 'u', 'l']
				{'string': 'c/n/o/u/l', 'rgx': '((c))/((n))/((o)|(ou))/((_))/((u))/((_))$'}
				_____REMOVING________['c', 'n', 'o', 'u', 'l']
				version split: ['c', 'n', 'o', 'u', 'l']
				{'string': 'c/n/o/u/l', 'rgx': '((c))/((n))/((o)|(ou))/((_))/((u))/((_))$'}
				_____REMOVING________['c', 'n', 'o', 'u', 'l']
				version split: ['c', 'n', 'ou', 'l']
				{'string': 'c/n/ou/l', 'rgx': '((c))/((n))/((o)|(ou))/((_))/((u))/((_))$'}
				_____REMOVING________['c', 'n', 'ou', 'l']
				version split: ['c', 'n', 'o', '_', 'u', 'l']
				{'string': 'c/n/o/_/u/l', 'rgx': '((c))/((n))/((o)|(ou))/((_))/((u))/((_))$'}
				_____REMOVING________['c', 'n', 'o', '_', 'u', 'l']
				version split: ['c', 'n', 'o', '_', 'u', 'l']
				{'string': 'c/n/o/_/u/l', 'rgx': '((c))/((n))/((o)|(ou))/((_))/((u))/((_))$'}
				_____REMOVING________['c', 'n', 'o', '_', 'u', 'l']
				version split: ['c', 'n', 'ou', '_', 'l']
				{'string': 'c/n/ou/_/l', 'rgx': '((c))/((n))/((o)|(ou))/((_))/((u))/((_))$'}
				_____REMOVING________['c', 'n', 'ou', '_', 'l']
				version split: ['c', 'n', 'o', 'u', 'l', '_']
				{'string': 'c/n/o/u/l/_', 'rgx': '((c))/((n))/((o)|(ou))/((_))/((u))/((_))$'}
				_____REMOVING________['c', 'n', 'o', 'u', 'l', '_']
				version split: ['c', 'n', 'o', 'u', 'l', '_']
				{'string': 'c/n/o/u/l/_', 'rgx': '((c))/((n))/((o)|(ou))/((_))/((u))/((_))$'}
				_____REMOVING________['c', 'n', 'o', 'u', 'l', '_']
				version split: ['c', 'n', 'ou', 'l', '_']
				{'string': 'c/n/ou/l/_', 'rgx': '((c))/((n))/((o)|(ou))/((_))/((u))/((_))$'}
				_____REMOVING________['c', 'n', 'ou', 'l', '_']
				version split: ['c', 'n', 'o', '_', 'u', '_', 'l']
				{'string': 'c/n/o/_/u/_/l', 'rgx': '((c))/((n))/((o)|(ou))/((_))/((u))/((_))$'}
				_____REMOVING________['c', 'n', 'o', '_', 'u', '_', 'l']
				version split: ['c', 'n', 'o', '_', 'u', '_', 'l']
				{'string': 'c/n/o/_/u/_/l', 'rgx': '((c))/((n))/((o)|(ou))/((_))/((u))/((_))$'}
				_____REMOVING________['c', 'n', 'o', '_', 'u', '_', 'l']
				version split: ['c', 'n', 'ou', '_', 'l', '_']
				{'string': 'c/n/ou/_/l/_', 'rgx': '((c))/((n))/((o)|(ou))/((_))/((u))/((_))$'}
				_____REMOVING________['c', 'n', 'ou', '_', 'l', '_']
				ANALYSING: cnyle
					resolving (4)
					> version: c/n/y/l/e
					> version: c/n/y/l/e
					> version: c/n/y/_/l/e
					TRYING: e
					> version: c/n/y/_/l/e
					TRYING: e
					RESULT:  ['_']
				adding dashed alternative: ['c', 'n', 'y', 'l', 'e', '_']
				adding dashed alternative: ['c', 'n', 'y', 'l', 'e', '_']
				adding dashed alternative: ['c', 'n', 'y', '_', 'l', '_', 'e']
				adding dashed alternative: ['c', 'n', 'y', '_', 'l', '_', 'e']
				c/n/y/l/e(CCCCV)
c/n/y/l/e(CCVCV)
c/n/y/_/l/e(CCAACV)
c/n/y/_/l/e(CCAACV)
c/n/y/l/e/_(CCACVA)
c/n/y/l/e/_(CCACVA)
c/n/y/_/l/_/e(CCAACAV)
c/n/y/_/l/_/e(CCAACAV)
				version split: ['c', 'n', 'y', 'l', 'e']
				{'string': 'c/n/y/l/e', 'rgx': '((c))/((n))/((y))/((_))/((e))/((_))$'}
				_____REMOVING________['c', 'n', 'y', 'l', 'e']
				version split: ['c', 'n', 'y', 'l', 'e']
				{'string': 'c/n/y/l/e', 'rgx': '((c))/((n))/((y))/((_))/((e))/((_))$'}
				_____REMOVING________['c', 'n', 'y', 'l', 'e']
				version split: ['c', 'n', 'y', '_', 'l', 'e']
				{'string': 'c/n/y/_/l/e', 'rgx': '((c))/((n))/((y))/((_))/((e))/((_))$'}
				_____REMOVING________['c', 'n', 'y', '_', 'l', 'e']
				version split: ['c', 'n', 'y', '_', 'l', 'e']
				{'string': 'c/n/y/_/l/e', 'rgx': '((c))/((n))/((y))/((_))/((e))/((_))$'}
				_____REMOVING________['c', 'n', 'y', '_', 'l', 'e']
				version split: ['c', 'n', 'y', 'l', 'e', '_']
				{'string': 'c/n/y/l/e/_', 'rgx': '((c))/((n))/((y))/((_))/((e))/((_))$'}
				_____REMOVING________['c', 'n', 'y', 'l', 'e', '_']
				version split: ['c', 'n', 'y', 'l', 'e', '_']
				{'string': 'c/n/y/l/e/_', 'rgx': '((c))/((n))/((y))/((_))/((e))/((_))$'}
				_____REMOVING________['c', 'n', 'y', 'l', 'e', '_']
				version split: ['c', 'n', 'y', '_', 'l', '_', 'e']
				{'string': 'c/n/y/_/l/_/e', 'rgx': '((c))/((n))/((y))/((_))/((e))/((_))$'}
				_____REMOVING________['c', 'n', 'y', '_', 'l', '_', 'e']
				version split: ['c', 'n', 'y', '_', 'l', '_', 'e']
				{'string': 'c/n/y/_/l/_/e', 'rgx': '((c))/((n))/((y))/((_))/((e))/((_))$'}
				_____REMOVING________['c', 'n', 'y', '_', 'l', '_', 'e']
				ANALYSING: keiel
					resolving (20)
					> version: k/e/i/e/l
					> version: k/e/i/e/l
					> version: k/e/ie/l
					> version: k/ei/e/l
					> version: k/ei/e/l
					> version: k/_/e/i/e/l
					TRYING: l
					adding blocked set: C = C >> l, n, _
					> version: k/_/e/i/e/l
					TRYING: l
					adding blocked set: C = C >> l, n, _
					> version: k/_/e/ie/l
					> version: k/_/ei/e/l
					> version: k/_/ei/e/l
					> version: k/e/i/_/e/l
					TRYING: l
					adding blocked set: C = C >> l, n, _
					> version: k/e/i/_/e/l
					TRYING: l
					adding blocked set: C = C >> l, n, _
					> version: k/e/ie/_/l
					> version: k/ei/e/_/l
					> version: k/ei/e/_/l
					> version: k/_/e/_/i/e/l
					TRYING: e
					> version: k/_/e/_/i/e/l
					TRYING: e
					> version: k/_/e/_/ie/l
					TRYING: l
					adding blocked set: C = C >> l, n, _
					> version: k/_/ei/_/e/l
					TRYING: l
					adding blocked set: C = C >> l, n, _
					> version: k/_/ei/_/e/l
					TRYING: l
					adding blocked set: C = C >> l, n, _
					RESULT:  ['_']
				adding dashed alternative: ['k', 'e', 'i', 'e', 'l', '_']
				adding dashed alternative: ['k', 'e', 'i', 'e', 'l', '_']
				adding dashed alternative: ['k', 'e', 'ie', 'l', '_']
				adding dashed alternative: ['k', 'ei', 'e', 'l', '_']
				adding dashed alternative: ['k', 'ei', 'e', 'l', '_']
				adding dashed alternative: ['k', '_', 'e', 'i', 'e', '_', 'l']
				adding dashed alternative: ['k', '_', 'e', 'i', 'e', '_', 'l']
				adding dashed alternative: ['k', '_', 'e', 'ie', 'l', '_']
				adding dashed alternative: ['k', '_', 'ei', 'e', 'l', '_']
				adding dashed alternative: ['k', '_', 'ei', 'e', 'l', '_']
				adding dashed alternative: ['k', 'e', 'i', '_', 'e', '_', 'l']
				adding dashed alternative: ['k', 'e', 'i', '_', 'e', '_', 'l']
				adding dashed alternative: ['k', 'e', 'ie', '_', 'l', '_']
				adding dashed alternative: ['k', 'ei', 'e', '_', 'l', '_']
				adding dashed alternative: ['k', 'ei', 'e', '_', 'l', '_']
				adding dashed alternative: ['k', '_', 'e', '_', 'i', '_', 'e', 'l']
				adding dashed alternative: ['k', '_', 'e', '_', 'i', '_', 'e', 'l']
				adding dashed alternative: ['k', '_', 'e', '_', 'ie', '_', 'l']
				adding dashed alternative: ['k', '_', 'ei', '_', 'e', '_', 'l']
				adding dashed alternative: ['k', '_', 'ei', '_', 'e', '_', 'l']
				k/e/i/e/l(CVCVC)
k/e/i/e/l(CVVVC)
k/e/ie/l(CVVC)
k/ei/e/l(CVVC)
k/ei/e/l(CVVC)
k/_/e/i/e/l(CAVAVC)
k/_/e/i/e/l(CAVAVC)
k/_/e/ie/l(CAVVC)
k/_/ei/e/l(CAVVC)
k/_/ei/e/l(CAVVC)
k/e/i/_/e/l(CVAAVC)
k/e/i/_/e/l(CVAAVC)
k/e/ie/_/l(CVVAC)
k/ei/e/_/l(CVVAC)
k/ei/e/_/l(CVVAC)
k/_/e/_/i/e/l(CAVAAVC)
k/_/e/_/i/e/l(CAVAAVC)
k/_/e/_/ie/l(CAVAVC)
k/_/ei/_/e/l(CAVAVC)
k/_/ei/_/e/l(CAVAVC)
k/e/i/e/l/_(CVAVCA)
k/e/i/e/l/_(CVAVCA)
k/e/ie/l/_(CVVCA)
k/ei/e/l/_(CVVCA)
k/ei/e/l/_(CVVCA)
k/_/e/i/e/_/l(CAVAVAC)
k/_/e/i/e/_/l(CAVAVAC)
k/_/e/ie/l/_(CAVVCA)
k/_/ei/e/l/_(CAVVCA)
k/_/ei/e/l/_(CAVVCA)
k/e/i/_/e/_/l(CVAAVAC)
k/e/i/_/e/_/l(CVAAVAC)
k/e/ie/_/l/_(CVVACA)
k/ei/e/_/l/_(CVVACA)
k/ei/e/_/l/_(CVVACA)
k/_/e/_/i/_/e/l(CAVAAAVC)
k/_/e/_/i/_/e/l(CAVAAAVC)
k/_/e/_/ie/_/l(CAVAVAC)
k/_/ei/_/e/_/l(CAVAVAC)
k/_/ei/_/e/_/l(CAVAVAC)
				version split: ['k', 'e', 'i', 'e', 'l']
				{'string': 'k/e/i/e/l', 'rgx': '((k))/((_))/((i)|(ie)|(ei)|(e))/((_))/((i)|(ie)|(e))/((_))$'}
				_____REMOVING________['k', 'e', 'i', 'e', 'l']
				version split: ['k', 'e', 'i', 'e', 'l']
				{'string': 'k/e/i/e/l', 'rgx': '((k))/((_))/((i)|(ie)|(ei)|(e))/((_))/((i)|(ie)|(e))/((_))$'}
				_____REMOVING________['k', 'e', 'i', 'e', 'l']
				version split: ['k', 'e', 'ie', 'l']
				{'string': 'k/e/ie/l', 'rgx': '((k))/((_))/((i)|(ie)|(ei)|(e))/((_))/((i)|(ie)|(e))/((_))$'}
				_____REMOVING________['k', 'e', 'ie', 'l']
				version split: ['k', 'ei', 'e', 'l']
				{'string': 'k/ei/e/l', 'rgx': '((k))/((_))/((i)|(ie)|(ei)|(e))/((_))/((i)|(ie)|(e))/((_))$'}
				_____REMOVING________['k', 'ei', 'e', 'l']
				version split: ['k', 'ei', 'e', 'l']
				{'string': 'k/ei/e/l', 'rgx': '((k))/((_))/((i)|(ie)|(ei)|(e))/((_))/((i)|(ie)|(e))/((_))$'}
				_____REMOVING________['k', 'ei', 'e', 'l']
				version split: ['k', '_', 'e', 'i', 'e', 'l']
				{'string': 'k/_/e/i/e/l', 'rgx': '((k))/((_))/((i)|(ie)|(ei)|(e))/((_))/((i)|(ie)|(e))/((_))$'}
				_____REMOVING________['k', '_', 'e', 'i', 'e', 'l']
				version split: ['k', '_', 'e', 'i', 'e', 'l']
				{'string': 'k/_/e/i/e/l', 'rgx': '((k))/((_))/((i)|(ie)|(ei)|(e))/((_))/((i)|(ie)|(e))/((_))$'}
				_____REMOVING________['k', '_', 'e', 'i', 'e', 'l']
				version split: ['k', '_', 'e', 'ie', 'l']
				{'string': 'k/_/e/ie/l', 'rgx': '((k))/((_))/((i)|(ie)|(ei)|(e))/((_))/((i)|(ie)|(e))/((_))$'}
				_____REMOVING________['k', '_', 'e', 'ie', 'l']
				version split: ['k', '_', 'ei', 'e', 'l']
				{'string': 'k/_/ei/e/l', 'rgx': '((k))/((_))/((i)|(ie)|(ei)|(e))/((_))/((i)|(ie)|(e))/((_))$'}
				_____REMOVING________['k', '_', 'ei', 'e', 'l']
				version split: ['k', '_', 'ei', 'e', 'l']
				{'string': 'k/_/ei/e/l', 'rgx': '((k))/((_))/((i)|(ie)|(ei)|(e))/((_))/((i)|(ie)|(e))/((_))$'}
				_____REMOVING________['k', '_', 'ei', 'e', 'l']
				version split: ['k', 'e', 'i', '_', 'e', 'l']
				{'string': 'k/e/i/_/e/l', 'rgx': '((k))/((_))/((i)|(ie)|(ei)|(e))/((_))/((i)|(ie)|(e))/((_))$'}
				_____REMOVING________['k', 'e', 'i', '_', 'e', 'l']
				version split: ['k', 'e', 'i', '_', 'e', 'l']
				{'string': 'k/e/i/_/e/l', 'rgx': '((k))/((_))/((i)|(ie)|(ei)|(e))/((_))/((i)|(ie)|(e))/((_))$'}
				_____REMOVING________['k', 'e', 'i', '_', 'e', 'l']
				version split: ['k', 'e', 'ie', '_', 'l']
				{'string': 'k/e/ie/_/l', 'rgx': '((k))/((_))/((i)|(ie)|(ei)|(e))/((_))/((i)|(ie)|(e))/((_))$'}
				_____REMOVING________['k', 'e', 'ie', '_', 'l']
				version split: ['k', 'ei', 'e', '_', 'l']
				{'string': 'k/ei/e/_/l', 'rgx': '((k))/((_))/((i)|(ie)|(ei)|(e))/((_))/((i)|(ie)|(e))/((_))$'}
				_____REMOVING________['k', 'ei', 'e', '_', 'l']
				version split: ['k', 'ei', 'e', '_', 'l']
				{'string': 'k/ei/e/_/l', 'rgx': '((k))/((_))/((i)|(ie)|(ei)|(e))/((_))/((i)|(ie)|(e))/((_))$'}
				_____REMOVING________['k', 'ei', 'e', '_', 'l']
				version split: ['k', '_', 'e', '_', 'i', 'e', 'l']
				{'string': 'k/_/e/_/i/e/l', 'rgx': '((k))/((_))/((i)|(ie)|(ei)|(e))/((_))/((i)|(ie)|(e))/((_))$'}
				_____REMOVING________['k', '_', 'e', '_', 'i', 'e', 'l']
				version split: ['k', '_', 'e', '_', 'i', 'e', 'l']
				{'string': 'k/_/e/_/i/e/l', 'rgx': '((k))/((_))/((i)|(ie)|(ei)|(e))/((_))/((i)|(ie)|(e))/((_))$'}
				_____REMOVING________['k', '_', 'e', '_', 'i', 'e', 'l']
				version split: ['k', '_', 'e', '_', 'ie', 'l']
				{'string': 'k/_/e/_/ie/l', 'rgx': '((k))/((_))/((i)|(ie)|(ei)|(e))/((_))/((i)|(ie)|(e))/((_))$'}
				_____REMOVING________['k', '_', 'e', '_', 'ie', 'l']
				version split: ['k', '_', 'ei', '_', 'e', 'l']
				{'string': 'k/_/ei/_/e/l', 'rgx': '((k))/((_))/((i)|(ie)|(ei)|(e))/((_))/((i)|(ie)|(e))/((_))$'}
				_____REMOVING________['k', '_', 'ei', '_', 'e', 'l']
				version split: ['k', '_', 'ei', '_', 'e', 'l']
				{'string': 'k/_/ei/_/e/l', 'rgx': '((k))/((_))/((i)|(ie)|(ei)|(e))/((_))/((i)|(ie)|(e))/((_))$'}
				_____REMOVING________['k', '_', 'ei', '_', 'e', 'l']
				version split: ['k', 'e', 'i', 'e', 'l', '_']
				{'string': 'k/e/i/e/l/_', 'rgx': '((k))/((_))/((i)|(ie)|(ei)|(e))/((_))/((i)|(ie)|(e))/((_))$'}
				_____REMOVING________['k', 'e', 'i', 'e', 'l', '_']
				version split: ['k', 'e', 'i', 'e', 'l', '_']
				{'string': 'k/e/i/e/l/_', 'rgx': '((k))/((_))/((i)|(ie)|(ei)|(e))/((_))/((i)|(ie)|(e))/((_))$'}
				_____REMOVING________['k', 'e', 'i', 'e', 'l', '_']
				version split: ['k', 'e', 'ie', 'l', '_']
				{'string': 'k/e/ie/l/_', 'rgx': '((k))/((_))/((i)|(ie)|(ei)|(e))/((_))/((i)|(ie)|(e))/((_))$'}
				_____REMOVING________['k', 'e', 'ie', 'l', '_']
				version split: ['k', 'ei', 'e', 'l', '_']
				{'string': 'k/ei/e/l/_', 'rgx': '((k))/((_))/((i)|(ie)|(ei)|(e))/((_))/((i)|(ie)|(e))/((_))$'}
				_____REMOVING________['k', 'ei', 'e', 'l', '_']
				version split: ['k', 'ei', 'e', 'l', '_']
				{'string': 'k/ei/e/l/_', 'rgx': '((k))/((_))/((i)|(ie)|(ei)|(e))/((_))/((i)|(ie)|(e))/((_))$'}
				_____REMOVING________['k', 'ei', 'e', 'l', '_']
				version split: ['k', '_', 'e', 'i', 'e', '_', 'l']
				{'string': 'k/_/e/i/e/_/l', 'rgx': '((k))/((_))/((i)|(ie)|(ei)|(e))/((_))/((i)|(ie)|(e))/((_))$'}
				_____REMOVING________['k', '_', 'e', 'i', 'e', '_', 'l']
				version split: ['k', '_', 'e', 'i', 'e', '_', 'l']
				{'string': 'k/_/e/i/e/_/l', 'rgx': '((k))/((_))/((i)|(ie)|(ei)|(e))/((_))/((i)|(ie)|(e))/((_))$'}
				_____REMOVING________['k', '_', 'e', 'i', 'e', '_', 'l']
				version split: ['k', '_', 'e', 'ie', 'l', '_']
				{'string': 'k/_/e/ie/l/_', 'rgx': '((k))/((_))/((i)|(ie)|(ei)|(e))/((_))/((i)|(ie)|(e))/((_))$'}
				_____REMOVING________['k', '_', 'e', 'ie', 'l', '_']
				version split: ['k', '_', 'ei', 'e', 'l', '_']
				{'string': 'k/_/ei/e/l/_', 'rgx': '((k))/((_))/((i)|(ie)|(ei)|(e))/((_))/((i)|(ie)|(e))/((_))$'}
				_____REMOVING________['k', '_', 'ei', 'e', 'l', '_']
				version split: ['k', '_', 'ei', 'e', 'l', '_']
				{'string': 'k/_/ei/e/l/_', 'rgx': '((k))/((_))/((i)|(ie)|(ei)|(e))/((_))/((i)|(ie)|(e))/((_))$'}
				_____REMOVING________['k', '_', 'ei', 'e', 'l', '_']
				version split: ['k', 'e', 'i', '_', 'e', '_', 'l']
				{'string': 'k/e/i/_/e/_/l', 'rgx': '((k))/((_))/((i)|(ie)|(ei)|(e))/((_))/((i)|(ie)|(e))/((_))$'}
				_____REMOVING________['k', 'e', 'i', '_', 'e', '_', 'l']
				version split: ['k', 'e', 'i', '_', 'e', '_', 'l']
				{'string': 'k/e/i/_/e/_/l', 'rgx': '((k))/((_))/((i)|(ie)|(ei)|(e))/((_))/((i)|(ie)|(e))/((_))$'}
				_____REMOVING________['k', 'e', 'i', '_', 'e', '_', 'l']
				version split: ['k', 'e', 'ie', '_', 'l', '_']
				{'string': 'k/e/ie/_/l/_', 'rgx': '((k))/((_))/((i)|(ie)|(ei)|(e))/((_))/((i)|(ie)|(e))/((_))$'}
				_____REMOVING________['k', 'e', 'ie', '_', 'l', '_']
				version split: ['k', 'ei', 'e', '_', 'l', '_']
				{'string': 'k/ei/e/_/l/_', 'rgx': '((k))/((_))/((i)|(ie)|(ei)|(e))/((_))/((i)|(ie)|(e))/((_))$'}
				_____REMOVING________['k', 'ei', 'e', '_', 'l', '_']
				version split: ['k', 'ei', 'e', '_', 'l', '_']
				{'string': 'k/ei/e/_/l/_', 'rgx': '((k))/((_))/((i)|(ie)|(ei)|(e))/((_))/((i)|(ie)|(e))/((_))$'}
				_____REMOVING________['k', 'ei', 'e', '_', 'l', '_']
				version split: ['k', '_', 'e', '_', 'i', '_', 'e', 'l']
				{'string': 'k/_/e/_/i/_/e', 'rgx': '((k))/((_))/((i)|(ie)|(ei)|(e))/((_))/((i)|(ie)|(e))/((_))$'}
				_____REMOVING________['k', '_', 'e', '_', 'i', '_', 'e', 'l']
				version split: ['k', '_', 'e', '_', 'i', '_', 'e', 'l']
				{'string': 'k/_/e/_/i/_/e', 'rgx': '((k))/((_))/((i)|(ie)|(ei)|(e))/((_))/((i)|(ie)|(e))/((_))$'}
				_____REMOVING________['k', '_', 'e', '_', 'i', '_', 'e', 'l']
				version split: ['k', '_', 'e', '_', 'ie', '_', 'l']
				{'string': 'k/_/e/_/ie/_/l', 'rgx': '((k))/((_))/((i)|(ie)|(ei)|(e))/((_))/((i)|(ie)|(e))/((_))$'}
				_____REMOVING________['k', '_', 'e', '_', 'ie', '_', 'l']
				version split: ['k', '_', 'ei', '_', 'e', '_', 'l']
				{'string': 'k/_/ei/_/e/_/l', 'rgx': '((k))/((_))/((i)|(ie)|(ei)|(e))/((_))/((i)|(ie)|(e))/((_))$'}
				_____REMOVING________['k', '_', 'ei', '_', 'e', '_', 'l']
				version split: ['k', '_', 'ei', '_', 'e', '_', 'l']
				{'string': 'k/_/ei/_/e/_/l', 'rgx': '((k))/((_))/((i)|(ie)|(ei)|(e))/((_))/((i)|(ie)|(e))/((_))$'}
				_____REMOVING________['k', '_', 'ei', '_', 'e', '_', 'l']
				ANALYSING: kenel
					resolving (4)
					> version: k/e/n/e/l
					> version: k/_/e/n/e/l
					TRYING: l
					adding blocked set: C = C >> l, n, _
					> version: k/e/n/_/e/l
					TRYING: l
					adding blocked set: C = C >> l, n, _
					> version: k/_/e/_/n/e/l
					TRYING: e
					RESULT:  ['_']
				adding dashed alternative: ['k', 'e', 'n', 'e', 'l', '_']
				adding dashed alternative: ['k', '_', 'e', 'n', 'e', '_', 'l']
				adding dashed alternative: ['k', 'e', 'n', '_', 'e', '_', 'l']
				adding dashed alternative: ['k', '_', 'e', '_', 'n', '_', 'e', 'l']
				k/e/n/e/l(CVCVC)
k/_/e/n/e/l(CAVCVC)
k/e/n/_/e/l(CVCAVC)
k/_/e/_/n/e/l(CAVACVC)
k/e/n/e/l/_(CVCVCA)
k/_/e/n/e/_/l(CAVCVAC)
k/e/n/_/e/_/l(CVCAVAC)
k/_/e/_/n/_/e/l(CAVACAVC)
				version split: ['k', 'e', 'n', 'e', 'l']
				{'string': 'k/e/n/e/l', 'rgx': '((k))/((_))/((e))/((_))/((e))/((_))$'}
				_____REMOVING________['k', 'e', 'n', 'e', 'l']
				version split: ['k', '_', 'e', 'n', 'e', 'l']
				{'string': 'k/_/e/n/e/l', 'rgx': '((k))/((_))/((e))/((_))/((e))/((_))$'}
				_____REMOVING________['k', '_', 'e', 'n', 'e', 'l']
				version split: ['k', 'e', 'n', '_', 'e', 'l']
				{'string': 'k/e/n/_/e/l', 'rgx': '((k))/((_))/((e))/((_))/((e))/((_))$'}
				_____REMOVING________['k', 'e', 'n', '_', 'e', 'l']
				version split: ['k', '_', 'e', '_', 'n', 'e', 'l']
				{'string': 'k/_/e/_/n/e/l', 'rgx': '((k))/((_))/((e))/((_))/((e))/((_))$'}
				_____REMOVING________['k', '_', 'e', '_', 'n', 'e', 'l']
				version split: ['k', 'e', 'n', 'e', 'l', '_']
				{'string': 'k/e/n/e/l/_', 'rgx': '((k))/((_))/((e))/((_))/((e))/((_))$'}
				_____REMOVING________['k', 'e', 'n', 'e', 'l', '_']
				version split: ['k', '_', 'e', 'n', 'e', '_', 'l']
				{'string': 'k/_/e/n/e/_/l', 'rgx': '((k))/((_))/((e))/((_))/((e))/((_))$'}
				_____REMOVING________['k', '_', 'e', 'n', 'e', '_', 'l']
				version split: ['k', 'e', 'n', '_', 'e', '_', 'l']
				{'string': 'k/e/n/_/e/_/l', 'rgx': '((k))/((_))/((e))/((_))/((e))/((_))$'}
				_____REMOVING________['k', 'e', 'n', '_', 'e', '_', 'l']
				version split: ['k', '_', 'e', '_', 'n', '_', 'e', 'l']
				{'string': 'k/_/e/_/n/_/e', 'rgx': '((k))/((_))/((e))/((_))/((e))/((_))$'}
				_____REMOVING________['k', '_', 'e', '_', 'n', '_', 'e', 'l']
				ANALYSING: knel
					resolving (4)
					> version: k/n/e/l
					> version: k/n/e/_/l
					> version: k/n/e/l/_
					> version: k/n/e/_/_/l
					TRYING: l
					adding blocked set: C = C >> l, n, _
					RESULT:  ['_']
				adding dashed alternative: ['k', 'n', 'e', 'l', '_']
				adding dashed alternative: ['k', 'n', 'e', '_', 'l', '_']
				adding dashed alternative: ['k', 'n', 'e', 'l', '_', '_']
				adding dashed alternative: ['k', 'n', 'e', '_', '_', '_', 'l']
				k/n/e/l(CCVC)
k/n/e/_/l(CCVAC)
k/n/e/l/_(CCVCA)
k/n/e/_/_/l(CCVAAC)
k/n/e/l/_(CCVCA)
k/n/e/_/l/_(CCVACA)
k/n/e/l/_/_(CCVCAA)
k/n/e/_/_/_/l(CCVAAAC)
				version split: ['k', 'n', 'e', 'l']
				{'string': 'k/n/e/l', 'rgx': '((k))/((n))/((e))/((_))/((_))/((_))$'}
				_____REMOVING________['k', 'n', 'e', 'l']
				version split: ['k', 'n', 'e', '_', 'l']
				{'string': 'k/n/e/_/l', 'rgx': '((k))/((n))/((e))/((_))/((_))/((_))$'}
				_____REMOVING________['k', 'n', 'e', '_', 'l']
				version split: ['k', 'n', 'e', 'l', '_']
				{'string': 'k/n/e/l/_', 'rgx': '((k))/((n))/((e))/((_))/((_))/((_))$'}
				_____REMOVING________['k', 'n', 'e', 'l', '_']
				version split: ['k', 'n', 'e', '_', '_', 'l']
				{'string': 'k/n/e/_/_/l', 'rgx': '((k))/((n))/((e))/((_))/((_))/((_))$'}
				_____REMOVING________['k', 'n', 'e', '_', '_', 'l']
				version split: ['k', 'n', 'e', 'l', '_']
				{'string': 'k/n/e/l/_', 'rgx': '((k))/((n))/((e))/((_))/((_))/((_))$'}
				_____REMOVING________['k', 'n', 'e', 'l', '_']
				version split: ['k', 'n', 'e', '_', 'l', '_']
				{'string': 'k/n/e/_/l/_', 'rgx': '((k))/((n))/((e))/((_))/((_))/((_))$'}
				_____REMOVING________['k', 'n', 'e', '_', 'l', '_']
				version split: ['k', 'n', 'e', 'l', '_', '_']
				{'string': 'k/n/e/l/_/_', 'rgx': '((k))/((n))/((e))/((_))/((_))/((_))$'}
				_____REMOVING________['k', 'n', 'e', 'l', '_', '_']
				version split: ['k', 'n', 'e', '_', '_', '_', 'l']
				{'string': 'k/n/e/_/_/_/l', 'rgx': '((k))/((n))/((e))/((_))/((_))/((_))$'}
				_____REMOVING________['k', 'n', 'e', '_', '_', '_', 'l']
				ANALYSING: kneo
					resolving (4)
					> version: k/n/e/o
					> version: k/n/eo
					> version: k/n/e/_/o
					> version: k/n/eo/_
					RESULT:  ['_']
				adding dashed alternative: ['k', 'n', 'e', 'o', '_']
				adding dashed alternative: ['k', 'n', 'eo', '_']
				adding dashed alternative: ['k', 'n', 'e', '_', 'o', '_']
				adding dashed alternative: ['k', 'n', 'eo', '_', '_']
				k/n/e/o(CCVV)
k/n/eo(CCV)
k/n/e/_/o(CCVAV)
k/n/eo/_(CCVA)
k/n/e/o/_(CCVVA)
k/n/eo/_(CCVA)
k/n/e/_/o/_(CCVAVA)
k/n/eo/_/_(CCVAA)
				version split: ['k', 'n', 'e', 'o']
				{'string': 'k/n/e/o', 'rgx': '((k))/((n))/((eo)|(e))/((_))/((o))/((_))$'}
				_____REMOVING________['k', 'n', 'e', 'o']
				version split: ['k', 'n', 'eo']
				{'string': 'k/n/eo', 'rgx': '((k))/((n))/((eo)|(e))/((_))/((o))/((_))$'}
				_____REMOVING________['k', 'n', 'eo']
				version split: ['k', 'n', 'e', '_', 'o']
				{'string': 'k/n/e/_/o', 'rgx': '((k))/((n))/((eo)|(e))/((_))/((o))/((_))$'}
				_____REMOVING________['k', 'n', 'e', '_', 'o']
				version split: ['k', 'n', 'eo', '_']
				{'string': 'k/n/eo/_', 'rgx': '((k))/((n))/((eo)|(e))/((_))/((o))/((_))$'}
				_____REMOVING________['k', 'n', 'eo', '_']
				version split: ['k', 'n', 'e', 'o', '_']
				{'string': 'k/n/e/o/_', 'rgx': '((k))/((n))/((eo)|(e))/((_))/((o))/((_))$'}
				_____REMOVING________['k', 'n', 'e', 'o', '_']
				version split: ['k', 'n', 'eo', '_']
				{'string': 'k/n/eo/_', 'rgx': '((k))/((n))/((eo)|(e))/((_))/((o))/((_))$'}
				_____REMOVING________['k', 'n', 'eo', '_']
				version split: ['k', 'n', 'e', '_', 'o', '_']
				{'string': 'k/n/e/_/o/_', 'rgx': '((k))/((n))/((eo)|(e))/((_))/((o))/((_))$'}
				version split: ['k', 'n', 'eo', '_', '_']
				{'string': 'k/n/eo/_/_', 'rgx': '((k))/((n))/((eo)|(e))/((_))/((o))/((_))$'}
				_____REMOVING________['k', 'n', 'eo', '_', '_']
				ANALYSING: kneol
					resolving (4)
					> version: k/n/e/o/l
					> version: k/n/eo/l
					> version: k/n/e/_/o/l
					TRYING: l
					adding blocked set: C = C >> l, n, _
					> version: k/n/eo/_/l
					RESULT:  ['_']
				adding dashed alternative: ['k', 'n', 'e', 'o', 'l', '_']
				adding dashed alternative: ['k', 'n', 'eo', 'l', '_']
				adding dashed alternative: ['k', 'n', 'e', '_', 'o', '_', 'l']
				adding dashed alternative: ['k', 'n', 'eo', '_', 'l', '_']
				k/n/e/o/l(CCVVC)
k/n/eo/l(CCVC)
k/n/e/_/o/l(CCVAVC)
k/n/eo/_/l(CCVAC)
k/n/e/o/l/_(CCVVCA)
k/n/eo/l/_(CCVCA)
k/n/e/_/o/_/l(CCVAVAC)
k/n/eo/_/l/_(CCVACA)
				version split: ['k', 'n', 'e', 'o', 'l']
				{'string': 'k/n/e/o/l', 'rgx': '((k))/((n))/((eo)|(e))/((_))/((o))/((_))$'}
				_____REMOVING________['k', 'n', 'e', 'o', 'l']
				version split: ['k', 'n', 'eo', 'l']
				{'string': 'k/n/eo/l', 'rgx': '((k))/((n))/((eo)|(e))/((_))/((o))/((_))$'}
				_____REMOVING________['k', 'n', 'eo', 'l']
				version split: ['k', 'n', 'e', '_', 'o', 'l']
				{'string': 'k/n/e/_/o/l', 'rgx': '((k))/((n))/((eo)|(e))/((_))/((o))/((_))$'}
				_____REMOVING________['k', 'n', 'e', '_', 'o', 'l']
				version split: ['k', 'n', 'eo', '_', 'l']
				{'string': 'k/n/eo/_/l', 'rgx': '((k))/((n))/((eo)|(e))/((_))/((o))/((_))$'}
				_____REMOVING________['k', 'n', 'eo', '_', 'l']
				version split: ['k', 'n', 'e', 'o', 'l', '_']
				{'string': 'k/n/e/o/l/_', 'rgx': '((k))/((n))/((eo)|(e))/((_))/((o))/((_))$'}
				_____REMOVING________['k', 'n', 'e', 'o', 'l', '_']
				version split: ['k', 'n', 'eo', 'l', '_']
				{'string': 'k/n/eo/l/_', 'rgx': '((k))/((n))/((eo)|(e))/((_))/((o))/((_))$'}
				_____REMOVING________['k', 'n', 'eo', 'l', '_']
				version split: ['k', 'n', 'e', '_', 'o', '_', 'l']
				{'string': 'k/n/e/_/o/_/l', 'rgx': '((k))/((n))/((eo)|(e))/((_))/((o))/((_))$'}
				_____REMOVING________['k', 'n', 'e', '_', 'o', '_', 'l']
				version split: ['k', 'n', 'eo', '_', 'l', '_']
				{'string': 'k/n/eo/_/l/_', 'rgx': '((k))/((n))/((eo)|(e))/((_))/((o))/((_))$'}
				_____REMOVING________['k', 'n', 'eo', '_', 'l', '_']
				ANALYSING: kneoli
					resolving (8)
					> version: k/n/e/o/l/i
					TRYING: i
					adding blocked set: C = C >> i, l, n, _
					> version: k/n/e/o/l/i
					TRYING: i
					adding blocked set: C = C >> i, l, n, _
					> version: k/n/eo/l/i
					> version: k/n/eo/l/i
					> version: k/n/e/_/o/l/i
					TRYING: l
					adding blocked set: C = C >> l, n, _
					> version: k/n/e/_/o/l/i
					TRYING: l
					adding blocked set: C = C >> l, n, _
					> version: k/n/eo/_/l/i
					TRYING: i
					adding blocked set: C = C >> i, l, n, _
					> version: k/n/eo/_/l/i
					TRYING: i
					adding blocked set: C = C >> i, l, n, _
					RESULT:  ['_']
				adding dashed alternative: ['k', 'n', 'e', 'o', 'l', '_', 'i']
				adding dashed alternative: ['k', 'n', 'e', 'o', 'l', '_', 'i']
				adding dashed alternative: ['k', 'n', 'eo', 'l', 'i', '_']
				adding dashed alternative: ['k', 'n', 'eo', 'l', 'i', '_']
				adding dashed alternative: ['k', 'n', 'e', '_', 'o', '_', 'l', 'i']
				adding dashed alternative: ['k', 'n', 'e', '_', 'o', '_', 'l', 'i']
				adding dashed alternative: ['k', 'n', 'eo', '_', 'l', '_', 'i']
				adding dashed alternative: ['k', 'n', 'eo', '_', 'l', '_', 'i']
				k/n/e/o/l/i(CCVVCC)
k/n/e/o/l/i(CCVVCV)
k/n/eo/l/i(CCVCC)
k/n/eo/l/i(CCVCV)
k/n/e/_/o/l/i(CCVAVCA)
k/n/e/_/o/l/i(CCVAVCA)
k/n/eo/_/l/i(CCVACA)
k/n/eo/_/l/i(CCVACA)
k/n/e/o/l/_/i(CCVVCAA)
k/n/e/o/l/_/i(CCVVCAA)
k/n/eo/l/i/_(CCVCAA)
k/n/eo/l/i/_(CCVCAA)
k/n/e/_/o/_/l/i(CCVAVACA)
k/n/e/_/o/_/l/i(CCVAVACA)
k/n/eo/_/l/_/i(CCVACAA)
k/n/eo/_/l/_/i(CCVACAA)
				version split: ['k', 'n', 'e', 'o', 'l', 'i']
				{'string': 'k/n/e/o/l/i', 'rgx': '((k))/((n))/((eo)|(e))/((_))/((i)|(o))/((_))$'}
				_____REMOVING________['k', 'n', 'e', 'o', 'l', 'i']
				version split: ['k', 'n', 'e', 'o', 'l', 'i']
				{'string': 'k/n/e/o/l/i', 'rgx': '((k))/((n))/((eo)|(e))/((_))/((i)|(o))/((_))$'}
				_____REMOVING________['k', 'n', 'e', 'o', 'l', 'i']
				version split: ['k', 'n', 'eo', 'l', 'i']
				{'string': 'k/n/eo/l/i', 'rgx': '((k))/((n))/((eo)|(e))/((_))/((i)|(o))/((_))$'}
				_____REMOVING________['k', 'n', 'eo', 'l', 'i']
				version split: ['k', 'n', 'eo', 'l', 'i']
				{'string': 'k/n/eo/l/i', 'rgx': '((k))/((n))/((eo)|(e))/((_))/((i)|(o))/((_))$'}
				_____REMOVING________['k', 'n', 'eo', 'l', 'i']
				version split: ['k', 'n', 'e', '_', 'o', 'l', 'i']
				{'string': 'k/n/e/_/o/l/i', 'rgx': '((k))/((n))/((eo)|(e))/((_))/((i)|(o))/((_))$'}
				_____REMOVING________['k', 'n', 'e', '_', 'o', 'l', 'i']
				version split: ['k', 'n', 'e', '_', 'o', 'l', 'i']
				{'string': 'k/n/e/_/o/l/i', 'rgx': '((k))/((n))/((eo)|(e))/((_))/((i)|(o))/((_))$'}
				_____REMOVING________['k', 'n', 'e', '_', 'o', 'l', 'i']
				version split: ['k', 'n', 'eo', '_', 'l', 'i']
				{'string': 'k/n/eo/_/l/i', 'rgx': '((k))/((n))/((eo)|(e))/((_))/((i)|(o))/((_))$'}
				_____REMOVING________['k', 'n', 'eo', '_', 'l', 'i']
				version split: ['k', 'n', 'eo', '_', 'l', 'i']
				{'string': 'k/n/eo/_/l/i', 'rgx': '((k))/((n))/((eo)|(e))/((_))/((i)|(o))/((_))$'}
				_____REMOVING________['k', 'n', 'eo', '_', 'l', 'i']
				version split: ['k', 'n', 'e', 'o', 'l', '_', 'i']
				{'string': 'k/n/e/o/l/_/i', 'rgx': '((k))/((n))/((eo)|(e))/((_))/((i)|(o))/((_))$'}
				_____REMOVING________['k', 'n', 'e', 'o', 'l', '_', 'i']
				version split: ['k', 'n', 'e', 'o', 'l', '_', 'i']
				{'string': 'k/n/e/o/l/_/i', 'rgx': '((k))/((n))/((eo)|(e))/((_))/((i)|(o))/((_))$'}
				_____REMOVING________['k', 'n', 'e', 'o', 'l', '_', 'i']
				version split: ['k', 'n', 'eo', 'l', 'i', '_']
				{'string': 'k/n/eo/l/i/_', 'rgx': '((k))/((n))/((eo)|(e))/((_))/((i)|(o))/((_))$'}
				_____REMOVING________['k', 'n', 'eo', 'l', 'i', '_']
				version split: ['k', 'n', 'eo', 'l', 'i', '_']
				{'string': 'k/n/eo/l/i/_', 'rgx': '((k))/((n))/((eo)|(e))/((_))/((i)|(o))/((_))$'}
				_____REMOVING________['k', 'n', 'eo', 'l', 'i', '_']
				version split: ['k', 'n', 'e', '_', 'o', '_', 'l', 'i']
				{'string': 'k/n/e/_/o/_/l', 'rgx': '((k))/((n))/((eo)|(e))/((_))/((i)|(o))/((_))$'}
				_____REMOVING________['k', 'n', 'e', '_', 'o', '_', 'l', 'i']
				version split: ['k', 'n', 'e', '_', 'o', '_', 'l', 'i']
				{'string': 'k/n/e/_/o/_/l', 'rgx': '((k))/((n))/((eo)|(e))/((_))/((i)|(o))/((_))$'}
				_____REMOVING________['k', 'n', 'e', '_', 'o', '_', 'l', 'i']
				version split: ['k', 'n', 'eo', '_', 'l', '_', 'i']
				{'string': 'k/n/eo/_/l/_/i', 'rgx': '((k))/((n))/((eo)|(e))/((_))/((i)|(o))/((_))$'}
				_____REMOVING________['k', 'n', 'eo', '_', 'l', '_', 'i']
				version split: ['k', 'n', 'eo', '_', 'l', '_', 'i']
				{'string': 'k/n/eo/_/l/_/i', 'rgx': '((k))/((n))/((eo)|(e))/((_))/((i)|(o))/((_))$'}
				_____REMOVING________['k', 'n', 'eo', '_', 'l', '_', 'i']
				ANALYSING: kneoly
					resolving (8)
					> version: k/n/e/o/l/y
					TRYING: y
					adding blocked set: C = C >> y, l, n, _
					> version: k/n/e/o/l/y
					TRYING: y
					adding blocked set: C = C >> y, l, n, _
					> version: k/n/eo/l/y
					> version: k/n/eo/l/y
					> version: k/n/e/_/o/l/y
					TRYING: l
					adding blocked set: C = C >> l, n, _
					> version: k/n/e/_/o/l/y
					TRYING: l
					adding blocked set: C = C >> l, n, _
					> version: k/n/eo/_/l/y
					TRYING: y
					adding blocked set: C = C >> y, l, n, _
					> version: k/n/eo/_/l/y
					TRYING: y
					adding blocked set: C = C >> y, l, n, _
					RESULT:  ['_']
				adding dashed alternative: ['k', 'n', 'e', 'o', 'l', '_', 'y']
				adding dashed alternative: ['k', 'n', 'e', 'o', 'l', '_', 'y']
				adding dashed alternative: ['k', 'n', 'eo', 'l', 'y', '_']
				adding dashed alternative: ['k', 'n', 'eo', 'l', 'y', '_']
				adding dashed alternative: ['k', 'n', 'e', '_', 'o', '_', 'l', 'y']
				adding dashed alternative: ['k', 'n', 'e', '_', 'o', '_', 'l', 'y']
				adding dashed alternative: ['k', 'n', 'eo', '_', 'l', '_', 'y']
				adding dashed alternative: ['k', 'n', 'eo', '_', 'l', '_', 'y']
				k/n/e/o/l/y(CCVVCC)
k/n/e/o/l/y(CCVVCV)
k/n/eo/l/y(CCVCC)
k/n/eo/l/y(CCVCV)
k/n/e/_/o/l/y(CCVAVCA)
k/n/e/_/o/l/y(CCVAVCA)
k/n/eo/_/l/y(CCVACA)
k/n/eo/_/l/y(CCVACA)
k/n/e/o/l/_/y(CCVVCAA)
k/n/e/o/l/_/y(CCVVCAA)
k/n/eo/l/y/_(CCVCAA)
k/n/eo/l/y/_(CCVCAA)
k/n/e/_/o/_/l/y(CCVAVACA)
k/n/e/_/o/_/l/y(CCVAVACA)
k/n/eo/_/l/_/y(CCVACAA)
k/n/eo/_/l/_/y(CCVACAA)
				version split: ['k', 'n', 'e', 'o', 'l', 'y']
				{'string': 'k/n/e/o/l/y', 'rgx': '((k))/((n))/((eo)|(e))/((_))/((o)|(y))/((_))$'}
				_____REMOVING________['k', 'n', 'e', 'o', 'l', 'y']
				version split: ['k', 'n', 'e', 'o', 'l', 'y']
				{'string': 'k/n/e/o/l/y', 'rgx': '((k))/((n))/((eo)|(e))/((_))/((o)|(y))/((_))$'}
				_____REMOVING________['k', 'n', 'e', 'o', 'l', 'y']
				version split: ['k', 'n', 'eo', 'l', 'y']
				{'string': 'k/n/eo/l/y', 'rgx': '((k))/((n))/((eo)|(e))/((_))/((o)|(y))/((_))$'}
				_____REMOVING________['k', 'n', 'eo', 'l', 'y']
				version split: ['k', 'n', 'eo', 'l', 'y']
				{'string': 'k/n/eo/l/y', 'rgx': '((k))/((n))/((eo)|(e))/((_))/((o)|(y))/((_))$'}
				_____REMOVING________['k', 'n', 'eo', 'l', 'y']
				version split: ['k', 'n', 'e', '_', 'o', 'l', 'y']
				{'string': 'k/n/e/_/o/l/y', 'rgx': '((k))/((n))/((eo)|(e))/((_))/((o)|(y))/((_))$'}
				_____REMOVING________['k', 'n', 'e', '_', 'o', 'l', 'y']
				version split: ['k', 'n', 'e', '_', 'o', 'l', 'y']
				{'string': 'k/n/e/_/o/l/y', 'rgx': '((k))/((n))/((eo)|(e))/((_))/((o)|(y))/((_))$'}
				_____REMOVING________['k', 'n', 'e', '_', 'o', 'l', 'y']
				version split: ['k', 'n', 'eo', '_', 'l', 'y']
				{'string': 'k/n/eo/_/l/y', 'rgx': '((k))/((n))/((eo)|(e))/((_))/((o)|(y))/((_))$'}
				_____REMOVING________['k', 'n', 'eo', '_', 'l', 'y']
				version split: ['k', 'n', 'eo', '_', 'l', 'y']
				{'string': 'k/n/eo/_/l/y', 'rgx': '((k))/((n))/((eo)|(e))/((_))/((o)|(y))/((_))$'}
				_____REMOVING________['k', 'n', 'eo', '_', 'l', 'y']
				version split: ['k', 'n', 'e', 'o', 'l', '_', 'y']
				{'string': 'k/n/e/o/l/_/y', 'rgx': '((k))/((n))/((eo)|(e))/((_))/((o)|(y))/((_))$'}
				_____REMOVING________['k', 'n', 'e', 'o', 'l', '_', 'y']
				version split: ['k', 'n', 'e', 'o', 'l', '_', 'y']
				{'string': 'k/n/e/o/l/_/y', 'rgx': '((k))/((n))/((eo)|(e))/((_))/((o)|(y))/((_))$'}
				_____REMOVING________['k', 'n', 'e', 'o', 'l', '_', 'y']
				version split: ['k', 'n', 'eo', 'l', 'y', '_']
				{'string': 'k/n/eo/l/y/_', 'rgx': '((k))/((n))/((eo)|(e))/((_))/((o)|(y))/((_))$'}
				_____REMOVING________['k', 'n', 'eo', 'l', 'y', '_']
				version split: ['k', 'n', 'eo', 'l', 'y', '_']
				{'string': 'k/n/eo/l/y/_', 'rgx': '((k))/((n))/((eo)|(e))/((_))/((o)|(y))/((_))$'}
				_____REMOVING________['k', 'n', 'eo', 'l', 'y', '_']
				version split: ['k', 'n', 'e', '_', 'o', '_', 'l', 'y']
				{'string': 'k/n/e/_/o/_/l', 'rgx': '((k))/((n))/((eo)|(e))/((_))/((o)|(y))/((_))$'}
				_____REMOVING________['k', 'n', 'e', '_', 'o', '_', 'l', 'y']
				version split: ['k', 'n', 'e', '_', 'o', '_', 'l', 'y']
				{'string': 'k/n/e/_/o/_/l', 'rgx': '((k))/((n))/((eo)|(e))/((_))/((o)|(y))/((_))$'}
				_____REMOVING________['k', 'n', 'e', '_', 'o', '_', 'l', 'y']
				version split: ['k', 'n', 'eo', '_', 'l', '_', 'y']
				{'string': 'k/n/eo/_/l/_/y', 'rgx': '((k))/((n))/((eo)|(e))/((_))/((o)|(y))/((_))$'}
				_____REMOVING________['k', 'n', 'eo', '_', 'l', '_', 'y']
				version split: ['k', 'n', 'eo', '_', 'l', '_', 'y']
				{'string': 'k/n/eo/_/l/_/y', 'rgx': '((k))/((n))/((eo)|(e))/((_))/((o)|(y))/((_))$'}
				_____REMOVING________['k', 'n', 'eo', '_', 'l', '_', 'y']
				ANALYSING: kneƿ
					resolving (8)
					> version: k/n/e/ƿ
					> version: k/n/eƿ
					> version: k/n/e/_/ƿ
					> version: k/n/eƿ/_
					> version: k/n/e/ƿ/_
					> version: k/n/eƿ/_
					> version: k/n/e/_/_/ƿ
					TRYING: ƿ
					adding blocked set: C = C >> ƿ, l, n, _
					> version: k/n/eƿ/_/_
					RESULT:  ['_']
				adding dashed alternative: ['k', 'n', 'e', 'ƿ', '_']
				adding dashed alternative: ['k', 'n', 'eƿ', '_']
				adding dashed alternative: ['k', 'n', 'e', '_', 'ƿ', '_']
				adding dashed alternative: ['k', 'n', 'eƿ', '_', '_']
				adding dashed alternative: ['k', 'n', 'e', 'ƿ', '_', '_']
				adding dashed alternative: ['k', 'n', 'eƿ', '_', '_']
				adding dashed alternative: ['k', 'n', 'e', '_', '_', '_', 'ƿ']
				adding dashed alternative: ['k', 'n', 'eƿ', '_', '_', '_']
				k/n/e/ƿ(CCVC)
k/n/eƿ(CCV)
k/n/e/_/ƿ(CCVAC)
k/n/eƿ/_(CCVA)
k/n/e/ƿ/_(CCVCA)
k/n/eƿ/_(CCVA)
k/n/e/_/_/ƿ(CCVAAC)
k/n/eƿ/_/_(CCVAA)
k/n/e/ƿ/_(CCVCA)
k/n/eƿ/_(CCVA)
k/n/e/_/ƿ/_(CCVACA)
k/n/eƿ/_/_(CCVAA)
k/n/e/ƿ/_/_(CCVCAA)
k/n/eƿ/_/_(CCVAA)
k/n/e/_/_/_/ƿ(CCVAAAC)
k/n/eƿ/_/_/_(CCVAAA)
				version split: ['k', 'n', 'e', 'ƿ']
				{'string': 'k/n/e/ƿ', 'rgx': '((k))/((n))/((eƿ)|(e))/((_))/((_))/((_))$'}
				_____REMOVING________['k', 'n', 'e', 'ƿ']
				version split: ['k', 'n', 'eƿ']
				{'string': 'k/n/eƿ', 'rgx': '((k))/((n))/((eƿ)|(e))/((_))/((_))/((_))$'}
				_____REMOVING________['k', 'n', 'eƿ']
				version split: ['k', 'n', 'e', '_', 'ƿ']
				{'string': 'k/n/e/_/ƿ', 'rgx': '((k))/((n))/((eƿ)|(e))/((_))/((_))/((_))$'}
				_____REMOVING________['k', 'n', 'e', '_', 'ƿ']
				version split: ['k', 'n', 'eƿ', '_']
				{'string': 'k/n/eƿ/_', 'rgx': '((k))/((n))/((eƿ)|(e))/((_))/((_))/((_))$'}
				_____REMOVING________['k', 'n', 'eƿ', '_']
				version split: ['k', 'n', 'e', 'ƿ', '_']
				{'string': 'k/n/e/ƿ/_', 'rgx': '((k))/((n))/((eƿ)|(e))/((_))/((_))/((_))$'}
				_____REMOVING________['k', 'n', 'e', 'ƿ', '_']
				version split: ['k', 'n', 'eƿ', '_']
				{'string': 'k/n/eƿ/_', 'rgx': '((k))/((n))/((eƿ)|(e))/((_))/((_))/((_))$'}
				_____REMOVING________['k', 'n', 'eƿ', '_']
				version split: ['k', 'n', 'e', '_', '_', 'ƿ']
				{'string': 'k/n/e/_/_/ƿ', 'rgx': '((k))/((n))/((eƿ)|(e))/((_))/((_))/((_))$'}
				_____REMOVING________['k', 'n', 'e', '_', '_', 'ƿ']
				version split: ['k', 'n', 'eƿ', '_', '_']
				{'string': 'k/n/eƿ/_/_', 'rgx': '((k))/((n))/((eƿ)|(e))/((_))/((_))/((_))$'}
				_____REMOVING________['k', 'n', 'eƿ', '_', '_']
				version split: ['k', 'n', 'e', 'ƿ', '_']
				{'string': 'k/n/e/ƿ/_', 'rgx': '((k))/((n))/((eƿ)|(e))/((_))/((_))/((_))$'}
				_____REMOVING________['k', 'n', 'e', 'ƿ', '_']
				version split: ['k', 'n', 'eƿ', '_']
				{'string': 'k/n/eƿ/_', 'rgx': '((k))/((n))/((eƿ)|(e))/((_))/((_))/((_))$'}
				_____REMOVING________['k', 'n', 'eƿ', '_']
				version split: ['k', 'n', 'e', '_', 'ƿ', '_']
				{'string': 'k/n/e/_/ƿ/_', 'rgx': '((k))/((n))/((eƿ)|(e))/((_))/((_))/((_))$'}
				_____REMOVING________['k', 'n', 'e', '_', 'ƿ', '_']
				version split: ['k', 'n', 'eƿ', '_', '_']
				{'string': 'k/n/eƿ/_/_', 'rgx': '((k))/((n))/((eƿ)|(e))/((_))/((_))/((_))$'}
				_____REMOVING________['k', 'n', 'eƿ', '_', '_']
				version split: ['k', 'n', 'e', 'ƿ', '_', '_']
				{'string': 'k/n/e/ƿ/_/_', 'rgx': '((k))/((n))/((eƿ)|(e))/((_))/((_))/((_))$'}
				_____REMOVING________['k', 'n', 'e', 'ƿ', '_', '_']
				version split: ['k', 'n', 'eƿ', '_', '_']
				{'string': 'k/n/eƿ/_/_', 'rgx': '((k))/((n))/((eƿ)|(e))/((_))/((_))/((_))$'}
				_____REMOVING________['k', 'n', 'eƿ', '_', '_']
				version split: ['k', 'n', 'e', '_', '_', '_', 'ƿ']
				{'string': 'k/n/e/_/_/_/ƿ', 'rgx': '((k))/((n))/((eƿ)|(e))/((_))/((_))/((_))$'}
				_____REMOVING________['k', 'n', 'e', '_', '_', '_', 'ƿ']
				version split: ['k', 'n', 'eƿ', '_', '_', '_']
				{'string': 'k/n/eƿ/_/_/_', 'rgx': '((k))/((n))/((eƿ)|(e))/((_))/((_))/((_))$'}
		only one version left: ['c', 'n', 'e', '_', '_', '_']
		FAIL: 
		only one version left: ['c', 'n', 'e', '_', 'o', '_']
		FAIL: 
		FAIL: 
		FAIL: 
		FAIL: 
		FAIL: 
		FAIL: 
		FAIL: 
		FAIL: 
		FAIL: 
		only one version left: ['k', 'n', 'e', '_', 'o', '_']
		FAIL: 
		FAIL: 
		FAIL: 
		only one version left: ['k', 'n', 'eƿ', '_', '_', '_']
		SPLIT: ['c', 'n', 'eo', 'l', 'i', 'n']
		SPLIT: ['k', 'n', 'e', 'w', 'e', 'l']
		SPLIT: ['c', 'n', 'e', '_', '_', '_']
		['c', 'n', 'e', '_', '_', '_']
		SPLIT: ['c', 'n', 'e', '_', '_', '_', '----!']
		SPLIT: ['c', 'n', 'e', '_', 'o', '_']
		['c', 'n', 'e', '_', 'o', '_']
		SPLIT: ['c', 'n', 'eo.e', '_', 'o', '_', '----!']
		SPLIT: ['c', 'n', 'eo.e', '_', 'i.o', '_', '----!']
		SPLIT: ['c', 'n', 'eu.e', '_', 'u', '_', '----!']
		SPLIT: ['c', 'n', 'eƿ.e', '_', '_', '_', '----!']
		SPLIT: ['c', 'n', 'o.ou', '_', 'u', '_', '----!']
		SPLIT: ['c', 'n', 'y', '_', 'e', '_', '----!']
		SPLIT: ['k', '_', 'i.ie.ei.e', '_', 'i.ie.e', '_', '----!']
		SPLIT: ['k', '_', 'e', '_', 'e', '_', '----!']
		SPLIT: ['k', 'n', 'e', '_', '_', '_', '----!']
		SPLIT: ['k', 'n', 'e', '_', 'o', '_']
		['k', 'n', 'e', '_', 'o', '_']
		SPLIT: ['k', 'n', 'eo.e', '_', 'o', '_', '----!']
		SPLIT: ['k', 'n', 'eo.e', '_', 'i.o', '_', '----!']
		SPLIT: ['k', 'n', 'eo.e', '_', 'o.y', '_', '----!']
		SPLIT: ['k', 'n', 'eƿ', '_', '_', '_']
		['k', 'n', 'eƿ', '_', '_', '_']
		version for pattern CCVCVC is INVALID
		[{'ie', 'eo', 'i', 'o', 'ou', 'y', 'eƿ', 'ei', 'eu', 'e'}, {'l', 'w', '_'}, {'ie', 'u', 'i', 'o', '_', 'y', 'e'}, {'l', 'n', '_'}]
		13
		POSSIBLE CHANGE: 3 : Palatal Vicinity l-deletion
		POSSIBLE CHANGE: 5 : Palatal Vicinity l-deletion
		OVERVIEW: version for pattern CCVCVC
{'ie', 'eo', 'i', 'o', 'ou', 'y', 'eƿ', 'ei', 'eu', 'e'}, {'l', 'w', '_'}, {'ie', 'u', 'i', 'o', '_', 'y', 'e'}, {'l', 'n', '_'}
faulty splits: 13
cne----! <-! cnel
cneo.eo----! <-! cneol
cneo.ei.o----! <-! cneoli
cneu.eu----! <-! cneul
cneƿ.e----! <-! cneƿl
cno.ouu----! <-! cnoul
cnye----! <-! cnyle
ki.ie.ei.ei.ie.e----! <-! keiel
kee----! <-! kenel
kne----! <-! knel
kneo.eo----! <-! kneol
kneo.ei.o----! <-! kneoli
kneo.eo.y----! <-! kneoly
c | n | eo | l | i | n
k | n | e | w | e | l
c | n | e | _ | _ | _
c | n | e | _ | _ | _ | ----!
c | n | e | _ | o | _
c | n | eo.e | _ | o | _ | ----!
c | n | eo.e | _ | i.o | _ | ----!
c | n | eu.e | _ | u | _ | ----!
c | n | eƿ.e | _ | _ | _ | ----!
c | n | o.ou | _ | u | _ | ----!
c | n | y | _ | e | _ | ----!
k | _ | i.ie.ei.e | _ | i.ie.e | _ | ----!
k | _ | e | _ | e | _ | ----!
k | n | e | _ | _ | _ | ----!
k | n | e | _ | o | _
k | n | eo.e | _ | o | _ | ----!
k | n | eo.e | _ | i.o | _ | ----!
k | n | eo.e | _ | o.y | _ | ----!
k | n | eƿ | _ | _ | _
3 : {'l', 'n', 'w', '_'},{'l', 'w', '_'},{'ƿ', 'l', 'w', '_'},{'l', 'u', 'w', '_'},{'i', 'l', 'w', '_'}
5 : {'ƿ', 'l', 'n', '_'},{'l', 'n', '_'},{'y', 'l', 'n', '_'},{'i', 'l', 'n', '_'}
	[[{'lit': 'eo', 'ln': 2, 'index': 2}]]
	[[{'lit': 'eo', 'ln': 2, 'index': 2}]]
	[[{'lit': 'eo', 'ln': 2, 'index': 2}]]
	[[{'lit': 'eo', 'ln': 2, 'index': 2}]]
	[[{'lit': 'eu', 'ln': 2, 'index': 2}]]
	[[{'lit': 'eƿ', 'ln': 2, 'index': 2}]]
	[[{'lit': 'ou', 'ln': 2, 'index': 2}]]
	[[{'lit': 'ie', 'ln': 2, 'index': 2}], [{'lit': 'ei', 'ln': 2, 'index': 1}]]
	[[{'lit': 'ie', 'ln': 2, 'index': 2}], [{'lit': 'ei', 'ln': 2, 'index': 1}], [{'lit': 'ie', 'ln': 2, 'index': 2}, {'lit': 'ei', 'ln': 2, 'index': 1}]]
	[[{'lit': 'eo', 'ln': 2, 'index': 2}]]
	[[{'lit': 'eo', 'ln': 2, 'index': 2}]]
	[[{'lit': 'eo', 'ln': 2, 'index': 2}]]
	[[{'lit': 'eo', 'ln': 2, 'index': 2}]]
	[[{'lit': 'eƿ', 'ln': 2, 'index': 2}]]
	[[{'lit': 'ew', 'ln': 2, 'index': 2}]]
	MIN pattern length=6
	Pattern CCVCVC is valid
	Pattern CCVVCVC is invalid
	Pattern CCVC is invalid
	Pattern CCVCCC is valid
	Pattern CCVV is invalid
	Pattern CCCCV is invalid
	Pattern CCVVCCC is invalid
	Pattern CCVVCV is invalid
	Pattern CVVVC is invalid
	Pattern CCVCC is invalid
	Pattern CCVVC is invalid
	Pattern CCV is invalid
	Pattern CCVVCC is invalid
	Pattern CVCVC is invalid
	Pattern CCVCV is invalid
	Pattern CVVC is invalid
	Making the selection for pattern: CCVCCC
	Selection for pattern: CCVCCC completed
	Making a version for pattern: CCVCCC
			___CCVCCC : 0___
				ANALYSING: cneolin
				adding littera based on matching pattern
				ANALYSING: cne
					resolving (1)
					> version: c/n/e
					TRYING: c
					RESULT:  ['c']
				ANALYSING: cnel
					resolving (1)
					> version: c/n/e/l
					TRYING: c
					RESULT:  ['c']
				ANALYSING: cneo
					resolving (2)
					> version: c/n/e/o
					TRYING: c
					> version: c/n/eo
					TRYING: c
					RESULT:  ['c']
				ANALYSING: cneol
					resolving (2)
					> version: c/n/e/o/l
					TRYING: c
					> version: c/n/eo/l
					TRYING: c
					RESULT:  ['c']
				ANALYSING: cneoli
					resolving (4)
					> version: c/n/e/o/l/i
					TRYING: c
					> version: c/n/e/o/l/i
					TRYING: c
					> version: c/n/eo/l/i
					TRYING: c
					> version: c/n/eo/l/i
					TRYING: c
					RESULT:  ['c']
				ANALYSING: cneul
					resolving (3)
					> version: c/n/e/u/l
					TRYING: c
					> version: c/n/e/u/l
					TRYING: c
					> version: c/n/eu/l
					TRYING: c
					RESULT:  ['c']
				ANALYSING: cneƿl
					resolving (2)
					> version: c/n/e/ƿ/l
					TRYING: c
					> version: c/n/eƿ/l
					TRYING: c
					RESULT:  ['c']
				ANALYSING: cnoul
					resolving (3)
					> version: c/n/o/u/l
					TRYING: c
					> version: c/n/o/u/l
					TRYING: c
					> version: c/n/ou/l
					TRYING: c
					RESULT:  ['c']
				ANALYSING: cnyle
					resolving (2)
					> version: c/n/y/l/e
					TRYING: c
					> version: c/n/y/l/e
					TRYING: c
					RESULT:  ['c']
				ANALYSING: keiel
					resolving (5)
					> version: k/e/i/e/l
					TRYING: k
					> version: k/e/i/e/l
					TRYING: k
					> version: k/e/ie/l
					TRYING: k
					> version: k/ei/e/l
					TRYING: k
					> version: k/ei/e/l
					TRYING: k
					RESULT:  ['k']
				ANALYSING: kenel
					resolving (1)
					> version: k/e/n/e/l
					TRYING: k
					RESULT:  ['k']
				ANALYSING: knel
					resolving (1)
					> version: k/n/e/l
					TRYING: k
					RESULT:  ['k']
				ANALYSING: kneo
					resolving (2)
					> version: k/n/e/o
					TRYING: k
					> version: k/n/eo
					TRYING: k
					RESULT:  ['k']
				ANALYSING: kneol
					resolving (2)
					> version: k/n/e/o/l
					TRYING: k
					> version: k/n/eo/l
					TRYING: k
					RESULT:  ['k']
				ANALYSING: kneoli
					resolving (4)
					> version: k/n/e/o/l/i
					TRYING: k
					> version: k/n/e/o/l/i
					TRYING: k
					> version: k/n/eo/l/i
					TRYING: k
					> version: k/n/eo/l/i
					TRYING: k
					RESULT:  ['k']
				ANALYSING: kneoly
					resolving (4)
					> version: k/n/e/o/l/y
					TRYING: k
					> version: k/n/e/o/l/y
					TRYING: k
					> version: k/n/eo/l/y
					TRYING: k
					> version: k/n/eo/l/y
					TRYING: k
					RESULT:  ['k']
				ANALYSING: kneƿ
					resolving (2)
					> version: k/n/e/ƿ
					TRYING: k
					> version: k/n/eƿ
					TRYING: k
					RESULT:  ['k']
				ANALYSING: knewel
					resolving (2)
					> version: k/n/e/w/e/l
					TRYING: k
					> version: k/n/ew/e/l
					TRYING: k
					RESULT:  ['k']
			___CCVCCC : 1___
				ANALYSING: cneolin
				adding littera based on matching pattern
				ANALYSING: cne
					resolving (1)
					> version: c/n/e
					TRYING: n
					RESULT:  ['n']
				ANALYSING: cnel
					resolving (1)
					> version: c/n/e/l
					TRYING: n
					RESULT:  ['n']
				ANALYSING: cneo
					resolving (2)
					> version: c/n/e/o
					TRYING: n
					> version: c/n/eo
					TRYING: n
					RESULT:  ['n']
				ANALYSING: cneol
					resolving (2)
					> version: c/n/e/o/l
					TRYING: n
					> version: c/n/eo/l
					TRYING: n
					RESULT:  ['n']
				ANALYSING: cneoli
					resolving (4)
					> version: c/n/e/o/l/i
					TRYING: n
					> version: c/n/e/o/l/i
					TRYING: n
					> version: c/n/eo/l/i
					TRYING: n
					> version: c/n/eo/l/i
					TRYING: n
					RESULT:  ['n']
				ANALYSING: cneul
					resolving (3)
					> version: c/n/e/u/l
					TRYING: n
					> version: c/n/e/u/l
					TRYING: n
					> version: c/n/eu/l
					TRYING: n
					RESULT:  ['n']
				ANALYSING: cneƿl
					resolving (2)
					> version: c/n/e/ƿ/l
					TRYING: n
					> version: c/n/eƿ/l
					TRYING: n
					RESULT:  ['n']
				ANALYSING: cnoul
					resolving (3)
					> version: c/n/o/u/l
					TRYING: n
					> version: c/n/o/u/l
					TRYING: n
					> version: c/n/ou/l
					TRYING: n
					RESULT:  ['n']
				ANALYSING: cnyle
					resolving (2)
					> version: c/n/y/l/e
					TRYING: n
					> version: c/n/y/l/e
					TRYING: n
					RESULT:  ['n']
				ANALYSING: keiel
					resolving (5)
					> version: k/e/i/e/l
					TRYING: e
					> version: k/e/i/e/l
					TRYING: e
					> version: k/e/ie/l
					TRYING: e
					> version: k/ei/e/l
					TRYING: ei
					> version: k/ei/e/l
					TRYING: ei
					RESULT:  ['_']
				adding dashed alternative: ['k', '_', 'e', 'i', 'e', 'l']
				adding dashed alternative: ['k', '_', 'e', 'i', 'e', 'l']
				adding dashed alternative: ['k', '_', 'e', 'ie', 'l']
				adding dashed alternative: ['k', '_', 'ei', 'e', 'l']
				adding dashed alternative: ['k', '_', 'ei', 'e', 'l']
				k/e/i/e/l(CVCVC)
k/e/i/e/l(CVVVC)
k/e/ie/l(CVVC)
k/ei/e/l(CVVC)
k/ei/e/l(CVVC)
k/_/e/i/e/l(CAVAVC)
k/_/e/i/e/l(CAVAVC)
k/_/e/ie/l(CAVVC)
k/_/ei/e/l(CAVVC)
k/_/ei/e/l(CAVVC)
				ANALYSING: kenel
					resolving (1)
					> version: k/e/n/e/l
					TRYING: e
					RESULT:  ['_']
				adding dashed alternative: ['k', '_', 'e', 'n', 'e', 'l']
				k/e/n/e/l(CVCVC)
k/_/e/n/e/l(CAVCVC)
				ANALYSING: knel
					resolving (1)
					> version: k/n/e/l
					TRYING: n
					RESULT:  ['n']
				ANALYSING: kneo
					resolving (2)
					> version: k/n/e/o
					TRYING: n
					> version: k/n/eo
					TRYING: n
					RESULT:  ['n']
				ANALYSING: kneol
					resolving (2)
					> version: k/n/e/o/l
					TRYING: n
					> version: k/n/eo/l
					TRYING: n
					RESULT:  ['n']
				ANALYSING: kneoli
					resolving (4)
					> version: k/n/e/o/l/i
					TRYING: n
					> version: k/n/e/o/l/i
					TRYING: n
					> version: k/n/eo/l/i
					TRYING: n
					> version: k/n/eo/l/i
					TRYING: n
					RESULT:  ['n']
				ANALYSING: kneoly
					resolving (4)
					> version: k/n/e/o/l/y
					TRYING: n
					> version: k/n/e/o/l/y
					TRYING: n
					> version: k/n/eo/l/y
					TRYING: n
					> version: k/n/eo/l/y
					TRYING: n
					RESULT:  ['n']
				ANALYSING: kneƿ
					resolving (2)
					> version: k/n/e/ƿ
					TRYING: n
					> version: k/n/eƿ
					TRYING: n
					RESULT:  ['n']
				ANALYSING: knewel
					resolving (2)
					> version: k/n/e/w/e/l
					TRYING: n
					> version: k/n/ew/e/l
					TRYING: n
					RESULT:  ['n']
			___CCVCCC : 2___
				ANALYSING: cneolin
				adding littera based on matching pattern
				ANALYSING: cne
					resolving (1)
					> version: c/n/e
					TRYING: e
					RESULT:  ['e']
				ANALYSING: cnel
					resolving (1)
					> version: c/n/e/l
					TRYING: e
					RESULT:  ['e']
				ANALYSING: cneo
					resolving (2)
					> version: c/n/e/o
					TRYING: e
					> version: c/n/eo
					TRYING: eo
					>>> MULTIPLE RESOLVE OPTIONS: {'eo', 'e'}
					RESULT:  ['eo', 'e']
				ANALYSING: cneol
					resolving (2)
					> version: c/n/e/o/l
					TRYING: e
					> version: c/n/eo/l
					TRYING: eo
					>>> MULTIPLE RESOLVE OPTIONS: {'eo', 'e'}
					RESULT:  ['eo', 'e']
				ANALYSING: cneoli
					resolving (4)
					> version: c/n/e/o/l/i
					TRYING: e
					> version: c/n/e/o/l/i
					TRYING: e
					> version: c/n/eo/l/i
					TRYING: eo
					>>> MULTIPLE RESOLVE OPTIONS: {'eo', 'e'}
					> version: c/n/eo/l/i
					TRYING: eo
					>>> MULTIPLE RESOLVE OPTIONS: {'eo', 'e'}
					RESULT:  ['eo', 'e']
				ANALYSING: cneul
					resolving (3)
					> version: c/n/e/u/l
					TRYING: e
					> version: c/n/e/u/l
					TRYING: e
					> version: c/n/eu/l
					TRYING: eu
					>>> MULTIPLE RESOLVE OPTIONS: {'eu', 'e'}
					RESULT:  ['eu', 'e']
				ANALYSING: cneƿl
					resolving (2)
					> version: c/n/e/ƿ/l
					TRYING: e
					> version: c/n/eƿ/l
					TRYING: eƿ
					>>> MULTIPLE RESOLVE OPTIONS: {'eƿ', 'e'}
					RESULT:  ['eƿ', 'e']
				ANALYSING: cnoul
					resolving (3)
					> version: c/n/o/u/l
					TRYING: o
					> version: c/n/o/u/l
					TRYING: o
					> version: c/n/ou/l
					TRYING: ou
					>>> MULTIPLE RESOLVE OPTIONS: {'o', 'ou'}
					RESULT:  ['o', 'ou']
				ANALYSING: cnyle
					resolving (2)
					> version: c/n/y/l/e
					TRYING: y
					> version: c/n/y/l/e
					TRYING: y
					RESULT:  ['y']
				ANALYSING: keiel
					resolving (10)
					> version: k/e/i/e/l
					TRYING: i
					> version: k/e/i/e/l
					TRYING: i
					> version: k/e/ie/l
					TRYING: ie
					>>> MULTIPLE RESOLVE OPTIONS: {'i', 'ie'}
					> version: k/ei/e/l
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'i', 'ie', 'e'}
					> version: k/ei/e/l
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'i', 'ie', 'e'}
					> version: k/_/e/i/e/l
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'i', 'ie', 'e'}
					> version: k/_/e/i/e/l
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'i', 'ie', 'e'}
					> version: k/_/e/ie/l
					TRYING: e
					>>> MULTIPLE RESOLVE OPTIONS: {'i', 'ie', 'e'}
					> version: k/_/ei/e/l
					TRYING: ei
					>>> MULTIPLE RESOLVE OPTIONS: {'i', 'ie', 'ei', 'e'}
					> version: k/_/ei/e/l
					TRYING: ei
					>>> MULTIPLE RESOLVE OPTIONS: {'i', 'ie', 'ei', 'e'}
					RESULT:  ['i', 'ie', 'ei', 'e']
				ANALYSING: kenel
					resolving (2)
					> version: k/e/n/e/l
					TRYING: n
					> version: k/_/e/n/e/l
					TRYING: e
					RESULT:  ['e']
				ANALYSING: knel
					resolving (1)
					> version: k/n/e/l
					TRYING: e
					RESULT:  ['e']
				ANALYSING: kneo
					resolving (2)
					> version: k/n/e/o
					TRYING: e
					> version: k/n/eo
					TRYING: eo
					>>> MULTIPLE RESOLVE OPTIONS: {'eo', 'e'}
					RESULT:  ['eo', 'e']
				ANALYSING: kneol
					resolving (2)
					> version: k/n/e/o/l
					TRYING: e
					> version: k/n/eo/l
					TRYING: eo
					>>> MULTIPLE RESOLVE OPTIONS: {'eo', 'e'}
					RESULT:  ['eo', 'e']
				ANALYSING: kneoli
					resolving (4)
					> version: k/n/e/o/l/i
					TRYING: e
					> version: k/n/e/o/l/i
					TRYING: e
					> version: k/n/eo/l/i
					TRYING: eo
					>>> MULTIPLE RESOLVE OPTIONS: {'eo', 'e'}
					> version: k/n/eo/l/i
					TRYING: eo
					>>> MULTIPLE RESOLVE OPTIONS: {'eo', 'e'}
					RESULT:  ['eo', 'e']
				ANALYSING: kneoly
					resolving (4)
					> version: k/n/e/o/l/y
					TRYING: e
					> version: k/n/e/o/l/y
					TRYING: e
					> version: k/n/eo/l/y
					TRYING: eo
					>>> MULTIPLE RESOLVE OPTIONS: {'eo', 'e'}
					> version: k/n/eo/l/y
					TRYING: eo
					>>> MULTIPLE RESOLVE OPTIONS: {'eo', 'e'}
					RESULT:  ['eo', 'e']
				ANALYSING: kneƿ
					resolving (2)
					> version: k/n/e/ƿ
					TRYING: e
					> version: k/n/eƿ
					TRYING: eƿ
					>>> MULTIPLE RESOLVE OPTIONS: {'eƿ', 'e'}
					RESULT:  ['eƿ', 'e']
				ANALYSING: knewel
					resolving (2)
					> version: k/n/e/w/e/l
					TRYING: e
					> version: k/n/ew/e/l
					TRYING: ew
					>>> MULTIPLE RESOLVE OPTIONS: {'ew', 'e'}
					RESULT:  ['ew', 'e']
			___CCVCCC : 3___
				ANALYSING: cneolin
				adding littera based on matching pattern
				ANALYSING: cne
					resolving (1)
					> version: c/n/e
					RESULT:  ['_']
				adding dashed alternative: ['c', 'n', 'e', '_']
				c/n/e(CCV)
c/n/e/_(CCVA)
				ANALYSING: cnel
					resolving (1)
					> version: c/n/e/l
					TRYING: l
					RESULT:  ['l']
				ANALYSING: cneo
					resolving (2)
					> version: c/n/e/o
					TRYING: o
					> version: c/n/eo
					RESULT:  ['_']
				adding dashed alternative: ['c', 'n', 'e', '_', 'o']
				adding dashed alternative: ['c', 'n', 'eo', '_']
				c/n/e/o(CCVV)
c/n/eo(CCV)
c/n/e/_/o(CCVAV)
c/n/eo/_(CCVA)
				ANALYSING: cneol
					resolving (2)
					> version: c/n/e/o/l
					TRYING: o
					> version: c/n/eo/l
					TRYING: l
					RESULT:  ['l']
				ANALYSING: cneoli
					resolving (4)
					> version: c/n/e/o/l/i
					TRYING: o
					> version: c/n/e/o/l/i
					TRYING: o
					> version: c/n/eo/l/i
					TRYING: l
					> version: c/n/eo/l/i
					TRYING: l
					RESULT:  ['l']
				ANALYSING: cneul
					resolving (3)
					> version: c/n/e/u/l
					TRYING: u
					adding blocked set: C = C >> l, u, _
					> version: c/n/e/u/l
					TRYING: u
					adding blocked set: C = C >> l, u, _
					> version: c/n/eu/l
					TRYING: l
					RESULT:  ['l']
				ANALYSING: cneƿl
					resolving (2)
					> version: c/n/e/ƿ/l
					TRYING: ƿ
					adding blocked set: C = C >> ƿ, l, _
					> version: c/n/eƿ/l
					TRYING: l
					RESULT:  ['l']
				ANALYSING: cnoul
					resolving (3)
					> version: c/n/o/u/l
					TRYING: u
					adding blocked set: C = C >> l, u, _
					> version: c/n/o/u/l
					TRYING: u
					adding blocked set: C = C >> l, u, _
					> version: c/n/ou/l
					TRYING: l
					RESULT:  ['l']
				ANALYSING: cnyle
					resolving (2)
					> version: c/n/y/l/e
					TRYING: l
					> version: c/n/y/l/e
					TRYING: l
					RESULT:  ['l']
				ANALYSING: keiel
					resolving (10)
					> version: k/e/i/e/l
					TRYING: e
					> version: k/e/i/e/l
					TRYING: e
					> version: k/e/ie/l
					TRYING: l
					> version: k/ei/e/l
					TRYING: l
					> version: k/ei/e/l
					TRYING: l
					> version: k/_/e/i/e/l
					TRYING: i
					adding blocked set: C = C >> i, l, _
					> version: k/_/e/i/e/l
					TRYING: i
					adding blocked set: C = C >> i, l, _
					> version: k/_/e/ie/l
					TRYING: ie
					> version: k/_/ei/e/l
					TRYING: e
					> version: k/_/ei/e/l
					TRYING: e
					RESULT:  ['l']
				ANALYSING: kenel
					resolving (2)
					> version: k/e/n/e/l
					TRYING: e
					> version: k/_/e/n/e/l
					TRYING: n
					adding blocked set: C = C >> l, n, _
					RESULT:  ['_']
				adding dashed alternative: ['k', 'e', 'n', '_', 'e', 'l']
				adding dashed alternative: ['k', '_', 'e', '_', 'n', 'e', 'l']
				k/e/n/e/l(CVCVC)
k/_/e/n/e/l(CAVCVC)
k/e/n/_/e/l(CVCAVC)
k/_/e/_/n/e/l(CAVACVC)
				ANALYSING: knel
					resolving (1)
					> version: k/n/e/l
					TRYING: l
					RESULT:  ['l']
				ANALYSING: kneo
					resolving (2)
					> version: k/n/e/o
					TRYING: o
					> version: k/n/eo
					RESULT:  ['_']
				adding dashed alternative: ['k', 'n', 'e', '_', 'o']
				adding dashed alternative: ['k', 'n', 'eo', '_']
				k/n/e/o(CCVV)
k/n/eo(CCV)
k/n/e/_/o(CCVAV)
k/n/eo/_(CCVA)
				ANALYSING: kneol
					resolving (2)
					> version: k/n/e/o/l
					TRYING: o
					> version: k/n/eo/l
					TRYING: l
					RESULT:  ['l']
				ANALYSING: kneoli
					resolving (4)
					> version: k/n/e/o/l/i
					TRYING: o
					> version: k/n/e/o/l/i
					TRYING: o
					> version: k/n/eo/l/i
					TRYING: l
					> version: k/n/eo/l/i
					TRYING: l
					RESULT:  ['l']
				ANALYSING: kneoly
					resolving (4)
					> version: k/n/e/o/l/y
					TRYING: o
					> version: k/n/e/o/l/y
					TRYING: o
					> version: k/n/eo/l/y
					TRYING: l
					> version: k/n/eo/l/y
					TRYING: l
					RESULT:  ['l']
				ANALYSING: kneƿ
					resolving (2)
					> version: k/n/e/ƿ
					TRYING: ƿ
					adding blocked set: C = C >> ƿ, l, _
					> version: k/n/eƿ
					RESULT:  ['_']
				adding dashed alternative: ['k', 'n', 'e', '_', 'ƿ']
				adding dashed alternative: ['k', 'n', 'eƿ', '_']
				k/n/e/ƿ(CCVC)
k/n/eƿ(CCV)
k/n/e/_/ƿ(CCVAC)
k/n/eƿ/_(CCVA)
				ANALYSING: knewel
					resolving (2)
					> version: k/n/e/w/e/l
					TRYING: w
					adding blocked set: C = C >> l, w, _
					> version: k/n/ew/e/l
					TRYING: e
					RESULT:  ['_']
				adding dashed alternative: ['k', 'n', 'e', '_', 'w', 'e', 'l']
				adding dashed alternative: ['k', 'n', 'ew', '_', 'e', 'l']
				k/n/e/w/e/l(CCVCVC)
k/n/ew/e/l(CCVVC)
k/n/e/_/w/e/l(CCVACVC)
k/n/ew/_/e/l(CCVAVC)
			___CCVCCC : 4___
				ANALYSING: cneolin
				adding littera based on matching pattern
				ANALYSING: cne
					resolving (2)
					> version: c/n/e
					> version: c/n/e/_
					RESULT:  ['_']
				adding dashed alternative: ['c', 'n', 'e', '_']
				adding dashed alternative: ['c', 'n', 'e', '_', '_']
				c/n/e(CCV)
c/n/e/_(CCVA)
c/n/e/_(CCVA)
c/n/e/_/_(CCVAA)
				ANALYSING: cnel
					resolving (1)
					> version: c/n/e/l
					RESULT:  ['_']
				adding dashed alternative: ['c', 'n', 'e', 'l', '_']
				c/n/e/l(CCVC)
c/n/e/l/_(CCVCA)
				ANALYSING: cneo
					resolving (4)
					> version: c/n/e/o
					> version: c/n/eo
					> version: c/n/e/_/o
					TRYING: o
					> version: c/n/eo/_
					RESULT:  ['o']
				ANALYSING: cneol
					resolving (2)
					> version: c/n/e/o/l
					TRYING: l
					> version: c/n/eo/l
					RESULT:  ['_']
				adding dashed alternative: ['c', 'n', 'e', 'o', '_', 'l']
				adding dashed alternative: ['c', 'n', 'eo', 'l', '_']
				c/n/e/o/l(CCVVC)
c/n/eo/l(CCVC)
c/n/e/o/_/l(CCVVAC)
c/n/eo/l/_(CCVCA)
				ANALYSING: cneoli
					resolving (4)
					> version: c/n/e/o/l/i
					TRYING: l
					> version: c/n/e/o/l/i
					TRYING: l
					> version: c/n/eo/l/i
					TRYING: i
					> version: c/n/eo/l/i
					TRYING: i
					RESULT:  ['i']
				ANALYSING: cneul
					resolving (3)
					> version: c/n/e/u/l
					TRYING: l
					> version: c/n/e/u/l
					TRYING: l
					> version: c/n/eu/l
					RESULT:  ['_']
				adding dashed alternative: ['c', 'n', 'e', 'u', '_', 'l']
				adding dashed alternative: ['c', 'n', 'e', 'u', '_', 'l']
				adding dashed alternative: ['c', 'n', 'eu', 'l', '_']
				c/n/e/u/l(CCVCC)
c/n/e/u/l(CCVVC)
c/n/eu/l(CCVC)
c/n/e/u/_/l(CCVAAC)
c/n/e/u/_/l(CCVAAC)
c/n/eu/l/_(CCVCA)
				ANALYSING: cneƿl
					resolving (2)
					> version: c/n/e/ƿ/l
					TRYING: l
					> version: c/n/eƿ/l
					RESULT:  ['_']
				adding dashed alternative: ['c', 'n', 'e', 'ƿ', '_', 'l']
				adding dashed alternative: ['c', 'n', 'eƿ', 'l', '_']
				c/n/e/ƿ/l(CCVCC)
c/n/eƿ/l(CCVC)
c/n/e/ƿ/_/l(CCVCAC)
c/n/eƿ/l/_(CCVCA)
				ANALYSING: cnoul
					resolving (3)
					> version: c/n/o/u/l
					TRYING: l
					> version: c/n/o/u/l
					TRYING: l
					> version: c/n/ou/l
					RESULT:  ['_']
				adding dashed alternative: ['c', 'n', 'o', 'u', '_', 'l']
				adding dashed alternative: ['c', 'n', 'o', 'u', '_', 'l']
				adding dashed alternative: ['c', 'n', 'ou', 'l', '_']
				c/n/o/u/l(CCVCC)
c/n/o/u/l(CCVVC)
c/n/ou/l(CCVC)
c/n/o/u/_/l(CCVAAC)
c/n/o/u/_/l(CCVAAC)
c/n/ou/l/_(CCVCA)
				ANALYSING: cnyle
					resolving (2)
					> version: c/n/y/l/e
					TRYING: e
					> version: c/n/y/l/e
					TRYING: e
					RESULT:  ['e']
				ANALYSING: keiel
					resolving (10)
					> version: k/e/i/e/l
					TRYING: l
					> version: k/e/i/e/l
					TRYING: l
					> version: k/e/ie/l
					> version: k/ei/e/l
					> version: k/ei/e/l
					> version: k/_/e/i/e/l
					TRYING: e
					> version: k/_/e/i/e/l
					TRYING: e
					> version: k/_/e/ie/l
					TRYING: l
					> version: k/_/ei/e/l
					TRYING: l
					> version: k/_/ei/e/l
					TRYING: l
					RESULT:  ['e']
				ANALYSING: kenel
					resolving (4)
					> version: k/e/n/e/l
					TRYING: l
					> version: k/_/e/n/e/l
					TRYING: e
					> version: k/e/n/_/e/l
					TRYING: e
					> version: k/_/e/_/n/e/l
					TRYING: n
					RESULT:  ['e']
				ANALYSING: knel
					resolving (1)
					> version: k/n/e/l
					RESULT:  ['_']
				adding dashed alternative: ['k', 'n', 'e', 'l', '_']
				k/n/e/l(CCVC)
k/n/e/l/_(CCVCA)
				ANALYSING: kneo
					resolving (4)
					> version: k/n/e/o
					> version: k/n/eo
					> version: k/n/e/_/o
					TRYING: o
					> version: k/n/eo/_
					RESULT:  ['o']
				ANALYSING: kneol
					resolving (2)
					> version: k/n/e/o/l
					TRYING: l
					> version: k/n/eo/l
					RESULT:  ['_']
				adding dashed alternative: ['k', 'n', 'e', 'o', '_', 'l']
				adding dashed alternative: ['k', 'n', 'eo', 'l', '_']
				k/n/e/o/l(CCVVC)
k/n/eo/l(CCVC)
k/n/e/o/_/l(CCVVAC)
k/n/eo/l/_(CCVCA)
				ANALYSING: kneoli
					resolving (4)
					> version: k/n/e/o/l/i
					TRYING: l
					> version: k/n/e/o/l/i
					TRYING: l
					> version: k/n/eo/l/i
					TRYING: i
					> version: k/n/eo/l/i
					TRYING: i
					RESULT:  ['i']
				ANALYSING: kneoly
					resolving (4)
					> version: k/n/e/o/l/y
					TRYING: l
					> version: k/n/e/o/l/y
					TRYING: l
					> version: k/n/eo/l/y
					TRYING: y
					> version: k/n/eo/l/y
					TRYING: y
					RESULT:  ['y']
				ANALYSING: kneƿ
					resolving (4)
					> version: k/n/e/ƿ
					> version: k/n/eƿ
					> version: k/n/e/_/ƿ
					TRYING: ƿ
					> version: k/n/eƿ/_
					RESULT:  ['_']
				adding dashed alternative: ['k', 'n', 'e', 'ƿ', '_']
				adding dashed alternative: ['k', 'n', 'eƿ', '_']
				adding dashed alternative: ['k', 'n', 'e', '_', '_', 'ƿ']
				adding dashed alternative: ['k', 'n', 'eƿ', '_', '_']
				k/n/e/ƿ(CCVC)
k/n/eƿ(CCV)
k/n/e/_/ƿ(CCVAC)
k/n/eƿ/_(CCVA)
k/n/e/ƿ/_(CCVCA)
k/n/eƿ/_(CCVA)
k/n/e/_/_/ƿ(CCVAAC)
k/n/eƿ/_/_(CCVAA)
				ANALYSING: knewel
					resolving (4)
					> version: k/n/e/w/e/l
					TRYING: e
					> version: k/n/ew/e/l
					TRYING: l
					> version: k/n/e/_/w/e/l
					TRYING: w
					> version: k/n/ew/_/e/l
					TRYING: e
					RESULT:  ['e']
			___CCVCCC : 5___
				ANALYSING: cneolin
				adding littera based on matching pattern
				ANALYSING: cne
					resolving (4)
					> version: c/n/e
					> version: c/n/e/_
					> version: c/n/e/_
					> version: c/n/e/_/_
					RESULT:  ['_']
				adding dashed alternative: ['c', 'n', 'e', '_']
				adding dashed alternative: ['c', 'n', 'e', '_', '_']
				adding dashed alternative: ['c', 'n', 'e', '_', '_']
				adding dashed alternative: ['c', 'n', 'e', '_', '_', '_']
				c/n/e(CCV)
c/n/e/_(CCVA)
c/n/e/_(CCVA)
c/n/e/_/_(CCVAA)
c/n/e/_(CCVA)
c/n/e/_/_(CCVAA)
c/n/e/_/_(CCVAA)
c/n/e/_/_/_(CCVAAA)
				version split: ['c', 'n', 'e']
				{'string': 'c/n/e', 'rgx': '((c))/((n))/((e))/((_))/((_))/((_))$'}
				_____REMOVING________['c', 'n', 'e']
				version split: ['c', 'n', 'e', '_']
				{'string': 'c/n/e/_', 'rgx': '((c))/((n))/((e))/((_))/((_))/((_))$'}
				_____REMOVING________['c', 'n', 'e', '_']
				version split: ['c', 'n', 'e', '_']
				{'string': 'c/n/e/_', 'rgx': '((c))/((n))/((e))/((_))/((_))/((_))$'}
				_____REMOVING________['c', 'n', 'e', '_']
				version split: ['c', 'n', 'e', '_', '_']
				{'string': 'c/n/e/_/_', 'rgx': '((c))/((n))/((e))/((_))/((_))/((_))$'}
				_____REMOVING________['c', 'n', 'e', '_', '_']
				version split: ['c', 'n', 'e', '_']
				{'string': 'c/n/e/_', 'rgx': '((c))/((n))/((e))/((_))/((_))/((_))$'}
				_____REMOVING________['c', 'n', 'e', '_']
				version split: ['c', 'n', 'e', '_', '_']
				{'string': 'c/n/e/_/_', 'rgx': '((c))/((n))/((e))/((_))/((_))/((_))$'}
				_____REMOVING________['c', 'n', 'e', '_', '_']
				version split: ['c', 'n', 'e', '_', '_']
				{'string': 'c/n/e/_/_', 'rgx': '((c))/((n))/((e))/((_))/((_))/((_))$'}
				_____REMOVING________['c', 'n', 'e', '_', '_']
				version split: ['c', 'n', 'e', '_', '_', '_']
				{'string': 'c/n/e/_/_/_', 'rgx': '((c))/((n))/((e))/((_))/((_))/((_))$'}
				ANALYSING: cnel
					resolving (2)
					> version: c/n/e/l
					> version: c/n/e/l/_
					RESULT:  ['_']
				adding dashed alternative: ['c', 'n', 'e', 'l', '_']
				adding dashed alternative: ['c', 'n', 'e', 'l', '_', '_']
				c/n/e/l(CCVC)
c/n/e/l/_(CCVCA)
c/n/e/l/_(CCVCA)
c/n/e/l/_/_(CCVCAA)
				version split: ['c', 'n', 'e', 'l']
				{'string': 'c/n/e/l', 'rgx': '((c))/((n))/((e))/((l))/((_))/((_))$'}
				_____REMOVING________['c', 'n', 'e', 'l']
				version split: ['c', 'n', 'e', 'l', '_']
				{'string': 'c/n/e/l/_', 'rgx': '((c))/((n))/((e))/((l))/((_))/((_))$'}
				_____REMOVING________['c', 'n', 'e', 'l', '_']
				version split: ['c', 'n', 'e', 'l', '_']
				{'string': 'c/n/e/l/_', 'rgx': '((c))/((n))/((e))/((l))/((_))/((_))$'}
				_____REMOVING________['c', 'n', 'e', 'l', '_']
				version split: ['c', 'n', 'e', 'l', '_', '_']
				{'string': 'c/n/e/l/_/_', 'rgx': '((c))/((n))/((e))/((l))/((_))/((_))$'}
				ANALYSING: cneo
					resolving (4)
					> version: c/n/e/o
					> version: c/n/eo
					> version: c/n/e/_/o
					> version: c/n/eo/_
					RESULT:  ['_']
				adding dashed alternative: ['c', 'n', 'e', 'o', '_']
				adding dashed alternative: ['c', 'n', 'eo', '_']
				adding dashed alternative: ['c', 'n', 'e', '_', 'o', '_']
				adding dashed alternative: ['c', 'n', 'eo', '_', '_']
				c/n/e/o(CCVV)
c/n/eo(CCV)
c/n/e/_/o(CCVAV)
c/n/eo/_(CCVA)
c/n/e/o/_(CCVVA)
c/n/eo/_(CCVA)
c/n/e/_/o/_(CCVAVA)
c/n/eo/_/_(CCVAA)
				version split: ['c', 'n', 'e', 'o']
				{'string': 'c/n/e/o', 'rgx': '((c))/((n))/((eo)|(e))/((_))/((o))/((_))$'}
				_____REMOVING________['c', 'n', 'e', 'o']
				version split: ['c', 'n', 'eo']
				{'string': 'c/n/eo', 'rgx': '((c))/((n))/((eo)|(e))/((_))/((o))/((_))$'}
				_____REMOVING________['c', 'n', 'eo']
				version split: ['c', 'n', 'e', '_', 'o']
				{'string': 'c/n/e/_/o', 'rgx': '((c))/((n))/((eo)|(e))/((_))/((o))/((_))$'}
				_____REMOVING________['c', 'n', 'e', '_', 'o']
				version split: ['c', 'n', 'eo', '_']
				{'string': 'c/n/eo/_', 'rgx': '((c))/((n))/((eo)|(e))/((_))/((o))/((_))$'}
				_____REMOVING________['c', 'n', 'eo', '_']
				version split: ['c', 'n', 'e', 'o', '_']
				{'string': 'c/n/e/o/_', 'rgx': '((c))/((n))/((eo)|(e))/((_))/((o))/((_))$'}
				_____REMOVING________['c', 'n', 'e', 'o', '_']
				version split: ['c', 'n', 'eo', '_']
				{'string': 'c/n/eo/_', 'rgx': '((c))/((n))/((eo)|(e))/((_))/((o))/((_))$'}
				_____REMOVING________['c', 'n', 'eo', '_']
				version split: ['c', 'n', 'e', '_', 'o', '_']
				{'string': 'c/n/e/_/o/_', 'rgx': '((c))/((n))/((eo)|(e))/((_))/((o))/((_))$'}
				version split: ['c', 'n', 'eo', '_', '_']
				{'string': 'c/n/eo/_/_', 'rgx': '((c))/((n))/((eo)|(e))/((_))/((o))/((_))$'}
				_____REMOVING________['c', 'n', 'eo', '_', '_']
				ANALYSING: cneol
					resolving (4)
					> version: c/n/e/o/l
					> version: c/n/eo/l
					> version: c/n/e/o/_/l
					TRYING: l
					adding blocked set: C = C >> l, n, _
					> version: c/n/eo/l/_
					RESULT:  ['_']
				adding dashed alternative: ['c', 'n', 'e', 'o', 'l', '_']
				adding dashed alternative: ['c', 'n', 'eo', 'l', '_']
				adding dashed alternative: ['c', 'n', 'e', 'o', '_', '_', 'l']
				adding dashed alternative: ['c', 'n', 'eo', 'l', '_', '_']
				c/n/e/o/l(CCVVC)
c/n/eo/l(CCVC)
c/n/e/o/_/l(CCVVAC)
c/n/eo/l/_(CCVCA)
c/n/e/o/l/_(CCVVCA)
c/n/eo/l/_(CCVCA)
c/n/e/o/_/_/l(CCVVAAC)
c/n/eo/l/_/_(CCVCAA)
				version split: ['c', 'n', 'e', 'o', 'l']
				{'string': 'c/n/e/o/l', 'rgx': '((c))/((n))/((eo)|(e))/((l))/((_))/((_))$'}
				_____REMOVING________['c', 'n', 'e', 'o', 'l']
				version split: ['c', 'n', 'eo', 'l']
				{'string': 'c/n/eo/l', 'rgx': '((c))/((n))/((eo)|(e))/((l))/((_))/((_))$'}
				_____REMOVING________['c', 'n', 'eo', 'l']
				version split: ['c', 'n', 'e', 'o', '_', 'l']
				{'string': 'c/n/e/o/_/l', 'rgx': '((c))/((n))/((eo)|(e))/((l))/((_))/((_))$'}
				_____REMOVING________['c', 'n', 'e', 'o', '_', 'l']
				version split: ['c', 'n', 'eo', 'l', '_']
				{'string': 'c/n/eo/l/_', 'rgx': '((c))/((n))/((eo)|(e))/((l))/((_))/((_))$'}
				_____REMOVING________['c', 'n', 'eo', 'l', '_']
				version split: ['c', 'n', 'e', 'o', 'l', '_']
				{'string': 'c/n/e/o/l/_', 'rgx': '((c))/((n))/((eo)|(e))/((l))/((_))/((_))$'}
				_____REMOVING________['c', 'n', 'e', 'o', 'l', '_']
				version split: ['c', 'n', 'eo', 'l', '_']
				{'string': 'c/n/eo/l/_', 'rgx': '((c))/((n))/((eo)|(e))/((l))/((_))/((_))$'}
				_____REMOVING________['c', 'n', 'eo', 'l', '_']
				version split: ['c', 'n', 'e', 'o', '_', '_', 'l']
				{'string': 'c/n/e/o/_/_/l', 'rgx': '((c))/((n))/((eo)|(e))/((l))/((_))/((_))$'}
				_____REMOVING________['c', 'n', 'e', 'o', '_', '_', 'l']
				version split: ['c', 'n', 'eo', 'l', '_', '_']
				{'string': 'c/n/eo/l/_/_', 'rgx': '((c))/((n))/((eo)|(e))/((l))/((_))/((_))$'}
				ANALYSING: cneoli
					resolving (4)
					> version: c/n/e/o/l/i
					TRYING: i
					adding blocked set: C = C >> i, n, _
					> version: c/n/e/o/l/i
					TRYING: i
					adding blocked set: C = C >> i, n, _
					> version: c/n/eo/l/i
					> version: c/n/eo/l/i
					RESULT:  ['_']
				adding dashed alternative: ['c', 'n', 'e', 'o', 'l', '_', 'i']
				adding dashed alternative: ['c', 'n', 'e', 'o', 'l', '_', 'i']
				adding dashed alternative: ['c', 'n', 'eo', 'l', 'i', '_']
				adding dashed alternative: ['c', 'n', 'eo', 'l', 'i', '_']
				c/n/e/o/l/i(CCVVCC)
c/n/e/o/l/i(CCVVCV)
c/n/eo/l/i(CCVCC)
c/n/eo/l/i(CCVCV)
c/n/e/o/l/_/i(CCVVCAA)
c/n/e/o/l/_/i(CCVVCAA)
c/n/eo/l/i/_(CCVCAA)
c/n/eo/l/i/_(CCVCAA)
				version split: ['c', 'n', 'e', 'o', 'l', 'i']
				{'string': 'c/n/e/o/l/i', 'rgx': '((c))/((n))/((eo)|(e))/((l))/((i))/((_))$'}
				_____REMOVING________['c', 'n', 'e', 'o', 'l', 'i']
				version split: ['c', 'n', 'e', 'o', 'l', 'i']
				{'string': 'c/n/e/o/l/i', 'rgx': '((c))/((n))/((eo)|(e))/((l))/((i))/((_))$'}
				_____REMOVING________['c', 'n', 'e', 'o', 'l', 'i']
				version split: ['c', 'n', 'eo', 'l', 'i']
				{'string': 'c/n/eo/l/i', 'rgx': '((c))/((n))/((eo)|(e))/((l))/((i))/((_))$'}
				_____REMOVING________['c', 'n', 'eo', 'l', 'i']
				version split: ['c', 'n', 'eo', 'l', 'i']
				{'string': 'c/n/eo/l/i', 'rgx': '((c))/((n))/((eo)|(e))/((l))/((i))/((_))$'}
				_____REMOVING________['c', 'n', 'eo', 'l', 'i']
				version split: ['c', 'n', 'e', 'o', 'l', '_', 'i']
				{'string': 'c/n/e/o/l/_/i', 'rgx': '((c))/((n))/((eo)|(e))/((l))/((i))/((_))$'}
				_____REMOVING________['c', 'n', 'e', 'o', 'l', '_', 'i']
				version split: ['c', 'n', 'e', 'o', 'l', '_', 'i']
				{'string': 'c/n/e/o/l/_/i', 'rgx': '((c))/((n))/((eo)|(e))/((l))/((i))/((_))$'}
				_____REMOVING________['c', 'n', 'e', 'o', 'l', '_', 'i']
				version split: ['c', 'n', 'eo', 'l', 'i', '_']
				{'string': 'c/n/eo/l/i/_', 'rgx': '((c))/((n))/((eo)|(e))/((l))/((i))/((_))$'}
				version split: ['c', 'n', 'eo', 'l', 'i', '_']
				{'string': 'c/n/eo/l/i/_', 'rgx': '((c))/((n))/((eo)|(e))/((l))/((i))/((_))$'}
				ANALYSING: cneul
					resolving (6)
					> version: c/n/e/u/l
					> version: c/n/e/u/l
					> version: c/n/eu/l
					> version: c/n/e/u/_/l
					TRYING: l
					adding blocked set: C = C >> l, n, _
					> version: c/n/e/u/_/l
					TRYING: l
					adding blocked set: C = C >> l, n, _
					> version: c/n/eu/l/_
					RESULT:  ['_']
				adding dashed alternative: ['c', 'n', 'e', 'u', 'l', '_']
				adding dashed alternative: ['c', 'n', 'e', 'u', 'l', '_']
				adding dashed alternative: ['c', 'n', 'eu', 'l', '_']
				adding dashed alternative: ['c', 'n', 'e', 'u', '_', '_', 'l']
				adding dashed alternative: ['c', 'n', 'e', 'u', '_', '_', 'l']
				adding dashed alternative: ['c', 'n', 'eu', 'l', '_', '_']
				c/n/e/u/l(CCVCC)
c/n/e/u/l(CCVVC)
c/n/eu/l(CCVC)
c/n/e/u/_/l(CCVAAC)
c/n/e/u/_/l(CCVAAC)
c/n/eu/l/_(CCVCA)
c/n/e/u/l/_(CCVACA)
c/n/e/u/l/_(CCVACA)
c/n/eu/l/_(CCVCA)
c/n/e/u/_/_/l(CCVAAAC)
c/n/e/u/_/_/l(CCVAAAC)
c/n/eu/l/_/_(CCVCAA)
				version split: ['c', 'n', 'e', 'u', 'l']
				{'string': 'c/n/e/u/l', 'rgx': '((c))/((n))/((eu)|(e))/((l))/((_))/((_))$'}
				_____REMOVING________['c', 'n', 'e', 'u', 'l']
				version split: ['c', 'n', 'e', 'u', 'l']
				{'string': 'c/n/e/u/l', 'rgx': '((c))/((n))/((eu)|(e))/((l))/((_))/((_))$'}
				_____REMOVING________['c', 'n', 'e', 'u', 'l']
				version split: ['c', 'n', 'eu', 'l']
				{'string': 'c/n/eu/l', 'rgx': '((c))/((n))/((eu)|(e))/((l))/((_))/((_))$'}
				_____REMOVING________['c', 'n', 'eu', 'l']
				version split: ['c', 'n', 'e', 'u', '_', 'l']
				{'string': 'c/n/e/u/_/l', 'rgx': '((c))/((n))/((eu)|(e))/((l))/((_))/((_))$'}
				_____REMOVING________['c', 'n', 'e', 'u', '_', 'l']
				version split: ['c', 'n', 'e', 'u', '_', 'l']
				{'string': 'c/n/e/u/_/l', 'rgx': '((c))/((n))/((eu)|(e))/((l))/((_))/((_))$'}
				_____REMOVING________['c', 'n', 'e', 'u', '_', 'l']
				version split: ['c', 'n', 'eu', 'l', '_']
				{'string': 'c/n/eu/l/_', 'rgx': '((c))/((n))/((eu)|(e))/((l))/((_))/((_))$'}
				_____REMOVING________['c', 'n', 'eu', 'l', '_']
				version split: ['c', 'n', 'e', 'u', 'l', '_']
				{'string': 'c/n/e/u/l/_', 'rgx': '((c))/((n))/((eu)|(e))/((l))/((_))/((_))$'}
				_____REMOVING________['c', 'n', 'e', 'u', 'l', '_']
				version split: ['c', 'n', 'e', 'u', 'l', '_']
				{'string': 'c/n/e/u/l/_', 'rgx': '((c))/((n))/((eu)|(e))/((l))/((_))/((_))$'}
				_____REMOVING________['c', 'n', 'e', 'u', 'l', '_']
				version split: ['c', 'n', 'eu', 'l', '_']
				{'string': 'c/n/eu/l/_', 'rgx': '((c))/((n))/((eu)|(e))/((l))/((_))/((_))$'}
				_____REMOVING________['c', 'n', 'eu', 'l', '_']
				version split: ['c', 'n', 'e', 'u', '_', '_', 'l']
				{'string': 'c/n/e/u/_/_/l', 'rgx': '((c))/((n))/((eu)|(e))/((l))/((_))/((_))$'}
				_____REMOVING________['c', 'n', 'e', 'u', '_', '_', 'l']
				version split: ['c', 'n', 'e', 'u', '_', '_', 'l']
				{'string': 'c/n/e/u/_/_/l', 'rgx': '((c))/((n))/((eu)|(e))/((l))/((_))/((_))$'}
				_____REMOVING________['c', 'n', 'e', 'u', '_', '_', 'l']
				version split: ['c', 'n', 'eu', 'l', '_', '_']
				{'string': 'c/n/eu/l/_/_', 'rgx': '((c))/((n))/((eu)|(e))/((l))/((_))/((_))$'}
				ANALYSING: cneƿl
					resolving (4)
					> version: c/n/e/ƿ/l
					> version: c/n/eƿ/l
					> version: c/n/e/ƿ/_/l
					TRYING: l
					adding blocked set: C = C >> l, n, _
					> version: c/n/eƿ/l/_
					RESULT:  ['_']
				adding dashed alternative: ['c', 'n', 'e', 'ƿ', 'l', '_']
				adding dashed alternative: ['c', 'n', 'eƿ', 'l', '_']
				adding dashed alternative: ['c', 'n', 'e', 'ƿ', '_', '_', 'l']
				adding dashed alternative: ['c', 'n', 'eƿ', 'l', '_', '_']
				c/n/e/ƿ/l(CCVCC)
c/n/eƿ/l(CCVC)
c/n/e/ƿ/_/l(CCVCAC)
c/n/eƿ/l/_(CCVCA)
c/n/e/ƿ/l/_(CCVCCA)
c/n/eƿ/l/_(CCVCA)
c/n/e/ƿ/_/_/l(CCVCAAC)
c/n/eƿ/l/_/_(CCVCAA)
				version split: ['c', 'n', 'e', 'ƿ', 'l']
				{'string': 'c/n/e/ƿ/l', 'rgx': '((c))/((n))/((eƿ)|(e))/((l))/((_))/((_))$'}
				_____REMOVING________['c', 'n', 'e', 'ƿ', 'l']
				version split: ['c', 'n', 'eƿ', 'l']
				{'string': 'c/n/eƿ/l', 'rgx': '((c))/((n))/((eƿ)|(e))/((l))/((_))/((_))$'}
				_____REMOVING________['c', 'n', 'eƿ', 'l']
				version split: ['c', 'n', 'e', 'ƿ', '_', 'l']
				{'string': 'c/n/e/ƿ/_/l', 'rgx': '((c))/((n))/((eƿ)|(e))/((l))/((_))/((_))$'}
				_____REMOVING________['c', 'n', 'e', 'ƿ', '_', 'l']
				version split: ['c', 'n', 'eƿ', 'l', '_']
				{'string': 'c/n/eƿ/l/_', 'rgx': '((c))/((n))/((eƿ)|(e))/((l))/((_))/((_))$'}
				_____REMOVING________['c', 'n', 'eƿ', 'l', '_']
				version split: ['c', 'n', 'e', 'ƿ', 'l', '_']
				{'string': 'c/n/e/ƿ/l/_', 'rgx': '((c))/((n))/((eƿ)|(e))/((l))/((_))/((_))$'}
				_____REMOVING________['c', 'n', 'e', 'ƿ', 'l', '_']
				version split: ['c', 'n', 'eƿ', 'l', '_']
				{'string': 'c/n/eƿ/l/_', 'rgx': '((c))/((n))/((eƿ)|(e))/((l))/((_))/((_))$'}
				_____REMOVING________['c', 'n', 'eƿ', 'l', '_']
				version split: ['c', 'n', 'e', 'ƿ', '_', '_', 'l']
				{'string': 'c/n/e/ƿ/_/_/l', 'rgx': '((c))/((n))/((eƿ)|(e))/((l))/((_))/((_))$'}
				_____REMOVING________['c', 'n', 'e', 'ƿ', '_', '_', 'l']
				version split: ['c', 'n', 'eƿ', 'l', '_', '_']
				{'string': 'c/n/eƿ/l/_/_', 'rgx': '((c))/((n))/((eƿ)|(e))/((l))/((_))/((_))$'}
				ANALYSING: cnoul
					resolving (6)
					> version: c/n/o/u/l
					> version: c/n/o/u/l
					> version: c/n/ou/l
					> version: c/n/o/u/_/l
					TRYING: l
					adding blocked set: C = C >> l, n, _
					> version: c/n/o/u/_/l
					TRYING: l
					adding blocked set: C = C >> l, n, _
					> version: c/n/ou/l/_
					RESULT:  ['_']
				adding dashed alternative: ['c', 'n', 'o', 'u', 'l', '_']
				adding dashed alternative: ['c', 'n', 'o', 'u', 'l', '_']
				adding dashed alternative: ['c', 'n', 'ou', 'l', '_']
				adding dashed alternative: ['c', 'n', 'o', 'u', '_', '_', 'l']
				adding dashed alternative: ['c', 'n', 'o', 'u', '_', '_', 'l']
				adding dashed alternative: ['c', 'n', 'ou', 'l', '_', '_']
				c/n/o/u/l(CCVCC)
c/n/o/u/l(CCVVC)
c/n/ou/l(CCVC)
c/n/o/u/_/l(CCVAAC)
c/n/o/u/_/l(CCVAAC)
c/n/ou/l/_(CCVCA)
c/n/o/u/l/_(CCVACA)
c/n/o/u/l/_(CCVACA)
c/n/ou/l/_(CCVCA)
c/n/o/u/_/_/l(CCVAAAC)
c/n/o/u/_/_/l(CCVAAAC)
c/n/ou/l/_/_(CCVCAA)
				version split: ['c', 'n', 'o', 'u', 'l']
				{'string': 'c/n/o/u/l', 'rgx': '((c))/((n))/((o)|(ou))/((l))/((_))/((_))$'}
				_____REMOVING________['c', 'n', 'o', 'u', 'l']
				version split: ['c', 'n', 'o', 'u', 'l']
				{'string': 'c/n/o/u/l', 'rgx': '((c))/((n))/((o)|(ou))/((l))/((_))/((_))$'}
				_____REMOVING________['c', 'n', 'o', 'u', 'l']
				version split: ['c', 'n', 'ou', 'l']
				{'string': 'c/n/ou/l', 'rgx': '((c))/((n))/((o)|(ou))/((l))/((_))/((_))$'}
				_____REMOVING________['c', 'n', 'ou', 'l']
				version split: ['c', 'n', 'o', 'u', '_', 'l']
				{'string': 'c/n/o/u/_/l', 'rgx': '((c))/((n))/((o)|(ou))/((l))/((_))/((_))$'}
				_____REMOVING________['c', 'n', 'o', 'u', '_', 'l']
				version split: ['c', 'n', 'o', 'u', '_', 'l']
				{'string': 'c/n/o/u/_/l', 'rgx': '((c))/((n))/((o)|(ou))/((l))/((_))/((_))$'}
				_____REMOVING________['c', 'n', 'o', 'u', '_', 'l']
				version split: ['c', 'n', 'ou', 'l', '_']
				{'string': 'c/n/ou/l/_', 'rgx': '((c))/((n))/((o)|(ou))/((l))/((_))/((_))$'}
				_____REMOVING________['c', 'n', 'ou', 'l', '_']
				version split: ['c', 'n', 'o', 'u', 'l', '_']
				{'string': 'c/n/o/u/l/_', 'rgx': '((c))/((n))/((o)|(ou))/((l))/((_))/((_))$'}
				_____REMOVING________['c', 'n', 'o', 'u', 'l', '_']
				version split: ['c', 'n', 'o', 'u', 'l', '_']
				{'string': 'c/n/o/u/l/_', 'rgx': '((c))/((n))/((o)|(ou))/((l))/((_))/((_))$'}
				_____REMOVING________['c', 'n', 'o', 'u', 'l', '_']
				version split: ['c', 'n', 'ou', 'l', '_']
				{'string': 'c/n/ou/l/_', 'rgx': '((c))/((n))/((o)|(ou))/((l))/((_))/((_))$'}
				_____REMOVING________['c', 'n', 'ou', 'l', '_']
				version split: ['c', 'n', 'o', 'u', '_', '_', 'l']
				{'string': 'c/n/o/u/_/_/l', 'rgx': '((c))/((n))/((o)|(ou))/((l))/((_))/((_))$'}
				_____REMOVING________['c', 'n', 'o', 'u', '_', '_', 'l']
				version split: ['c', 'n', 'o', 'u', '_', '_', 'l']
				{'string': 'c/n/o/u/_/_/l', 'rgx': '((c))/((n))/((o)|(ou))/((l))/((_))/((_))$'}
				_____REMOVING________['c', 'n', 'o', 'u', '_', '_', 'l']
				version split: ['c', 'n', 'ou', 'l', '_', '_']
				{'string': 'c/n/ou/l/_/_', 'rgx': '((c))/((n))/((o)|(ou))/((l))/((_))/((_))$'}
				ANALYSING: cnyle
					resolving (2)
					> version: c/n/y/l/e
					> version: c/n/y/l/e
					RESULT:  ['_']
				adding dashed alternative: ['c', 'n', 'y', 'l', 'e', '_']
				adding dashed alternative: ['c', 'n', 'y', 'l', 'e', '_']
				c/n/y/l/e(CCCCV)
c/n/y/l/e(CCVCV)
c/n/y/l/e/_(CCACVA)
c/n/y/l/e/_(CCACVA)
				version split: ['c', 'n', 'y', 'l', 'e']
				{'string': 'c/n/y/l/e', 'rgx': '((c))/((n))/((y))/((l))/((e))/((_))$'}
				_____REMOVING________['c', 'n', 'y', 'l', 'e']
				version split: ['c', 'n', 'y', 'l', 'e']
				{'string': 'c/n/y/l/e', 'rgx': '((c))/((n))/((y))/((l))/((e))/((_))$'}
				_____REMOVING________['c', 'n', 'y', 'l', 'e']
				version split: ['c', 'n', 'y', 'l', 'e', '_']
				{'string': 'c/n/y/l/e/_', 'rgx': '((c))/((n))/((y))/((l))/((e))/((_))$'}
				version split: ['c', 'n', 'y', 'l', 'e', '_']
				{'string': 'c/n/y/l/e/_', 'rgx': '((c))/((n))/((y))/((l))/((e))/((_))$'}
				ANALYSING: keiel
					resolving (10)
					> version: k/e/i/e/l
					> version: k/e/i/e/l
					> version: k/e/ie/l
					> version: k/ei/e/l
					> version: k/ei/e/l
					> version: k/_/e/i/e/l
					TRYING: l
					adding blocked set: C = C >> l, n, _
					> version: k/_/e/i/e/l
					TRYING: l
					adding blocked set: C = C >> l, n, _
					> version: k/_/e/ie/l
					> version: k/_/ei/e/l
					> version: k/_/ei/e/l
					RESULT:  ['_']
				adding dashed alternative: ['k', 'e', 'i', 'e', 'l', '_']
				adding dashed alternative: ['k', 'e', 'i', 'e', 'l', '_']
				adding dashed alternative: ['k', 'e', 'ie', 'l', '_']
				adding dashed alternative: ['k', 'ei', 'e', 'l', '_']
				adding dashed alternative: ['k', 'ei', 'e', 'l', '_']
				adding dashed alternative: ['k', '_', 'e', 'i', 'e', '_', 'l']
				adding dashed alternative: ['k', '_', 'e', 'i', 'e', '_', 'l']
				adding dashed alternative: ['k', '_', 'e', 'ie', 'l', '_']
				adding dashed alternative: ['k', '_', 'ei', 'e', 'l', '_']
				adding dashed alternative: ['k', '_', 'ei', 'e', 'l', '_']
				k/e/i/e/l(CVCVC)
k/e/i/e/l(CVVVC)
k/e/ie/l(CVVC)
k/ei/e/l(CVVC)
k/ei/e/l(CVVC)
k/_/e/i/e/l(CAVAVC)
k/_/e/i/e/l(CAVAVC)
k/_/e/ie/l(CAVVC)
k/_/ei/e/l(CAVVC)
k/_/ei/e/l(CAVVC)
k/e/i/e/l/_(CVAVCA)
k/e/i/e/l/_(CVAVCA)
k/e/ie/l/_(CVVCA)
k/ei/e/l/_(CVVCA)
k/ei/e/l/_(CVVCA)
k/_/e/i/e/_/l(CAVAVAC)
k/_/e/i/e/_/l(CAVAVAC)
k/_/e/ie/l/_(CAVVCA)
k/_/ei/e/l/_(CAVVCA)
k/_/ei/e/l/_(CAVVCA)
				version split: ['k', 'e', 'i', 'e', 'l']
				{'string': 'k/e/i/e/l', 'rgx': '((k))/((_))/((i)|(ie)|(ei)|(e))/((l))/((e))/((_))$'}
				_____REMOVING________['k', 'e', 'i', 'e', 'l']
				version split: ['k', 'e', 'i', 'e', 'l']
				{'string': 'k/e/i/e/l', 'rgx': '((k))/((_))/((i)|(ie)|(ei)|(e))/((l))/((e))/((_))$'}
				_____REMOVING________['k', 'e', 'i', 'e', 'l']
				version split: ['k', 'e', 'ie', 'l']
				{'string': 'k/e/ie/l', 'rgx': '((k))/((_))/((i)|(ie)|(ei)|(e))/((l))/((e))/((_))$'}
				_____REMOVING________['k', 'e', 'ie', 'l']
				version split: ['k', 'ei', 'e', 'l']
				{'string': 'k/ei/e/l', 'rgx': '((k))/((_))/((i)|(ie)|(ei)|(e))/((l))/((e))/((_))$'}
				_____REMOVING________['k', 'ei', 'e', 'l']
				version split: ['k', 'ei', 'e', 'l']
				{'string': 'k/ei/e/l', 'rgx': '((k))/((_))/((i)|(ie)|(ei)|(e))/((l))/((e))/((_))$'}
				_____REMOVING________['k', 'ei', 'e', 'l']
				version split: ['k', '_', 'e', 'i', 'e', 'l']
				{'string': 'k/_/e/i/e/l', 'rgx': '((k))/((_))/((i)|(ie)|(ei)|(e))/((l))/((e))/((_))$'}
				_____REMOVING________['k', '_', 'e', 'i', 'e', 'l']
				version split: ['k', '_', 'e', 'i', 'e', 'l']
				{'string': 'k/_/e/i/e/l', 'rgx': '((k))/((_))/((i)|(ie)|(ei)|(e))/((l))/((e))/((_))$'}
				_____REMOVING________['k', '_', 'e', 'i', 'e', 'l']
				version split: ['k', '_', 'e', 'ie', 'l']
				{'string': 'k/_/e/ie/l', 'rgx': '((k))/((_))/((i)|(ie)|(ei)|(e))/((l))/((e))/((_))$'}
				_____REMOVING________['k', '_', 'e', 'ie', 'l']
				version split: ['k', '_', 'ei', 'e', 'l']
				{'string': 'k/_/ei/e/l', 'rgx': '((k))/((_))/((i)|(ie)|(ei)|(e))/((l))/((e))/((_))$'}
				_____REMOVING________['k', '_', 'ei', 'e', 'l']
				version split: ['k', '_', 'ei', 'e', 'l']
				{'string': 'k/_/ei/e/l', 'rgx': '((k))/((_))/((i)|(ie)|(ei)|(e))/((l))/((e))/((_))$'}
				_____REMOVING________['k', '_', 'ei', 'e', 'l']
				version split: ['k', 'e', 'i', 'e', 'l', '_']
				{'string': 'k/e/i/e/l/_', 'rgx': '((k))/((_))/((i)|(ie)|(ei)|(e))/((l))/((e))/((_))$'}
				_____REMOVING________['k', 'e', 'i', 'e', 'l', '_']
				version split: ['k', 'e', 'i', 'e', 'l', '_']
				{'string': 'k/e/i/e/l/_', 'rgx': '((k))/((_))/((i)|(ie)|(ei)|(e))/((l))/((e))/((_))$'}
				_____REMOVING________['k', 'e', 'i', 'e', 'l', '_']
				version split: ['k', 'e', 'ie', 'l', '_']
				{'string': 'k/e/ie/l/_', 'rgx': '((k))/((_))/((i)|(ie)|(ei)|(e))/((l))/((e))/((_))$'}
				_____REMOVING________['k', 'e', 'ie', 'l', '_']
				version split: ['k', 'ei', 'e', 'l', '_']
				{'string': 'k/ei/e/l/_', 'rgx': '((k))/((_))/((i)|(ie)|(ei)|(e))/((l))/((e))/((_))$'}
				_____REMOVING________['k', 'ei', 'e', 'l', '_']
				version split: ['k', 'ei', 'e', 'l', '_']
				{'string': 'k/ei/e/l/_', 'rgx': '((k))/((_))/((i)|(ie)|(ei)|(e))/((l))/((e))/((_))$'}
				_____REMOVING________['k', 'ei', 'e', 'l', '_']
				version split: ['k', '_', 'e', 'i', 'e', '_', 'l']
				{'string': 'k/_/e/i/e/_/l', 'rgx': '((k))/((_))/((i)|(ie)|(ei)|(e))/((l))/((e))/((_))$'}
				_____REMOVING________['k', '_', 'e', 'i', 'e', '_', 'l']
				version split: ['k', '_', 'e', 'i', 'e', '_', 'l']
				{'string': 'k/_/e/i/e/_/l', 'rgx': '((k))/((_))/((i)|(ie)|(ei)|(e))/((l))/((e))/((_))$'}
				_____REMOVING________['k', '_', 'e', 'i', 'e', '_', 'l']
				version split: ['k', '_', 'e', 'ie', 'l', '_']
				{'string': 'k/_/e/ie/l/_', 'rgx': '((k))/((_))/((i)|(ie)|(ei)|(e))/((l))/((e))/((_))$'}
				_____REMOVING________['k', '_', 'e', 'ie', 'l', '_']
				version split: ['k', '_', 'ei', 'e', 'l', '_']
				{'string': 'k/_/ei/e/l/_', 'rgx': '((k))/((_))/((i)|(ie)|(ei)|(e))/((l))/((e))/((_))$'}
				_____REMOVING________['k', '_', 'ei', 'e', 'l', '_']
				version split: ['k', '_', 'ei', 'e', 'l', '_']
				{'string': 'k/_/ei/e/l/_', 'rgx': '((k))/((_))/((i)|(ie)|(ei)|(e))/((l))/((e))/((_))$'}
				_____REMOVING________['k', '_', 'ei', 'e', 'l', '_']
				ANALYSING: kenel
					resolving (4)
					> version: k/e/n/e/l
					> version: k/_/e/n/e/l
					TRYING: l
					adding blocked set: C = C >> l, n, _
					> version: k/e/n/_/e/l
					TRYING: l
					adding blocked set: C = C >> l, n, _
					> version: k/_/e/_/n/e/l
					TRYING: e
					RESULT:  ['_']
				adding dashed alternative: ['k', 'e', 'n', 'e', 'l', '_']
				adding dashed alternative: ['k', '_', 'e', 'n', 'e', '_', 'l']
				adding dashed alternative: ['k', 'e', 'n', '_', 'e', '_', 'l']
				adding dashed alternative: ['k', '_', 'e', '_', 'n', '_', 'e', 'l']
				k/e/n/e/l(CVCVC)
k/_/e/n/e/l(CAVCVC)
k/e/n/_/e/l(CVCAVC)
k/_/e/_/n/e/l(CAVACVC)
k/e/n/e/l/_(CVCVCA)
k/_/e/n/e/_/l(CAVCVAC)
k/e/n/_/e/_/l(CVCAVAC)
k/_/e/_/n/_/e/l(CAVACAVC)
				version split: ['k', 'e', 'n', 'e', 'l']
				{'string': 'k/e/n/e/l', 'rgx': '((k))/((_))/((e))/((_))/((e))/((_))$'}
				_____REMOVING________['k', 'e', 'n', 'e', 'l']
				version split: ['k', '_', 'e', 'n', 'e', 'l']
				{'string': 'k/_/e/n/e/l', 'rgx': '((k))/((_))/((e))/((_))/((e))/((_))$'}
				_____REMOVING________['k', '_', 'e', 'n', 'e', 'l']
				version split: ['k', 'e', 'n', '_', 'e', 'l']
				{'string': 'k/e/n/_/e/l', 'rgx': '((k))/((_))/((e))/((_))/((e))/((_))$'}
				_____REMOVING________['k', 'e', 'n', '_', 'e', 'l']
				version split: ['k', '_', 'e', '_', 'n', 'e', 'l']
				{'string': 'k/_/e/_/n/e/l', 'rgx': '((k))/((_))/((e))/((_))/((e))/((_))$'}
				_____REMOVING________['k', '_', 'e', '_', 'n', 'e', 'l']
				version split: ['k', 'e', 'n', 'e', 'l', '_']
				{'string': 'k/e/n/e/l/_', 'rgx': '((k))/((_))/((e))/((_))/((e))/((_))$'}
				_____REMOVING________['k', 'e', 'n', 'e', 'l', '_']
				version split: ['k', '_', 'e', 'n', 'e', '_', 'l']
				{'string': 'k/_/e/n/e/_/l', 'rgx': '((k))/((_))/((e))/((_))/((e))/((_))$'}
				_____REMOVING________['k', '_', 'e', 'n', 'e', '_', 'l']
				version split: ['k', 'e', 'n', '_', 'e', '_', 'l']
				{'string': 'k/e/n/_/e/_/l', 'rgx': '((k))/((_))/((e))/((_))/((e))/((_))$'}
				_____REMOVING________['k', 'e', 'n', '_', 'e', '_', 'l']
				version split: ['k', '_', 'e', '_', 'n', '_', 'e', 'l']
				{'string': 'k/_/e/_/n/_/e', 'rgx': '((k))/((_))/((e))/((_))/((e))/((_))$'}
				_____REMOVING________['k', '_', 'e', '_', 'n', '_', 'e', 'l']
				ANALYSING: knel
					resolving (2)
					> version: k/n/e/l
					> version: k/n/e/l/_
					RESULT:  ['_']
				adding dashed alternative: ['k', 'n', 'e', 'l', '_']
				adding dashed alternative: ['k', 'n', 'e', 'l', '_', '_']
				k/n/e/l(CCVC)
k/n/e/l/_(CCVCA)
k/n/e/l/_(CCVCA)
k/n/e/l/_/_(CCVCAA)
				version split: ['k', 'n', 'e', 'l']
				{'string': 'k/n/e/l', 'rgx': '((k))/((n))/((e))/((l))/((_))/((_))$'}
				_____REMOVING________['k', 'n', 'e', 'l']
				version split: ['k', 'n', 'e', 'l', '_']
				{'string': 'k/n/e/l/_', 'rgx': '((k))/((n))/((e))/((l))/((_))/((_))$'}
				_____REMOVING________['k', 'n', 'e', 'l', '_']
				version split: ['k', 'n', 'e', 'l', '_']
				{'string': 'k/n/e/l/_', 'rgx': '((k))/((n))/((e))/((l))/((_))/((_))$'}
				_____REMOVING________['k', 'n', 'e', 'l', '_']
				version split: ['k', 'n', 'e', 'l', '_', '_']
				{'string': 'k/n/e/l/_/_', 'rgx': '((k))/((n))/((e))/((l))/((_))/((_))$'}
				ANALYSING: kneo
					resolving (4)
					> version: k/n/e/o
					> version: k/n/eo
					> version: k/n/e/_/o
					> version: k/n/eo/_
					RESULT:  ['_']
				adding dashed alternative: ['k', 'n', 'e', 'o', '_']
				adding dashed alternative: ['k', 'n', 'eo', '_']
				adding dashed alternative: ['k', 'n', 'e', '_', 'o', '_']
				adding dashed alternative: ['k', 'n', 'eo', '_', '_']
				k/n/e/o(CCVV)
k/n/eo(CCV)
k/n/e/_/o(CCVAV)
k/n/eo/_(CCVA)
k/n/e/o/_(CCVVA)
k/n/eo/_(CCVA)
k/n/e/_/o/_(CCVAVA)
k/n/eo/_/_(CCVAA)
				version split: ['k', 'n', 'e', 'o']
				{'string': 'k/n/e/o', 'rgx': '((k))/((n))/((eo)|(e))/((_))/((o))/((_))$'}
				_____REMOVING________['k', 'n', 'e', 'o']
				version split: ['k', 'n', 'eo']
				{'string': 'k/n/eo', 'rgx': '((k))/((n))/((eo)|(e))/((_))/((o))/((_))$'}
				_____REMOVING________['k', 'n', 'eo']
				version split: ['k', 'n', 'e', '_', 'o']
				{'string': 'k/n/e/_/o', 'rgx': '((k))/((n))/((eo)|(e))/((_))/((o))/((_))$'}
				_____REMOVING________['k', 'n', 'e', '_', 'o']
				version split: ['k', 'n', 'eo', '_']
				{'string': 'k/n/eo/_', 'rgx': '((k))/((n))/((eo)|(e))/((_))/((o))/((_))$'}
				_____REMOVING________['k', 'n', 'eo', '_']
				version split: ['k', 'n', 'e', 'o', '_']
				{'string': 'k/n/e/o/_', 'rgx': '((k))/((n))/((eo)|(e))/((_))/((o))/((_))$'}
				_____REMOVING________['k', 'n', 'e', 'o', '_']
				version split: ['k', 'n', 'eo', '_']
				{'string': 'k/n/eo/_', 'rgx': '((k))/((n))/((eo)|(e))/((_))/((o))/((_))$'}
				_____REMOVING________['k', 'n', 'eo', '_']
				version split: ['k', 'n', 'e', '_', 'o', '_']
				{'string': 'k/n/e/_/o/_', 'rgx': '((k))/((n))/((eo)|(e))/((_))/((o))/((_))$'}
				version split: ['k', 'n', 'eo', '_', '_']
				{'string': 'k/n/eo/_/_', 'rgx': '((k))/((n))/((eo)|(e))/((_))/((o))/((_))$'}
				_____REMOVING________['k', 'n', 'eo', '_', '_']
				ANALYSING: kneol
					resolving (4)
					> version: k/n/e/o/l
					> version: k/n/eo/l
					> version: k/n/e/o/_/l
					TRYING: l
					adding blocked set: C = C >> l, n, _
					> version: k/n/eo/l/_
					RESULT:  ['_']
				adding dashed alternative: ['k', 'n', 'e', 'o', 'l', '_']
				adding dashed alternative: ['k', 'n', 'eo', 'l', '_']
				adding dashed alternative: ['k', 'n', 'e', 'o', '_', '_', 'l']
				adding dashed alternative: ['k', 'n', 'eo', 'l', '_', '_']
				k/n/e/o/l(CCVVC)
k/n/eo/l(CCVC)
k/n/e/o/_/l(CCVVAC)
k/n/eo/l/_(CCVCA)
k/n/e/o/l/_(CCVVCA)
k/n/eo/l/_(CCVCA)
k/n/e/o/_/_/l(CCVVAAC)
k/n/eo/l/_/_(CCVCAA)
				version split: ['k', 'n', 'e', 'o', 'l']
				{'string': 'k/n/e/o/l', 'rgx': '((k))/((n))/((eo)|(e))/((l))/((_))/((_))$'}
				_____REMOVING________['k', 'n', 'e', 'o', 'l']
				version split: ['k', 'n', 'eo', 'l']
				{'string': 'k/n/eo/l', 'rgx': '((k))/((n))/((eo)|(e))/((l))/((_))/((_))$'}
				_____REMOVING________['k', 'n', 'eo', 'l']
				version split: ['k', 'n', 'e', 'o', '_', 'l']
				{'string': 'k/n/e/o/_/l', 'rgx': '((k))/((n))/((eo)|(e))/((l))/((_))/((_))$'}
				_____REMOVING________['k', 'n', 'e', 'o', '_', 'l']
				version split: ['k', 'n', 'eo', 'l', '_']
				{'string': 'k/n/eo/l/_', 'rgx': '((k))/((n))/((eo)|(e))/((l))/((_))/((_))$'}
				_____REMOVING________['k', 'n', 'eo', 'l', '_']
				version split: ['k', 'n', 'e', 'o', 'l', '_']
				{'string': 'k/n/e/o/l/_', 'rgx': '((k))/((n))/((eo)|(e))/((l))/((_))/((_))$'}
				_____REMOVING________['k', 'n', 'e', 'o', 'l', '_']
				version split: ['k', 'n', 'eo', 'l', '_']
				{'string': 'k/n/eo/l/_', 'rgx': '((k))/((n))/((eo)|(e))/((l))/((_))/((_))$'}
				_____REMOVING________['k', 'n', 'eo', 'l', '_']
				version split: ['k', 'n', 'e', 'o', '_', '_', 'l']
				{'string': 'k/n/e/o/_/_/l', 'rgx': '((k))/((n))/((eo)|(e))/((l))/((_))/((_))$'}
				_____REMOVING________['k', 'n', 'e', 'o', '_', '_', 'l']
				version split: ['k', 'n', 'eo', 'l', '_', '_']
				{'string': 'k/n/eo/l/_/_', 'rgx': '((k))/((n))/((eo)|(e))/((l))/((_))/((_))$'}
				ANALYSING: kneoli
					resolving (4)
					> version: k/n/e/o/l/i
					TRYING: i
					adding blocked set: C = C >> i, n, _
					> version: k/n/e/o/l/i
					TRYING: i
					adding blocked set: C = C >> i, n, _
					> version: k/n/eo/l/i
					> version: k/n/eo/l/i
					RESULT:  ['_']
				adding dashed alternative: ['k', 'n', 'e', 'o', 'l', '_', 'i']
				adding dashed alternative: ['k', 'n', 'e', 'o', 'l', '_', 'i']
				adding dashed alternative: ['k', 'n', 'eo', 'l', 'i', '_']
				adding dashed alternative: ['k', 'n', 'eo', 'l', 'i', '_']
				k/n/e/o/l/i(CCVVCC)
k/n/e/o/l/i(CCVVCV)
k/n/eo/l/i(CCVCC)
k/n/eo/l/i(CCVCV)
k/n/e/o/l/_/i(CCVVCAA)
k/n/e/o/l/_/i(CCVVCAA)
k/n/eo/l/i/_(CCVCAA)
k/n/eo/l/i/_(CCVCAA)
				version split: ['k', 'n', 'e', 'o', 'l', 'i']
				{'string': 'k/n/e/o/l/i', 'rgx': '((k))/((n))/((eo)|(e))/((l))/((i))/((_))$'}
				_____REMOVING________['k', 'n', 'e', 'o', 'l', 'i']
				version split: ['k', 'n', 'e', 'o', 'l', 'i']
				{'string': 'k/n/e/o/l/i', 'rgx': '((k))/((n))/((eo)|(e))/((l))/((i))/((_))$'}
				_____REMOVING________['k', 'n', 'e', 'o', 'l', 'i']
				version split: ['k', 'n', 'eo', 'l', 'i']
				{'string': 'k/n/eo/l/i', 'rgx': '((k))/((n))/((eo)|(e))/((l))/((i))/((_))$'}
				_____REMOVING________['k', 'n', 'eo', 'l', 'i']
				version split: ['k', 'n', 'eo', 'l', 'i']
				{'string': 'k/n/eo/l/i', 'rgx': '((k))/((n))/((eo)|(e))/((l))/((i))/((_))$'}
				_____REMOVING________['k', 'n', 'eo', 'l', 'i']
				version split: ['k', 'n', 'e', 'o', 'l', '_', 'i']
				{'string': 'k/n/e/o/l/_/i', 'rgx': '((k))/((n))/((eo)|(e))/((l))/((i))/((_))$'}
				_____REMOVING________['k', 'n', 'e', 'o', 'l', '_', 'i']
				version split: ['k', 'n', 'e', 'o', 'l', '_', 'i']
				{'string': 'k/n/e/o/l/_/i', 'rgx': '((k))/((n))/((eo)|(e))/((l))/((i))/((_))$'}
				_____REMOVING________['k', 'n', 'e', 'o', 'l', '_', 'i']
				version split: ['k', 'n', 'eo', 'l', 'i', '_']
				{'string': 'k/n/eo/l/i/_', 'rgx': '((k))/((n))/((eo)|(e))/((l))/((i))/((_))$'}
				version split: ['k', 'n', 'eo', 'l', 'i', '_']
				{'string': 'k/n/eo/l/i/_', 'rgx': '((k))/((n))/((eo)|(e))/((l))/((i))/((_))$'}
				ANALYSING: kneoly
					resolving (4)
					> version: k/n/e/o/l/y
					TRYING: y
					adding blocked set: C = C >> y, n, _
					> version: k/n/e/o/l/y
					TRYING: y
					adding blocked set: C = C >> y, n, _
					> version: k/n/eo/l/y
					> version: k/n/eo/l/y
					RESULT:  ['_']
				adding dashed alternative: ['k', 'n', 'e', 'o', 'l', '_', 'y']
				adding dashed alternative: ['k', 'n', 'e', 'o', 'l', '_', 'y']
				adding dashed alternative: ['k', 'n', 'eo', 'l', 'y', '_']
				adding dashed alternative: ['k', 'n', 'eo', 'l', 'y', '_']
				k/n/e/o/l/y(CCVVCC)
k/n/e/o/l/y(CCVVCV)
k/n/eo/l/y(CCVCC)
k/n/eo/l/y(CCVCV)
k/n/e/o/l/_/y(CCVVCAA)
k/n/e/o/l/_/y(CCVVCAA)
k/n/eo/l/y/_(CCVCAA)
k/n/eo/l/y/_(CCVCAA)
				version split: ['k', 'n', 'e', 'o', 'l', 'y']
				{'string': 'k/n/e/o/l/y', 'rgx': '((k))/((n))/((eo)|(e))/((l))/((y))/((_))$'}
				_____REMOVING________['k', 'n', 'e', 'o', 'l', 'y']
				version split: ['k', 'n', 'e', 'o', 'l', 'y']
				{'string': 'k/n/e/o/l/y', 'rgx': '((k))/((n))/((eo)|(e))/((l))/((y))/((_))$'}
				_____REMOVING________['k', 'n', 'e', 'o', 'l', 'y']
				version split: ['k', 'n', 'eo', 'l', 'y']
				{'string': 'k/n/eo/l/y', 'rgx': '((k))/((n))/((eo)|(e))/((l))/((y))/((_))$'}
				_____REMOVING________['k', 'n', 'eo', 'l', 'y']
				version split: ['k', 'n', 'eo', 'l', 'y']
				{'string': 'k/n/eo/l/y', 'rgx': '((k))/((n))/((eo)|(e))/((l))/((y))/((_))$'}
				_____REMOVING________['k', 'n', 'eo', 'l', 'y']
				version split: ['k', 'n', 'e', 'o', 'l', '_', 'y']
				{'string': 'k/n/e/o/l/_/y', 'rgx': '((k))/((n))/((eo)|(e))/((l))/((y))/((_))$'}
				_____REMOVING________['k', 'n', 'e', 'o', 'l', '_', 'y']
				version split: ['k', 'n', 'e', 'o', 'l', '_', 'y']
				{'string': 'k/n/e/o/l/_/y', 'rgx': '((k))/((n))/((eo)|(e))/((l))/((y))/((_))$'}
				_____REMOVING________['k', 'n', 'e', 'o', 'l', '_', 'y']
				version split: ['k', 'n', 'eo', 'l', 'y', '_']
				{'string': 'k/n/eo/l/y/_', 'rgx': '((k))/((n))/((eo)|(e))/((l))/((y))/((_))$'}
				version split: ['k', 'n', 'eo', 'l', 'y', '_']
				{'string': 'k/n/eo/l/y/_', 'rgx': '((k))/((n))/((eo)|(e))/((l))/((y))/((_))$'}
				ANALYSING: kneƿ
					resolving (8)
					> version: k/n/e/ƿ
					> version: k/n/eƿ
					> version: k/n/e/_/ƿ
					> version: k/n/eƿ/_
					> version: k/n/e/ƿ/_
					> version: k/n/eƿ/_
					> version: k/n/e/_/_/ƿ
					TRYING: ƿ
					adding blocked set: C = C >> ƿ, n, _
					> version: k/n/eƿ/_/_
					RESULT:  ['_']
				adding dashed alternative: ['k', 'n', 'e', 'ƿ', '_']
				adding dashed alternative: ['k', 'n', 'eƿ', '_']
				adding dashed alternative: ['k', 'n', 'e', '_', 'ƿ', '_']
				adding dashed alternative: ['k', 'n', 'eƿ', '_', '_']
				adding dashed alternative: ['k', 'n', 'e', 'ƿ', '_', '_']
				adding dashed alternative: ['k', 'n', 'eƿ', '_', '_']
				adding dashed alternative: ['k', 'n', 'e', '_', '_', '_', 'ƿ']
				adding dashed alternative: ['k', 'n', 'eƿ', '_', '_', '_']
				k/n/e/ƿ(CCVC)
k/n/eƿ(CCV)
k/n/e/_/ƿ(CCVAC)
k/n/eƿ/_(CCVA)
k/n/e/ƿ/_(CCVCA)
k/n/eƿ/_(CCVA)
k/n/e/_/_/ƿ(CCVAAC)
k/n/eƿ/_/_(CCVAA)
k/n/e/ƿ/_(CCVCA)
k/n/eƿ/_(CCVA)
k/n/e/_/ƿ/_(CCVACA)
k/n/eƿ/_/_(CCVAA)
k/n/e/ƿ/_/_(CCVCAA)
k/n/eƿ/_/_(CCVAA)
k/n/e/_/_/_/ƿ(CCVAAAC)
k/n/eƿ/_/_/_(CCVAAA)
				version split: ['k', 'n', 'e', 'ƿ']
				{'string': 'k/n/e/ƿ', 'rgx': '((k))/((n))/((eƿ)|(e))/((_))/((_))/((_))$'}
				_____REMOVING________['k', 'n', 'e', 'ƿ']
				version split: ['k', 'n', 'eƿ']
				{'string': 'k/n/eƿ', 'rgx': '((k))/((n))/((eƿ)|(e))/((_))/((_))/((_))$'}
				_____REMOVING________['k', 'n', 'eƿ']
				version split: ['k', 'n', 'e', '_', 'ƿ']
				{'string': 'k/n/e/_/ƿ', 'rgx': '((k))/((n))/((eƿ)|(e))/((_))/((_))/((_))$'}
				_____REMOVING________['k', 'n', 'e', '_', 'ƿ']
				version split: ['k', 'n', 'eƿ', '_']
				{'string': 'k/n/eƿ/_', 'rgx': '((k))/((n))/((eƿ)|(e))/((_))/((_))/((_))$'}
				_____REMOVING________['k', 'n', 'eƿ', '_']
				version split: ['k', 'n', 'e', 'ƿ', '_']
				{'string': 'k/n/e/ƿ/_', 'rgx': '((k))/((n))/((eƿ)|(e))/((_))/((_))/((_))$'}
				_____REMOVING________['k', 'n', 'e', 'ƿ', '_']
				version split: ['k', 'n', 'eƿ', '_']
				{'string': 'k/n/eƿ/_', 'rgx': '((k))/((n))/((eƿ)|(e))/((_))/((_))/((_))$'}
				_____REMOVING________['k', 'n', 'eƿ', '_']
				version split: ['k', 'n', 'e', '_', '_', 'ƿ']
				{'string': 'k/n/e/_/_/ƿ', 'rgx': '((k))/((n))/((eƿ)|(e))/((_))/((_))/((_))$'}
				_____REMOVING________['k', 'n', 'e', '_', '_', 'ƿ']
				version split: ['k', 'n', 'eƿ', '_', '_']
				{'string': 'k/n/eƿ/_/_', 'rgx': '((k))/((n))/((eƿ)|(e))/((_))/((_))/((_))$'}
				_____REMOVING________['k', 'n', 'eƿ', '_', '_']
				version split: ['k', 'n', 'e', 'ƿ', '_']
				{'string': 'k/n/e/ƿ/_', 'rgx': '((k))/((n))/((eƿ)|(e))/((_))/((_))/((_))$'}
				_____REMOVING________['k', 'n', 'e', 'ƿ', '_']
				version split: ['k', 'n', 'eƿ', '_']
				{'string': 'k/n/eƿ/_', 'rgx': '((k))/((n))/((eƿ)|(e))/((_))/((_))/((_))$'}
				_____REMOVING________['k', 'n', 'eƿ', '_']
				version split: ['k', 'n', 'e', '_', 'ƿ', '_']
				{'string': 'k/n/e/_/ƿ/_', 'rgx': '((k))/((n))/((eƿ)|(e))/((_))/((_))/((_))$'}
				_____REMOVING________['k', 'n', 'e', '_', 'ƿ', '_']
				version split: ['k', 'n', 'eƿ', '_', '_']
				{'string': 'k/n/eƿ/_/_', 'rgx': '((k))/((n))/((eƿ)|(e))/((_))/((_))/((_))$'}
				_____REMOVING________['k', 'n', 'eƿ', '_', '_']
				version split: ['k', 'n', 'e', 'ƿ', '_', '_']
				{'string': 'k/n/e/ƿ/_/_', 'rgx': '((k))/((n))/((eƿ)|(e))/((_))/((_))/((_))$'}
				_____REMOVING________['k', 'n', 'e', 'ƿ', '_', '_']
				version split: ['k', 'n', 'eƿ', '_', '_']
				{'string': 'k/n/eƿ/_/_', 'rgx': '((k))/((n))/((eƿ)|(e))/((_))/((_))/((_))$'}
				_____REMOVING________['k', 'n', 'eƿ', '_', '_']
				version split: ['k', 'n', 'e', '_', '_', '_', 'ƿ']
				{'string': 'k/n/e/_/_/_/ƿ', 'rgx': '((k))/((n))/((eƿ)|(e))/((_))/((_))/((_))$'}
				_____REMOVING________['k', 'n', 'e', '_', '_', '_', 'ƿ']
				version split: ['k', 'n', 'eƿ', '_', '_', '_']
				{'string': 'k/n/eƿ/_/_/_', 'rgx': '((k))/((n))/((eƿ)|(e))/((_))/((_))/((_))$'}
				ANALYSING: knewel
					resolving (4)
					> version: k/n/e/w/e/l
					TRYING: l
					adding blocked set: C = C >> l, n, _
					> version: k/n/ew/e/l
					> version: k/n/e/_/w/e/l
					TRYING: e
					> version: k/n/ew/_/e/l
					TRYING: l
					adding blocked set: C = C >> l, n, _
					RESULT:  ['_']
				adding dashed alternative: ['k', 'n', 'e', 'w', 'e', '_', 'l']
				adding dashed alternative: ['k', 'n', 'ew', 'e', 'l', '_']
				adding dashed alternative: ['k', 'n', 'e', '_', 'w', '_', 'e', 'l']
				adding dashed alternative: ['k', 'n', 'ew', '_', 'e', '_', 'l']
				k/n/e/w/e/l(CCVCVC)
k/n/ew/e/l(CCVVC)
k/n/e/_/w/e/l(CCVACVC)
k/n/ew/_/e/l(CCVAVC)
k/n/e/w/e/_/l(CCVCVAC)
k/n/ew/e/l/_(CCVVCA)
k/n/e/_/w/_/e/l(CCVACAVC)
k/n/ew/_/e/_/l(CCVAVAC)
				version split: ['k', 'n', 'e', 'w', 'e', 'l']
				{'string': 'k/n/e/w/e/l', 'rgx': '((k))/((n))/((ew)|(e))/((_))/((e))/((_))$'}
				_____REMOVING________['k', 'n', 'e', 'w', 'e', 'l']
				version split: ['k', 'n', 'ew', 'e', 'l']
				{'string': 'k/n/ew/e/l', 'rgx': '((k))/((n))/((ew)|(e))/((_))/((e))/((_))$'}
				_____REMOVING________['k', 'n', 'ew', 'e', 'l']
				version split: ['k', 'n', 'e', '_', 'w', 'e', 'l']
				{'string': 'k/n/e/_/w/e/l', 'rgx': '((k))/((n))/((ew)|(e))/((_))/((e))/((_))$'}
				_____REMOVING________['k', 'n', 'e', '_', 'w', 'e', 'l']
				version split: ['k', 'n', 'ew', '_', 'e', 'l']
				{'string': 'k/n/ew/_/e/l', 'rgx': '((k))/((n))/((ew)|(e))/((_))/((e))/((_))$'}
				_____REMOVING________['k', 'n', 'ew', '_', 'e', 'l']
				version split: ['k', 'n', 'e', 'w', 'e', '_', 'l']
				{'string': 'k/n/e/w/e/_/l', 'rgx': '((k))/((n))/((ew)|(e))/((_))/((e))/((_))$'}
				_____REMOVING________['k', 'n', 'e', 'w', 'e', '_', 'l']
				version split: ['k', 'n', 'ew', 'e', 'l', '_']
				{'string': 'k/n/ew/e/l/_', 'rgx': '((k))/((n))/((ew)|(e))/((_))/((e))/((_))$'}
				_____REMOVING________['k', 'n', 'ew', 'e', 'l', '_']
				version split: ['k', 'n', 'e', '_', 'w', '_', 'e', 'l']
				{'string': 'k/n/e/_/w/_/e', 'rgx': '((k))/((n))/((ew)|(e))/((_))/((e))/((_))$'}
				_____REMOVING________['k', 'n', 'e', '_', 'w', '_', 'e', 'l']
				version split: ['k', 'n', 'ew', '_', 'e', '_', 'l']
				{'string': 'k/n/ew/_/e/_/l', 'rgx': '((k))/((n))/((ew)|(e))/((_))/((e))/((_))$'}
				_____REMOVING________['k', 'n', 'ew', '_', 'e', '_', 'l']
		only one version left: ['c', 'n', 'e', '_', '_', '_']
		only one version left: ['c', 'n', 'e', 'l', '_', '_']
		only one version left: ['c', 'n', 'e', '_', 'o', '_']
		only one version left: ['c', 'n', 'eo', 'l', '_', '_']
		only one version left: ['c', 'n', 'eo', 'l', 'i', '_']
		only one version left: ['c', 'n', 'eu', 'l', '_', '_']
		only one version left: ['c', 'n', 'eƿ', 'l', '_', '_']
		only one version left: ['c', 'n', 'ou', 'l', '_', '_']
		only one version left: ['c', 'n', 'y', 'l', 'e', '_']
		FAIL: 
		FAIL: 
		only one version left: ['k', 'n', 'e', 'l', '_', '_']
		only one version left: ['k', 'n', 'e', '_', 'o', '_']
		only one version left: ['k', 'n', 'eo', 'l', '_', '_']
		only one version left: ['k', 'n', 'eo', 'l', 'i', '_']
		only one version left: ['k', 'n', 'eo', 'l', 'y', '_']
		only one version left: ['k', 'n', 'eƿ', '_', '_', '_']
		FAIL: 
		SPLIT: ['c', 'n', 'eo', 'l', 'i', 'n']
		SPLIT: ['c', 'n', 'e', '_', '_', '_']
		['c', 'n', 'e', '_', '_', '_']
		SPLIT: ['c', 'n', 'e', 'l', '_', '_']
		['c', 'n', 'e', 'l', '_', '_']
		SPLIT: ['c', 'n', 'e', '_', 'o', '_']
		['c', 'n', 'e', '_', 'o', '_']
		SPLIT: ['c', 'n', 'eo', 'l', '_', '_']
		['c', 'n', 'eo', 'l', '_', '_']
		SPLIT: ['c', 'n', 'eo', 'l', 'i', '_']
		['c', 'n', 'eo', 'l', 'i', '_']
		['c', 'n', 'eo', 'l', 'i', '_']
		SPLIT: ['c', 'n', 'eu', 'l', '_', '_']
		['c', 'n', 'eu', 'l', '_', '_']
		SPLIT: ['c', 'n', 'eƿ', 'l', '_', '_']
		['c', 'n', 'eƿ', 'l', '_', '_']
		SPLIT: ['c', 'n', 'ou', 'l', '_', '_']
		['c', 'n', 'ou', 'l', '_', '_']
		SPLIT: ['c', 'n', 'y', 'l', 'e', '_']
		['c', 'n', 'y', 'l', 'e', '_']
		['c', 'n', 'y', 'l', 'e', '_']
		SPLIT: ['k', '_', 'i.ie.ei.e', 'l', 'e', '_', '----!']
		SPLIT: ['k', '_', 'e', '_', 'e', '_', '----!']
		SPLIT: ['k', 'n', 'e', 'l', '_', '_']
		['k', 'n', 'e', 'l', '_', '_']
		SPLIT: ['k', 'n', 'e', '_', 'o', '_']
		['k', 'n', 'e', '_', 'o', '_']
		SPLIT: ['k', 'n', 'eo', 'l', '_', '_']
		['k', 'n', 'eo', 'l', '_', '_']
		SPLIT: ['k', 'n', 'eo', 'l', 'i', '_']
		['k', 'n', 'eo', 'l', 'i', '_']
		['k', 'n', 'eo', 'l', 'i', '_']
		SPLIT: ['k', 'n', 'eo', 'l', 'y', '_']
		['k', 'n', 'eo', 'l', 'y', '_']
		['k', 'n', 'eo', 'l', 'y', '_']
		SPLIT: ['k', 'n', 'eƿ', '_', '_', '_']
		['k', 'n', 'eƿ', '_', '_', '_']
		SPLIT: ['k', 'n', 'ew.e', '_', 'e', '_', '----!']
		version for pattern CCVCCC is INVALID
		[{'ie', 'eo', 'i', 'o', 'ou', 'y', 'eƿ', 'ei', 'eu', 'ew', 'e'}]
		3
		POSSIBLE CHANGE: 3 : Palatal Vicinity l-deletion
		OVERVIEW: version for pattern CCVCCC
{'ie', 'eo', 'i', 'o', 'ou', 'y', 'eƿ', 'ei', 'eu', 'ew', 'e'}
faulty splits: 3
ki.ie.ei.ele----! <-! keiel
kee----! <-! kenel
knew.ee----! <-! knewel
c | n | eo | l | i | n
c | n | e | _ | _ | _
c | n | e | l | _ | _
c | n | e | _ | o | _
c | n | eo | l | _ | _
c | n | eo | l | i | _
c | n | eu | l | _ | _
c | n | eƿ | l | _ | _
c | n | ou | l | _ | _
c | n | y | l | e | _
k | _ | i.ie.ei.e | l | e | _ | ----!
k | _ | e | _ | e | _ | ----!
k | n | e | l | _ | _
k | n | e | _ | o | _
k | n | eo | l | _ | _
k | n | eo | l | i | _
k | n | eo | l | y | _
k | n | eƿ | _ | _ | _
k | n | ew.e | _ | e | _ | ----!
3 : {'ƿ', 'l', '_'},{'l', 'n', '_'},{'l', 'w', '_'}
5 : {'ƿ', 'n', '_'},{'i', 'n', '_'},{'y', 'n', '_'},{'l', 'n', '_'}
	FOUND __ 0 __ VALID VERSION(S)
	POSSIBLE CHANGE: 3 : Palatal Vicinity l-deletion
	OVERVIEW: version for pattern CCVCCC
{'ie', 'eo', 'i', 'o', 'ou', 'y', 'eƿ', 'ei', 'eu', 'ew', 'e'}
faulty splits: 3
ki.ie.ei.ele----! <-! keiel
kee----! <-! kenel
knew.ee----! <-! knewel
c | n | eo | l | i | n
c | n | e | _ | _ | _
c | n | e | l | _ | _
c | n | e | _ | o | _
c | n | eo | l | _ | _
c | n | eo | l | i | _
c | n | eu | l | _ | _
c | n | eƿ | l | _ | _
c | n | ou | l | _ | _
c | n | y | l | e | _
k | _ | i.ie.ei.e | l | e | _ | ----!
k | _ | e | _ | e | _ | ----!
k | n | e | l | _ | _
k | n | e | _ | o | _
k | n | eo | l | _ | _
k | n | eo | l | i | _
k | n | eo | l | y | _
k | n | eƿ | _ | _ | _
k | n | ew.e | _ | e | _ | ----!
3 : {'ƿ', 'l', '_'},{'l', 'n', '_'},{'l', 'w', '_'}
5 : {'ƿ', 'n', '_'},{'i', 'n', '_'},{'y', 'n', '_'},{'l', 'n', '_'}
	{'CCCVCVC', 'CCVCCCC', 'CCCVCCC'}
		[[{'lit': 'eo', 'ln': 2, 'index': 2}]]
		[[{'lit': 'eo', 'ln': 2, 'index': 2}]]
		[[{'lit': 'eo', 'ln': 2, 'index': 2}]]
		[[{'lit': 'eo', 'ln': 2, 'index': 2}]]
		[[{'lit': 'eu', 'ln': 2, 'index': 2}]]
		[[{'lit': 'eƿ', 'ln': 2, 'index': 2}]]
		[[{'lit': 'ou', 'ln': 2, 'index': 2}]]
		[[{'lit': 'ie', 'ln': 2, 'index': 2}], [{'lit': 'ei', 'ln': 2, 'index': 1}]]
		[[{'lit': 'ie', 'ln': 2, 'index': 2}], [{'lit': 'ei', 'ln': 2, 'index': 1}], [{'lit': 'ie', 'ln': 2, 'index': 2}, {'lit': 'ei', 'ln': 2, 'index': 1}]]
		[[{'lit': 'eo', 'ln': 2, 'index': 2}]]
		[[{'lit': 'eo', 'ln': 2, 'index': 2}]]
		[[{'lit': 'eo', 'ln': 2, 'index': 2}]]
		[[{'lit': 'eo', 'ln': 2, 'index': 2}]]
		[[{'lit': 'eƿ', 'ln': 2, 'index': 2}]]
		[[{'lit': 'ew', 'ln': 2, 'index': 2}]]
		MIN pattern length=6
		Pattern CCVCVC is valid
		Pattern CCVVCVC is invalid
		Pattern CCVC is invalid
		Pattern CCVCCC is valid
		Pattern CCVV is invalid
		Pattern CCCCV is invalid
		Pattern CCVVCCC is invalid
		Pattern CCVVCV is invalid
		Pattern CVVVC is invalid
		Pattern CCVCC is invalid
		Pattern CCVVC is invalid
		Pattern CCV is invalid
		Pattern CCVVCC is invalid
		Pattern CVCVC is invalid
		Pattern CCVCV is invalid
		Pattern CVVC is invalid
		Making the selection for pattern: CCVCVC
		Selection for pattern: CCVCVC completed
		Making a version for pattern: CCVCVC
				___CCVCVC : 0___
					ANALYSING: cneolin
					adding littera based on matching pattern
					ANALYSING: knewel
					adding littera based on matching pattern
					ANALYSING: cne
						resolving (1)
						> version: c/n/e
						TRYING: c
						RESULT:  ['c']
					ANALYSING: cnel
						resolving (1)
						> version: c/n/e/l
						TRYING: c
						RESULT:  ['c']
					ANALYSING: cneo
						resolving (2)
						> version: c/n/e/o
						TRYING: c
						> version: c/n/eo
						TRYING: c
						RESULT:  ['c']
					ANALYSING: cneol
						resolving (2)
						> version: c/n/e/o/l
						TRYING: c
						> version: c/n/eo/l
						TRYING: c
						RESULT:  ['c']
					ANALYSING: cneoli
						resolving (4)
						> version: c/n/e/o/l/i
						TRYING: c
						> version: c/n/e/o/l/i
						TRYING: c
						> version: c/n/eo/l/i
						TRYING: c
						> version: c/n/eo/l/i
						TRYING: c
						RESULT:  ['c']
					ANALYSING: cneul
						resolving (3)
						> version: c/n/e/u/l
						TRYING: c
						> version: c/n/e/u/l
						TRYING: c
						> version: c/n/eu/l
						TRYING: c
						RESULT:  ['c']
					ANALYSING: cneƿl
						resolving (2)
						> version: c/n/e/ƿ/l
						TRYING: c
						> version: c/n/eƿ/l
						TRYING: c
						RESULT:  ['c']
					ANALYSING: cnoul
						resolving (3)
						> version: c/n/o/u/l
						TRYING: c
						> version: c/n/o/u/l
						TRYING: c
						> version: c/n/ou/l
						TRYING: c
						RESULT:  ['c']
					ANALYSING: cnyle
						resolving (2)
						> version: c/n/y/l/e
						TRYING: c
						> version: c/n/y/l/e
						TRYING: c
						RESULT:  ['c']
					ANALYSING: keiel
						resolving (5)
						> version: k/e/i/e/l
						TRYING: k
						> version: k/e/i/e/l
						TRYING: k
						> version: k/e/ie/l
						TRYING: k
						> version: k/ei/e/l
						TRYING: k
						> version: k/ei/e/l
						TRYING: k
						RESULT:  ['k']
					ANALYSING: kenel
						resolving (1)
						> version: k/e/n/e/l
						TRYING: k
						RESULT:  ['k']
					ANALYSING: knel
						resolving (1)
						> version: k/n/e/l
						TRYING: k
						RESULT:  ['k']
					ANALYSING: kneo
						resolving (2)
						> version: k/n/e/o
						TRYING: k
						> version: k/n/eo
						TRYING: k
						RESULT:  ['k']
					ANALYSING: kneol
						resolving (2)
						> version: k/n/e/o/l
						TRYING: k
						> version: k/n/eo/l
						TRYING: k
						RESULT:  ['k']
					ANALYSING: kneoli
						resolving (4)
						> version: k/n/e/o/l/i
						TRYING: k
						> version: k/n/e/o/l/i
						TRYING: k
						> version: k/n/eo/l/i
						TRYING: k
						> version: k/n/eo/l/i
						TRYING: k
						RESULT:  ['k']
					ANALYSING: kneoly
						resolving (4)
						> version: k/n/e/o/l/y
						TRYING: k
						> version: k/n/e/o/l/y
						TRYING: k
						> version: k/n/eo/l/y
						TRYING: k
						> version: k/n/eo/l/y
						TRYING: k
						RESULT:  ['k']
					ANALYSING: kneƿ
						resolving (2)
						> version: k/n/e/ƿ
						TRYING: k
						> version: k/n/eƿ
						TRYING: k
						RESULT:  ['k']
				___CCVCVC : 1___
					ANALYSING: cneolin
					adding littera based on matching pattern
					ANALYSING: knewel
					adding littera based on matching pattern
					ANALYSING: cne
						resolving (1)
						> version: c/n/e
						TRYING: n
						RESULT:  ['n']
					ANALYSING: cnel
						resolving (1)
						> version: c/n/e/l
						TRYING: n
						RESULT:  ['n']
					ANALYSING: cneo
						resolving (2)
						> version: c/n/e/o
						TRYING: n
						> version: c/n/eo
						TRYING: n
						RESULT:  ['n']
					ANALYSING: cneol
						resolving (2)
						> version: c/n/e/o/l
						TRYING: n
						> version: c/n/eo/l
						TRYING: n
						RESULT:  ['n']
					ANALYSING: cneoli
						resolving (4)
						> version: c/n/e/o/l/i
						TRYING: n
						> version: c/n/e/o/l/i
						TRYING: n
						> version: c/n/eo/l/i
						TRYING: n
						> version: c/n/eo/l/i
						TRYING: n
						RESULT:  ['n']
					ANALYSING: cneul
						resolving (3)
						> version: c/n/e/u/l
						TRYING: n
						> version: c/n/e/u/l
						TRYING: n
						> version: c/n/eu/l
						TRYING: n
						RESULT:  ['n']
					ANALYSING: cneƿl
						resolving (2)
						> version: c/n/e/ƿ/l
						TRYING: n
						> version: c/n/eƿ/l
						TRYING: n
						RESULT:  ['n']
					ANALYSING: cnoul
						resolving (3)
						> version: c/n/o/u/l
						TRYING: n
						> version: c/n/o/u/l
						TRYING: n
						> version: c/n/ou/l
						TRYING: n
						RESULT:  ['n']
					ANALYSING: cnyle
						resolving (2)
						> version: c/n/y/l/e
						TRYING: n
						> version: c/n/y/l/e
						TRYING: n
						RESULT:  ['n']
					ANALYSING: keiel
						resolving (5)
						> version: k/e/i/e/l
						TRYING: e
						> version: k/e/i/e/l
						TRYING: e
						> version: k/e/ie/l
						TRYING: e
						> version: k/ei/e/l
						TRYING: ei
						> version: k/ei/e/l
						TRYING: ei
						RESULT:  ['_']
					adding dashed alternative: ['k', '_', 'e', 'i', 'e', 'l']
					adding dashed alternative: ['k', '_', 'e', 'i', 'e', 'l']
					adding dashed alternative: ['k', '_', 'e', 'ie', 'l']
					adding dashed alternative: ['k', '_', 'ei', 'e', 'l']
					adding dashed alternative: ['k', '_', 'ei', 'e', 'l']
					k/e/i/e/l(CVCVC)
k/e/i/e/l(CVVVC)
k/e/ie/l(CVVC)
k/ei/e/l(CVVC)
k/ei/e/l(CVVC)
k/_/e/i/e/l(CAVAVC)
k/_/e/i/e/l(CAVAVC)
k/_/e/ie/l(CAVVC)
k/_/ei/e/l(CAVVC)
k/_/ei/e/l(CAVVC)
					ANALYSING: kenel
						resolving (1)
						> version: k/e/n/e/l
						TRYING: e
						RESULT:  ['_']
					adding dashed alternative: ['k', '_', 'e', 'n', 'e', 'l']
					k/e/n/e/l(CVCVC)
k/_/e/n/e/l(CAVCVC)
					ANALYSING: knel
						resolving (1)
						> version: k/n/e/l
						TRYING: n
						RESULT:  ['n']
					ANALYSING: kneo
						resolving (2)
						> version: k/n/e/o
						TRYING: n
						> version: k/n/eo
						TRYING: n
						RESULT:  ['n']
					ANALYSING: kneol
						resolving (2)
						> version: k/n/e/o/l
						TRYING: n
						> version: k/n/eo/l
						TRYING: n
						RESULT:  ['n']
					ANALYSING: kneoli
						resolving (4)
						> version: k/n/e/o/l/i
						TRYING: n
						> version: k/n/e/o/l/i
						TRYING: n
						> version: k/n/eo/l/i
						TRYING: n
						> version: k/n/eo/l/i
						TRYING: n
						RESULT:  ['n']
					ANALYSING: kneoly
						resolving (4)
						> version: k/n/e/o/l/y
						TRYING: n
						> version: k/n/e/o/l/y
						TRYING: n
						> version: k/n/eo/l/y
						TRYING: n
						> version: k/n/eo/l/y
						TRYING: n
						RESULT:  ['n']
					ANALYSING: kneƿ
						resolving (2)
						> version: k/n/e/ƿ
						TRYING: n
						> version: k/n/eƿ
						TRYING: n
						RESULT:  ['n']
				___CCVCVC : 2___
					ANALYSING: cneolin
					adding littera based on matching pattern
					ANALYSING: knewel
					adding littera based on matching pattern
					ANALYSING: cne
						resolving (1)
						> version: c/n/e
						TRYING: e
						RESULT:  ['e']
					ANALYSING: cnel
						resolving (1)
						> version: c/n/e/l
						TRYING: e
						RESULT:  ['e']
					ANALYSING: cneo
						resolving (2)
						> version: c/n/e/o
						TRYING: e
						> version: c/n/eo
						TRYING: eo
						>>> MULTIPLE RESOLVE OPTIONS: {'eo', 'e'}
						RESULT:  ['eo', 'e']
					ANALYSING: cneol
						resolving (2)
						> version: c/n/e/o/l
						TRYING: e
						> version: c/n/eo/l
						TRYING: eo
						>>> MULTIPLE RESOLVE OPTIONS: {'eo', 'e'}
						RESULT:  ['eo', 'e']
					ANALYSING: cneoli
						resolving (4)
						> version: c/n/e/o/l/i
						TRYING: e
						> version: c/n/e/o/l/i
						TRYING: e
						> version: c/n/eo/l/i
						TRYING: eo
						>>> MULTIPLE RESOLVE OPTIONS: {'eo', 'e'}
						> version: c/n/eo/l/i
						TRYING: eo
						>>> MULTIPLE RESOLVE OPTIONS: {'eo', 'e'}
						RESULT:  ['eo', 'e']
					ANALYSING: cneul
						resolving (3)
						> version: c/n/e/u/l
						TRYING: e
						> version: c/n/e/u/l
						TRYING: e
						> version: c/n/eu/l
						TRYING: eu
						>>> MULTIPLE RESOLVE OPTIONS: {'eu', 'e'}
						RESULT:  ['eu', 'e']
					ANALYSING: cneƿl
						resolving (2)
						> version: c/n/e/ƿ/l
						TRYING: e
						> version: c/n/eƿ/l
						TRYING: eƿ
						>>> MULTIPLE RESOLVE OPTIONS: {'eƿ', 'e'}
						RESULT:  ['eƿ', 'e']
					ANALYSING: cnoul
						resolving (3)
						> version: c/n/o/u/l
						TRYING: o
						> version: c/n/o/u/l
						TRYING: o
						> version: c/n/ou/l
						TRYING: ou
						>>> MULTIPLE RESOLVE OPTIONS: {'o', 'ou'}
						RESULT:  ['o', 'ou']
					ANALYSING: cnyle
						resolving (2)
						> version: c/n/y/l/e
						TRYING: y
						> version: c/n/y/l/e
						TRYING: y
						RESULT:  ['y']
					ANALYSING: keiel
						resolving (10)
						> version: k/e/i/e/l
						TRYING: i
						> version: k/e/i/e/l
						TRYING: i
						> version: k/e/ie/l
						TRYING: ie
						>>> MULTIPLE RESOLVE OPTIONS: {'i', 'ie'}
						> version: k/ei/e/l
						TRYING: e
						>>> MULTIPLE RESOLVE OPTIONS: {'i', 'ie', 'e'}
						> version: k/ei/e/l
						TRYING: e
						>>> MULTIPLE RESOLVE OPTIONS: {'i', 'ie', 'e'}
						> version: k/_/e/i/e/l
						TRYING: e
						>>> MULTIPLE RESOLVE OPTIONS: {'i', 'ie', 'e'}
						> version: k/_/e/i/e/l
						TRYING: e
						>>> MULTIPLE RESOLVE OPTIONS: {'i', 'ie', 'e'}
						> version: k/_/e/ie/l
						TRYING: e
						>>> MULTIPLE RESOLVE OPTIONS: {'i', 'ie', 'e'}
						> version: k/_/ei/e/l
						TRYING: ei
						>>> MULTIPLE RESOLVE OPTIONS: {'i', 'ie', 'ei', 'e'}
						> version: k/_/ei/e/l
						TRYING: ei
						>>> MULTIPLE RESOLVE OPTIONS: {'i', 'ie', 'ei', 'e'}
						RESULT:  ['i', 'ie', 'ei', 'e']
					ANALYSING: kenel
						resolving (2)
						> version: k/e/n/e/l
						TRYING: n
						> version: k/_/e/n/e/l
						TRYING: e
						RESULT:  ['e']
					ANALYSING: knel
						resolving (1)
						> version: k/n/e/l
						TRYING: e
						RESULT:  ['e']
					ANALYSING: kneo
						resolving (2)
						> version: k/n/e/o
						TRYING: e
						> version: k/n/eo
						TRYING: eo
						>>> MULTIPLE RESOLVE OPTIONS: {'eo', 'e'}
						RESULT:  ['eo', 'e']
					ANALYSING: kneol
						resolving (2)
						> version: k/n/e/o/l
						TRYING: e
						> version: k/n/eo/l
						TRYING: eo
						>>> MULTIPLE RESOLVE OPTIONS: {'eo', 'e'}
						RESULT:  ['eo', 'e']
					ANALYSING: kneoli
						resolving (4)
						> version: k/n/e/o/l/i
						TRYING: e
						> version: k/n/e/o/l/i
						TRYING: e
						> version: k/n/eo/l/i
						TRYING: eo
						>>> MULTIPLE RESOLVE OPTIONS: {'eo', 'e'}
						> version: k/n/eo/l/i
						TRYING: eo
						>>> MULTIPLE RESOLVE OPTIONS: {'eo', 'e'}
						RESULT:  ['eo', 'e']
					ANALYSING: kneoly
						resolving (4)
						> version: k/n/e/o/l/y
						TRYING: e
						> version: k/n/e/o/l/y
						TRYING: e
						> version: k/n/eo/l/y
						TRYING: eo
						>>> MULTIPLE RESOLVE OPTIONS: {'eo', 'e'}
						> version: k/n/eo/l/y
						TRYING: eo
						>>> MULTIPLE RESOLVE OPTIONS: {'eo', 'e'}
						RESULT:  ['eo', 'e']
					ANALYSING: kneƿ
						resolving (2)
						> version: k/n/e/ƿ
						TRYING: e
						> version: k/n/eƿ
						TRYING: eƿ
						>>> MULTIPLE RESOLVE OPTIONS: {'eƿ', 'e'}
						RESULT:  ['eƿ', 'e']
				___CCVCVC : 3___
					ANALYSING: cneolin
					adding littera based on matching pattern
					ANALYSING: knewel
					adding littera based on matching pattern
					ANALYSING: cne
						resolving (1)
						> version: c/n/e
						RESULT:  ['_']
					adding dashed alternative: ['c', 'n', 'e', '_']
					c/n/e(CCV)
c/n/e/_(CCVA)
					ANALYSING: cnel
						resolving (1)
						> version: c/n/e/l
						TRYING: l
						adding blocked set: C = C >> l, w, _
						RESULT:  ['_']
					adding dashed alternative: ['c', 'n', 'e', '_', 'l']
					c/n/e/l(CCVC)
c/n/e/_/l(CCVAC)
					ANALYSING: cneo
						resolving (2)
						> version: c/n/e/o
						TRYING: o
						> version: c/n/eo
						RESULT:  ['_']
					adding dashed alternative: ['c', 'n', 'e', '_', 'o']
					adding dashed alternative: ['c', 'n', 'eo', '_']
					c/n/e/o(CCVV)
c/n/eo(CCV)
c/n/e/_/o(CCVAV)
c/n/eo/_(CCVA)
					ANALYSING: cneol
						resolving (2)
						> version: c/n/e/o/l
						TRYING: o
						> version: c/n/eo/l
						TRYING: l
						adding blocked set: C = C >> l, w, _
						RESULT:  ['_']
					adding dashed alternative: ['c', 'n', 'e', '_', 'o', 'l']
					adding dashed alternative: ['c', 'n', 'eo', '_', 'l']
					c/n/e/o/l(CCVVC)
c/n/eo/l(CCVC)
c/n/e/_/o/l(CCVAVC)
c/n/eo/_/l(CCVAC)
					ANALYSING: cneoli
						resolving (4)
						> version: c/n/e/o/l/i
						TRYING: o
						> version: c/n/e/o/l/i
						TRYING: o
						> version: c/n/eo/l/i
						TRYING: l
						adding blocked set: C = C >> l, w, _
						> version: c/n/eo/l/i
						TRYING: l
						adding blocked set: C = C >> l, w, _
						RESULT:  ['_']
					adding dashed alternative: ['c', 'n', 'e', '_', 'o', 'l', 'i']
					adding dashed alternative: ['c', 'n', 'e', '_', 'o', 'l', 'i']
					adding dashed alternative: ['c', 'n', 'eo', '_', 'l', 'i']
					adding dashed alternative: ['c', 'n', 'eo', '_', 'l', 'i']
					c/n/e/o/l/i(CCVVCC)
c/n/e/o/l/i(CCVVCV)
c/n/eo/l/i(CCVCC)
c/n/eo/l/i(CCVCV)
c/n/e/_/o/l/i(CCVAVCA)
c/n/e/_/o/l/i(CCVAVCA)
c/n/eo/_/l/i(CCVACA)
c/n/eo/_/l/i(CCVACA)
					ANALYSING: cneul
						resolving (3)
						> version: c/n/e/u/l
						TRYING: u
						adding blocked set: C = C >> l, u, w, _
						> version: c/n/e/u/l
						TRYING: u
						adding blocked set: C = C >> l, u, w, _
						> version: c/n/eu/l
						TRYING: l
						adding blocked set: C = C >> l, w, _
						RESULT:  ['_']
					adding dashed alternative: ['c', 'n', 'e', '_', 'u', 'l']
					adding dashed alternative: ['c', 'n', 'e', '_', 'u', 'l']
					adding dashed alternative: ['c', 'n', 'eu', '_', 'l']
					c/n/e/u/l(CCVCC)
c/n/e/u/l(CCVVC)
c/n/eu/l(CCVC)
c/n/e/_/u/l(CCVAAC)
c/n/e/_/u/l(CCVAAC)
c/n/eu/_/l(CCVAC)
					ANALYSING: cneƿl
						resolving (2)
						> version: c/n/e/ƿ/l
						TRYING: ƿ
						adding blocked set: C = C >> ƿ, l, w, _
						> version: c/n/eƿ/l
						TRYING: l
						adding blocked set: C = C >> l, w, _
						RESULT:  ['_']
					adding dashed alternative: ['c', 'n', 'e', '_', 'ƿ', 'l']
					adding dashed alternative: ['c', 'n', 'eƿ', '_', 'l']
					c/n/e/ƿ/l(CCVCC)
c/n/eƿ/l(CCVC)
c/n/e/_/ƿ/l(CCVACC)
c/n/eƿ/_/l(CCVAC)
					ANALYSING: cnoul
						resolving (3)
						> version: c/n/o/u/l
						TRYING: u
						adding blocked set: C = C >> l, u, w, _
						> version: c/n/o/u/l
						TRYING: u
						adding blocked set: C = C >> l, u, w, _
						> version: c/n/ou/l
						TRYING: l
						adding blocked set: C = C >> l, w, _
						RESULT:  ['_']
					adding dashed alternative: ['c', 'n', 'o', '_', 'u', 'l']
					adding dashed alternative: ['c', 'n', 'o', '_', 'u', 'l']
					adding dashed alternative: ['c', 'n', 'ou', '_', 'l']
					c/n/o/u/l(CCVCC)
c/n/o/u/l(CCVVC)
c/n/ou/l(CCVC)
c/n/o/_/u/l(CCVAAC)
c/n/o/_/u/l(CCVAAC)
c/n/ou/_/l(CCVAC)
					ANALYSING: cnyle
						resolving (2)
						> version: c/n/y/l/e
						TRYING: l
						adding blocked set: C = C >> l, w, _
						> version: c/n/y/l/e
						TRYING: l
						adding blocked set: C = C >> l, w, _
						RESULT:  ['_']
					adding dashed alternative: ['c', 'n', 'y', '_', 'l', 'e']
					adding dashed alternative: ['c', 'n', 'y', '_', 'l', 'e']
					c/n/y/l/e(CCCCV)
c/n/y/l/e(CCVCV)
c/n/y/_/l/e(CCAACV)
c/n/y/_/l/e(CCAACV)
					ANALYSING: keiel
						resolving (10)
						> version: k/e/i/e/l
						TRYING: e
						> version: k/e/i/e/l
						TRYING: e
						> version: k/e/ie/l
						TRYING: l
						adding blocked set: C = C >> l, w, _
						> version: k/ei/e/l
						TRYING: l
						adding blocked set: C = C >> l, w, _
						> version: k/ei/e/l
						TRYING: l
						adding blocked set: C = C >> l, w, _
						> version: k/_/e/i/e/l
						TRYING: i
						adding blocked set: C = C >> i, l, w, _
						> version: k/_/e/i/e/l
						TRYING: i
						adding blocked set: C = C >> i, l, w, _
						> version: k/_/e/ie/l
						TRYING: ie
						> version: k/_/ei/e/l
						TRYING: e
						> version: k/_/ei/e/l
						TRYING: e
						RESULT:  ['_']
					adding dashed alternative: ['k', 'e', 'i', '_', 'e', 'l']
					adding dashed alternative: ['k', 'e', 'i', '_', 'e', 'l']
					adding dashed alternative: ['k', 'e', 'ie', '_', 'l']
					adding dashed alternative: ['k', 'ei', 'e', '_', 'l']
					adding dashed alternative: ['k', 'ei', 'e', '_', 'l']
					adding dashed alternative: ['k', '_', 'e', '_', 'i', 'e', 'l']
					adding dashed alternative: ['k', '_', 'e', '_', 'i', 'e', 'l']
					adding dashed alternative: ['k', '_', 'e', '_', 'ie', 'l']
					adding dashed alternative: ['k', '_', 'ei', '_', 'e', 'l']
					adding dashed alternative: ['k', '_', 'ei', '_', 'e', 'l']
					k/e/i/e/l(CVCVC)
k/e/i/e/l(CVVVC)
k/e/ie/l(CVVC)
k/ei/e/l(CVVC)
k/ei/e/l(CVVC)
k/_/e/i/e/l(CAVAVC)
k/_/e/i/e/l(CAVAVC)
k/_/e/ie/l(CAVVC)
k/_/ei/e/l(CAVVC)
k/_/ei/e/l(CAVVC)
k/e/i/_/e/l(CVAAVC)
k/e/i/_/e/l(CVAAVC)
k/e/ie/_/l(CVVAC)
k/ei/e/_/l(CVVAC)
k/ei/e/_/l(CVVAC)
k/_/e/_/i/e/l(CAVAAVC)
k/_/e/_/i/e/l(CAVAAVC)
k/_/e/_/ie/l(CAVAVC)
k/_/ei/_/e/l(CAVAVC)
k/_/ei/_/e/l(CAVAVC)
					ANALYSING: kenel
						resolving (2)
						> version: k/e/n/e/l
						TRYING: e
						> version: k/_/e/n/e/l
						TRYING: n
						adding blocked set: C = C >> l, n, w, _
						RESULT:  ['_']
					adding dashed alternative: ['k', 'e', 'n', '_', 'e', 'l']
					adding dashed alternative: ['k', '_', 'e', '_', 'n', 'e', 'l']
					k/e/n/e/l(CVCVC)
k/_/e/n/e/l(CAVCVC)
k/e/n/_/e/l(CVCAVC)
k/_/e/_/n/e/l(CAVACVC)
					ANALYSING: knel
						resolving (1)
						> version: k/n/e/l
						TRYING: l
						adding blocked set: C = C >> l, w, _
						RESULT:  ['_']
					adding dashed alternative: ['k', 'n', 'e', '_', 'l']
					k/n/e/l(CCVC)
k/n/e/_/l(CCVAC)
					ANALYSING: kneo
						resolving (2)
						> version: k/n/e/o
						TRYING: o
						> version: k/n/eo
						RESULT:  ['_']
					adding dashed alternative: ['k', 'n', 'e', '_', 'o']
					adding dashed alternative: ['k', 'n', 'eo', '_']
					k/n/e/o(CCVV)
k/n/eo(CCV)
k/n/e/_/o(CCVAV)
k/n/eo/_(CCVA)
					ANALYSING: kneol
						resolving (2)
						> version: k/n/e/o/l
						TRYING: o
						> version: k/n/eo/l
						TRYING: l
						adding blocked set: C = C >> l, w, _
						RESULT:  ['_']
					adding dashed alternative: ['k', 'n', 'e', '_', 'o', 'l']
					adding dashed alternative: ['k', 'n', 'eo', '_', 'l']
					k/n/e/o/l(CCVVC)
k/n/eo/l(CCVC)
k/n/e/_/o/l(CCVAVC)
k/n/eo/_/l(CCVAC)
					ANALYSING: kneoli
						resolving (4)
						> version: k/n/e/o/l/i
						TRYING: o
						> version: k/n/e/o/l/i
						TRYING: o
						> version: k/n/eo/l/i
						TRYING: l
						adding blocked set: C = C >> l, w, _
						> version: k/n/eo/l/i
						TRYING: l
						adding blocked set: C = C >> l, w, _
						RESULT:  ['_']
					adding dashed alternative: ['k', 'n', 'e', '_', 'o', 'l', 'i']
					adding dashed alternative: ['k', 'n', 'e', '_', 'o', 'l', 'i']
					adding dashed alternative: ['k', 'n', 'eo', '_', 'l', 'i']
					adding dashed alternative: ['k', 'n', 'eo', '_', 'l', 'i']
					k/n/e/o/l/i(CCVVCC)
k/n/e/o/l/i(CCVVCV)
k/n/eo/l/i(CCVCC)
k/n/eo/l/i(CCVCV)
k/n/e/_/o/l/i(CCVAVCA)
k/n/e/_/o/l/i(CCVAVCA)
k/n/eo/_/l/i(CCVACA)
k/n/eo/_/l/i(CCVACA)
					ANALYSING: kneoly
						resolving (4)
						> version: k/n/e/o/l/y
						TRYING: o
						> version: k/n/e/o/l/y
						TRYING: o
						> version: k/n/eo/l/y
						TRYING: l
						adding blocked set: C = C >> l, w, _
						> version: k/n/eo/l/y
						TRYING: l
						adding blocked set: C = C >> l, w, _
						RESULT:  ['_']
					adding dashed alternative: ['k', 'n', 'e', '_', 'o', 'l', 'y']
					adding dashed alternative: ['k', 'n', 'e', '_', 'o', 'l', 'y']
					adding dashed alternative: ['k', 'n', 'eo', '_', 'l', 'y']
					adding dashed alternative: ['k', 'n', 'eo', '_', 'l', 'y']
					k/n/e/o/l/y(CCVVCC)
k/n/e/o/l/y(CCVVCV)
k/n/eo/l/y(CCVCC)
k/n/eo/l/y(CCVCV)
k/n/e/_/o/l/y(CCVAVCA)
k/n/e/_/o/l/y(CCVAVCA)
k/n/eo/_/l/y(CCVACA)
k/n/eo/_/l/y(CCVACA)
					ANALYSING: kneƿ
						resolving (2)
						> version: k/n/e/ƿ
						TRYING: ƿ
						adding blocked set: C = C >> ƿ, l, w, _
						> version: k/n/eƿ
						RESULT:  ['_']
					adding dashed alternative: ['k', 'n', 'e', '_', 'ƿ']
					adding dashed alternative: ['k', 'n', 'eƿ', '_']
					k/n/e/ƿ(CCVC)
k/n/eƿ(CCV)
k/n/e/_/ƿ(CCVAC)
k/n/eƿ/_(CCVA)
				___CCVCVC : 4___
					ANALYSING: cneolin
					adding littera based on matching pattern
					ANALYSING: knewel
					adding littera based on matching pattern
					ANALYSING: cne
						resolving (2)
						> version: c/n/e
						> version: c/n/e/_
						RESULT:  ['_']
					adding dashed alternative: ['c', 'n', 'e', '_']
					adding dashed alternative: ['c', 'n', 'e', '_', '_']
					c/n/e(CCV)
c/n/e/_(CCVA)
c/n/e/_(CCVA)
c/n/e/_/_(CCVAA)
					ANALYSING: cnel
						resolving (2)
						> version: c/n/e/l
						> version: c/n/e/_/l
						TRYING: l
						RESULT:  ['_']
					adding dashed alternative: ['c', 'n', 'e', 'l', '_']
					adding dashed alternative: ['c', 'n', 'e', '_', '_', 'l']
					c/n/e/l(CCVC)
c/n/e/_/l(CCVAC)
c/n/e/l/_(CCVCA)
c/n/e/_/_/l(CCVAAC)
					ANALYSING: cneo
						resolving (4)
						> version: c/n/e/o
						> version: c/n/eo
						> version: c/n/e/_/o
						TRYING: o
						> version: c/n/eo/_
						RESULT:  ['o']
					ANALYSING: cneol
						resolving (4)
						> version: c/n/e/o/l
						TRYING: l
						> version: c/n/eo/l
						> version: c/n/e/_/o/l
						TRYING: o
						> version: c/n/eo/_/l
						TRYING: l
						RESULT:  ['o']
					ANALYSING: cneoli
						resolving (8)
						> version: c/n/e/o/l/i
						TRYING: l
						> version: c/n/e/o/l/i
						TRYING: l
						> version: c/n/eo/l/i
						TRYING: i
						> version: c/n/eo/l/i
						TRYING: i
						> version: c/n/e/_/o/l/i
						TRYING: o
						>>> MULTIPLE RESOLVE OPTIONS: {'i', 'o'}
						> version: c/n/e/_/o/l/i
						TRYING: o
						>>> MULTIPLE RESOLVE OPTIONS: {'i', 'o'}
						> version: c/n/eo/_/l/i
						TRYING: l
						>>> MULTIPLE RESOLVE OPTIONS: {'i', 'o'}
						> version: c/n/eo/_/l/i
						TRYING: l
						>>> MULTIPLE RESOLVE OPTIONS: {'i', 'o'}
						RESULT:  ['i', 'o']
					ANALYSING: cneul
						resolving (6)
						> version: c/n/e/u/l
						TRYING: l
						> version: c/n/e/u/l
						TRYING: l
						> version: c/n/eu/l
						> version: c/n/e/_/u/l
						TRYING: u
						> version: c/n/e/_/u/l
						TRYING: u
						> version: c/n/eu/_/l
						TRYING: l
						RESULT:  ['u']
					ANALYSING: cneƿl
						resolving (4)
						> version: c/n/e/ƿ/l
						TRYING: l
						> version: c/n/eƿ/l
						> version: c/n/e/_/ƿ/l
						TRYING: ƿ
						> version: c/n/eƿ/_/l
						TRYING: l
						RESULT:  ['_']
					adding dashed alternative: ['c', 'n', 'e', 'ƿ', '_', 'l']
					adding dashed alternative: ['c', 'n', 'eƿ', 'l', '_']
					adding dashed alternative: ['c', 'n', 'e', '_', '_', 'ƿ', 'l']
					adding dashed alternative: ['c', 'n', 'eƿ', '_', '_', 'l']
					c/n/e/ƿ/l(CCVCC)
c/n/eƿ/l(CCVC)
c/n/e/_/ƿ/l(CCVACC)
c/n/eƿ/_/l(CCVAC)
c/n/e/ƿ/_/l(CCVCAC)
c/n/eƿ/l/_(CCVCA)
c/n/e/_/_/ƿ/l(CCVAACC)
c/n/eƿ/_/_/l(CCVAAC)
					ANALYSING: cnoul
						resolving (6)
						> version: c/n/o/u/l
						TRYING: l
						> version: c/n/o/u/l
						TRYING: l
						> version: c/n/ou/l
						> version: c/n/o/_/u/l
						TRYING: u
						> version: c/n/o/_/u/l
						TRYING: u
						> version: c/n/ou/_/l
						TRYING: l
						RESULT:  ['u']
					ANALYSING: cnyle
						resolving (4)
						> version: c/n/y/l/e
						TRYING: e
						> version: c/n/y/l/e
						TRYING: e
						> version: c/n/y/_/l/e
						TRYING: l
						> version: c/n/y/_/l/e
						TRYING: l
						RESULT:  ['e']
					ANALYSING: keiel
						resolving (20)
						> version: k/e/i/e/l
						TRYING: l
						> version: k/e/i/e/l
						TRYING: l
						> version: k/e/ie/l
						> version: k/ei/e/l
						> version: k/ei/e/l
						> version: k/_/e/i/e/l
						TRYING: e
						> version: k/_/e/i/e/l
						TRYING: e
						> version: k/_/e/ie/l
						TRYING: l
						> version: k/_/ei/e/l
						TRYING: l
						> version: k/_/ei/e/l
						TRYING: l
						> version: k/e/i/_/e/l
						TRYING: e
						> version: k/e/i/_/e/l
						TRYING: e
						> version: k/e/ie/_/l
						TRYING: l
						> version: k/ei/e/_/l
						TRYING: l
						> version: k/ei/e/_/l
						TRYING: l
						> version: k/_/e/_/i/e/l
						TRYING: i
						>>> MULTIPLE RESOLVE OPTIONS: {'i', 'e'}
						> version: k/_/e/_/i/e/l
						TRYING: i
						>>> MULTIPLE RESOLVE OPTIONS: {'i', 'e'}
						> version: k/_/e/_/ie/l
						TRYING: ie
						>>> MULTIPLE RESOLVE OPTIONS: {'i', 'ie', 'e'}
						> version: k/_/ei/_/e/l
						TRYING: e
						>>> MULTIPLE RESOLVE OPTIONS: {'i', 'ie', 'e'}
						> version: k/_/ei/_/e/l
						TRYING: e
						>>> MULTIPLE RESOLVE OPTIONS: {'i', 'ie', 'e'}
						RESULT:  ['i', 'ie', 'e']
					ANALYSING: kenel
						resolving (4)
						> version: k/e/n/e/l
						TRYING: l
						> version: k/_/e/n/e/l
						TRYING: e
						> version: k/e/n/_/e/l
						TRYING: e
						> version: k/_/e/_/n/e/l
						TRYING: n
						RESULT:  ['e']
					ANALYSING: knel
						resolving (2)
						> version: k/n/e/l
						> version: k/n/e/_/l
						TRYING: l
						RESULT:  ['_']
					adding dashed alternative: ['k', 'n', 'e', 'l', '_']
					adding dashed alternative: ['k', 'n', 'e', '_', '_', 'l']
					k/n/e/l(CCVC)
k/n/e/_/l(CCVAC)
k/n/e/l/_(CCVCA)
k/n/e/_/_/l(CCVAAC)
					ANALYSING: kneo
						resolving (4)
						> version: k/n/e/o
						> version: k/n/eo
						> version: k/n/e/_/o
						TRYING: o
						> version: k/n/eo/_
						RESULT:  ['o']
					ANALYSING: kneol
						resolving (4)
						> version: k/n/e/o/l
						TRYING: l
						> version: k/n/eo/l
						> version: k/n/e/_/o/l
						TRYING: o
						> version: k/n/eo/_/l
						TRYING: l
						RESULT:  ['o']
					ANALYSING: kneoli
						resolving (8)
						> version: k/n/e/o/l/i
						TRYING: l
						> version: k/n/e/o/l/i
						TRYING: l
						> version: k/n/eo/l/i
						TRYING: i
						> version: k/n/eo/l/i
						TRYING: i
						> version: k/n/e/_/o/l/i
						TRYING: o
						>>> MULTIPLE RESOLVE OPTIONS: {'i', 'o'}
						> version: k/n/e/_/o/l/i
						TRYING: o
						>>> MULTIPLE RESOLVE OPTIONS: {'i', 'o'}
						> version: k/n/eo/_/l/i
						TRYING: l
						>>> MULTIPLE RESOLVE OPTIONS: {'i', 'o'}
						> version: k/n/eo/_/l/i
						TRYING: l
						>>> MULTIPLE RESOLVE OPTIONS: {'i', 'o'}
						RESULT:  ['i', 'o']
					ANALYSING: kneoly
						resolving (8)
						> version: k/n/e/o/l/y
						TRYING: l
						> version: k/n/e/o/l/y
						TRYING: l
						> version: k/n/eo/l/y
						TRYING: y
						> version: k/n/eo/l/y
						TRYING: y
						> version: k/n/e/_/o/l/y
						TRYING: o
						>>> MULTIPLE RESOLVE OPTIONS: {'o', 'y'}
						> version: k/n/e/_/o/l/y
						TRYING: o
						>>> MULTIPLE RESOLVE OPTIONS: {'o', 'y'}
						> version: k/n/eo/_/l/y
						TRYING: l
						>>> MULTIPLE RESOLVE OPTIONS: {'o', 'y'}
						> version: k/n/eo/_/l/y
						TRYING: l
						>>> MULTIPLE RESOLVE OPTIONS: {'o', 'y'}
						RESULT:  ['o', 'y']
					ANALYSING: kneƿ
						resolving (4)
						> version: k/n/e/ƿ
						> version: k/n/eƿ
						> version: k/n/e/_/ƿ
						TRYING: ƿ
						> version: k/n/eƿ/_
						RESULT:  ['_']
					adding dashed alternative: ['k', 'n', 'e', 'ƿ', '_']
					adding dashed alternative: ['k', 'n', 'eƿ', '_']
					adding dashed alternative: ['k', 'n', 'e', '_', '_', 'ƿ']
					adding dashed alternative: ['k', 'n', 'eƿ', '_', '_']
					k/n/e/ƿ(CCVC)
k/n/eƿ(CCV)
k/n/e/_/ƿ(CCVAC)
k/n/eƿ/_(CCVA)
k/n/e/ƿ/_(CCVCA)
k/n/eƿ/_(CCVA)
k/n/e/_/_/ƿ(CCVAAC)
k/n/eƿ/_/_(CCVAA)
				___CCVCVC : 5___
					ANALYSING: cneolin
					adding littera based on matching pattern
					ANALYSING: knewel
					adding littera based on matching pattern
					ANALYSING: cne
						resolving (4)
						> version: c/n/e
						> version: c/n/e/_
						> version: c/n/e/_
						> version: c/n/e/_/_
						RESULT:  ['_']
					adding dashed alternative: ['c', 'n', 'e', '_']
					adding dashed alternative: ['c', 'n', 'e', '_', '_']
					adding dashed alternative: ['c', 'n', 'e', '_', '_']
					adding dashed alternative: ['c', 'n', 'e', '_', '_', '_']
					c/n/e(CCV)
c/n/e/_(CCVA)
c/n/e/_(CCVA)
c/n/e/_/_(CCVAA)
c/n/e/_(CCVA)
c/n/e/_/_(CCVAA)
c/n/e/_/_(CCVAA)
c/n/e/_/_/_(CCVAAA)
					version split: ['c', 'n', 'e']
					{'string': 'c/n/e', 'rgx': '((c))/((n))/((e))/((_))/((_))/((_))$'}
					_____REMOVING________['c', 'n', 'e']
					version split: ['c', 'n', 'e', '_']
					{'string': 'c/n/e/_', 'rgx': '((c))/((n))/((e))/((_))/((_))/((_))$'}
					_____REMOVING________['c', 'n', 'e', '_']
					version split: ['c', 'n', 'e', '_']
					{'string': 'c/n/e/_', 'rgx': '((c))/((n))/((e))/((_))/((_))/((_))$'}
					_____REMOVING________['c', 'n', 'e', '_']
					version split: ['c', 'n', 'e', '_', '_']
					{'string': 'c/n/e/_/_', 'rgx': '((c))/((n))/((e))/((_))/((_))/((_))$'}
					_____REMOVING________['c', 'n', 'e', '_', '_']
					version split: ['c', 'n', 'e', '_']
					{'string': 'c/n/e/_', 'rgx': '((c))/((n))/((e))/((_))/((_))/((_))$'}
					_____REMOVING________['c', 'n', 'e', '_']
					version split: ['c', 'n', 'e', '_', '_']
					{'string': 'c/n/e/_/_', 'rgx': '((c))/((n))/((e))/((_))/((_))/((_))$'}
					_____REMOVING________['c', 'n', 'e', '_', '_']
					version split: ['c', 'n', 'e', '_', '_']
					{'string': 'c/n/e/_/_', 'rgx': '((c))/((n))/((e))/((_))/((_))/((_))$'}
					_____REMOVING________['c', 'n', 'e', '_', '_']
					version split: ['c', 'n', 'e', '_', '_', '_']
					{'string': 'c/n/e/_/_/_', 'rgx': '((c))/((n))/((e))/((_))/((_))/((_))$'}
					ANALYSING: cnel
						resolving (4)
						> version: c/n/e/l
						> version: c/n/e/_/l
						> version: c/n/e/l/_
						> version: c/n/e/_/_/l
						TRYING: l
						adding blocked set: C = C >> l, n, _
						RESULT:  ['_']
					adding dashed alternative: ['c', 'n', 'e', 'l', '_']
					adding dashed alternative: ['c', 'n', 'e', '_', 'l', '_']
					adding dashed alternative: ['c', 'n', 'e', 'l', '_', '_']
					adding dashed alternative: ['c', 'n', 'e', '_', '_', '_', 'l']
					c/n/e/l(CCVC)
c/n/e/_/l(CCVAC)
c/n/e/l/_(CCVCA)
c/n/e/_/_/l(CCVAAC)
c/n/e/l/_(CCVCA)
c/n/e/_/l/_(CCVACA)
c/n/e/l/_/_(CCVCAA)
c/n/e/_/_/_/l(CCVAAAC)
					version split: ['c', 'n', 'e', 'l']
					{'string': 'c/n/e/l', 'rgx': '((c))/((n))/((e))/((_))/((_))/((_))$'}
					_____REMOVING________['c', 'n', 'e', 'l']
					version split: ['c', 'n', 'e', '_', 'l']
					{'string': 'c/n/e/_/l', 'rgx': '((c))/((n))/((e))/((_))/((_))/((_))$'}
					_____REMOVING________['c', 'n', 'e', '_', 'l']
					version split: ['c', 'n', 'e', 'l', '_']
					{'string': 'c/n/e/l/_', 'rgx': '((c))/((n))/((e))/((_))/((_))/((_))$'}
					_____REMOVING________['c', 'n', 'e', 'l', '_']
					version split: ['c', 'n', 'e', '_', '_', 'l']
					{'string': 'c/n/e/_/_/l', 'rgx': '((c))/((n))/((e))/((_))/((_))/((_))$'}
					_____REMOVING________['c', 'n', 'e', '_', '_', 'l']
					version split: ['c', 'n', 'e', 'l', '_']
					{'string': 'c/n/e/l/_', 'rgx': '((c))/((n))/((e))/((_))/((_))/((_))$'}
					_____REMOVING________['c', 'n', 'e', 'l', '_']
					version split: ['c', 'n', 'e', '_', 'l', '_']
					{'string': 'c/n/e/_/l/_', 'rgx': '((c))/((n))/((e))/((_))/((_))/((_))$'}
					_____REMOVING________['c', 'n', 'e', '_', 'l', '_']
					version split: ['c', 'n', 'e', 'l', '_', '_']
					{'string': 'c/n/e/l/_/_', 'rgx': '((c))/((n))/((e))/((_))/((_))/((_))$'}
					_____REMOVING________['c', 'n', 'e', 'l', '_', '_']
					version split: ['c', 'n', 'e', '_', '_', '_', 'l']
					{'string': 'c/n/e/_/_/_/l', 'rgx': '((c))/((n))/((e))/((_))/((_))/((_))$'}
					_____REMOVING________['c', 'n', 'e', '_', '_', '_', 'l']
					ANALYSING: cneo
						resolving (4)
						> version: c/n/e/o
						> version: c/n/eo
						> version: c/n/e/_/o
						> version: c/n/eo/_
						RESULT:  ['_']
					adding dashed alternative: ['c', 'n', 'e', 'o', '_']
					adding dashed alternative: ['c', 'n', 'eo', '_']
					adding dashed alternative: ['c', 'n', 'e', '_', 'o', '_']
					adding dashed alternative: ['c', 'n', 'eo', '_', '_']
					c/n/e/o(CCVV)
c/n/eo(CCV)
c/n/e/_/o(CCVAV)
c/n/eo/_(CCVA)
c/n/e/o/_(CCVVA)
c/n/eo/_(CCVA)
c/n/e/_/o/_(CCVAVA)
c/n/eo/_/_(CCVAA)
					version split: ['c', 'n', 'e', 'o']
					{'string': 'c/n/e/o', 'rgx': '((c))/((n))/((eo)|(e))/((_))/((o))/((_))$'}
					_____REMOVING________['c', 'n', 'e', 'o']
					version split: ['c', 'n', 'eo']
					{'string': 'c/n/eo', 'rgx': '((c))/((n))/((eo)|(e))/((_))/((o))/((_))$'}
					_____REMOVING________['c', 'n', 'eo']
					version split: ['c', 'n', 'e', '_', 'o']
					{'string': 'c/n/e/_/o', 'rgx': '((c))/((n))/((eo)|(e))/((_))/((o))/((_))$'}
					_____REMOVING________['c', 'n', 'e', '_', 'o']
					version split: ['c', 'n', 'eo', '_']
					{'string': 'c/n/eo/_', 'rgx': '((c))/((n))/((eo)|(e))/((_))/((o))/((_))$'}
					_____REMOVING________['c', 'n', 'eo', '_']
					version split: ['c', 'n', 'e', 'o', '_']
					{'string': 'c/n/e/o/_', 'rgx': '((c))/((n))/((eo)|(e))/((_))/((o))/((_))$'}
					_____REMOVING________['c', 'n', 'e', 'o', '_']
					version split: ['c', 'n', 'eo', '_']
					{'string': 'c/n/eo/_', 'rgx': '((c))/((n))/((eo)|(e))/((_))/((o))/((_))$'}
					_____REMOVING________['c', 'n', 'eo', '_']
					version split: ['c', 'n', 'e', '_', 'o', '_']
					{'string': 'c/n/e/_/o/_', 'rgx': '((c))/((n))/((eo)|(e))/((_))/((o))/((_))$'}
					version split: ['c', 'n', 'eo', '_', '_']
					{'string': 'c/n/eo/_/_', 'rgx': '((c))/((n))/((eo)|(e))/((_))/((o))/((_))$'}
					_____REMOVING________['c', 'n', 'eo', '_', '_']
					ANALYSING: cneol
						resolving (4)
						> version: c/n/e/o/l
						> version: c/n/eo/l
						> version: c/n/e/_/o/l
						TRYING: l
						adding blocked set: C = C >> l, n, _
						> version: c/n/eo/_/l
						RESULT:  ['_']
					adding dashed alternative: ['c', 'n', 'e', 'o', 'l', '_']
					adding dashed alternative: ['c', 'n', 'eo', 'l', '_']
					adding dashed alternative: ['c', 'n', 'e', '_', 'o', '_', 'l']
					adding dashed alternative: ['c', 'n', 'eo', '_', 'l', '_']
					c/n/e/o/l(CCVVC)
c/n/eo/l(CCVC)
c/n/e/_/o/l(CCVAVC)
c/n/eo/_/l(CCVAC)
c/n/e/o/l/_(CCVVCA)
c/n/eo/l/_(CCVCA)
c/n/e/_/o/_/l(CCVAVAC)
c/n/eo/_/l/_(CCVACA)
					version split: ['c', 'n', 'e', 'o', 'l']
					{'string': 'c/n/e/o/l', 'rgx': '((c))/((n))/((eo)|(e))/((_))/((o))/((_))$'}
					_____REMOVING________['c', 'n', 'e', 'o', 'l']
					version split: ['c', 'n', 'eo', 'l']
					{'string': 'c/n/eo/l', 'rgx': '((c))/((n))/((eo)|(e))/((_))/((o))/((_))$'}
					_____REMOVING________['c', 'n', 'eo', 'l']
					version split: ['c', 'n', 'e', '_', 'o', 'l']
					{'string': 'c/n/e/_/o/l', 'rgx': '((c))/((n))/((eo)|(e))/((_))/((o))/((_))$'}
					_____REMOVING________['c', 'n', 'e', '_', 'o', 'l']
					version split: ['c', 'n', 'eo', '_', 'l']
					{'string': 'c/n/eo/_/l', 'rgx': '((c))/((n))/((eo)|(e))/((_))/((o))/((_))$'}
					_____REMOVING________['c', 'n', 'eo', '_', 'l']
					version split: ['c', 'n', 'e', 'o', 'l', '_']
					{'string': 'c/n/e/o/l/_', 'rgx': '((c))/((n))/((eo)|(e))/((_))/((o))/((_))$'}
					_____REMOVING________['c', 'n', 'e', 'o', 'l', '_']
					version split: ['c', 'n', 'eo', 'l', '_']
					{'string': 'c/n/eo/l/_', 'rgx': '((c))/((n))/((eo)|(e))/((_))/((o))/((_))$'}
					_____REMOVING________['c', 'n', 'eo', 'l', '_']
					version split: ['c', 'n', 'e', '_', 'o', '_', 'l']
					{'string': 'c/n/e/_/o/_/l', 'rgx': '((c))/((n))/((eo)|(e))/((_))/((o))/((_))$'}
					_____REMOVING________['c', 'n', 'e', '_', 'o', '_', 'l']
					version split: ['c', 'n', 'eo', '_', 'l', '_']
					{'string': 'c/n/eo/_/l/_', 'rgx': '((c))/((n))/((eo)|(e))/((_))/((o))/((_))$'}
					_____REMOVING________['c', 'n', 'eo', '_', 'l', '_']
					ANALYSING: cneoli
						resolving (8)
						> version: c/n/e/o/l/i
						TRYING: i
						adding blocked set: C = C >> i, l, n, _
						> version: c/n/e/o/l/i
						TRYING: i
						adding blocked set: C = C >> i, l, n, _
						> version: c/n/eo/l/i
						> version: c/n/eo/l/i
						> version: c/n/e/_/o/l/i
						TRYING: l
						adding blocked set: C = C >> l, n, _
						> version: c/n/e/_/o/l/i
						TRYING: l
						adding blocked set: C = C >> l, n, _
						> version: c/n/eo/_/l/i
						TRYING: i
						adding blocked set: C = C >> i, l, n, _
						> version: c/n/eo/_/l/i
						TRYING: i
						adding blocked set: C = C >> i, l, n, _
						RESULT:  ['_']
					adding dashed alternative: ['c', 'n', 'e', 'o', 'l', '_', 'i']
					adding dashed alternative: ['c', 'n', 'e', 'o', 'l', '_', 'i']
					adding dashed alternative: ['c', 'n', 'eo', 'l', 'i', '_']
					adding dashed alternative: ['c', 'n', 'eo', 'l', 'i', '_']
					adding dashed alternative: ['c', 'n', 'e', '_', 'o', '_', 'l', 'i']
					adding dashed alternative: ['c', 'n', 'e', '_', 'o', '_', 'l', 'i']
					adding dashed alternative: ['c', 'n', 'eo', '_', 'l', '_', 'i']
					adding dashed alternative: ['c', 'n', 'eo', '_', 'l', '_', 'i']
					c/n/e/o/l/i(CCVVCC)
c/n/e/o/l/i(CCVVCV)
c/n/eo/l/i(CCVCC)
c/n/eo/l/i(CCVCV)
c/n/e/_/o/l/i(CCVAVCA)
c/n/e/_/o/l/i(CCVAVCA)
c/n/eo/_/l/i(CCVACA)
c/n/eo/_/l/i(CCVACA)
c/n/e/o/l/_/i(CCVVCAA)
c/n/e/o/l/_/i(CCVVCAA)
c/n/eo/l/i/_(CCVCAA)
c/n/eo/l/i/_(CCVCAA)
c/n/e/_/o/_/l/i(CCVAVACA)
c/n/e/_/o/_/l/i(CCVAVACA)
c/n/eo/_/l/_/i(CCVACAA)
c/n/eo/_/l/_/i(CCVACAA)
					version split: ['c', 'n', 'e', 'o', 'l', 'i']
					{'string': 'c/n/e/o/l/i', 'rgx': '((c))/((n))/((eo)|(e))/((_))/((i)|(o))/((_))$'}
					_____REMOVING________['c', 'n', 'e', 'o', 'l', 'i']
					version split: ['c', 'n', 'e', 'o', 'l', 'i']
					{'string': 'c/n/e/o/l/i', 'rgx': '((c))/((n))/((eo)|(e))/((_))/((i)|(o))/((_))$'}
					_____REMOVING________['c', 'n', 'e', 'o', 'l', 'i']
					version split: ['c', 'n', 'eo', 'l', 'i']
					{'string': 'c/n/eo/l/i', 'rgx': '((c))/((n))/((eo)|(e))/((_))/((i)|(o))/((_))$'}
					_____REMOVING________['c', 'n', 'eo', 'l', 'i']
					version split: ['c', 'n', 'eo', 'l', 'i']
					{'string': 'c/n/eo/l/i', 'rgx': '((c))/((n))/((eo)|(e))/((_))/((i)|(o))/((_))$'}
					_____REMOVING________['c', 'n', 'eo', 'l', 'i']
					version split: ['c', 'n', 'e', '_', 'o', 'l', 'i']
					{'string': 'c/n/e/_/o/l/i', 'rgx': '((c))/((n))/((eo)|(e))/((_))/((i)|(o))/((_))$'}
					_____REMOVING________['c', 'n', 'e', '_', 'o', 'l', 'i']
					version split: ['c', 'n', 'e', '_', 'o', 'l', 'i']
					{'string': 'c/n/e/_/o/l/i', 'rgx': '((c))/((n))/((eo)|(e))/((_))/((i)|(o))/((_))$'}
					_____REMOVING________['c', 'n', 'e', '_', 'o', 'l', 'i']
					version split: ['c', 'n', 'eo', '_', 'l', 'i']
					{'string': 'c/n/eo/_/l/i', 'rgx': '((c))/((n))/((eo)|(e))/((_))/((i)|(o))/((_))$'}
					_____REMOVING________['c', 'n', 'eo', '_', 'l', 'i']
					version split: ['c', 'n', 'eo', '_', 'l', 'i']
					{'string': 'c/n/eo/_/l/i', 'rgx': '((c))/((n))/((eo)|(e))/((_))/((i)|(o))/((_))$'}
					_____REMOVING________['c', 'n', 'eo', '_', 'l', 'i']
					version split: ['c', 'n', 'e', 'o', 'l', '_', 'i']
					{'string': 'c/n/e/o/l/_/i', 'rgx': '((c))/((n))/((eo)|(e))/((_))/((i)|(o))/((_))$'}
					_____REMOVING________['c', 'n', 'e', 'o', 'l', '_', 'i']
					version split: ['c', 'n', 'e', 'o', 'l', '_', 'i']
					{'string': 'c/n/e/o/l/_/i', 'rgx': '((c))/((n))/((eo)|(e))/((_))/((i)|(o))/((_))$'}
					_____REMOVING________['c', 'n', 'e', 'o', 'l', '_', 'i']
					version split: ['c', 'n', 'eo', 'l', 'i', '_']
					{'string': 'c/n/eo/l/i/_', 'rgx': '((c))/((n))/((eo)|(e))/((_))/((i)|(o))/((_))$'}
					_____REMOVING________['c', 'n', 'eo', 'l', 'i', '_']
					version split: ['c', 'n', 'eo', 'l', 'i', '_']
					{'string': 'c/n/eo/l/i/_', 'rgx': '((c))/((n))/((eo)|(e))/((_))/((i)|(o))/((_))$'}
					_____REMOVING________['c', 'n', 'eo', 'l', 'i', '_']
					version split: ['c', 'n', 'e', '_', 'o', '_', 'l', 'i']
					{'string': 'c/n/e/_/o/_/l', 'rgx': '((c))/((n))/((eo)|(e))/((_))/((i)|(o))/((_))$'}
					_____REMOVING________['c', 'n', 'e', '_', 'o', '_', 'l', 'i']
					version split: ['c', 'n', 'e', '_', 'o', '_', 'l', 'i']
					{'string': 'c/n/e/_/o/_/l', 'rgx': '((c))/((n))/((eo)|(e))/((_))/((i)|(o))/((_))$'}
					_____REMOVING________['c', 'n', 'e', '_', 'o', '_', 'l', 'i']
					version split: ['c', 'n', 'eo', '_', 'l', '_', 'i']
					{'string': 'c/n/eo/_/l/_/i', 'rgx': '((c))/((n))/((eo)|(e))/((_))/((i)|(o))/((_))$'}
					_____REMOVING________['c', 'n', 'eo', '_', 'l', '_', 'i']
					version split: ['c', 'n', 'eo', '_', 'l', '_', 'i']
					{'string': 'c/n/eo/_/l/_/i', 'rgx': '((c))/((n))/((eo)|(e))/((_))/((i)|(o))/((_))$'}
					_____REMOVING________['c', 'n', 'eo', '_', 'l', '_', 'i']
					ANALYSING: cneul
						resolving (6)
						> version: c/n/e/u/l
						> version: c/n/e/u/l
						> version: c/n/eu/l
						> version: c/n/e/_/u/l
						TRYING: l
						adding blocked set: C = C >> l, n, _
						> version: c/n/e/_/u/l
						TRYING: l
						adding blocked set: C = C >> l, n, _
						> version: c/n/eu/_/l
						RESULT:  ['_']
					adding dashed alternative: ['c', 'n', 'e', 'u', 'l', '_']
					adding dashed alternative: ['c', 'n', 'e', 'u', 'l', '_']
					adding dashed alternative: ['c', 'n', 'eu', 'l', '_']
					adding dashed alternative: ['c', 'n', 'e', '_', 'u', '_', 'l']
					adding dashed alternative: ['c', 'n', 'e', '_', 'u', '_', 'l']
					adding dashed alternative: ['c', 'n', 'eu', '_', 'l', '_']
					c/n/e/u/l(CCVCC)
c/n/e/u/l(CCVVC)
c/n/eu/l(CCVC)
c/n/e/_/u/l(CCVAAC)
c/n/e/_/u/l(CCVAAC)
c/n/eu/_/l(CCVAC)
c/n/e/u/l/_(CCVACA)
c/n/e/u/l/_(CCVACA)
c/n/eu/l/_(CCVCA)
c/n/e/_/u/_/l(CCVAAAC)
c/n/e/_/u/_/l(CCVAAAC)
c/n/eu/_/l/_(CCVACA)
					version split: ['c', 'n', 'e', 'u', 'l']
					{'string': 'c/n/e/u/l', 'rgx': '((c))/((n))/((eu)|(e))/((_))/((u))/((_))$'}
					_____REMOVING________['c', 'n', 'e', 'u', 'l']
					version split: ['c', 'n', 'e', 'u', 'l']
					{'string': 'c/n/e/u/l', 'rgx': '((c))/((n))/((eu)|(e))/((_))/((u))/((_))$'}
					_____REMOVING________['c', 'n', 'e', 'u', 'l']
					version split: ['c', 'n', 'eu', 'l']
					{'string': 'c/n/eu/l', 'rgx': '((c))/((n))/((eu)|(e))/((_))/((u))/((_))$'}
					_____REMOVING________['c', 'n', 'eu', 'l']
					version split: ['c', 'n', 'e', '_', 'u', 'l']
					{'string': 'c/n/e/_/u/l', 'rgx': '((c))/((n))/((eu)|(e))/((_))/((u))/((_))$'}
					_____REMOVING________['c', 'n', 'e', '_', 'u', 'l']
					version split: ['c', 'n', 'e', '_', 'u', 'l']
					{'string': 'c/n/e/_/u/l', 'rgx': '((c))/((n))/((eu)|(e))/((_))/((u))/((_))$'}
					_____REMOVING________['c', 'n', 'e', '_', 'u', 'l']
					version split: ['c', 'n', 'eu', '_', 'l']
					{'string': 'c/n/eu/_/l', 'rgx': '((c))/((n))/((eu)|(e))/((_))/((u))/((_))$'}
					_____REMOVING________['c', 'n', 'eu', '_', 'l']
					version split: ['c', 'n', 'e', 'u', 'l', '_']
					{'string': 'c/n/e/u/l/_', 'rgx': '((c))/((n))/((eu)|(e))/((_))/((u))/((_))$'}
					_____REMOVING________['c', 'n', 'e', 'u', 'l', '_']
					version split: ['c', 'n', 'e', 'u', 'l', '_']
					{'string': 'c/n/e/u/l/_', 'rgx': '((c))/((n))/((eu)|(e))/((_))/((u))/((_))$'}
					_____REMOVING________['c', 'n', 'e', 'u', 'l', '_']
					version split: ['c', 'n', 'eu', 'l', '_']
					{'string': 'c/n/eu/l/_', 'rgx': '((c))/((n))/((eu)|(e))/((_))/((u))/((_))$'}
					_____REMOVING________['c', 'n', 'eu', 'l', '_']
					version split: ['c', 'n', 'e', '_', 'u', '_', 'l']
					{'string': 'c/n/e/_/u/_/l', 'rgx': '((c))/((n))/((eu)|(e))/((_))/((u))/((_))$'}
					_____REMOVING________['c', 'n', 'e', '_', 'u', '_', 'l']
					version split: ['c', 'n', 'e', '_', 'u', '_', 'l']
					{'string': 'c/n/e/_/u/_/l', 'rgx': '((c))/((n))/((eu)|(e))/((_))/((u))/((_))$'}
					_____REMOVING________['c', 'n', 'e', '_', 'u', '_', 'l']
					version split: ['c', 'n', 'eu', '_', 'l', '_']
					{'string': 'c/n/eu/_/l/_', 'rgx': '((c))/((n))/((eu)|(e))/((_))/((u))/((_))$'}
					_____REMOVING________['c', 'n', 'eu', '_', 'l', '_']
					ANALYSING: cneƿl
						resolving (8)
						> version: c/n/e/ƿ/l
						> version: c/n/eƿ/l
						> version: c/n/e/_/ƿ/l
						TRYING: l
						adding blocked set: C = C >> l, n, _
						> version: c/n/eƿ/_/l
						> version: c/n/e/ƿ/_/l
						TRYING: l
						adding blocked set: C = C >> l, n, _
						> version: c/n/eƿ/l/_
						> version: c/n/e/_/_/ƿ/l
						TRYING: ƿ
						adding blocked set: C = C >> ƿ, l, n, _
						> version: c/n/eƿ/_/_/l
						TRYING: l
						adding blocked set: C = C >> l, n, _
						RESULT:  ['_']
					adding dashed alternative: ['c', 'n', 'e', 'ƿ', 'l', '_']
					adding dashed alternative: ['c', 'n', 'eƿ', 'l', '_']
					adding dashed alternative: ['c', 'n', 'e', '_', 'ƿ', '_', 'l']
					adding dashed alternative: ['c', 'n', 'eƿ', '_', 'l', '_']
					adding dashed alternative: ['c', 'n', 'e', 'ƿ', '_', '_', 'l']
					adding dashed alternative: ['c', 'n', 'eƿ', 'l', '_', '_']
					adding dashed alternative: ['c', 'n', 'e', '_', '_', '_', 'ƿ', 'l']
					adding dashed alternative: ['c', 'n', 'eƿ', '_', '_', '_', 'l']
					c/n/e/ƿ/l(CCVCC)
c/n/eƿ/l(CCVC)
c/n/e/_/ƿ/l(CCVACC)
c/n/eƿ/_/l(CCVAC)
c/n/e/ƿ/_/l(CCVCAC)
c/n/eƿ/l/_(CCVCA)
c/n/e/_/_/ƿ/l(CCVAACC)
c/n/eƿ/_/_/l(CCVAAC)
c/n/e/ƿ/l/_(CCVCCA)
c/n/eƿ/l/_(CCVCA)
c/n/e/_/ƿ/_/l(CCVACAC)
c/n/eƿ/_/l/_(CCVACA)
c/n/e/ƿ/_/_/l(CCVCAAC)
c/n/eƿ/l/_/_(CCVCAA)
c/n/e/_/_/_/ƿ/l(CCVAAACC)
c/n/eƿ/_/_/_/l(CCVAAAC)
					version split: ['c', 'n', 'e', 'ƿ', 'l']
					{'string': 'c/n/e/ƿ/l', 'rgx': '((c))/((n))/((eƿ)|(e))/((_))/((_))/((_))$'}
					_____REMOVING________['c', 'n', 'e', 'ƿ', 'l']
					version split: ['c', 'n', 'eƿ', 'l']
					{'string': 'c/n/eƿ/l', 'rgx': '((c))/((n))/((eƿ)|(e))/((_))/((_))/((_))$'}
					_____REMOVING________['c', 'n', 'eƿ', 'l']
					version split: ['c', 'n', 'e', '_', 'ƿ', 'l']
					{'string': 'c/n/e/_/ƿ/l', 'rgx': '((c))/((n))/((eƿ)|(e))/((_))/((_))/((_))$'}
					_____REMOVING________['c', 'n', 'e', '_', 'ƿ', 'l']
					version split: ['c', 'n', 'eƿ', '_', 'l']
					{'string': 'c/n/eƿ/_/l', 'rgx': '((c))/((n))/((eƿ)|(e))/((_))/((_))/((_))$'}
					_____REMOVING________['c', 'n', 'eƿ', '_', 'l']
					version split: ['c', 'n', 'e', 'ƿ', '_', 'l']
					{'string': 'c/n/e/ƿ/_/l', 'rgx': '((c))/((n))/((eƿ)|(e))/((_))/((_))/((_))$'}
					_____REMOVING________['c', 'n', 'e', 'ƿ', '_', 'l']
					version split: ['c', 'n', 'eƿ', 'l', '_']
					{'string': 'c/n/eƿ/l/_', 'rgx': '((c))/((n))/((eƿ)|(e))/((_))/((_))/((_))$'}
					_____REMOVING________['c', 'n', 'eƿ', 'l', '_']
					version split: ['c', 'n', 'e', '_', '_', 'ƿ', 'l']
					{'string': 'c/n/e/_/_/ƿ/l', 'rgx': '((c))/((n))/((eƿ)|(e))/((_))/((_))/((_))$'}
					_____REMOVING________['c', 'n', 'e', '_', '_', 'ƿ', 'l']
					version split: ['c', 'n', 'eƿ', '_', '_', 'l']
					{'string': 'c/n/eƿ/_/_/l', 'rgx': '((c))/((n))/((eƿ)|(e))/((_))/((_))/((_))$'}
					_____REMOVING________['c', 'n', 'eƿ', '_', '_', 'l']
					version split: ['c', 'n', 'e', 'ƿ', 'l', '_']
					{'string': 'c/n/e/ƿ/l/_', 'rgx': '((c))/((n))/((eƿ)|(e))/((_))/((_))/((_))$'}
					_____REMOVING________['c', 'n', 'e', 'ƿ', 'l', '_']
					version split: ['c', 'n', 'eƿ', 'l', '_']
					{'string': 'c/n/eƿ/l/_', 'rgx': '((c))/((n))/((eƿ)|(e))/((_))/((_))/((_))$'}
					_____REMOVING________['c', 'n', 'eƿ', 'l', '_']
					version split: ['c', 'n', 'e', '_', 'ƿ', '_', 'l']
					{'string': 'c/n/e/_/ƿ/_/l', 'rgx': '((c))/((n))/((eƿ)|(e))/((_))/((_))/((_))$'}
					_____REMOVING________['c', 'n', 'e', '_', 'ƿ', '_', 'l']
					version split: ['c', 'n', 'eƿ', '_', 'l', '_']
					{'string': 'c/n/eƿ/_/l/_', 'rgx': '((c))/((n))/((eƿ)|(e))/((_))/((_))/((_))$'}
					_____REMOVING________['c', 'n', 'eƿ', '_', 'l', '_']
					version split: ['c', 'n', 'e', 'ƿ', '_', '_', 'l']
					{'string': 'c/n/e/ƿ/_/_/l', 'rgx': '((c))/((n))/((eƿ)|(e))/((_))/((_))/((_))$'}
					_____REMOVING________['c', 'n', 'e', 'ƿ', '_', '_', 'l']
					version split: ['c', 'n', 'eƿ', 'l', '_', '_']
					{'string': 'c/n/eƿ/l/_/_', 'rgx': '((c))/((n))/((eƿ)|(e))/((_))/((_))/((_))$'}
					_____REMOVING________['c', 'n', 'eƿ', 'l', '_', '_']
					version split: ['c', 'n', 'e', '_', '_', '_', 'ƿ', 'l']
					{'string': 'c/n/e/_/_/_/ƿ', 'rgx': '((c))/((n))/((eƿ)|(e))/((_))/((_))/((_))$'}
					_____REMOVING________['c', 'n', 'e', '_', '_', '_', 'ƿ', 'l']
					version split: ['c', 'n', 'eƿ', '_', '_', '_', 'l']
					{'string': 'c/n/eƿ/_/_/_/l', 'rgx': '((c))/((n))/((eƿ)|(e))/((_))/((_))/((_))$'}
					_____REMOVING________['c', 'n', 'eƿ', '_', '_', '_', 'l']
					ANALYSING: cnoul
						resolving (6)
						> version: c/n/o/u/l
						> version: c/n/o/u/l
						> version: c/n/ou/l
						> version: c/n/o/_/u/l
						TRYING: l
						adding blocked set: C = C >> l, n, _
						> version: c/n/o/_/u/l
						TRYING: l
						adding blocked set: C = C >> l, n, _
						> version: c/n/ou/_/l
						RESULT:  ['_']
					adding dashed alternative: ['c', 'n', 'o', 'u', 'l', '_']
					adding dashed alternative: ['c', 'n', 'o', 'u', 'l', '_']
					adding dashed alternative: ['c', 'n', 'ou', 'l', '_']
					adding dashed alternative: ['c', 'n', 'o', '_', 'u', '_', 'l']
					adding dashed alternative: ['c', 'n', 'o', '_', 'u', '_', 'l']
					adding dashed alternative: ['c', 'n', 'ou', '_', 'l', '_']
					c/n/o/u/l(CCVCC)
c/n/o/u/l(CCVVC)
c/n/ou/l(CCVC)
c/n/o/_/u/l(CCVAAC)
c/n/o/_/u/l(CCVAAC)
c/n/ou/_/l(CCVAC)
c/n/o/u/l/_(CCVACA)
c/n/o/u/l/_(CCVACA)
c/n/ou/l/_(CCVCA)
c/n/o/_/u/_/l(CCVAAAC)
c/n/o/_/u/_/l(CCVAAAC)
c/n/ou/_/l/_(CCVACA)
					version split: ['c', 'n', 'o', 'u', 'l']
					{'string': 'c/n/o/u/l', 'rgx': '((c))/((n))/((o)|(ou))/((_))/((u))/((_))$'}
					_____REMOVING________['c', 'n', 'o', 'u', 'l']
					version split: ['c', 'n', 'o', 'u', 'l']
					{'string': 'c/n/o/u/l', 'rgx': '((c))/((n))/((o)|(ou))/((_))/((u))/((_))$'}
					_____REMOVING________['c', 'n', 'o', 'u', 'l']
					version split: ['c', 'n', 'ou', 'l']
					{'string': 'c/n/ou/l', 'rgx': '((c))/((n))/((o)|(ou))/((_))/((u))/((_))$'}
					_____REMOVING________['c', 'n', 'ou', 'l']
					version split: ['c', 'n', 'o', '_', 'u', 'l']
					{'string': 'c/n/o/_/u/l', 'rgx': '((c))/((n))/((o)|(ou))/((_))/((u))/((_))$'}
					_____REMOVING________['c', 'n', 'o', '_', 'u', 'l']
					version split: ['c', 'n', 'o', '_', 'u', 'l']
					{'string': 'c/n/o/_/u/l', 'rgx': '((c))/((n))/((o)|(ou))/((_))/((u))/((_))$'}
					_____REMOVING________['c', 'n', 'o', '_', 'u', 'l']
					version split: ['c', 'n', 'ou', '_', 'l']
					{'string': 'c/n/ou/_/l', 'rgx': '((c))/((n))/((o)|(ou))/((_))/((u))/((_))$'}
					_____REMOVING________['c', 'n', 'ou', '_', 'l']
					version split: ['c', 'n', 'o', 'u', 'l', '_']
					{'string': 'c/n/o/u/l/_', 'rgx': '((c))/((n))/((o)|(ou))/((_))/((u))/((_))$'}
					_____REMOVING________['c', 'n', 'o', 'u', 'l', '_']
					version split: ['c', 'n', 'o', 'u', 'l', '_']
					{'string': 'c/n/o/u/l/_', 'rgx': '((c))/((n))/((o)|(ou))/((_))/((u))/((_))$'}
					_____REMOVING________['c', 'n', 'o', 'u', 'l', '_']
					version split: ['c', 'n', 'ou', 'l', '_']
					{'string': 'c/n/ou/l/_', 'rgx': '((c))/((n))/((o)|(ou))/((_))/((u))/((_))$'}
					_____REMOVING________['c', 'n', 'ou', 'l', '_']
					version split: ['c', 'n', 'o', '_', 'u', '_', 'l']
					{'string': 'c/n/o/_/u/_/l', 'rgx': '((c))/((n))/((o)|(ou))/((_))/((u))/((_))$'}
					_____REMOVING________['c', 'n', 'o', '_', 'u', '_', 'l']
					version split: ['c', 'n', 'o', '_', 'u', '_', 'l']
					{'string': 'c/n/o/_/u/_/l', 'rgx': '((c))/((n))/((o)|(ou))/((_))/((u))/((_))$'}
					_____REMOVING________['c', 'n', 'o', '_', 'u', '_', 'l']
					version split: ['c', 'n', 'ou', '_', 'l', '_']
					{'string': 'c/n/ou/_/l/_', 'rgx': '((c))/((n))/((o)|(ou))/((_))/((u))/((_))$'}
					_____REMOVING________['c', 'n', 'ou', '_', 'l', '_']
					ANALYSING: cnyle
						resolving (4)
						> version: c/n/y/l/e
						> version: c/n/y/l/e
						> version: c/n/y/_/l/e
						TRYING: e
						> version: c/n/y/_/l/e
						TRYING: e
						RESULT:  ['_']
					adding dashed alternative: ['c', 'n', 'y', 'l', 'e', '_']
					adding dashed alternative: ['c', 'n', 'y', 'l', 'e', '_']
					adding dashed alternative: ['c', 'n', 'y', '_', 'l', '_', 'e']
					adding dashed alternative: ['c', 'n', 'y', '_', 'l', '_', 'e']
					c/n/y/l/e(CCCCV)
c/n/y/l/e(CCVCV)
c/n/y/_/l/e(CCAACV)
c/n/y/_/l/e(CCAACV)
c/n/y/l/e/_(CCACVA)
c/n/y/l/e/_(CCACVA)
c/n/y/_/l/_/e(CCAACAV)
c/n/y/_/l/_/e(CCAACAV)
					version split: ['c', 'n', 'y', 'l', 'e']
					{'string': 'c/n/y/l/e', 'rgx': '((c))/((n))/((y))/((_))/((e))/((_))$'}
					_____REMOVING________['c', 'n', 'y', 'l', 'e']
					version split: ['c', 'n', 'y', 'l', 'e']
					{'string': 'c/n/y/l/e', 'rgx': '((c))/((n))/((y))/((_))/((e))/((_))$'}
					_____REMOVING________['c', 'n', 'y', 'l', 'e']
					version split: ['c', 'n', 'y', '_', 'l', 'e']
					{'string': 'c/n/y/_/l/e', 'rgx': '((c))/((n))/((y))/((_))/((e))/((_))$'}
					_____REMOVING________['c', 'n', 'y', '_', 'l', 'e']
					version split: ['c', 'n', 'y', '_', 'l', 'e']
					{'string': 'c/n/y/_/l/e', 'rgx': '((c))/((n))/((y))/((_))/((e))/((_))$'}
					_____REMOVING________['c', 'n', 'y', '_', 'l', 'e']
					version split: ['c', 'n', 'y', 'l', 'e', '_']
					{'string': 'c/n/y/l/e/_', 'rgx': '((c))/((n))/((y))/((_))/((e))/((_))$'}
					_____REMOVING________['c', 'n', 'y', 'l', 'e', '_']
					version split: ['c', 'n', 'y', 'l', 'e', '_']
					{'string': 'c/n/y/l/e/_', 'rgx': '((c))/((n))/((y))/((_))/((e))/((_))$'}
					_____REMOVING________['c', 'n', 'y', 'l', 'e', '_']
					version split: ['c', 'n', 'y', '_', 'l', '_', 'e']
					{'string': 'c/n/y/_/l/_/e', 'rgx': '((c))/((n))/((y))/((_))/((e))/((_))$'}
					_____REMOVING________['c', 'n', 'y', '_', 'l', '_', 'e']
					version split: ['c', 'n', 'y', '_', 'l', '_', 'e']
					{'string': 'c/n/y/_/l/_/e', 'rgx': '((c))/((n))/((y))/((_))/((e))/((_))$'}
					_____REMOVING________['c', 'n', 'y', '_', 'l', '_', 'e']
					ANALYSING: keiel
						resolving (20)
						> version: k/e/i/e/l
						> version: k/e/i/e/l
						> version: k/e/ie/l
						> version: k/ei/e/l
						> version: k/ei/e/l
						> version: k/_/e/i/e/l
						TRYING: l
						adding blocked set: C = C >> l, n, _
						> version: k/_/e/i/e/l
						TRYING: l
						adding blocked set: C = C >> l, n, _
						> version: k/_/e/ie/l
						> version: k/_/ei/e/l
						> version: k/_/ei/e/l
						> version: k/e/i/_/e/l
						TRYING: l
						adding blocked set: C = C >> l, n, _
						> version: k/e/i/_/e/l
						TRYING: l
						adding blocked set: C = C >> l, n, _
						> version: k/e/ie/_/l
						> version: k/ei/e/_/l
						> version: k/ei/e/_/l
						> version: k/_/e/_/i/e/l
						TRYING: e
						> version: k/_/e/_/i/e/l
						TRYING: e
						> version: k/_/e/_/ie/l
						TRYING: l
						adding blocked set: C = C >> l, n, _
						> version: k/_/ei/_/e/l
						TRYING: l
						adding blocked set: C = C >> l, n, _
						> version: k/_/ei/_/e/l
						TRYING: l
						adding blocked set: C = C >> l, n, _
						RESULT:  ['_']
					adding dashed alternative: ['k', 'e', 'i', 'e', 'l', '_']
					adding dashed alternative: ['k', 'e', 'i', 'e', 'l', '_']
					adding dashed alternative: ['k', 'e', 'ie', 'l', '_']
					adding dashed alternative: ['k', 'ei', 'e', 'l', '_']
					adding dashed alternative: ['k', 'ei', 'e', 'l', '_']
					adding dashed alternative: ['k', '_', 'e', 'i', 'e', '_', 'l']
					adding dashed alternative: ['k', '_', 'e', 'i', 'e', '_', 'l']
					adding dashed alternative: ['k', '_', 'e', 'ie', 'l', '_']
					adding dashed alternative: ['k', '_', 'ei', 'e', 'l', '_']
					adding dashed alternative: ['k', '_', 'ei', 'e', 'l', '_']
					adding dashed alternative: ['k', 'e', 'i', '_', 'e', '_', 'l']
					adding dashed alternative: ['k', 'e', 'i', '_', 'e', '_', 'l']
					adding dashed alternative: ['k', 'e', 'ie', '_', 'l', '_']
					adding dashed alternative: ['k', 'ei', 'e', '_', 'l', '_']
					adding dashed alternative: ['k', 'ei', 'e', '_', 'l', '_']
					adding dashed alternative: ['k', '_', 'e', '_', 'i', '_', 'e', 'l']
					adding dashed alternative: ['k', '_', 'e', '_', 'i', '_', 'e', 'l']
					adding dashed alternative: ['k', '_', 'e', '_', 'ie', '_', 'l']
					adding dashed alternative: ['k', '_', 'ei', '_', 'e', '_', 'l']
					adding dashed alternative: ['k', '_', 'ei', '_', 'e', '_', 'l']
					k/e/i/e/l(CVCVC)
k/e/i/e/l(CVVVC)
k/e/ie/l(CVVC)
k/ei/e/l(CVVC)
k/ei/e/l(CVVC)
k/_/e/i/e/l(CAVAVC)
k/_/e/i/e/l(CAVAVC)
k/_/e/ie/l(CAVVC)
k/_/ei/e/l(CAVVC)
k/_/ei/e/l(CAVVC)
k/e/i/_/e/l(CVAAVC)
k/e/i/_/e/l(CVAAVC)
k/e/ie/_/l(CVVAC)
k/ei/e/_/l(CVVAC)
k/ei/e/_/l(CVVAC)
k/_/e/_/i/e/l(CAVAAVC)
k/_/e/_/i/e/l(CAVAAVC)
k/_/e/_/ie/l(CAVAVC)
k/_/ei/_/e/l(CAVAVC)
k/_/ei/_/e/l(CAVAVC)
k/e/i/e/l/_(CVAVCA)
k/e/i/e/l/_(CVAVCA)
k/e/ie/l/_(CVVCA)
k/ei/e/l/_(CVVCA)
k/ei/e/l/_(CVVCA)
k/_/e/i/e/_/l(CAVAVAC)
k/_/e/i/e/_/l(CAVAVAC)
k/_/e/ie/l/_(CAVVCA)
k/_/ei/e/l/_(CAVVCA)
k/_/ei/e/l/_(CAVVCA)
k/e/i/_/e/_/l(CVAAVAC)
k/e/i/_/e/_/l(CVAAVAC)
k/e/ie/_/l/_(CVVACA)
k/ei/e/_/l/_(CVVACA)
k/ei/e/_/l/_(CVVACA)
k/_/e/_/i/_/e/l(CAVAAAVC)
k/_/e/_/i/_/e/l(CAVAAAVC)
k/_/e/_/ie/_/l(CAVAVAC)
k/_/ei/_/e/_/l(CAVAVAC)
k/_/ei/_/e/_/l(CAVAVAC)
					version split: ['k', 'e', 'i', 'e', 'l']
					{'string': 'k/e/i/e/l', 'rgx': '((k))/((_))/((i)|(ie)|(ei)|(e))/((_))/((i)|(ie)|(e))/((_))$'}
					_____REMOVING________['k', 'e', 'i', 'e', 'l']
					version split: ['k', 'e', 'i', 'e', 'l']
					{'string': 'k/e/i/e/l', 'rgx': '((k))/((_))/((i)|(ie)|(ei)|(e))/((_))/((i)|(ie)|(e))/((_))$'}
					_____REMOVING________['k', 'e', 'i', 'e', 'l']
					version split: ['k', 'e', 'ie', 'l']
					{'string': 'k/e/ie/l', 'rgx': '((k))/((_))/((i)|(ie)|(ei)|(e))/((_))/((i)|(ie)|(e))/((_))$'}
					_____REMOVING________['k', 'e', 'ie', 'l']
					version split: ['k', 'ei', 'e', 'l']
					{'string': 'k/ei/e/l', 'rgx': '((k))/((_))/((i)|(ie)|(ei)|(e))/((_))/((i)|(ie)|(e))/((_))$'}
					_____REMOVING________['k', 'ei', 'e', 'l']
					version split: ['k', 'ei', 'e', 'l']
					{'string': 'k/ei/e/l', 'rgx': '((k))/((_))/((i)|(ie)|(ei)|(e))/((_))/((i)|(ie)|(e))/((_))$'}
					_____REMOVING________['k', 'ei', 'e', 'l']
					version split: ['k', '_', 'e', 'i', 'e', 'l']
					{'string': 'k/_/e/i/e/l', 'rgx': '((k))/((_))/((i)|(ie)|(ei)|(e))/((_))/((i)|(ie)|(e))/((_))$'}
					_____REMOVING________['k', '_', 'e', 'i', 'e', 'l']
					version split: ['k', '_', 'e', 'i', 'e', 'l']
					{'string': 'k/_/e/i/e/l', 'rgx': '((k))/((_))/((i)|(ie)|(ei)|(e))/((_))/((i)|(ie)|(e))/((_))$'}
					_____REMOVING________['k', '_', 'e', 'i', 'e', 'l']
					version split: ['k', '_', 'e', 'ie', 'l']
					{'string': 'k/_/e/ie/l', 'rgx': '((k))/((_))/((i)|(ie)|(ei)|(e))/((_))/((i)|(ie)|(e))/((_))$'}
					_____REMOVING________['k', '_', 'e', 'ie', 'l']
					version split: ['k', '_', 'ei', 'e', 'l']
					{'string': 'k/_/ei/e/l', 'rgx': '((k))/((_))/((i)|(ie)|(ei)|(e))/((_))/((i)|(ie)|(e))/((_))$'}
					_____REMOVING________['k', '_', 'ei', 'e', 'l']
					version split: ['k', '_', 'ei', 'e', 'l']
					{'string': 'k/_/ei/e/l', 'rgx': '((k))/((_))/((i)|(ie)|(ei)|(e))/((_))/((i)|(ie)|(e))/((_))$'}
					_____REMOVING________['k', '_', 'ei', 'e', 'l']
					version split: ['k', 'e', 'i', '_', 'e', 'l']
					{'string': 'k/e/i/_/e/l', 'rgx': '((k))/((_))/((i)|(ie)|(ei)|(e))/((_))/((i)|(ie)|(e))/((_))$'}
					_____REMOVING________['k', 'e', 'i', '_', 'e', 'l']
					version split: ['k', 'e', 'i', '_', 'e', 'l']
					{'string': 'k/e/i/_/e/l', 'rgx': '((k))/((_))/((i)|(ie)|(ei)|(e))/((_))/((i)|(ie)|(e))/((_))$'}
					_____REMOVING________['k', 'e', 'i', '_', 'e', 'l']
					version split: ['k', 'e', 'ie', '_', 'l']
					{'string': 'k/e/ie/_/l', 'rgx': '((k))/((_))/((i)|(ie)|(ei)|(e))/((_))/((i)|(ie)|(e))/((_))$'}
					_____REMOVING________['k', 'e', 'ie', '_', 'l']
					version split: ['k', 'ei', 'e', '_', 'l']
					{'string': 'k/ei/e/_/l', 'rgx': '((k))/((_))/((i)|(ie)|(ei)|(e))/((_))/((i)|(ie)|(e))/((_))$'}
					_____REMOVING________['k', 'ei', 'e', '_', 'l']
					version split: ['k', 'ei', 'e', '_', 'l']
					{'string': 'k/ei/e/_/l', 'rgx': '((k))/((_))/((i)|(ie)|(ei)|(e))/((_))/((i)|(ie)|(e))/((_))$'}
					_____REMOVING________['k', 'ei', 'e', '_', 'l']
					version split: ['k', '_', 'e', '_', 'i', 'e', 'l']
					{'string': 'k/_/e/_/i/e/l', 'rgx': '((k))/((_))/((i)|(ie)|(ei)|(e))/((_))/((i)|(ie)|(e))/((_))$'}
					_____REMOVING________['k', '_', 'e', '_', 'i', 'e', 'l']
					version split: ['k', '_', 'e', '_', 'i', 'e', 'l']
					{'string': 'k/_/e/_/i/e/l', 'rgx': '((k))/((_))/((i)|(ie)|(ei)|(e))/((_))/((i)|(ie)|(e))/((_))$'}
					_____REMOVING________['k', '_', 'e', '_', 'i', 'e', 'l']
					version split: ['k', '_', 'e', '_', 'ie', 'l']
					{'string': 'k/_/e/_/ie/l', 'rgx': '((k))/((_))/((i)|(ie)|(ei)|(e))/((_))/((i)|(ie)|(e))/((_))$'}
					_____REMOVING________['k', '_', 'e', '_', 'ie', 'l']
					version split: ['k', '_', 'ei', '_', 'e', 'l']
					{'string': 'k/_/ei/_/e/l', 'rgx': '((k))/((_))/((i)|(ie)|(ei)|(e))/((_))/((i)|(ie)|(e))/((_))$'}
					_____REMOVING________['k', '_', 'ei', '_', 'e', 'l']
					version split: ['k', '_', 'ei', '_', 'e', 'l']
					{'string': 'k/_/ei/_/e/l', 'rgx': '((k))/((_))/((i)|(ie)|(ei)|(e))/((_))/((i)|(ie)|(e))/((_))$'}
					_____REMOVING________['k', '_', 'ei', '_', 'e', 'l']
					version split: ['k', 'e', 'i', 'e', 'l', '_']
					{'string': 'k/e/i/e/l/_', 'rgx': '((k))/((_))/((i)|(ie)|(ei)|(e))/((_))/((i)|(ie)|(e))/((_))$'}
					_____REMOVING________['k', 'e', 'i', 'e', 'l', '_']
					version split: ['k', 'e', 'i', 'e', 'l', '_']
					{'string': 'k/e/i/e/l/_', 'rgx': '((k))/((_))/((i)|(ie)|(ei)|(e))/((_))/((i)|(ie)|(e))/((_))$'}
					_____REMOVING________['k', 'e', 'i', 'e', 'l', '_']
					version split: ['k', 'e', 'ie', 'l', '_']
					{'string': 'k/e/ie/l/_', 'rgx': '((k))/((_))/((i)|(ie)|(ei)|(e))/((_))/((i)|(ie)|(e))/((_))$'}
					_____REMOVING________['k', 'e', 'ie', 'l', '_']
					version split: ['k', 'ei', 'e', 'l', '_']
					{'string': 'k/ei/e/l/_', 'rgx': '((k))/((_))/((i)|(ie)|(ei)|(e))/((_))/((i)|(ie)|(e))/((_))$'}
					_____REMOVING________['k', 'ei', 'e', 'l', '_']
					version split: ['k', 'ei', 'e', 'l', '_']
					{'string': 'k/ei/e/l/_', 'rgx': '((k))/((_))/((i)|(ie)|(ei)|(e))/((_))/((i)|(ie)|(e))/((_))$'}
					_____REMOVING________['k', 'ei', 'e', 'l', '_']
					version split: ['k', '_', 'e', 'i', 'e', '_', 'l']
					{'string': 'k/_/e/i/e/_/l', 'rgx': '((k))/((_))/((i)|(ie)|(ei)|(e))/((_))/((i)|(ie)|(e))/((_))$'}
					_____REMOVING________['k', '_', 'e', 'i', 'e', '_', 'l']
					version split: ['k', '_', 'e', 'i', 'e', '_', 'l']
					{'string': 'k/_/e/i/e/_/l', 'rgx': '((k))/((_))/((i)|(ie)|(ei)|(e))/((_))/((i)|(ie)|(e))/((_))$'}
					_____REMOVING________['k', '_', 'e', 'i', 'e', '_', 'l']
					version split: ['k', '_', 'e', 'ie', 'l', '_']
					{'string': 'k/_/e/ie/l/_', 'rgx': '((k))/((_))/((i)|(ie)|(ei)|(e))/((_))/((i)|(ie)|(e))/((_))$'}
					_____REMOVING________['k', '_', 'e', 'ie', 'l', '_']
					version split: ['k', '_', 'ei', 'e', 'l', '_']
					{'string': 'k/_/ei/e/l/_', 'rgx': '((k))/((_))/((i)|(ie)|(ei)|(e))/((_))/((i)|(ie)|(e))/((_))$'}
					_____REMOVING________['k', '_', 'ei', 'e', 'l', '_']
					version split: ['k', '_', 'ei', 'e', 'l', '_']
					{'string': 'k/_/ei/e/l/_', 'rgx': '((k))/((_))/((i)|(ie)|(ei)|(e))/((_))/((i)|(ie)|(e))/((_))$'}
					_____REMOVING________['k', '_', 'ei', 'e', 'l', '_']
					version split: ['k', 'e', 'i', '_', 'e', '_', 'l']
					{'string': 'k/e/i/_/e/_/l', 'rgx': '((k))/((_))/((i)|(ie)|(ei)|(e))/((_))/((i)|(ie)|(e))/((_))$'}
					_____REMOVING________['k', 'e', 'i', '_', 'e', '_', 'l']
					version split: ['k', 'e', 'i', '_', 'e', '_', 'l']
					{'string': 'k/e/i/_/e/_/l', 'rgx': '((k))/((_))/((i)|(ie)|(ei)|(e))/((_))/((i)|(ie)|(e))/((_))$'}
					_____REMOVING________['k', 'e', 'i', '_', 'e', '_', 'l']
					version split: ['k', 'e', 'ie', '_', 'l', '_']
					{'string': 'k/e/ie/_/l/_', 'rgx': '((k))/((_))/((i)|(ie)|(ei)|(e))/((_))/((i)|(ie)|(e))/((_))$'}
					_____REMOVING________['k', 'e', 'ie', '_', 'l', '_']
					version split: ['k', 'ei', 'e', '_', 'l', '_']
					{'string': 'k/ei/e/_/l/_', 'rgx': '((k))/((_))/((i)|(ie)|(ei)|(e))/((_))/((i)|(ie)|(e))/((_))$'}
					_____REMOVING________['k', 'ei', 'e', '_', 'l', '_']
					version split: ['k', 'ei', 'e', '_', 'l', '_']
					{'string': 'k/ei/e/_/l/_', 'rgx': '((k))/((_))/((i)|(ie)|(ei)|(e))/((_))/((i)|(ie)|(e))/((_))$'}
					_____REMOVING________['k', 'ei', 'e', '_', 'l', '_']
					version split: ['k', '_', 'e', '_', 'i', '_', 'e', 'l']
					{'string': 'k/_/e/_/i/_/e', 'rgx': '((k))/((_))/((i)|(ie)|(ei)|(e))/((_))/((i)|(ie)|(e))/((_))$'}
					_____REMOVING________['k', '_', 'e', '_', 'i', '_', 'e', 'l']
					version split: ['k', '_', 'e', '_', 'i', '_', 'e', 'l']
					{'string': 'k/_/e/_/i/_/e', 'rgx': '((k))/((_))/((i)|(ie)|(ei)|(e))/((_))/((i)|(ie)|(e))/((_))$'}
					_____REMOVING________['k', '_', 'e', '_', 'i', '_', 'e', 'l']
					version split: ['k', '_', 'e', '_', 'ie', '_', 'l']
					{'string': 'k/_/e/_/ie/_/l', 'rgx': '((k))/((_))/((i)|(ie)|(ei)|(e))/((_))/((i)|(ie)|(e))/((_))$'}
					_____REMOVING________['k', '_', 'e', '_', 'ie', '_', 'l']
					version split: ['k', '_', 'ei', '_', 'e', '_', 'l']
					{'string': 'k/_/ei/_/e/_/l', 'rgx': '((k))/((_))/((i)|(ie)|(ei)|(e))/((_))/((i)|(ie)|(e))/((_))$'}
					_____REMOVING________['k', '_', 'ei', '_', 'e', '_', 'l']
					version split: ['k', '_', 'ei', '_', 'e', '_', 'l']
					{'string': 'k/_/ei/_/e/_/l', 'rgx': '((k))/((_))/((i)|(ie)|(ei)|(e))/((_))/((i)|(ie)|(e))/((_))$'}
					_____REMOVING________['k', '_', 'ei', '_', 'e', '_', 'l']
					ANALYSING: kenel
						resolving (4)
						> version: k/e/n/e/l
						> version: k/_/e/n/e/l
						TRYING: l
						adding blocked set: C = C >> l, n, _
						> version: k/e/n/_/e/l
						TRYING: l
						adding blocked set: C = C >> l, n, _
						> version: k/_/e/_/n/e/l
						TRYING: e
						RESULT:  ['_']
					adding dashed alternative: ['k', 'e', 'n', 'e', 'l', '_']
					adding dashed alternative: ['k', '_', 'e', 'n', 'e', '_', 'l']
					adding dashed alternative: ['k', 'e', 'n', '_', 'e', '_', 'l']
					adding dashed alternative: ['k', '_', 'e', '_', 'n', '_', 'e', 'l']
					k/e/n/e/l(CVCVC)
k/_/e/n/e/l(CAVCVC)
k/e/n/_/e/l(CVCAVC)
k/_/e/_/n/e/l(CAVACVC)
k/e/n/e/l/_(CVCVCA)
k/_/e/n/e/_/l(CAVCVAC)
k/e/n/_/e/_/l(CVCAVAC)
k/_/e/_/n/_/e/l(CAVACAVC)
					version split: ['k', 'e', 'n', 'e', 'l']
					{'string': 'k/e/n/e/l', 'rgx': '((k))/((_))/((e))/((_))/((e))/((_))$'}
					_____REMOVING________['k', 'e', 'n', 'e', 'l']
					version split: ['k', '_', 'e', 'n', 'e', 'l']
					{'string': 'k/_/e/n/e/l', 'rgx': '((k))/((_))/((e))/((_))/((e))/((_))$'}
					_____REMOVING________['k', '_', 'e', 'n', 'e', 'l']
					version split: ['k', 'e', 'n', '_', 'e', 'l']
					{'string': 'k/e/n/_/e/l', 'rgx': '((k))/((_))/((e))/((_))/((e))/((_))$'}
					_____REMOVING________['k', 'e', 'n', '_', 'e', 'l']
					version split: ['k', '_', 'e', '_', 'n', 'e', 'l']
					{'string': 'k/_/e/_/n/e/l', 'rgx': '((k))/((_))/((e))/((_))/((e))/((_))$'}
					_____REMOVING________['k', '_', 'e', '_', 'n', 'e', 'l']
					version split: ['k', 'e', 'n', 'e', 'l', '_']
					{'string': 'k/e/n/e/l/_', 'rgx': '((k))/((_))/((e))/((_))/((e))/((_))$'}
					_____REMOVING________['k', 'e', 'n', 'e', 'l', '_']
					version split: ['k', '_', 'e', 'n', 'e', '_', 'l']
					{'string': 'k/_/e/n/e/_/l', 'rgx': '((k))/((_))/((e))/((_))/((e))/((_))$'}
					_____REMOVING________['k', '_', 'e', 'n', 'e', '_', 'l']
					version split: ['k', 'e', 'n', '_', 'e', '_', 'l']
					{'string': 'k/e/n/_/e/_/l', 'rgx': '((k))/((_))/((e))/((_))/((e))/((_))$'}
					_____REMOVING________['k', 'e', 'n', '_', 'e', '_', 'l']
					version split: ['k', '_', 'e', '_', 'n', '_', 'e', 'l']
					{'string': 'k/_/e/_/n/_/e', 'rgx': '((k))/((_))/((e))/((_))/((e))/((_))$'}
					_____REMOVING________['k', '_', 'e', '_', 'n', '_', 'e', 'l']
					ANALYSING: knel
						resolving (4)
						> version: k/n/e/l
						> version: k/n/e/_/l
						> version: k/n/e/l/_
						> version: k/n/e/_/_/l
						TRYING: l
						adding blocked set: C = C >> l, n, _
						RESULT:  ['_']
					adding dashed alternative: ['k', 'n', 'e', 'l', '_']
					adding dashed alternative: ['k', 'n', 'e', '_', 'l', '_']
					adding dashed alternative: ['k', 'n', 'e', 'l', '_', '_']
					adding dashed alternative: ['k', 'n', 'e', '_', '_', '_', 'l']
					k/n/e/l(CCVC)
k/n/e/_/l(CCVAC)
k/n/e/l/_(CCVCA)
k/n/e/_/_/l(CCVAAC)
k/n/e/l/_(CCVCA)
k/n/e/_/l/_(CCVACA)
k/n/e/l/_/_(CCVCAA)
k/n/e/_/_/_/l(CCVAAAC)
					version split: ['k', 'n', 'e', 'l']
					{'string': 'k/n/e/l', 'rgx': '((k))/((n))/((e))/((_))/((_))/((_))$'}
					_____REMOVING________['k', 'n', 'e', 'l']
					version split: ['k', 'n', 'e', '_', 'l']
					{'string': 'k/n/e/_/l', 'rgx': '((k))/((n))/((e))/((_))/((_))/((_))$'}
					_____REMOVING________['k', 'n', 'e', '_', 'l']
					version split: ['k', 'n', 'e', 'l', '_']
					{'string': 'k/n/e/l/_', 'rgx': '((k))/((n))/((e))/((_))/((_))/((_))$'}
					_____REMOVING________['k', 'n', 'e', 'l', '_']
					version split: ['k', 'n', 'e', '_', '_', 'l']
					{'string': 'k/n/e/_/_/l', 'rgx': '((k))/((n))/((e))/((_))/((_))/((_))$'}
					_____REMOVING________['k', 'n', 'e', '_', '_', 'l']
					version split: ['k', 'n', 'e', 'l', '_']
					{'string': 'k/n/e/l/_', 'rgx': '((k))/((n))/((e))/((_))/((_))/((_))$'}
					_____REMOVING________['k', 'n', 'e', 'l', '_']
					version split: ['k', 'n', 'e', '_', 'l', '_']
					{'string': 'k/n/e/_/l/_', 'rgx': '((k))/((n))/((e))/((_))/((_))/((_))$'}
					_____REMOVING________['k', 'n', 'e', '_', 'l', '_']
					version split: ['k', 'n', 'e', 'l', '_', '_']
					{'string': 'k/n/e/l/_/_', 'rgx': '((k))/((n))/((e))/((_))/((_))/((_))$'}
					_____REMOVING________['k', 'n', 'e', 'l', '_', '_']
					version split: ['k', 'n', 'e', '_', '_', '_', 'l']
					{'string': 'k/n/e/_/_/_/l', 'rgx': '((k))/((n))/((e))/((_))/((_))/((_))$'}
					_____REMOVING________['k', 'n', 'e', '_', '_', '_', 'l']
					ANALYSING: kneo
						resolving (4)
						> version: k/n/e/o
						> version: k/n/eo
						> version: k/n/e/_/o
						> version: k/n/eo/_
						RESULT:  ['_']
					adding dashed alternative: ['k', 'n', 'e', 'o', '_']
					adding dashed alternative: ['k', 'n', 'eo', '_']
					adding dashed alternative: ['k', 'n', 'e', '_', 'o', '_']
					adding dashed alternative: ['k', 'n', 'eo', '_', '_']
					k/n/e/o(CCVV)
k/n/eo(CCV)
k/n/e/_/o(CCVAV)
k/n/eo/_(CCVA)
k/n/e/o/_(CCVVA)
k/n/eo/_(CCVA)
k/n/e/_/o/_(CCVAVA)
k/n/eo/_/_(CCVAA)
					version split: ['k', 'n', 'e', 'o']
					{'string': 'k/n/e/o', 'rgx': '((k))/((n))/((eo)|(e))/((_))/((o))/((_))$'}
					_____REMOVING________['k', 'n', 'e', 'o']
					version split: ['k', 'n', 'eo']
					{'string': 'k/n/eo', 'rgx': '((k))/((n))/((eo)|(e))/((_))/((o))/((_))$'}
					_____REMOVING________['k', 'n', 'eo']
					version split: ['k', 'n', 'e', '_', 'o']
					{'string': 'k/n/e/_/o', 'rgx': '((k))/((n))/((eo)|(e))/((_))/((o))/((_))$'}
					_____REMOVING________['k', 'n', 'e', '_', 'o']
					version split: ['k', 'n', 'eo', '_']
					{'string': 'k/n/eo/_', 'rgx': '((k))/((n))/((eo)|(e))/((_))/((o))/((_))$'}
					_____REMOVING________['k', 'n', 'eo', '_']
					version split: ['k', 'n', 'e', 'o', '_']
					{'string': 'k/n/e/o/_', 'rgx': '((k))/((n))/((eo)|(e))/((_))/((o))/((_))$'}
					_____REMOVING________['k', 'n', 'e', 'o', '_']
					version split: ['k', 'n', 'eo', '_']
					{'string': 'k/n/eo/_', 'rgx': '((k))/((n))/((eo)|(e))/((_))/((o))/((_))$'}
					_____REMOVING________['k', 'n', 'eo', '_']
					version split: ['k', 'n', 'e', '_', 'o', '_']
					{'string': 'k/n/e/_/o/_', 'rgx': '((k))/((n))/((eo)|(e))/((_))/((o))/((_))$'}
					version split: ['k', 'n', 'eo', '_', '_']
					{'string': 'k/n/eo/_/_', 'rgx': '((k))/((n))/((eo)|(e))/((_))/((o))/((_))$'}
					_____REMOVING________['k', 'n', 'eo', '_', '_']
					ANALYSING: kneol
						resolving (4)
						> version: k/n/e/o/l
						> version: k/n/eo/l
						> version: k/n/e/_/o/l
						TRYING: l
						adding blocked set: C = C >> l, n, _
						> version: k/n/eo/_/l
						RESULT:  ['_']
					adding dashed alternative: ['k', 'n', 'e', 'o', 'l', '_']
					adding dashed alternative: ['k', 'n', 'eo', 'l', '_']
					adding dashed alternative: ['k', 'n', 'e', '_', 'o', '_', 'l']
					adding dashed alternative: ['k', 'n', 'eo', '_', 'l', '_']
					k/n/e/o/l(CCVVC)
k/n/eo/l(CCVC)
k/n/e/_/o/l(CCVAVC)
k/n/eo/_/l(CCVAC)
k/n/e/o/l/_(CCVVCA)
k/n/eo/l/_(CCVCA)
k/n/e/_/o/_/l(CCVAVAC)
k/n/eo/_/l/_(CCVACA)
					version split: ['k', 'n', 'e', 'o', 'l']
					{'string': 'k/n/e/o/l', 'rgx': '((k))/((n))/((eo)|(e))/((_))/((o))/((_))$'}
					_____REMOVING________['k', 'n', 'e', 'o', 'l']
					version split: ['k', 'n', 'eo', 'l']
					{'string': 'k/n/eo/l', 'rgx': '((k))/((n))/((eo)|(e))/((_))/((o))/((_))$'}
					_____REMOVING________['k', 'n', 'eo', 'l']
					version split: ['k', 'n', 'e', '_', 'o', 'l']
					{'string': 'k/n/e/_/o/l', 'rgx': '((k))/((n))/((eo)|(e))/((_))/((o))/((_))$'}
					_____REMOVING________['k', 'n', 'e', '_', 'o', 'l']
					version split: ['k', 'n', 'eo', '_', 'l']
					{'string': 'k/n/eo/_/l', 'rgx': '((k))/((n))/((eo)|(e))/((_))/((o))/((_))$'}
					_____REMOVING________['k', 'n', 'eo', '_', 'l']
					version split: ['k', 'n', 'e', 'o', 'l', '_']
					{'string': 'k/n/e/o/l/_', 'rgx': '((k))/((n))/((eo)|(e))/((_))/((o))/((_))$'}
					_____REMOVING________['k', 'n', 'e', 'o', 'l', '_']
					version split: ['k', 'n', 'eo', 'l', '_']
					{'string': 'k/n/eo/l/_', 'rgx': '((k))/((n))/((eo)|(e))/((_))/((o))/((_))$'}
					_____REMOVING________['k', 'n', 'eo', 'l', '_']
					version split: ['k', 'n', 'e', '_', 'o', '_', 'l']
					{'string': 'k/n/e/_/o/_/l', 'rgx': '((k))/((n))/((eo)|(e))/((_))/((o))/((_))$'}
					_____REMOVING________['k', 'n', 'e', '_', 'o', '_', 'l']
					version split: ['k', 'n', 'eo', '_', 'l', '_']
					{'string': 'k/n/eo/_/l/_', 'rgx': '((k))/((n))/((eo)|(e))/((_))/((o))/((_))$'}
					_____REMOVING________['k', 'n', 'eo', '_', 'l', '_']
					ANALYSING: kneoli
						resolving (8)
						> version: k/n/e/o/l/i
						TRYING: i
						adding blocked set: C = C >> i, l, n, _
						> version: k/n/e/o/l/i
						TRYING: i
						adding blocked set: C = C >> i, l, n, _
						> version: k/n/eo/l/i
						> version: k/n/eo/l/i
						> version: k/n/e/_/o/l/i
						TRYING: l
						adding blocked set: C = C >> l, n, _
						> version: k/n/e/_/o/l/i
						TRYING: l
						adding blocked set: C = C >> l, n, _
						> version: k/n/eo/_/l/i
						TRYING: i
						adding blocked set: C = C >> i, l, n, _
						> version: k/n/eo/_/l/i
						TRYING: i
						adding blocked set: C = C >> i, l, n, _
						RESULT:  ['_']
					adding dashed alternative: ['k', 'n', 'e', 'o', 'l', '_', 'i']
					adding dashed alternative: ['k', 'n', 'e', 'o', 'l', '_', 'i']
					adding dashed alternative: ['k', 'n', 'eo', 'l', 'i', '_']
					adding dashed alternative: ['k', 'n', 'eo', 'l', 'i', '_']
					adding dashed alternative: ['k', 'n', 'e', '_', 'o', '_', 'l', 'i']
					adding dashed alternative: ['k', 'n', 'e', '_', 'o', '_', 'l', 'i']
					adding dashed alternative: ['k', 'n', 'eo', '_', 'l', '_', 'i']
					adding dashed alternative: ['k', 'n', 'eo', '_', 'l', '_', 'i']
					k/n/e/o/l/i(CCVVCC)
k/n/e/o/l/i(CCVVCV)
k/n/eo/l/i(CCVCC)
k/n/eo/l/i(CCVCV)
k/n/e/_/o/l/i(CCVAVCA)
k/n/e/_/o/l/i(CCVAVCA)
k/n/eo/_/l/i(CCVACA)
k/n/eo/_/l/i(CCVACA)
k/n/e/o/l/_/i(CCVVCAA)
k/n/e/o/l/_/i(CCVVCAA)
k/n/eo/l/i/_(CCVCAA)
k/n/eo/l/i/_(CCVCAA)
k/n/e/_/o/_/l/i(CCVAVACA)
k/n/e/_/o/_/l/i(CCVAVACA)
k/n/eo/_/l/_/i(CCVACAA)
k/n/eo/_/l/_/i(CCVACAA)
					version split: ['k', 'n', 'e', 'o', 'l', 'i']
					{'string': 'k/n/e/o/l/i', 'rgx': '((k))/((n))/((eo)|(e))/((_))/((i)|(o))/((_))$'}
					_____REMOVING________['k', 'n', 'e', 'o', 'l', 'i']
					version split: ['k', 'n', 'e', 'o', 'l', 'i']
					{'string': 'k/n/e/o/l/i', 'rgx': '((k))/((n))/((eo)|(e))/((_))/((i)|(o))/((_))$'}
					_____REMOVING________['k', 'n', 'e', 'o', 'l', 'i']
					version split: ['k', 'n', 'eo', 'l', 'i']
					{'string': 'k/n/eo/l/i', 'rgx': '((k))/((n))/((eo)|(e))/((_))/((i)|(o))/((_))$'}
					_____REMOVING________['k', 'n', 'eo', 'l', 'i']
					version split: ['k', 'n', 'eo', 'l', 'i']
					{'string': 'k/n/eo/l/i', 'rgx': '((k))/((n))/((eo)|(e))/((_))/((i)|(o))/((_))$'}
					_____REMOVING________['k', 'n', 'eo', 'l', 'i']
					version split: ['k', 'n', 'e', '_', 'o', 'l', 'i']
					{'string': 'k/n/e/_/o/l/i', 'rgx': '((k))/((n))/((eo)|(e))/((_))/((i)|(o))/((_))$'}
					_____REMOVING________['k', 'n', 'e', '_', 'o', 'l', 'i']
					version split: ['k', 'n', 'e', '_', 'o', 'l', 'i']
					{'string': 'k/n/e/_/o/l/i', 'rgx': '((k))/((n))/((eo)|(e))/((_))/((i)|(o))/((_))$'}
					_____REMOVING________['k', 'n', 'e', '_', 'o', 'l', 'i']
					version split: ['k', 'n', 'eo', '_', 'l', 'i']
					{'string': 'k/n/eo/_/l/i', 'rgx': '((k))/((n))/((eo)|(e))/((_))/((i)|(o))/((_))$'}
					_____REMOVING________['k', 'n', 'eo', '_', 'l', 'i']
					version split: ['k', 'n', 'eo', '_', 'l', 'i']
					{'string': 'k/n/eo/_/l/i', 'rgx': '((k))/((n))/((eo)|(e))/((_))/((i)|(o))/((_))$'}
					_____REMOVING________['k', 'n', 'eo', '_', 'l', 'i']
					version split: ['k', 'n', 'e', 'o', 'l', '_', 'i']
					{'string': 'k/n/e/o/l/_/i', 'rgx': '((k))/((n))/((eo)|(e))/((_))/((i)|(o))/((_))$'}
					_____REMOVING________['k', 'n', 'e', 'o', 'l', '_', 'i']
					version split: ['k', 'n', 'e', 'o', 'l', '_', 'i']
					{'string': 'k/n/e/o/l/_/i', 'rgx': '((k))/((n))/((eo)|(e))/((_))/((i)|(o))/((_))$'}
					_____REMOVING________['k', 'n', 'e', 'o', 'l', '_', 'i']
					version split: ['k', 'n', 'eo', 'l', 'i', '_']
					{'string': 'k/n/eo/l/i/_', 'rgx': '((k))/((n))/((eo)|(e))/((_))/((i)|(o))/((_))$'}
					_____REMOVING________['k', 'n', 'eo', 'l', 'i', '_']
					version split: ['k', 'n', 'eo', 'l', 'i', '_']
					{'string': 'k/n/eo/l/i/_', 'rgx': '((k))/((n))/((eo)|(e))/((_))/((i)|(o))/((_))$'}
					_____REMOVING________['k', 'n', 'eo', 'l', 'i', '_']
					version split: ['k', 'n', 'e', '_', 'o', '_', 'l', 'i']
					{'string': 'k/n/e/_/o/_/l', 'rgx': '((k))/((n))/((eo)|(e))/((_))/((i)|(o))/((_))$'}
					_____REMOVING________['k', 'n', 'e', '_', 'o', '_', 'l', 'i']
					version split: ['k', 'n', 'e', '_', 'o', '_', 'l', 'i']
					{'string': 'k/n/e/_/o/_/l', 'rgx': '((k))/((n))/((eo)|(e))/((_))/((i)|(o))/((_))$'}
					_____REMOVING________['k', 'n', 'e', '_', 'o', '_', 'l', 'i']
					version split: ['k', 'n', 'eo', '_', 'l', '_', 'i']
					{'string': 'k/n/eo/_/l/_/i', 'rgx': '((k))/((n))/((eo)|(e))/((_))/((i)|(o))/((_))$'}
					_____REMOVING________['k', 'n', 'eo', '_', 'l', '_', 'i']
					version split: ['k', 'n', 'eo', '_', 'l', '_', 'i']
					{'string': 'k/n/eo/_/l/_/i', 'rgx': '((k))/((n))/((eo)|(e))/((_))/((i)|(o))/((_))$'}
					_____REMOVING________['k', 'n', 'eo', '_', 'l', '_', 'i']
					ANALYSING: kneoly
						resolving (8)
						> version: k/n/e/o/l/y
						TRYING: y
						adding blocked set: C = C >> y, l, n, _
						> version: k/n/e/o/l/y
						TRYING: y
						adding blocked set: C = C >> y, l, n, _
						> version: k/n/eo/l/y
						> version: k/n/eo/l/y
						> version: k/n/e/_/o/l/y
						TRYING: l
						adding blocked set: C = C >> l, n, _
						> version: k/n/e/_/o/l/y
						TRYING: l
						adding blocked set: C = C >> l, n, _
						> version: k/n/eo/_/l/y
						TRYING: y
						adding blocked set: C = C >> y, l, n, _
						> version: k/n/eo/_/l/y
						TRYING: y
						adding blocked set: C = C >> y, l, n, _
						RESULT:  ['_']
					adding dashed alternative: ['k', 'n', 'e', 'o', 'l', '_', 'y']
					adding dashed alternative: ['k', 'n', 'e', 'o', 'l', '_', 'y']
					adding dashed alternative: ['k', 'n', 'eo', 'l', 'y', '_']
					adding dashed alternative: ['k', 'n', 'eo', 'l', 'y', '_']
					adding dashed alternative: ['k', 'n', 'e', '_', 'o', '_', 'l', 'y']
					adding dashed alternative: ['k', 'n', 'e', '_', 'o', '_', 'l', 'y']
					adding dashed alternative: ['k', 'n', 'eo', '_', 'l', '_', 'y']
					adding dashed alternative: ['k', 'n', 'eo', '_', 'l', '_', 'y']
					k/n/e/o/l/y(CCVVCC)
k/n/e/o/l/y(CCVVCV)
k/n/eo/l/y(CCVCC)
k/n/eo/l/y(CCVCV)
k/n/e/_/o/l/y(CCVAVCA)
k/n/e/_/o/l/y(CCVAVCA)
k/n/eo/_/l/y(CCVACA)
k/n/eo/_/l/y(CCVACA)
k/n/e/o/l/_/y(CCVVCAA)
k/n/e/o/l/_/y(CCVVCAA)
k/n/eo/l/y/_(CCVCAA)
k/n/eo/l/y/_(CCVCAA)
k/n/e/_/o/_/l/y(CCVAVACA)
k/n/e/_/o/_/l/y(CCVAVACA)
k/n/eo/_/l/_/y(CCVACAA)
k/n/eo/_/l/_/y(CCVACAA)
					version split: ['k', 'n', 'e', 'o', 'l', 'y']
					{'string': 'k/n/e/o/l/y', 'rgx': '((k))/((n))/((eo)|(e))/((_))/((o)|(y))/((_))$'}
					_____REMOVING________['k', 'n', 'e', 'o', 'l', 'y']
					version split: ['k', 'n', 'e', 'o', 'l', 'y']
					{'string': 'k/n/e/o/l/y', 'rgx': '((k))/((n))/((eo)|(e))/((_))/((o)|(y))/((_))$'}
					_____REMOVING________['k', 'n', 'e', 'o', 'l', 'y']
					version split: ['k', 'n', 'eo', 'l', 'y']
					{'string': 'k/n/eo/l/y', 'rgx': '((k))/((n))/((eo)|(e))/((_))/((o)|(y))/((_))$'}
					_____REMOVING________['k', 'n', 'eo', 'l', 'y']
					version split: ['k', 'n', 'eo', 'l', 'y']
					{'string': 'k/n/eo/l/y', 'rgx': '((k))/((n))/((eo)|(e))/((_))/((o)|(y))/((_))$'}
					_____REMOVING________['k', 'n', 'eo', 'l', 'y']
					version split: ['k', 'n', 'e', '_', 'o', 'l', 'y']
					{'string': 'k/n/e/_/o/l/y', 'rgx': '((k))/((n))/((eo)|(e))/((_))/((o)|(y))/((_))$'}
					_____REMOVING________['k', 'n', 'e', '_', 'o', 'l', 'y']
					version split: ['k', 'n', 'e', '_', 'o', 'l', 'y']
					{'string': 'k/n/e/_/o/l/y', 'rgx': '((k))/((n))/((eo)|(e))/((_))/((o)|(y))/((_))$'}
					_____REMOVING________['k', 'n', 'e', '_', 'o', 'l', 'y']
					version split: ['k', 'n', 'eo', '_', 'l', 'y']
					{'string': 'k/n/eo/_/l/y', 'rgx': '((k))/((n))/((eo)|(e))/((_))/((o)|(y))/((_))$'}
					_____REMOVING________['k', 'n', 'eo', '_', 'l', 'y']
					version split: ['k', 'n', 'eo', '_', 'l', 'y']
					{'string': 'k/n/eo/_/l/y', 'rgx': '((k))/((n))/((eo)|(e))/((_))/((o)|(y))/((_))$'}
					_____REMOVING________['k', 'n', 'eo', '_', 'l', 'y']
					version split: ['k', 'n', 'e', 'o', 'l', '_', 'y']
					{'string': 'k/n/e/o/l/_/y', 'rgx': '((k))/((n))/((eo)|(e))/((_))/((o)|(y))/((_))$'}
					_____REMOVING________['k', 'n', 'e', 'o', 'l', '_', 'y']
					version split: ['k', 'n', 'e', 'o', 'l', '_', 'y']
					{'string': 'k/n/e/o/l/_/y', 'rgx': '((k))/((n))/((eo)|(e))/((_))/((o)|(y))/((_))$'}
					_____REMOVING________['k', 'n', 'e', 'o', 'l', '_', 'y']
					version split: ['k', 'n', 'eo', 'l', 'y', '_']
					{'string': 'k/n/eo/l/y/_', 'rgx': '((k))/((n))/((eo)|(e))/((_))/((o)|(y))/((_))$'}
					_____REMOVING________['k', 'n', 'eo', 'l', 'y', '_']
					version split: ['k', 'n', 'eo', 'l', 'y', '_']
					{'string': 'k/n/eo/l/y/_', 'rgx': '((k))/((n))/((eo)|(e))/((_))/((o)|(y))/((_))$'}
					_____REMOVING________['k', 'n', 'eo', 'l', 'y', '_']
					version split: ['k', 'n', 'e', '_', 'o', '_', 'l', 'y']
					{'string': 'k/n/e/_/o/_/l', 'rgx': '((k))/((n))/((eo)|(e))/((_))/((o)|(y))/((_))$'}
					_____REMOVING________['k', 'n', 'e', '_', 'o', '_', 'l', 'y']
					version split: ['k', 'n', 'e', '_', 'o', '_', 'l', 'y']
					{'string': 'k/n/e/_/o/_/l', 'rgx': '((k))/((n))/((eo)|(e))/((_))/((o)|(y))/((_))$'}
					_____REMOVING________['k', 'n', 'e', '_', 'o', '_', 'l', 'y']
					version split: ['k', 'n', 'eo', '_', 'l', '_', 'y']
					{'string': 'k/n/eo/_/l/_/y', 'rgx': '((k))/((n))/((eo)|(e))/((_))/((o)|(y))/((_))$'}
					_____REMOVING________['k', 'n', 'eo', '_', 'l', '_', 'y']
					version split: ['k', 'n', 'eo', '_', 'l', '_', 'y']
					{'string': 'k/n/eo/_/l/_/y', 'rgx': '((k))/((n))/((eo)|(e))/((_))/((o)|(y))/((_))$'}
					_____REMOVING________['k', 'n', 'eo', '_', 'l', '_', 'y']
					ANALYSING: kneƿ
						resolving (8)
						> version: k/n/e/ƿ
						> version: k/n/eƿ
						> version: k/n/e/_/ƿ
						> version: k/n/eƿ/_
						> version: k/n/e/ƿ/_
						> version: k/n/eƿ/_
						> version: k/n/e/_/_/ƿ
						TRYING: ƿ
						adding blocked set: C = C >> ƿ, l, n, _
						> version: k/n/eƿ/_/_
						RESULT:  ['_']
					adding dashed alternative: ['k', 'n', 'e', 'ƿ', '_']
					adding dashed alternative: ['k', 'n', 'eƿ', '_']
					adding dashed alternative: ['k', 'n', 'e', '_', 'ƿ', '_']
					adding dashed alternative: ['k', 'n', 'eƿ', '_', '_']
					adding dashed alternative: ['k', 'n', 'e', 'ƿ', '_', '_']
					adding dashed alternative: ['k', 'n', 'eƿ', '_', '_']
					adding dashed alternative: ['k', 'n', 'e', '_', '_', '_', 'ƿ']
					adding dashed alternative: ['k', 'n', 'eƿ', '_', '_', '_']
					k/n/e/ƿ(CCVC)
k/n/eƿ(CCV)
k/n/e/_/ƿ(CCVAC)
k/n/eƿ/_(CCVA)
k/n/e/ƿ/_(CCVCA)
k/n/eƿ/_(CCVA)
k/n/e/_/_/ƿ(CCVAAC)
k/n/eƿ/_/_(CCVAA)
k/n/e/ƿ/_(CCVCA)
k/n/eƿ/_(CCVA)
k/n/e/_/ƿ/_(CCVACA)
k/n/eƿ/_/_(CCVAA)
k/n/e/ƿ/_/_(CCVCAA)
k/n/eƿ/_/_(CCVAA)
k/n/e/_/_/_/ƿ(CCVAAAC)
k/n/eƿ/_/_/_(CCVAAA)
					version split: ['k', 'n', 'e', 'ƿ']
					{'string': 'k/n/e/ƿ', 'rgx': '((k))/((n))/((eƿ)|(e))/((_))/((_))/((_))$'}
					_____REMOVING________['k', 'n', 'e', 'ƿ']
					version split: ['k', 'n', 'eƿ']
					{'string': 'k/n/eƿ', 'rgx': '((k))/((n))/((eƿ)|(e))/((_))/((_))/((_))$'}
					_____REMOVING________['k', 'n', 'eƿ']
					version split: ['k', 'n', 'e', '_', 'ƿ']
					{'string': 'k/n/e/_/ƿ', 'rgx': '((k))/((n))/((eƿ)|(e))/((_))/((_))/((_))$'}
					_____REMOVING________['k', 'n', 'e', '_', 'ƿ']
					version split: ['k', 'n', 'eƿ', '_']
					{'string': 'k/n/eƿ/_', 'rgx': '((k))/((n))/((eƿ)|(e))/((_))/((_))/((_))$'}
					_____REMOVING________['k', 'n', 'eƿ', '_']
					version split: ['k', 'n', 'e', 'ƿ', '_']
					{'string': 'k/n/e/ƿ/_', 'rgx': '((k))/((n))/((eƿ)|(e))/((_))/((_))/((_))$'}
					_____REMOVING________['k', 'n', 'e', 'ƿ', '_']
					version split: ['k', 'n', 'eƿ', '_']
					{'string': 'k/n/eƿ/_', 'rgx': '((k))/((n))/((eƿ)|(e))/((_))/((_))/((_))$'}
					_____REMOVING________['k', 'n', 'eƿ', '_']
					version split: ['k', 'n', 'e', '_', '_', 'ƿ']
					{'string': 'k/n/e/_/_/ƿ', 'rgx': '((k))/((n))/((eƿ)|(e))/((_))/((_))/((_))$'}
					_____REMOVING________['k', 'n', 'e', '_', '_', 'ƿ']
					version split: ['k', 'n', 'eƿ', '_', '_']
					{'string': 'k/n/eƿ/_/_', 'rgx': '((k))/((n))/((eƿ)|(e))/((_))/((_))/((_))$'}
					_____REMOVING________['k', 'n', 'eƿ', '_', '_']
					version split: ['k', 'n', 'e', 'ƿ', '_']
					{'string': 'k/n/e/ƿ/_', 'rgx': '((k))/((n))/((eƿ)|(e))/((_))/((_))/((_))$'}
					_____REMOVING________['k', 'n', 'e', 'ƿ', '_']
					version split: ['k', 'n', 'eƿ', '_']
					{'string': 'k/n/eƿ/_', 'rgx': '((k))/((n))/((eƿ)|(e))/((_))/((_))/((_))$'}
					_____REMOVING________['k', 'n', 'eƿ', '_']
					version split: ['k', 'n', 'e', '_', 'ƿ', '_']
					{'string': 'k/n/e/_/ƿ/_', 'rgx': '((k))/((n))/((eƿ)|(e))/((_))/((_))/((_))$'}
					_____REMOVING________['k', 'n', 'e', '_', 'ƿ', '_']
					version split: ['k', 'n', 'eƿ', '_', '_']
					{'string': 'k/n/eƿ/_/_', 'rgx': '((k))/((n))/((eƿ)|(e))/((_))/((_))/((_))$'}
					_____REMOVING________['k', 'n', 'eƿ', '_', '_']
					version split: ['k', 'n', 'e', 'ƿ', '_', '_']
					{'string': 'k/n/e/ƿ/_/_', 'rgx': '((k))/((n))/((eƿ)|(e))/((_))/((_))/((_))$'}
					_____REMOVING________['k', 'n', 'e', 'ƿ', '_', '_']
					version split: ['k', 'n', 'eƿ', '_', '_']
					{'string': 'k/n/eƿ/_/_', 'rgx': '((k))/((n))/((eƿ)|(e))/((_))/((_))/((_))$'}
					_____REMOVING________['k', 'n', 'eƿ', '_', '_']
					version split: ['k', 'n', 'e', '_', '_', '_', 'ƿ']
					{'string': 'k/n/e/_/_/_/ƿ', 'rgx': '((k))/((n))/((eƿ)|(e))/((_))/((_))/((_))$'}
					_____REMOVING________['k', 'n', 'e', '_', '_', '_', 'ƿ']
					version split: ['k', 'n', 'eƿ', '_', '_', '_']
					{'string': 'k/n/eƿ/_/_/_', 'rgx': '((k))/((n))/((eƿ)|(e))/((_))/((_))/((_))$'}
			only one version left: ['c', 'n', 'e', '_', '_', '_']
			FAIL: 
			only one version left: ['c', 'n', 'e', '_', 'o', '_']
			FAIL: 
			FAIL: 
			FAIL: 
			FAIL: 
			FAIL: 
			FAIL: 
			FAIL: 
			FAIL: 
			FAIL: 
			only one version left: ['k', 'n', 'e', '_', 'o', '_']
			FAIL: 
			FAIL: 
			FAIL: 
			only one version left: ['k', 'n', 'eƿ', '_', '_', '_']
			SPLIT: ['c', 'n', 'eo', 'l', 'i', 'n']
			SPLIT: ['k', 'n', 'e', 'w', 'e', 'l']
			SPLIT: ['c', 'n', 'e', '_', '_', '_']
			['c', 'n', 'e', '_', '_', '_']
			SPLIT: ['c', 'n', 'e', '_', '_', '_', '----!']
			SPLIT: ['c', 'n', 'e', '_', 'o', '_']
			['c', 'n', 'e', '_', 'o', '_']
			SPLIT: ['c', 'n', 'eo.e', '_', 'o', '_', '----!']
			SPLIT: ['c', 'n', 'eo.e', '_', 'i.o', '_', '----!']
			SPLIT: ['c', 'n', 'eu.e', '_', 'u', '_', '----!']
			SPLIT: ['c', 'n', 'eƿ.e', '_', '_', '_', '----!']
			SPLIT: ['c', 'n', 'o.ou', '_', 'u', '_', '----!']
			SPLIT: ['c', 'n', 'y', '_', 'e', '_', '----!']
			SPLIT: ['k', '_', 'i.ie.ei.e', '_', 'i.ie.e', '_', '----!']
			SPLIT: ['k', '_', 'e', '_', 'e', '_', '----!']
			SPLIT: ['k', 'n', 'e', '_', '_', '_', '----!']
			SPLIT: ['k', 'n', 'e', '_', 'o', '_']
			['k', 'n', 'e', '_', 'o', '_']
			SPLIT: ['k', 'n', 'eo.e', '_', 'o', '_', '----!']
			SPLIT: ['k', 'n', 'eo.e', '_', 'i.o', '_', '----!']
			SPLIT: ['k', 'n', 'eo.e', '_', 'o.y', '_', '----!']
			SPLIT: ['k', 'n', 'eƿ', '_', '_', '_']
			['k', 'n', 'eƿ', '_', '_', '_']
			version for pattern CCVCVC is INVALID
			[{'ie', 'eo', 'i', 'o', 'ou', 'y', 'eƿ', 'ei', 'eu', 'e'}, {'l', 'w', '_'}, {'ie', 'u', 'i', 'o', '_', 'y', 'e'}, {'l', 'n', '_'}]
			13
			POSSIBLE CHANGE: 3 : Palatal Vicinity l-deletion
			POSSIBLE CHANGE: 5 : Palatal Vicinity l-deletion
			OVERVIEW: version for pattern CCVCVC
{'ie', 'eo', 'i', 'o', 'ou', 'y', 'eƿ', 'ei', 'eu', 'e'}, {'l', 'w', '_'}, {'ie', 'u', 'i', 'o', '_', 'y', 'e'}, {'l', 'n', '_'}
faulty splits: 13
cne----! <-! cnel
cneo.eo----! <-! cneol
cneo.ei.o----! <-! cneoli
cneu.eu----! <-! cneul
cneƿ.e----! <-! cneƿl
cno.ouu----! <-! cnoul
cnye----! <-! cnyle
ki.ie.ei.ei.ie.e----! <-! keiel
kee----! <-! kenel
kne----! <-! knel
kneo.eo----! <-! kneol
kneo.ei.o----! <-! kneoli
kneo.eo.y----! <-! kneoly
c | n | eo | l | i | n
k | n | e | w | e | l
c | n | e | _ | _ | _
c | n | e | _ | _ | _ | ----!
c | n | e | _ | o | _
c | n | eo.e | _ | o | _ | ----!
c | n | eo.e | _ | i.o | _ | ----!
c | n | eu.e | _ | u | _ | ----!
c | n | eƿ.e | _ | _ | _ | ----!
c | n | o.ou | _ | u | _ | ----!
c | n | y | _ | e | _ | ----!
k | _ | i.ie.ei.e | _ | i.ie.e | _ | ----!
k | _ | e | _ | e | _ | ----!
k | n | e | _ | _ | _ | ----!
k | n | e | _ | o | _
k | n | eo.e | _ | o | _ | ----!
k | n | eo.e | _ | i.o | _ | ----!
k | n | eo.e | _ | o.y | _ | ----!
k | n | eƿ | _ | _ | _
3 : {'l', 'n', 'w', '_'},{'l', 'w', '_'},{'ƿ', 'l', 'w', '_'},{'l', 'u', 'w', '_'},{'i', 'l', 'w', '_'}
5 : {'ƿ', 'l', 'n', '_'},{'l', 'n', '_'},{'y', 'l', 'n', '_'},{'i', 'l', 'n', '_'}
		FOUND __ 0 __ VALID VERSION(S)
		POSSIBLE CHANGE: 3 : Palatal Vicinity l-deletion
		OVERVIEW: version for pattern CCVCCC
{'ie', 'eo', 'i', 'o', 'ou', 'y', 'eƿ', 'ei', 'eu', 'ew', 'e'}
faulty splits: 3
ki.ie.ei.ele----! <-! keiel
kee----! <-! kenel
knew.ee----! <-! knewel
c | n | eo | l | i | n
c | n | e | _ | _ | _
c | n | e | l | _ | _
c | n | e | _ | o | _
c | n | eo | l | _ | _
c | n | eo | l | i | _
c | n | eu | l | _ | _
c | n | eƿ | l | _ | _
c | n | ou | l | _ | _
c | n | y | l | e | _
k | _ | i.ie.ei.e | l | e | _ | ----!
k | _ | e | _ | e | _ | ----!
k | n | e | l | _ | _
k | n | e | _ | o | _
k | n | eo | l | _ | _
k | n | eo | l | i | _
k | n | eo | l | y | _
k | n | eƿ | _ | _ | _
k | n | ew.e | _ | e | _ | ----!
3 : {'ƿ', 'l', '_'},{'l', 'n', '_'},{'l', 'w', '_'}
5 : {'ƿ', 'n', '_'},{'i', 'n', '_'},{'y', 'n', '_'},{'l', 'n', '_'}
